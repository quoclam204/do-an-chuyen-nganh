{
  "version": 3,
  "sources": ["../../use-image/index.js"],
  "sourcesContent": ["var React = require('react');\r\n\r\nmodule.exports = function useImage(url, crossOrigin, referrerpolicy) {\r\n  // lets use refs for image and status\r\n  // so we can update them during render\r\n  // to have instant update in status/image when new data comes in\r\n  const statusRef = React.useRef('loading');\r\n  const imageRef = React.useRef();\r\n\r\n  // we are not going to use token\r\n  // but we need to just to trigger state update\r\n  const [_, setStateToken] = React.useState(0);\r\n\r\n  // keep track of old props to trigger changes\r\n  const oldUrl = React.useRef();\r\n  const oldCrossOrigin = React.useRef();\r\n  const oldReferrerPolicy = React.useRef();\r\n  if (\r\n    oldUrl.current !== url ||\r\n    oldCrossOrigin.current !== crossOrigin ||\r\n    oldReferrerPolicy.current !== referrerpolicy\r\n  ) {\r\n    statusRef.current = 'loading';\r\n    imageRef.current = undefined;\r\n    oldUrl.current = url;\r\n    oldCrossOrigin.current = crossOrigin;\r\n    oldReferrerPolicy.current = referrerpolicy;\r\n  }\r\n\r\n  React.useLayoutEffect(\r\n    function () {\r\n      if (!url) return;\r\n      var img = document.createElement('img');\r\n\r\n      function onload() {\r\n        img\r\n          // in Polotno app I found a case when loaded image was not rendered correctly at the first attempt\r\n          // I found that decoding it manually fixes the issue\r\n          // also it may be good idea decode it that way, so the work is done in the background\r\n          // and we don't block the main thread\r\n          // in context of canvas rendering, large images is a common case\r\n          .decode()\r\n          // catch and ignore decode errors because decode may fail but still will render just fine with drawImage on canvas.\r\n          // I got that case with very large image and chrome\r\n          .catch(() => {\r\n            // Intentionally ignore decode errors - image can still render fine on canvas\r\n          })\r\n          .finally(() => {\r\n            statusRef.current = 'loaded';\r\n            imageRef.current = img;\r\n            setStateToken(Math.random());\r\n          });\r\n      }\r\n\r\n      function onerror() {\r\n        statusRef.current = 'failed';\r\n        imageRef.current = undefined;\r\n        setStateToken(Math.random());\r\n      }\r\n\r\n      img.addEventListener('load', onload);\r\n      img.addEventListener('error', onerror);\r\n      crossOrigin && (img.crossOrigin = crossOrigin);\r\n      referrerpolicy && (img.referrerPolicy = referrerpolicy);\r\n      img.src = url;\r\n\r\n      return function cleanup() {\r\n        img.removeEventListener('load', onload);\r\n        img.removeEventListener('error', onerror);\r\n      };\r\n    },\r\n    [url, crossOrigin, referrerpolicy]\r\n  );\r\n\r\n  // return array because it is better to use in case of several useImage hooks\r\n  // const [background, backgroundStatus] = useImage(url1);\r\n  // const [patter] = useImage(url2);\r\n  return [imageRef.current, statusRef.current];\r\n};\r\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA,QAAI,QAAQ;AAEZ,WAAO,UAAU,SAAS,SAAS,KAAK,aAAa,gBAAgB;AAInE,YAAM,YAAY,MAAM,OAAO,SAAS;AACxC,YAAM,WAAW,MAAM,OAAO;AAI9B,YAAM,CAAC,GAAG,aAAa,IAAI,MAAM,SAAS,CAAC;AAG3C,YAAM,SAAS,MAAM,OAAO;AAC5B,YAAM,iBAAiB,MAAM,OAAO;AACpC,YAAM,oBAAoB,MAAM,OAAO;AACvC,UACE,OAAO,YAAY,OACnB,eAAe,YAAY,eAC3B,kBAAkB,YAAY,gBAC9B;AACA,kBAAU,UAAU;AACpB,iBAAS,UAAU;AACnB,eAAO,UAAU;AACjB,uBAAe,UAAU;AACzB,0BAAkB,UAAU;AAAA,MAC9B;AAEA,YAAM;AAAA,QACJ,WAAY;AACV,cAAI,CAAC,IAAK;AACV,cAAI,MAAM,SAAS,cAAc,KAAK;AAEtC,mBAAS,SAAS;AAChB,gBAMG,OAAO,EAGP,MAAM,MAAM;AAAA,YAEb,CAAC,EACA,QAAQ,MAAM;AACb,wBAAU,UAAU;AACpB,uBAAS,UAAU;AACnB,4BAAc,KAAK,OAAO,CAAC;AAAA,YAC7B,CAAC;AAAA,UACL;AAEA,mBAAS,UAAU;AACjB,sBAAU,UAAU;AACpB,qBAAS,UAAU;AACnB,0BAAc,KAAK,OAAO,CAAC;AAAA,UAC7B;AAEA,cAAI,iBAAiB,QAAQ,MAAM;AACnC,cAAI,iBAAiB,SAAS,OAAO;AACrC,0BAAgB,IAAI,cAAc;AAClC,6BAAmB,IAAI,iBAAiB;AACxC,cAAI,MAAM;AAEV,iBAAO,SAAS,UAAU;AACxB,gBAAI,oBAAoB,QAAQ,MAAM;AACtC,gBAAI,oBAAoB,SAAS,OAAO;AAAA,UAC1C;AAAA,QACF;AAAA,QACA,CAAC,KAAK,aAAa,cAAc;AAAA,MACnC;AAKA,aAAO,CAAC,SAAS,SAAS,UAAU,OAAO;AAAA,IAC7C;AAAA;AAAA;",
  "names": []
}
