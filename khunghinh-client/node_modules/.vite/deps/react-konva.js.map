{
  "version": 3,
  "sources": ["../../konva/lib/Global.js", "../../konva/lib/Util.js", "../../konva/lib/Context.js", "../../konva/lib/Canvas.js", "../../konva/lib/DragAndDrop.js", "../../konva/lib/Validators.js", "../../konva/lib/Factory.js", "../../konva/lib/Node.js", "../../konva/lib/Container.js", "../../konva/lib/PointerEvents.js", "../../konva/lib/Stage.js", "../../konva/lib/Shape.js", "../../konva/lib/Layer.js", "../../konva/lib/FastLayer.js", "../../konva/lib/Group.js", "../../konva/lib/Animation.js", "../../konva/lib/Tween.js", "../../konva/lib/_CoreInternals.js", "../../konva/lib/shapes/Arc.js", "../../konva/lib/shapes/Line.js", "../../konva/lib/BezierFunctions.js", "../../konva/lib/shapes/Path.js", "../../konva/lib/shapes/Arrow.js", "../../konva/lib/shapes/Circle.js", "../../konva/lib/shapes/Ellipse.js", "../../konva/lib/shapes/Image.js", "../../konva/lib/shapes/Label.js", "../../konva/lib/shapes/Rect.js", "../../konva/lib/shapes/RegularPolygon.js", "../../konva/lib/shapes/Ring.js", "../../konva/lib/shapes/Sprite.js", "../../konva/lib/shapes/Star.js", "../../konva/lib/shapes/Text.js", "../../konva/lib/shapes/TextPath.js", "../../konva/lib/shapes/Transformer.js", "../../konva/lib/shapes/Wedge.js", "../../konva/lib/filters/Blur.js", "../../konva/lib/filters/Brighten.js", "../../konva/lib/filters/Contrast.js", "../../konva/lib/filters/Emboss.js", "../../konva/lib/filters/Enhance.js", "../../konva/lib/filters/Grayscale.js", "../../konva/lib/filters/HSL.js", "../../konva/lib/filters/HSV.js", "../../konva/lib/filters/Invert.js", "../../konva/lib/filters/Kaleidoscope.js", "../../konva/lib/filters/Mask.js", "../../konva/lib/filters/Noise.js", "../../konva/lib/filters/Pixelate.js", "../../konva/lib/filters/Posterize.js", "../../konva/lib/filters/RGB.js", "../../konva/lib/filters/RGBA.js", "../../konva/lib/filters/Sepia.js", "../../konva/lib/filters/Solarize.js", "../../konva/lib/filters/Threshold.js", "../../konva/lib/_FullInternals.js", "../../konva/lib/index.js", "../../konva/lib/Core.js", "../../react-reconciler/cjs/react-reconciler.development.js", "../../react-reconciler/index.js", "../../react-reconciler/cjs/react-reconciler-constants.development.js", "../../react-reconciler/constants.js", "../../react-konva/es/ReactKonva.js", "../../react-konva/es/ReactKonvaCore.js", "../../react-konva/es/ReactKonvaHostConfig.js", "../../react-konva/es/makeUpdates.js", "../../its-fine/src/index.tsx"],
  "sourcesContent": ["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._registerNode = exports.Konva = exports.glob = void 0;\r\nconst PI_OVER_180 = Math.PI / 180;\r\nfunction detectBrowser() {\r\n    return (typeof window !== 'undefined' &&\r\n        ({}.toString.call(window) === '[object Window]' ||\r\n            {}.toString.call(window) === '[object global]'));\r\n}\r\nexports.glob = typeof global !== 'undefined'\r\n    ? global\r\n    : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof WorkerGlobalScope !== 'undefined'\r\n            ? self\r\n            : {};\r\nexports.Konva = {\r\n    _global: exports.glob,\r\n    version: '9.3.22',\r\n    isBrowser: detectBrowser(),\r\n    isUnminified: /param/.test(function (param) { }.toString()),\r\n    dblClickWindow: 400,\r\n    getAngle(angle) {\r\n        return exports.Konva.angleDeg ? angle * PI_OVER_180 : angle;\r\n    },\r\n    enableTrace: false,\r\n    pointerEventsEnabled: true,\r\n    autoDrawEnabled: true,\r\n    hitOnDragEnabled: false,\r\n    capturePointerEventsEnabled: false,\r\n    _mouseListenClick: false,\r\n    _touchListenClick: false,\r\n    _pointerListenClick: false,\r\n    _mouseInDblClickWindow: false,\r\n    _touchInDblClickWindow: false,\r\n    _pointerInDblClickWindow: false,\r\n    _mouseDblClickPointerId: null,\r\n    _touchDblClickPointerId: null,\r\n    _pointerDblClickPointerId: null,\r\n    _fixTextRendering: false,\r\n    pixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1,\r\n    dragDistance: 3,\r\n    angleDeg: true,\r\n    showWarnings: true,\r\n    dragButtons: [0, 1],\r\n    isDragging() {\r\n        return exports.Konva['DD'].isDragging;\r\n    },\r\n    isTransforming() {\r\n        var _a;\r\n        return (_a = exports.Konva['Transformer']) === null || _a === void 0 ? void 0 : _a.isTransforming();\r\n    },\r\n    isDragReady() {\r\n        return !!exports.Konva['DD'].node;\r\n    },\r\n    releaseCanvasOnDestroy: true,\r\n    document: exports.glob.document,\r\n    _injectGlobal(Konva) {\r\n        exports.glob.Konva = Konva;\r\n    },\r\n};\r\nconst _registerNode = (NodeClass) => {\r\n    exports.Konva[NodeClass.prototype.getClassName()] = NodeClass;\r\n};\r\nexports._registerNode = _registerNode;\r\nexports.Konva._injectGlobal(exports.Konva);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Util = exports.Transform = void 0;\r\nconst Global_1 = require(\"./Global\");\r\nclass Transform {\r\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\r\n        this.dirty = false;\r\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\r\n    }\r\n    reset() {\r\n        this.m[0] = 1;\r\n        this.m[1] = 0;\r\n        this.m[2] = 0;\r\n        this.m[3] = 1;\r\n        this.m[4] = 0;\r\n        this.m[5] = 0;\r\n    }\r\n    copy() {\r\n        return new Transform(this.m);\r\n    }\r\n    copyInto(tr) {\r\n        tr.m[0] = this.m[0];\r\n        tr.m[1] = this.m[1];\r\n        tr.m[2] = this.m[2];\r\n        tr.m[3] = this.m[3];\r\n        tr.m[4] = this.m[4];\r\n        tr.m[5] = this.m[5];\r\n    }\r\n    point(point) {\r\n        const m = this.m;\r\n        return {\r\n            x: m[0] * point.x + m[2] * point.y + m[4],\r\n            y: m[1] * point.x + m[3] * point.y + m[5],\r\n        };\r\n    }\r\n    translate(x, y) {\r\n        this.m[4] += this.m[0] * x + this.m[2] * y;\r\n        this.m[5] += this.m[1] * x + this.m[3] * y;\r\n        return this;\r\n    }\r\n    scale(sx, sy) {\r\n        this.m[0] *= sx;\r\n        this.m[1] *= sx;\r\n        this.m[2] *= sy;\r\n        this.m[3] *= sy;\r\n        return this;\r\n    }\r\n    rotate(rad) {\r\n        const c = Math.cos(rad);\r\n        const s = Math.sin(rad);\r\n        const m11 = this.m[0] * c + this.m[2] * s;\r\n        const m12 = this.m[1] * c + this.m[3] * s;\r\n        const m21 = this.m[0] * -s + this.m[2] * c;\r\n        const m22 = this.m[1] * -s + this.m[3] * c;\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        return this;\r\n    }\r\n    getTranslation() {\r\n        return {\r\n            x: this.m[4],\r\n            y: this.m[5],\r\n        };\r\n    }\r\n    skew(sx, sy) {\r\n        const m11 = this.m[0] + this.m[2] * sy;\r\n        const m12 = this.m[1] + this.m[3] * sy;\r\n        const m21 = this.m[2] + this.m[0] * sx;\r\n        const m22 = this.m[3] + this.m[1] * sx;\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\r\n        const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\r\n        const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\r\n        const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\r\n        const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\r\n        const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        this.m[4] = dx;\r\n        this.m[5] = dy;\r\n        return this;\r\n    }\r\n    invert() {\r\n        const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\r\n        const m0 = this.m[3] * d;\r\n        const m1 = -this.m[1] * d;\r\n        const m2 = -this.m[2] * d;\r\n        const m3 = this.m[0] * d;\r\n        const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\r\n        const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\r\n        this.m[0] = m0;\r\n        this.m[1] = m1;\r\n        this.m[2] = m2;\r\n        this.m[3] = m3;\r\n        this.m[4] = m4;\r\n        this.m[5] = m5;\r\n        return this;\r\n    }\r\n    getMatrix() {\r\n        return this.m;\r\n    }\r\n    decompose() {\r\n        const a = this.m[0];\r\n        const b = this.m[1];\r\n        const c = this.m[2];\r\n        const d = this.m[3];\r\n        const e = this.m[4];\r\n        const f = this.m[5];\r\n        const delta = a * d - b * c;\r\n        const result = {\r\n            x: e,\r\n            y: f,\r\n            rotation: 0,\r\n            scaleX: 0,\r\n            scaleY: 0,\r\n            skewX: 0,\r\n            skewY: 0,\r\n        };\r\n        if (a != 0 || b != 0) {\r\n            const r = Math.sqrt(a * a + b * b);\r\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\r\n            result.scaleX = r;\r\n            result.scaleY = delta / r;\r\n            result.skewX = (a * c + b * d) / delta;\r\n            result.skewY = 0;\r\n        }\r\n        else if (c != 0 || d != 0) {\r\n            const s = Math.sqrt(c * c + d * d);\r\n            result.rotation =\r\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\r\n            result.scaleX = delta / s;\r\n            result.scaleY = s;\r\n            result.skewX = 0;\r\n            result.skewY = (a * c + b * d) / delta;\r\n        }\r\n        else {\r\n        }\r\n        result.rotation = exports.Util._getRotation(result.rotation);\r\n        return result;\r\n    }\r\n}\r\nexports.Transform = Transform;\r\nconst OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\r\n    aliceblue: [240, 248, 255],\r\n    antiquewhite: [250, 235, 215],\r\n    aqua: [0, 255, 255],\r\n    aquamarine: [127, 255, 212],\r\n    azure: [240, 255, 255],\r\n    beige: [245, 245, 220],\r\n    bisque: [255, 228, 196],\r\n    black: [0, 0, 0],\r\n    blanchedalmond: [255, 235, 205],\r\n    blue: [0, 0, 255],\r\n    blueviolet: [138, 43, 226],\r\n    brown: [165, 42, 42],\r\n    burlywood: [222, 184, 135],\r\n    cadetblue: [95, 158, 160],\r\n    chartreuse: [127, 255, 0],\r\n    chocolate: [210, 105, 30],\r\n    coral: [255, 127, 80],\r\n    cornflowerblue: [100, 149, 237],\r\n    cornsilk: [255, 248, 220],\r\n    crimson: [220, 20, 60],\r\n    cyan: [0, 255, 255],\r\n    darkblue: [0, 0, 139],\r\n    darkcyan: [0, 139, 139],\r\n    darkgoldenrod: [184, 132, 11],\r\n    darkgray: [169, 169, 169],\r\n    darkgreen: [0, 100, 0],\r\n    darkgrey: [169, 169, 169],\r\n    darkkhaki: [189, 183, 107],\r\n    darkmagenta: [139, 0, 139],\r\n    darkolivegreen: [85, 107, 47],\r\n    darkorange: [255, 140, 0],\r\n    darkorchid: [153, 50, 204],\r\n    darkred: [139, 0, 0],\r\n    darksalmon: [233, 150, 122],\r\n    darkseagreen: [143, 188, 143],\r\n    darkslateblue: [72, 61, 139],\r\n    darkslategray: [47, 79, 79],\r\n    darkslategrey: [47, 79, 79],\r\n    darkturquoise: [0, 206, 209],\r\n    darkviolet: [148, 0, 211],\r\n    deeppink: [255, 20, 147],\r\n    deepskyblue: [0, 191, 255],\r\n    dimgray: [105, 105, 105],\r\n    dimgrey: [105, 105, 105],\r\n    dodgerblue: [30, 144, 255],\r\n    firebrick: [178, 34, 34],\r\n    floralwhite: [255, 255, 240],\r\n    forestgreen: [34, 139, 34],\r\n    fuchsia: [255, 0, 255],\r\n    gainsboro: [220, 220, 220],\r\n    ghostwhite: [248, 248, 255],\r\n    gold: [255, 215, 0],\r\n    goldenrod: [218, 165, 32],\r\n    gray: [128, 128, 128],\r\n    green: [0, 128, 0],\r\n    greenyellow: [173, 255, 47],\r\n    grey: [128, 128, 128],\r\n    honeydew: [240, 255, 240],\r\n    hotpink: [255, 105, 180],\r\n    indianred: [205, 92, 92],\r\n    indigo: [75, 0, 130],\r\n    ivory: [255, 255, 240],\r\n    khaki: [240, 230, 140],\r\n    lavender: [230, 230, 250],\r\n    lavenderblush: [255, 240, 245],\r\n    lawngreen: [124, 252, 0],\r\n    lemonchiffon: [255, 250, 205],\r\n    lightblue: [173, 216, 230],\r\n    lightcoral: [240, 128, 128],\r\n    lightcyan: [224, 255, 255],\r\n    lightgoldenrodyellow: [250, 250, 210],\r\n    lightgray: [211, 211, 211],\r\n    lightgreen: [144, 238, 144],\r\n    lightgrey: [211, 211, 211],\r\n    lightpink: [255, 182, 193],\r\n    lightsalmon: [255, 160, 122],\r\n    lightseagreen: [32, 178, 170],\r\n    lightskyblue: [135, 206, 250],\r\n    lightslategray: [119, 136, 153],\r\n    lightslategrey: [119, 136, 153],\r\n    lightsteelblue: [176, 196, 222],\r\n    lightyellow: [255, 255, 224],\r\n    lime: [0, 255, 0],\r\n    limegreen: [50, 205, 50],\r\n    linen: [250, 240, 230],\r\n    magenta: [255, 0, 255],\r\n    maroon: [128, 0, 0],\r\n    mediumaquamarine: [102, 205, 170],\r\n    mediumblue: [0, 0, 205],\r\n    mediumorchid: [186, 85, 211],\r\n    mediumpurple: [147, 112, 219],\r\n    mediumseagreen: [60, 179, 113],\r\n    mediumslateblue: [123, 104, 238],\r\n    mediumspringgreen: [0, 250, 154],\r\n    mediumturquoise: [72, 209, 204],\r\n    mediumvioletred: [199, 21, 133],\r\n    midnightblue: [25, 25, 112],\r\n    mintcream: [245, 255, 250],\r\n    mistyrose: [255, 228, 225],\r\n    moccasin: [255, 228, 181],\r\n    navajowhite: [255, 222, 173],\r\n    navy: [0, 0, 128],\r\n    oldlace: [253, 245, 230],\r\n    olive: [128, 128, 0],\r\n    olivedrab: [107, 142, 35],\r\n    orange: [255, 165, 0],\r\n    orangered: [255, 69, 0],\r\n    orchid: [218, 112, 214],\r\n    palegoldenrod: [238, 232, 170],\r\n    palegreen: [152, 251, 152],\r\n    paleturquoise: [175, 238, 238],\r\n    palevioletred: [219, 112, 147],\r\n    papayawhip: [255, 239, 213],\r\n    peachpuff: [255, 218, 185],\r\n    peru: [205, 133, 63],\r\n    pink: [255, 192, 203],\r\n    plum: [221, 160, 203],\r\n    powderblue: [176, 224, 230],\r\n    purple: [128, 0, 128],\r\n    rebeccapurple: [102, 51, 153],\r\n    red: [255, 0, 0],\r\n    rosybrown: [188, 143, 143],\r\n    royalblue: [65, 105, 225],\r\n    saddlebrown: [139, 69, 19],\r\n    salmon: [250, 128, 114],\r\n    sandybrown: [244, 164, 96],\r\n    seagreen: [46, 139, 87],\r\n    seashell: [255, 245, 238],\r\n    sienna: [160, 82, 45],\r\n    silver: [192, 192, 192],\r\n    skyblue: [135, 206, 235],\r\n    slateblue: [106, 90, 205],\r\n    slategray: [119, 128, 144],\r\n    slategrey: [119, 128, 144],\r\n    snow: [255, 255, 250],\r\n    springgreen: [0, 255, 127],\r\n    steelblue: [70, 130, 180],\r\n    tan: [210, 180, 140],\r\n    teal: [0, 128, 128],\r\n    thistle: [216, 191, 216],\r\n    transparent: [255, 255, 255, 0],\r\n    tomato: [255, 99, 71],\r\n    turquoise: [64, 224, 208],\r\n    violet: [238, 130, 238],\r\n    wheat: [245, 222, 179],\r\n    white: [255, 255, 255],\r\n    whitesmoke: [245, 245, 245],\r\n    yellow: [255, 255, 0],\r\n    yellowgreen: [154, 205, 5],\r\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\r\nlet animQueue = [];\r\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\r\n    function (f) {\r\n        setTimeout(f, 60);\r\n    };\r\nexports.Util = {\r\n    _isElement(obj) {\r\n        return !!(obj && obj.nodeType == 1);\r\n    },\r\n    _isFunction(obj) {\r\n        return !!(obj && obj.constructor && obj.call && obj.apply);\r\n    },\r\n    _isPlainObject(obj) {\r\n        return !!obj && obj.constructor === Object;\r\n    },\r\n    _isArray(obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\r\n    },\r\n    _isNumber(obj) {\r\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\r\n            !isNaN(obj) &&\r\n            isFinite(obj));\r\n    },\r\n    _isString(obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\r\n    },\r\n    _isBoolean(obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\r\n    },\r\n    isObject(val) {\r\n        return val instanceof Object;\r\n    },\r\n    isValidSelector(selector) {\r\n        if (typeof selector !== 'string') {\r\n            return false;\r\n        }\r\n        const firstChar = selector[0];\r\n        return (firstChar === '#' ||\r\n            firstChar === '.' ||\r\n            firstChar === firstChar.toUpperCase());\r\n    },\r\n    _sign(number) {\r\n        if (number === 0) {\r\n            return 1;\r\n        }\r\n        if (number > 0) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    },\r\n    requestAnimFrame(callback) {\r\n        animQueue.push(callback);\r\n        if (animQueue.length === 1) {\r\n            req(function () {\r\n                const queue = animQueue;\r\n                animQueue = [];\r\n                queue.forEach(function (cb) {\r\n                    cb();\r\n                });\r\n            });\r\n        }\r\n    },\r\n    createCanvasElement() {\r\n        const canvas = document.createElement('canvas');\r\n        try {\r\n            canvas.style = canvas.style || {};\r\n        }\r\n        catch (e) { }\r\n        return canvas;\r\n    },\r\n    createImageElement() {\r\n        return document.createElement('img');\r\n    },\r\n    _isInDocument(el) {\r\n        while ((el = el.parentNode)) {\r\n            if (el == document) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    _urlToImage(url, callback) {\r\n        const imageObj = exports.Util.createImageElement();\r\n        imageObj.onload = function () {\r\n            callback(imageObj);\r\n        };\r\n        imageObj.src = url;\r\n    },\r\n    _rgbToHex(r, g, b) {\r\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n    },\r\n    _hexToRgb(hex) {\r\n        hex = hex.replace(HASH, EMPTY_STRING);\r\n        const bigint = parseInt(hex, 16);\r\n        return {\r\n            r: (bigint >> 16) & 255,\r\n            g: (bigint >> 8) & 255,\r\n            b: bigint & 255,\r\n        };\r\n    },\r\n    getRandomColor() {\r\n        let randColor = ((Math.random() * 0xffffff) << 0).toString(16);\r\n        while (randColor.length < 6) {\r\n            randColor = ZERO + randColor;\r\n        }\r\n        return HASH + randColor;\r\n    },\r\n    getRGB(color) {\r\n        let rgb;\r\n        if (color in COLORS) {\r\n            rgb = COLORS[color];\r\n            return {\r\n                r: rgb[0],\r\n                g: rgb[1],\r\n                b: rgb[2],\r\n            };\r\n        }\r\n        else if (color[0] === HASH) {\r\n            return this._hexToRgb(color.substring(1));\r\n        }\r\n        else if (color.substr(0, 4) === RGB_PAREN) {\r\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\r\n            return {\r\n                r: parseInt(rgb[1], 10),\r\n                g: parseInt(rgb[2], 10),\r\n                b: parseInt(rgb[3], 10),\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0,\r\n            };\r\n        }\r\n    },\r\n    colorToRGBA(str) {\r\n        str = str || 'black';\r\n        return (exports.Util._namedColorToRBA(str) ||\r\n            exports.Util._hex3ColorToRGBA(str) ||\r\n            exports.Util._hex4ColorToRGBA(str) ||\r\n            exports.Util._hex6ColorToRGBA(str) ||\r\n            exports.Util._hex8ColorToRGBA(str) ||\r\n            exports.Util._rgbColorToRGBA(str) ||\r\n            exports.Util._rgbaColorToRGBA(str) ||\r\n            exports.Util._hslColorToRGBA(str));\r\n    },\r\n    _namedColorToRBA(str) {\r\n        const c = COLORS[str.toLowerCase()];\r\n        if (!c) {\r\n            return null;\r\n        }\r\n        return {\r\n            r: c[0],\r\n            g: c[1],\r\n            b: c[2],\r\n            a: 1,\r\n        };\r\n    },\r\n    _rgbColorToRGBA(str) {\r\n        if (str.indexOf('rgb(') === 0) {\r\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\r\n            const parts = str.split(/ *, */).map(Number);\r\n            return {\r\n                r: parts[0],\r\n                g: parts[1],\r\n                b: parts[2],\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _rgbaColorToRGBA(str) {\r\n        if (str.indexOf('rgba(') === 0) {\r\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\r\n            const parts = str.split(/ *, */).map((n, index) => {\r\n                if (n.slice(-1) === '%') {\r\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\r\n                }\r\n                return Number(n);\r\n            });\r\n            return {\r\n                r: parts[0],\r\n                g: parts[1],\r\n                b: parts[2],\r\n                a: parts[3],\r\n            };\r\n        }\r\n    },\r\n    _hex8ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 9) {\r\n            return {\r\n                r: parseInt(str.slice(1, 3), 16),\r\n                g: parseInt(str.slice(3, 5), 16),\r\n                b: parseInt(str.slice(5, 7), 16),\r\n                a: parseInt(str.slice(7, 9), 16) / 0xff,\r\n            };\r\n        }\r\n    },\r\n    _hex6ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 7) {\r\n            return {\r\n                r: parseInt(str.slice(1, 3), 16),\r\n                g: parseInt(str.slice(3, 5), 16),\r\n                b: parseInt(str.slice(5, 7), 16),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _hex4ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 5) {\r\n            return {\r\n                r: parseInt(str[1] + str[1], 16),\r\n                g: parseInt(str[2] + str[2], 16),\r\n                b: parseInt(str[3] + str[3], 16),\r\n                a: parseInt(str[4] + str[4], 16) / 0xff,\r\n            };\r\n        }\r\n    },\r\n    _hex3ColorToRGBA(str) {\r\n        if (str[0] === '#' && str.length === 4) {\r\n            return {\r\n                r: parseInt(str[1] + str[1], 16),\r\n                g: parseInt(str[2] + str[2], 16),\r\n                b: parseInt(str[3] + str[3], 16),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _hslColorToRGBA(str) {\r\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\r\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\r\n            const h = Number(hsl[0]) / 360;\r\n            const s = Number(hsl[1]) / 100;\r\n            const l = Number(hsl[2]) / 100;\r\n            let t2;\r\n            let t3;\r\n            let val;\r\n            if (s === 0) {\r\n                val = l * 255;\r\n                return {\r\n                    r: Math.round(val),\r\n                    g: Math.round(val),\r\n                    b: Math.round(val),\r\n                    a: 1,\r\n                };\r\n            }\r\n            if (l < 0.5) {\r\n                t2 = l * (1 + s);\r\n            }\r\n            else {\r\n                t2 = l + s - l * s;\r\n            }\r\n            const t1 = 2 * l - t2;\r\n            const rgb = [0, 0, 0];\r\n            for (let i = 0; i < 3; i++) {\r\n                t3 = h + (1 / 3) * -(i - 1);\r\n                if (t3 < 0) {\r\n                    t3++;\r\n                }\r\n                if (t3 > 1) {\r\n                    t3--;\r\n                }\r\n                if (6 * t3 < 1) {\r\n                    val = t1 + (t2 - t1) * 6 * t3;\r\n                }\r\n                else if (2 * t3 < 1) {\r\n                    val = t2;\r\n                }\r\n                else if (3 * t3 < 2) {\r\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                }\r\n                else {\r\n                    val = t1;\r\n                }\r\n                rgb[i] = val * 255;\r\n            }\r\n            return {\r\n                r: Math.round(rgb[0]),\r\n                g: Math.round(rgb[1]),\r\n                b: Math.round(rgb[2]),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    haveIntersection(r1, r2) {\r\n        return !(r2.x > r1.x + r1.width ||\r\n            r2.x + r2.width < r1.x ||\r\n            r2.y > r1.y + r1.height ||\r\n            r2.y + r2.height < r1.y);\r\n    },\r\n    cloneObject(obj) {\r\n        const retObj = {};\r\n        for (const key in obj) {\r\n            if (this._isPlainObject(obj[key])) {\r\n                retObj[key] = this.cloneObject(obj[key]);\r\n            }\r\n            else if (this._isArray(obj[key])) {\r\n                retObj[key] = this.cloneArray(obj[key]);\r\n            }\r\n            else {\r\n                retObj[key] = obj[key];\r\n            }\r\n        }\r\n        return retObj;\r\n    },\r\n    cloneArray(arr) {\r\n        return arr.slice(0);\r\n    },\r\n    degToRad(deg) {\r\n        return deg * PI_OVER_DEG180;\r\n    },\r\n    radToDeg(rad) {\r\n        return rad * DEG180_OVER_PI;\r\n    },\r\n    _degToRad(deg) {\r\n        exports.Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\r\n        return exports.Util.degToRad(deg);\r\n    },\r\n    _radToDeg(rad) {\r\n        exports.Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\r\n        return exports.Util.radToDeg(rad);\r\n    },\r\n    _getRotation(radians) {\r\n        return Global_1.Konva.angleDeg ? exports.Util.radToDeg(radians) : radians;\r\n    },\r\n    _capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    },\r\n    throw(str) {\r\n        throw new Error(KONVA_ERROR + str);\r\n    },\r\n    error(str) {\r\n        console.error(KONVA_ERROR + str);\r\n    },\r\n    warn(str) {\r\n        if (!Global_1.Konva.showWarnings) {\r\n            return;\r\n        }\r\n        console.warn(KONVA_WARNING + str);\r\n    },\r\n    each(obj, func) {\r\n        for (const key in obj) {\r\n            func(key, obj[key]);\r\n        }\r\n    },\r\n    _inRange(val, left, right) {\r\n        return left <= val && val < right;\r\n    },\r\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\r\n        let x, y, dist;\r\n        const pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\r\n        if (pd2 == 0) {\r\n            x = x1;\r\n            y = y1;\r\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\r\n        }\r\n        else {\r\n            const u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\r\n            if (u < 0) {\r\n                x = x1;\r\n                y = y1;\r\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\r\n            }\r\n            else if (u > 1.0) {\r\n                x = x2;\r\n                y = y2;\r\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\r\n            }\r\n            else {\r\n                x = x1 + u * (x2 - x1);\r\n                y = y1 + u * (y2 - y1);\r\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\r\n            }\r\n        }\r\n        return [x, y, dist];\r\n    },\r\n    _getProjectionToLine(pt, line, isClosed) {\r\n        const pc = exports.Util.cloneObject(pt);\r\n        let dist = Number.MAX_VALUE;\r\n        line.forEach(function (p1, i) {\r\n            if (!isClosed && i === line.length - 1) {\r\n                return;\r\n            }\r\n            const p2 = line[(i + 1) % line.length];\r\n            const proj = exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\r\n            const px = proj[0], py = proj[1], pdist = proj[2];\r\n            if (pdist < dist) {\r\n                pc.x = px;\r\n                pc.y = py;\r\n                dist = pdist;\r\n            }\r\n        });\r\n        return pc;\r\n    },\r\n    _prepareArrayForTween(startArray, endArray, isClosed) {\r\n        const start = [], end = [];\r\n        if (startArray.length > endArray.length) {\r\n            const temp = endArray;\r\n            endArray = startArray;\r\n            startArray = temp;\r\n        }\r\n        for (let n = 0; n < startArray.length; n += 2) {\r\n            start.push({\r\n                x: startArray[n],\r\n                y: startArray[n + 1],\r\n            });\r\n        }\r\n        for (let n = 0; n < endArray.length; n += 2) {\r\n            end.push({\r\n                x: endArray[n],\r\n                y: endArray[n + 1],\r\n            });\r\n        }\r\n        const newStart = [];\r\n        end.forEach(function (point) {\r\n            const pr = exports.Util._getProjectionToLine(point, start, isClosed);\r\n            newStart.push(pr.x);\r\n            newStart.push(pr.y);\r\n        });\r\n        return newStart;\r\n    },\r\n    _prepareToStringify(obj) {\r\n        let desc;\r\n        obj.visitedByCircularReferenceRemoval = true;\r\n        for (const key in obj) {\r\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\r\n                continue;\r\n            }\r\n            desc = Object.getOwnPropertyDescriptor(obj, key);\r\n            if (obj[key].visitedByCircularReferenceRemoval ||\r\n                exports.Util._isElement(obj[key])) {\r\n                if (desc.configurable) {\r\n                    delete obj[key];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            else if (exports.Util._prepareToStringify(obj[key]) === null) {\r\n                if (desc.configurable) {\r\n                    delete obj[key];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        delete obj.visitedByCircularReferenceRemoval;\r\n        return obj;\r\n    },\r\n    _assign(target, source) {\r\n        for (const key in source) {\r\n            target[key] = source[key];\r\n        }\r\n        return target;\r\n    },\r\n    _getFirstPointerId(evt) {\r\n        if (!evt.touches) {\r\n            return evt.pointerId || 999;\r\n        }\r\n        else {\r\n            return evt.changedTouches[0].identifier;\r\n        }\r\n    },\r\n    releaseCanvas(...canvases) {\r\n        if (!Global_1.Konva.releaseCanvasOnDestroy)\r\n            return;\r\n        canvases.forEach((c) => {\r\n            c.width = 0;\r\n            c.height = 0;\r\n        });\r\n    },\r\n    drawRoundedRectPath(context, width, height, cornerRadius) {\r\n        let topLeft = 0;\r\n        let topRight = 0;\r\n        let bottomLeft = 0;\r\n        let bottomRight = 0;\r\n        if (typeof cornerRadius === 'number') {\r\n            topLeft =\r\n                topRight =\r\n                    bottomLeft =\r\n                        bottomRight =\r\n                            Math.min(cornerRadius, width / 2, height / 2);\r\n        }\r\n        else {\r\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\r\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\r\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\r\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\r\n        }\r\n        context.moveTo(topLeft, 0);\r\n        context.lineTo(width - topRight, 0);\r\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\r\n        context.lineTo(width, height - bottomRight);\r\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\r\n        context.lineTo(bottomLeft, height);\r\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\r\n        context.lineTo(0, topLeft);\r\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\r\n    },\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Global_1 = require(\"./Global\");\r\nfunction simplifyArray(arr) {\r\n    const retArr = [], len = arr.length, util = Util_1.Util;\r\n    for (let n = 0; n < len; n++) {\r\n        let val = arr[n];\r\n        if (util._isNumber(val)) {\r\n            val = Math.round(val * 1000) / 1000;\r\n        }\r\n        else if (!util._isString(val)) {\r\n            val = val + '';\r\n        }\r\n        retArr.push(val);\r\n    }\r\n    return retArr;\r\n}\r\nconst COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\r\n    'arc',\r\n    'arcTo',\r\n    'beginPath',\r\n    'bezierCurveTo',\r\n    'clearRect',\r\n    'clip',\r\n    'closePath',\r\n    'createLinearGradient',\r\n    'createPattern',\r\n    'createRadialGradient',\r\n    'drawImage',\r\n    'ellipse',\r\n    'fill',\r\n    'fillText',\r\n    'getImageData',\r\n    'createImageData',\r\n    'lineTo',\r\n    'moveTo',\r\n    'putImageData',\r\n    'quadraticCurveTo',\r\n    'rect',\r\n    'roundRect',\r\n    'restore',\r\n    'rotate',\r\n    'save',\r\n    'scale',\r\n    'setLineDash',\r\n    'setTransform',\r\n    'stroke',\r\n    'strokeText',\r\n    'transform',\r\n    'translate',\r\n];\r\nconst CONTEXT_PROPERTIES = [\r\n    'fillStyle',\r\n    'strokeStyle',\r\n    'shadowColor',\r\n    'shadowBlur',\r\n    'shadowOffsetX',\r\n    'shadowOffsetY',\r\n    'letterSpacing',\r\n    'lineCap',\r\n    'lineDashOffset',\r\n    'lineJoin',\r\n    'lineWidth',\r\n    'miterLimit',\r\n    'direction',\r\n    'font',\r\n    'textAlign',\r\n    'textBaseline',\r\n    'globalAlpha',\r\n    'globalCompositeOperation',\r\n    'imageSmoothingEnabled',\r\n];\r\nconst traceArrMax = 100;\r\nclass Context {\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n        if (Global_1.Konva.enableTrace) {\r\n            this.traceArr = [];\r\n            this._enableTrace();\r\n        }\r\n    }\r\n    fillShape(shape) {\r\n        if (shape.fillEnabled()) {\r\n            this._fill(shape);\r\n        }\r\n    }\r\n    _fill(shape) {\r\n    }\r\n    strokeShape(shape) {\r\n        if (shape.hasStroke()) {\r\n            this._stroke(shape);\r\n        }\r\n    }\r\n    _stroke(shape) {\r\n    }\r\n    fillStrokeShape(shape) {\r\n        if (shape.attrs.fillAfterStrokeEnabled) {\r\n            this.strokeShape(shape);\r\n            this.fillShape(shape);\r\n        }\r\n        else {\r\n            this.fillShape(shape);\r\n            this.strokeShape(shape);\r\n        }\r\n    }\r\n    getTrace(relaxed, rounded) {\r\n        let traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\r\n        for (n = 0; n < len; n++) {\r\n            trace = traceArr[n];\r\n            method = trace.method;\r\n            if (method) {\r\n                args = trace.args;\r\n                str += method;\r\n                if (relaxed) {\r\n                    str += DOUBLE_PAREN;\r\n                }\r\n                else {\r\n                    if (Util_1.Util._isArray(args[0])) {\r\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\r\n                    }\r\n                    else {\r\n                        if (rounded) {\r\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\r\n                        }\r\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                str += trace.property;\r\n                if (!relaxed) {\r\n                    str += EQUALS + trace.val;\r\n                }\r\n            }\r\n            str += SEMICOLON;\r\n        }\r\n        return str;\r\n    }\r\n    clearTrace() {\r\n        this.traceArr = [];\r\n    }\r\n    _trace(str) {\r\n        let traceArr = this.traceArr, len;\r\n        traceArr.push(str);\r\n        len = traceArr.length;\r\n        if (len >= traceArrMax) {\r\n            traceArr.shift();\r\n        }\r\n    }\r\n    reset() {\r\n        const pixelRatio = this.getCanvas().getPixelRatio();\r\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\r\n    }\r\n    getCanvas() {\r\n        return this.canvas;\r\n    }\r\n    clear(bounds) {\r\n        const canvas = this.getCanvas();\r\n        if (bounds) {\r\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\r\n        }\r\n        else {\r\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\r\n        }\r\n    }\r\n    _applyLineCap(shape) {\r\n        const lineCap = shape.attrs.lineCap;\r\n        if (lineCap) {\r\n            this.setAttr('lineCap', lineCap);\r\n        }\r\n    }\r\n    _applyOpacity(shape) {\r\n        const absOpacity = shape.getAbsoluteOpacity();\r\n        if (absOpacity !== 1) {\r\n            this.setAttr('globalAlpha', absOpacity);\r\n        }\r\n    }\r\n    _applyLineJoin(shape) {\r\n        const lineJoin = shape.attrs.lineJoin;\r\n        if (lineJoin) {\r\n            this.setAttr('lineJoin', lineJoin);\r\n        }\r\n    }\r\n    setAttr(attr, val) {\r\n        this._context[attr] = val;\r\n    }\r\n    arc(x, y, radius, startAngle, endAngle, counterClockwise) {\r\n        this._context.arc(x, y, radius, startAngle, endAngle, counterClockwise);\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._context.arcTo(x1, y1, x2, y2, radius);\r\n    }\r\n    beginPath() {\r\n        this._context.beginPath();\r\n    }\r\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\r\n        this._context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\r\n    }\r\n    clearRect(x, y, width, height) {\r\n        this._context.clearRect(x, y, width, height);\r\n    }\r\n    clip(...args) {\r\n        this._context.clip.apply(this._context, args);\r\n    }\r\n    closePath() {\r\n        this._context.closePath();\r\n    }\r\n    createImageData(width, height) {\r\n        const a = arguments;\r\n        if (a.length === 2) {\r\n            return this._context.createImageData(width, height);\r\n        }\r\n        else if (a.length === 1) {\r\n            return this._context.createImageData(width);\r\n        }\r\n    }\r\n    createLinearGradient(x0, y0, x1, y1) {\r\n        return this._context.createLinearGradient(x0, y0, x1, y1);\r\n    }\r\n    createPattern(image, repetition) {\r\n        return this._context.createPattern(image, repetition);\r\n    }\r\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\r\n        return this._context.createRadialGradient(x0, y0, r0, x1, y1, r1);\r\n    }\r\n    drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\r\n        const a = arguments, _context = this._context;\r\n        if (a.length === 3) {\r\n            _context.drawImage(image, sx, sy);\r\n        }\r\n        else if (a.length === 5) {\r\n            _context.drawImage(image, sx, sy, sWidth, sHeight);\r\n        }\r\n        else if (a.length === 9) {\r\n            _context.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\r\n        }\r\n    }\r\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise) {\r\n        this._context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise);\r\n    }\r\n    isPointInPath(x, y, path, fillRule) {\r\n        if (path) {\r\n            return this._context.isPointInPath(path, x, y, fillRule);\r\n        }\r\n        return this._context.isPointInPath(x, y, fillRule);\r\n    }\r\n    fill(...args) {\r\n        this._context.fill.apply(this._context, args);\r\n    }\r\n    fillRect(x, y, width, height) {\r\n        this._context.fillRect(x, y, width, height);\r\n    }\r\n    strokeRect(x, y, width, height) {\r\n        this._context.strokeRect(x, y, width, height);\r\n    }\r\n    fillText(text, x, y, maxWidth) {\r\n        if (maxWidth) {\r\n            this._context.fillText(text, x, y, maxWidth);\r\n        }\r\n        else {\r\n            this._context.fillText(text, x, y);\r\n        }\r\n    }\r\n    measureText(text) {\r\n        return this._context.measureText(text);\r\n    }\r\n    getImageData(sx, sy, sw, sh) {\r\n        return this._context.getImageData(sx, sy, sw, sh);\r\n    }\r\n    lineTo(x, y) {\r\n        this._context.lineTo(x, y);\r\n    }\r\n    moveTo(x, y) {\r\n        this._context.moveTo(x, y);\r\n    }\r\n    rect(x, y, width, height) {\r\n        this._context.rect(x, y, width, height);\r\n    }\r\n    roundRect(x, y, width, height, radii) {\r\n        this._context.roundRect(x, y, width, height, radii);\r\n    }\r\n    putImageData(imageData, dx, dy) {\r\n        this._context.putImageData(imageData, dx, dy);\r\n    }\r\n    quadraticCurveTo(cpx, cpy, x, y) {\r\n        this._context.quadraticCurveTo(cpx, cpy, x, y);\r\n    }\r\n    restore() {\r\n        this._context.restore();\r\n    }\r\n    rotate(angle) {\r\n        this._context.rotate(angle);\r\n    }\r\n    save() {\r\n        this._context.save();\r\n    }\r\n    scale(x, y) {\r\n        this._context.scale(x, y);\r\n    }\r\n    setLineDash(segments) {\r\n        if (this._context.setLineDash) {\r\n            this._context.setLineDash(segments);\r\n        }\r\n        else if ('mozDash' in this._context) {\r\n            this._context['mozDash'] = segments;\r\n        }\r\n        else if ('webkitLineDash' in this._context) {\r\n            this._context['webkitLineDash'] = segments;\r\n        }\r\n    }\r\n    getLineDash() {\r\n        return this._context.getLineDash();\r\n    }\r\n    setTransform(a, b, c, d, e, f) {\r\n        this._context.setTransform(a, b, c, d, e, f);\r\n    }\r\n    stroke(path2d) {\r\n        if (path2d) {\r\n            this._context.stroke(path2d);\r\n        }\r\n        else {\r\n            this._context.stroke();\r\n        }\r\n    }\r\n    strokeText(text, x, y, maxWidth) {\r\n        this._context.strokeText(text, x, y, maxWidth);\r\n    }\r\n    transform(a, b, c, d, e, f) {\r\n        this._context.transform(a, b, c, d, e, f);\r\n    }\r\n    translate(x, y) {\r\n        this._context.translate(x, y);\r\n    }\r\n    _enableTrace() {\r\n        let that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\r\n        const func = function (methodName) {\r\n            let origMethod = that[methodName], ret;\r\n            that[methodName] = function () {\r\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\r\n                ret = origMethod.apply(that, arguments);\r\n                that._trace({\r\n                    method: methodName,\r\n                    args: args,\r\n                });\r\n                return ret;\r\n            };\r\n        };\r\n        for (n = 0; n < len; n++) {\r\n            func(CONTEXT_METHODS[n]);\r\n        }\r\n        that.setAttr = function () {\r\n            origSetter.apply(that, arguments);\r\n            const prop = arguments[0];\r\n            let val = arguments[1];\r\n            if (prop === 'shadowOffsetX' ||\r\n                prop === 'shadowOffsetY' ||\r\n                prop === 'shadowBlur') {\r\n                val = val / this.canvas.getPixelRatio();\r\n            }\r\n            that._trace({\r\n                property: prop,\r\n                val: val,\r\n            });\r\n        };\r\n    }\r\n    _applyGlobalCompositeOperation(node) {\r\n        const op = node.attrs.globalCompositeOperation;\r\n        const def = !op || op === 'source-over';\r\n        if (!def) {\r\n            this.setAttr('globalCompositeOperation', op);\r\n        }\r\n    }\r\n}\r\nexports.Context = Context;\r\nCONTEXT_PROPERTIES.forEach(function (prop) {\r\n    Object.defineProperty(Context.prototype, prop, {\r\n        get() {\r\n            return this._context[prop];\r\n        },\r\n        set(val) {\r\n            this._context[prop] = val;\r\n        },\r\n    });\r\n});\r\nclass SceneContext extends Context {\r\n    constructor(canvas, { willReadFrequently = false } = {}) {\r\n        super(canvas);\r\n        this._context = canvas._canvas.getContext('2d', {\r\n            willReadFrequently,\r\n        });\r\n    }\r\n    _fillColor(shape) {\r\n        const fill = shape.fill();\r\n        this.setAttr('fillStyle', fill);\r\n        shape._fillFunc(this);\r\n    }\r\n    _fillPattern(shape) {\r\n        this.setAttr('fillStyle', shape._getFillPattern());\r\n        shape._fillFunc(this);\r\n    }\r\n    _fillLinearGradient(shape) {\r\n        const grd = shape._getLinearGradient();\r\n        if (grd) {\r\n            this.setAttr('fillStyle', grd);\r\n            shape._fillFunc(this);\r\n        }\r\n    }\r\n    _fillRadialGradient(shape) {\r\n        const grd = shape._getRadialGradient();\r\n        if (grd) {\r\n            this.setAttr('fillStyle', grd);\r\n            shape._fillFunc(this);\r\n        }\r\n    }\r\n    _fill(shape) {\r\n        const hasColor = shape.fill(), fillPriority = shape.getFillPriority();\r\n        if (hasColor && fillPriority === 'color') {\r\n            this._fillColor(shape);\r\n            return;\r\n        }\r\n        const hasPattern = shape.getFillPatternImage();\r\n        if (hasPattern && fillPriority === 'pattern') {\r\n            this._fillPattern(shape);\r\n            return;\r\n        }\r\n        const hasLinearGradient = shape.getFillLinearGradientColorStops();\r\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\r\n            this._fillLinearGradient(shape);\r\n            return;\r\n        }\r\n        const hasRadialGradient = shape.getFillRadialGradientColorStops();\r\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\r\n            this._fillRadialGradient(shape);\r\n            return;\r\n        }\r\n        if (hasColor) {\r\n            this._fillColor(shape);\r\n        }\r\n        else if (hasPattern) {\r\n            this._fillPattern(shape);\r\n        }\r\n        else if (hasLinearGradient) {\r\n            this._fillLinearGradient(shape);\r\n        }\r\n        else if (hasRadialGradient) {\r\n            this._fillRadialGradient(shape);\r\n        }\r\n    }\r\n    _strokeLinearGradient(shape) {\r\n        const start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\r\n        if (colorStops) {\r\n            for (let n = 0; n < colorStops.length; n += 2) {\r\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\r\n            }\r\n            this.setAttr('strokeStyle', grd);\r\n        }\r\n    }\r\n    _stroke(shape) {\r\n        const dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\r\n        if (shape.hasStroke()) {\r\n            if (!strokeScaleEnabled) {\r\n                this.save();\r\n                const pixelRatio = this.getCanvas().getPixelRatio();\r\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n            }\r\n            this._applyLineCap(shape);\r\n            if (dash && shape.dashEnabled()) {\r\n                this.setLineDash(dash);\r\n                this.setAttr('lineDashOffset', shape.dashOffset());\r\n            }\r\n            this.setAttr('lineWidth', shape.strokeWidth());\r\n            if (!shape.getShadowForStrokeEnabled()) {\r\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\r\n            }\r\n            const hasLinearGradient = shape.getStrokeLinearGradientColorStops();\r\n            if (hasLinearGradient) {\r\n                this._strokeLinearGradient(shape);\r\n            }\r\n            else {\r\n                this.setAttr('strokeStyle', shape.stroke());\r\n            }\r\n            shape._strokeFunc(this);\r\n            if (!strokeScaleEnabled) {\r\n                this.restore();\r\n            }\r\n        }\r\n    }\r\n    _applyShadow(shape) {\r\n        var _a, _b, _c;\r\n        const color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\r\n            x: 0,\r\n            y: 0,\r\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\r\n        this.setAttr('shadowColor', color);\r\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\r\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\r\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\r\n    }\r\n}\r\nexports.SceneContext = SceneContext;\r\nclass HitContext extends Context {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n        this._context = canvas._canvas.getContext('2d', {\r\n            willReadFrequently: true,\r\n        });\r\n    }\r\n    _fill(shape) {\r\n        this.save();\r\n        this.setAttr('fillStyle', shape.colorKey);\r\n        shape._fillFuncHit(this);\r\n        this.restore();\r\n    }\r\n    strokeShape(shape) {\r\n        if (shape.hasHitStroke()) {\r\n            this._stroke(shape);\r\n        }\r\n    }\r\n    _stroke(shape) {\r\n        if (shape.hasHitStroke()) {\r\n            const strokeScaleEnabled = shape.getStrokeScaleEnabled();\r\n            if (!strokeScaleEnabled) {\r\n                this.save();\r\n                const pixelRatio = this.getCanvas().getPixelRatio();\r\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n            }\r\n            this._applyLineCap(shape);\r\n            const hitStrokeWidth = shape.hitStrokeWidth();\r\n            const strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\r\n            this.setAttr('lineWidth', strokeWidth);\r\n            this.setAttr('strokeStyle', shape.colorKey);\r\n            shape._strokeFuncHit(this);\r\n            if (!strokeScaleEnabled) {\r\n                this.restore();\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.HitContext = HitContext;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HitCanvas = exports.SceneCanvas = exports.Canvas = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Context_1 = require(\"./Context\");\r\nconst Global_1 = require(\"./Global\");\r\nlet _pixelRatio;\r\nfunction getDevicePixelRatio() {\r\n    if (_pixelRatio) {\r\n        return _pixelRatio;\r\n    }\r\n    const canvas = Util_1.Util.createCanvasElement();\r\n    const context = canvas.getContext('2d');\r\n    _pixelRatio = (function () {\r\n        const devicePixelRatio = Global_1.Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\r\n            context.mozBackingStorePixelRatio ||\r\n            context.msBackingStorePixelRatio ||\r\n            context.oBackingStorePixelRatio ||\r\n            context.backingStorePixelRatio ||\r\n            1;\r\n        return devicePixelRatio / backingStoreRatio;\r\n    })();\r\n    Util_1.Util.releaseCanvas(canvas);\r\n    return _pixelRatio;\r\n}\r\nclass Canvas {\r\n    constructor(config) {\r\n        this.pixelRatio = 1;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.isCache = false;\r\n        const conf = config || {};\r\n        const pixelRatio = conf.pixelRatio || Global_1.Konva.pixelRatio || getDevicePixelRatio();\r\n        this.pixelRatio = pixelRatio;\r\n        this._canvas = Util_1.Util.createCanvasElement();\r\n        this._canvas.style.padding = '0';\r\n        this._canvas.style.margin = '0';\r\n        this._canvas.style.border = '0';\r\n        this._canvas.style.background = 'transparent';\r\n        this._canvas.style.position = 'absolute';\r\n        this._canvas.style.top = '0';\r\n        this._canvas.style.left = '0';\r\n    }\r\n    getContext() {\r\n        return this.context;\r\n    }\r\n    getPixelRatio() {\r\n        return this.pixelRatio;\r\n    }\r\n    setPixelRatio(pixelRatio) {\r\n        const previousRatio = this.pixelRatio;\r\n        this.pixelRatio = pixelRatio;\r\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\r\n    }\r\n    setWidth(width) {\r\n        this.width = this._canvas.width = width * this.pixelRatio;\r\n        this._canvas.style.width = width + 'px';\r\n        const pixelRatio = this.pixelRatio, _context = this.getContext()._context;\r\n        _context.scale(pixelRatio, pixelRatio);\r\n    }\r\n    setHeight(height) {\r\n        this.height = this._canvas.height = height * this.pixelRatio;\r\n        this._canvas.style.height = height + 'px';\r\n        const pixelRatio = this.pixelRatio, _context = this.getContext()._context;\r\n        _context.scale(pixelRatio, pixelRatio);\r\n    }\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    setSize(width, height) {\r\n        this.setWidth(width || 0);\r\n        this.setHeight(height || 0);\r\n    }\r\n    toDataURL(mimeType, quality) {\r\n        try {\r\n            return this._canvas.toDataURL(mimeType, quality);\r\n        }\r\n        catch (e) {\r\n            try {\r\n                return this._canvas.toDataURL();\r\n            }\r\n            catch (err) {\r\n                Util_1.Util.error('Unable to get data URL. ' +\r\n                    err.message +\r\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Canvas = Canvas;\r\nclass SceneCanvas extends Canvas {\r\n    constructor(config = { width: 0, height: 0, willReadFrequently: false }) {\r\n        super(config);\r\n        this.context = new Context_1.SceneContext(this, {\r\n            willReadFrequently: config.willReadFrequently,\r\n        });\r\n        this.setSize(config.width, config.height);\r\n    }\r\n}\r\nexports.SceneCanvas = SceneCanvas;\r\nclass HitCanvas extends Canvas {\r\n    constructor(config = { width: 0, height: 0 }) {\r\n        super(config);\r\n        this.hitCanvas = true;\r\n        this.context = new Context_1.HitContext(this);\r\n        this.setSize(config.width, config.height);\r\n    }\r\n}\r\nexports.HitCanvas = HitCanvas;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DD = void 0;\r\nconst Global_1 = require(\"./Global\");\r\nconst Util_1 = require(\"./Util\");\r\nexports.DD = {\r\n    get isDragging() {\r\n        let flag = false;\r\n        exports.DD._dragElements.forEach((elem) => {\r\n            if (elem.dragStatus === 'dragging') {\r\n                flag = true;\r\n            }\r\n        });\r\n        return flag;\r\n    },\r\n    justDragged: false,\r\n    get node() {\r\n        let node;\r\n        exports.DD._dragElements.forEach((elem) => {\r\n            node = elem.node;\r\n        });\r\n        return node;\r\n    },\r\n    _dragElements: new Map(),\r\n    _drag(evt) {\r\n        const nodesToFireEvents = [];\r\n        exports.DD._dragElements.forEach((elem, key) => {\r\n            const { node } = elem;\r\n            const stage = node.getStage();\r\n            stage.setPointersPositions(evt);\r\n            if (elem.pointerId === undefined) {\r\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\r\n            }\r\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\r\n            if (!pos) {\r\n                return;\r\n            }\r\n            if (elem.dragStatus !== 'dragging') {\r\n                const dragDistance = node.dragDistance();\r\n                const distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\r\n                if (distance < dragDistance) {\r\n                    return;\r\n                }\r\n                node.startDrag({ evt });\r\n                if (!node.isDragging()) {\r\n                    return;\r\n                }\r\n            }\r\n            node._setDragPosition(evt, elem);\r\n            nodesToFireEvents.push(node);\r\n        });\r\n        nodesToFireEvents.forEach((node) => {\r\n            node.fire('dragmove', {\r\n                type: 'dragmove',\r\n                target: node,\r\n                evt: evt,\r\n            }, true);\r\n        });\r\n    },\r\n    _endDragBefore(evt) {\r\n        const drawNodes = [];\r\n        exports.DD._dragElements.forEach((elem) => {\r\n            const { node } = elem;\r\n            const stage = node.getStage();\r\n            if (evt) {\r\n                stage.setPointersPositions(evt);\r\n            }\r\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\r\n            if (!pos) {\r\n                return;\r\n            }\r\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\r\n                exports.DD.justDragged = true;\r\n                Global_1.Konva._mouseListenClick = false;\r\n                Global_1.Konva._touchListenClick = false;\r\n                Global_1.Konva._pointerListenClick = false;\r\n                elem.dragStatus = 'stopped';\r\n            }\r\n            const drawNode = elem.node.getLayer() ||\r\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\r\n            if (drawNode && drawNodes.indexOf(drawNode) === -1) {\r\n                drawNodes.push(drawNode);\r\n            }\r\n        });\r\n        drawNodes.forEach((drawNode) => {\r\n            drawNode.draw();\r\n        });\r\n    },\r\n    _endDragAfter(evt) {\r\n        exports.DD._dragElements.forEach((elem, key) => {\r\n            if (elem.dragStatus === 'stopped') {\r\n                elem.node.fire('dragend', {\r\n                    type: 'dragend',\r\n                    target: elem.node,\r\n                    evt: evt,\r\n                }, true);\r\n            }\r\n            if (elem.dragStatus !== 'dragging') {\r\n                exports.DD._dragElements.delete(key);\r\n            }\r\n        });\r\n    },\r\n};\r\nif (Global_1.Konva.isBrowser) {\r\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\r\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\r\n    window.addEventListener('touchcancel', exports.DD._endDragBefore, true);\r\n    window.addEventListener('mousemove', exports.DD._drag);\r\n    window.addEventListener('touchmove', exports.DD._drag);\r\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\r\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\r\n    window.addEventListener('touchcancel', exports.DD._endDragAfter, false);\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RGBComponent = RGBComponent;\r\nexports.alphaComponent = alphaComponent;\r\nexports.getNumberValidator = getNumberValidator;\r\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\r\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\r\nexports.getStringValidator = getStringValidator;\r\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\r\nexports.getFunctionValidator = getFunctionValidator;\r\nexports.getNumberArrayValidator = getNumberArrayValidator;\r\nexports.getBooleanValidator = getBooleanValidator;\r\nexports.getComponentValidator = getComponentValidator;\r\nconst Global_1 = require(\"./Global\");\r\nconst Util_1 = require(\"./Util\");\r\nfunction _formatValue(val) {\r\n    if (Util_1.Util._isString(val)) {\r\n        return '\"' + val + '\"';\r\n    }\r\n    if (Object.prototype.toString.call(val) === '[object Number]') {\r\n        return val;\r\n    }\r\n    if (Util_1.Util._isBoolean(val)) {\r\n        return val;\r\n    }\r\n    return Object.prototype.toString.call(val);\r\n}\r\nfunction RGBComponent(val) {\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    return Math.round(val);\r\n}\r\nfunction alphaComponent(val) {\r\n    if (val > 1) {\r\n        return 1;\r\n    }\r\n    else if (val < 0.0001) {\r\n        return 0.0001;\r\n    }\r\n    return val;\r\n}\r\nfunction getNumberValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util._isNumber(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            let isNumber = Util_1.Util._isNumber(val);\r\n            let isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\r\n            if (!isNumber && !isValidArray) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number or Array<number>(' +\r\n                    noOfElements +\r\n                    ')');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getNumberOrAutoValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            const isNumber = Util_1.Util._isNumber(val);\r\n            const isAuto = val === 'auto';\r\n            if (!(isNumber || isAuto)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number or \"auto\".');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getStringValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util._isString(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a string.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getStringOrGradientValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            const isString = Util_1.Util._isString(val);\r\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\r\n                (val && val['addColorStop']);\r\n            if (!(isString || isGradient)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a string or a native gradient.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getFunctionValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util._isFunction(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a function.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getNumberArrayValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\r\n            if (TypedArray && val instanceof TypedArray) {\r\n                return val;\r\n            }\r\n            if (!Util_1.Util._isArray(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a array of numbers.');\r\n            }\r\n            else {\r\n                val.forEach(function (item) {\r\n                    if (!Util_1.Util._isNumber(item)) {\r\n                        Util_1.Util.warn('\"' +\r\n                            attr +\r\n                            '\" attribute has non numeric element ' +\r\n                            item +\r\n                            '. Make sure that all elements are numbers.');\r\n                    }\r\n                });\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getBooleanValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            const isBool = val === true || val === false;\r\n            if (!isBool) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a boolean.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nfunction getComponentValidator(components) {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (val === undefined || val === null) {\r\n                return val;\r\n            }\r\n            if (!Util_1.Util.isObject(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be an object with properties ' +\r\n                    components);\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Factory = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Validators_1 = require(\"./Validators\");\r\nconst GET = 'get';\r\nconst SET = 'set';\r\nexports.Factory = {\r\n    addGetterSetter(constructor, attr, def, validator, after) {\r\n        exports.Factory.addGetter(constructor, attr, def);\r\n        exports.Factory.addSetter(constructor, attr, validator, after);\r\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\r\n    },\r\n    addGetter(constructor, attr, def) {\r\n        const method = GET + Util_1.Util._capitalize(attr);\r\n        constructor.prototype[method] =\r\n            constructor.prototype[method] ||\r\n                function () {\r\n                    const val = this.attrs[attr];\r\n                    return val === undefined ? def : val;\r\n                };\r\n    },\r\n    addSetter(constructor, attr, validator, after) {\r\n        const method = SET + Util_1.Util._capitalize(attr);\r\n        if (!constructor.prototype[method]) {\r\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\r\n        }\r\n    },\r\n    overWriteSetter(constructor, attr, validator, after) {\r\n        const method = SET + Util_1.Util._capitalize(attr);\r\n        constructor.prototype[method] = function (val) {\r\n            if (validator && val !== undefined && val !== null) {\r\n                val = validator.call(this, val, attr);\r\n            }\r\n            this._setAttr(attr, val);\r\n            if (after) {\r\n                after.call(this);\r\n            }\r\n            return this;\r\n        };\r\n    },\r\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\r\n        const len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr);\r\n        constructor.prototype[getter] = function () {\r\n            const ret = {};\r\n            for (let n = 0; n < len; n++) {\r\n                const component = components[n];\r\n                ret[component] = this.getAttr(attr + capitalize(component));\r\n            }\r\n            return ret;\r\n        };\r\n        const basicValidator = (0, Validators_1.getComponentValidator)(components);\r\n        constructor.prototype[setter] = function (val) {\r\n            const oldVal = this.attrs[attr];\r\n            if (validator) {\r\n                val = validator.call(this, val, attr);\r\n            }\r\n            if (basicValidator) {\r\n                basicValidator.call(this, val, attr);\r\n            }\r\n            for (const key in val) {\r\n                if (!val.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                this._setAttr(attr + capitalize(key), val[key]);\r\n            }\r\n            if (!val) {\r\n                components.forEach((component) => {\r\n                    this._setAttr(attr + capitalize(component), undefined);\r\n                });\r\n            }\r\n            this._fireChangeEvent(attr, oldVal, val);\r\n            if (after) {\r\n                after.call(this);\r\n            }\r\n            return this;\r\n        };\r\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\r\n    },\r\n    addOverloadedGetterSetter(constructor, attr) {\r\n        const capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\r\n        constructor.prototype[attr] = function () {\r\n            if (arguments.length) {\r\n                this[setter](arguments[0]);\r\n                return this;\r\n            }\r\n            return this[getter]();\r\n        };\r\n    },\r\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\r\n        Util_1.Util.error('Adding deprecated ' + attr);\r\n        const method = GET + Util_1.Util._capitalize(attr);\r\n        const message = attr +\r\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\r\n        constructor.prototype[method] = function () {\r\n            Util_1.Util.error(message);\r\n            const val = this.attrs[attr];\r\n            return val === undefined ? def : val;\r\n        };\r\n        exports.Factory.addSetter(constructor, attr, validator, function () {\r\n            Util_1.Util.error(message);\r\n        });\r\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\r\n    },\r\n    backCompat(constructor, methods) {\r\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\r\n            const method = constructor.prototype[newMethodName];\r\n            const oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\r\n            const oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\r\n            function deprecated() {\r\n                method.apply(this, arguments);\r\n                Util_1.Util.error('\"' +\r\n                    oldMethodName +\r\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\r\n                    newMethodName +\r\n                    '\" instead.');\r\n            }\r\n            constructor.prototype[oldMethodName] = deprecated;\r\n            constructor.prototype[oldGetter] = deprecated;\r\n            constructor.prototype[oldSetter] = deprecated;\r\n        });\r\n    },\r\n    afterSetFilter() {\r\n        this._filterUpToDate = false;\r\n    },\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Node = void 0;\r\nconst Canvas_1 = require(\"./Canvas\");\r\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\r\nconst Factory_1 = require(\"./Factory\");\r\nconst Global_1 = require(\"./Global\");\r\nconst Util_1 = require(\"./Util\");\r\nconst Validators_1 = require(\"./Validators\");\r\nconst ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', POINTERENTER = 'pointerenter', POINTERLEAVE = 'pointerleave', TOUCHENTER = 'touchenter', TOUCHLEAVE = 'touchleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\r\n    'xChange.konva',\r\n    'yChange.konva',\r\n    'scaleXChange.konva',\r\n    'scaleYChange.konva',\r\n    'skewXChange.konva',\r\n    'skewYChange.konva',\r\n    'rotationChange.konva',\r\n    'offsetXChange.konva',\r\n    'offsetYChange.konva',\r\n    'transformsEnabledChange.konva',\r\n].join(SPACE);\r\nlet idCounter = 1;\r\nclass Node {\r\n    constructor(config) {\r\n        this._id = idCounter++;\r\n        this.eventListeners = {};\r\n        this.attrs = {};\r\n        this.index = 0;\r\n        this._allEventListeners = null;\r\n        this.parent = null;\r\n        this._cache = new Map();\r\n        this._attachedDepsListeners = new Map();\r\n        this._lastPos = null;\r\n        this._batchingTransformChange = false;\r\n        this._needClearTransformCache = false;\r\n        this._filterUpToDate = false;\r\n        this._isUnderCache = false;\r\n        this._dragEventId = null;\r\n        this._shouldFireChangeEvents = false;\r\n        this.setAttrs(config);\r\n        this._shouldFireChangeEvents = true;\r\n    }\r\n    hasChildren() {\r\n        return false;\r\n    }\r\n    _clearCache(attr) {\r\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\r\n            this._cache.get(attr)) {\r\n            this._cache.get(attr).dirty = true;\r\n        }\r\n        else if (attr) {\r\n            this._cache.delete(attr);\r\n        }\r\n        else {\r\n            this._cache.clear();\r\n        }\r\n    }\r\n    _getCache(attr, privateGetter) {\r\n        let cache = this._cache.get(attr);\r\n        const isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\r\n        const invalid = cache === undefined || (isTransform && cache.dirty === true);\r\n        if (invalid) {\r\n            cache = privateGetter.call(this);\r\n            this._cache.set(attr, cache);\r\n        }\r\n        return cache;\r\n    }\r\n    _calculate(name, deps, getter) {\r\n        if (!this._attachedDepsListeners.get(name)) {\r\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\r\n            this.on(depsString, () => {\r\n                this._clearCache(name);\r\n            });\r\n            this._attachedDepsListeners.set(name, true);\r\n        }\r\n        return this._getCache(name, getter);\r\n    }\r\n    _getCanvasCache() {\r\n        return this._cache.get(CANVAS);\r\n    }\r\n    _clearSelfAndDescendantCache(attr) {\r\n        this._clearCache(attr);\r\n        if (attr === ABSOLUTE_TRANSFORM) {\r\n            this.fire('absoluteTransformChange');\r\n        }\r\n    }\r\n    clearCache() {\r\n        if (this._cache.has(CANVAS)) {\r\n            const { scene, filter, hit, buffer } = this._cache.get(CANVAS);\r\n            Util_1.Util.releaseCanvas(scene, filter, hit, buffer);\r\n            this._cache.delete(CANVAS);\r\n        }\r\n        this._clearSelfAndDescendantCache();\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    cache(config) {\r\n        const conf = config || {};\r\n        let rect = {};\r\n        if (conf.x === undefined ||\r\n            conf.y === undefined ||\r\n            conf.width === undefined ||\r\n            conf.height === undefined) {\r\n            rect = this.getClientRect({\r\n                skipTransform: true,\r\n                relativeTo: this.getParent() || undefined,\r\n            });\r\n        }\r\n        let width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\r\n        if (!width || !height) {\r\n            Util_1.Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\r\n            return;\r\n        }\r\n        const extraPaddingX = Math.abs(Math.round(rect.x) - x) > 0.5 ? 1 : 0;\r\n        const extraPaddingY = Math.abs(Math.round(rect.y) - y) > 0.5 ? 1 : 0;\r\n        width += offset * 2 + extraPaddingX;\r\n        height += offset * 2 + extraPaddingY;\r\n        x -= offset;\r\n        y -= offset;\r\n        const cachedSceneCanvas = new Canvas_1.SceneCanvas({\r\n            pixelRatio: pixelRatio,\r\n            width: width,\r\n            height: height,\r\n        }), cachedFilterCanvas = new Canvas_1.SceneCanvas({\r\n            pixelRatio: pixelRatio,\r\n            width: 0,\r\n            height: 0,\r\n            willReadFrequently: true,\r\n        }), cachedHitCanvas = new Canvas_1.HitCanvas({\r\n            pixelRatio: hitCanvasPixelRatio,\r\n            width: width,\r\n            height: height,\r\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\r\n        const bufferCanvas = new Canvas_1.SceneCanvas({\r\n            width: cachedSceneCanvas.width / cachedSceneCanvas.pixelRatio + Math.abs(x),\r\n            height: cachedSceneCanvas.height / cachedSceneCanvas.pixelRatio + Math.abs(y),\r\n            pixelRatio: cachedSceneCanvas.pixelRatio,\r\n        }), bufferContext = bufferCanvas.getContext();\r\n        cachedHitCanvas.isCache = true;\r\n        cachedSceneCanvas.isCache = true;\r\n        this._cache.delete(CANVAS);\r\n        this._filterUpToDate = false;\r\n        if (conf.imageSmoothingEnabled === false) {\r\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\r\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\r\n        }\r\n        sceneContext.save();\r\n        hitContext.save();\r\n        bufferContext.save();\r\n        sceneContext.translate(-x, -y);\r\n        hitContext.translate(-x, -y);\r\n        bufferContext.translate(-x, -y);\r\n        bufferCanvas.x = x;\r\n        bufferCanvas.y = y;\r\n        this._isUnderCache = true;\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\r\n        this.drawScene(cachedSceneCanvas, this, bufferCanvas);\r\n        this.drawHit(cachedHitCanvas, this);\r\n        this._isUnderCache = false;\r\n        sceneContext.restore();\r\n        hitContext.restore();\r\n        if (drawBorder) {\r\n            sceneContext.save();\r\n            sceneContext.beginPath();\r\n            sceneContext.rect(0, 0, width, height);\r\n            sceneContext.closePath();\r\n            sceneContext.setAttr('strokeStyle', 'red');\r\n            sceneContext.setAttr('lineWidth', 5);\r\n            sceneContext.stroke();\r\n            sceneContext.restore();\r\n        }\r\n        this._cache.set(CANVAS, {\r\n            scene: cachedSceneCanvas,\r\n            filter: cachedFilterCanvas,\r\n            hit: cachedHitCanvas,\r\n            buffer: bufferCanvas,\r\n            x: x,\r\n            y: y,\r\n        });\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    isCached() {\r\n        return this._cache.has(CANVAS);\r\n    }\r\n    getClientRect(config) {\r\n        throw new Error('abstract \"getClientRect\" method call');\r\n    }\r\n    _transformedRect(rect, top) {\r\n        const points = [\r\n            { x: rect.x, y: rect.y },\r\n            { x: rect.x + rect.width, y: rect.y },\r\n            { x: rect.x + rect.width, y: rect.y + rect.height },\r\n            { x: rect.x, y: rect.y + rect.height },\r\n        ];\r\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n        const trans = this.getAbsoluteTransform(top);\r\n        points.forEach(function (point) {\r\n            const transformed = trans.point(point);\r\n            if (minX === undefined) {\r\n                minX = maxX = transformed.x;\r\n                minY = maxY = transformed.y;\r\n            }\r\n            minX = Math.min(minX, transformed.x);\r\n            minY = Math.min(minY, transformed.y);\r\n            maxX = Math.max(maxX, transformed.x);\r\n            maxY = Math.max(maxY, transformed.y);\r\n        });\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    }\r\n    _drawCachedSceneCanvas(context) {\r\n        context.save();\r\n        context._applyOpacity(this);\r\n        context._applyGlobalCompositeOperation(this);\r\n        const canvasCache = this._getCanvasCache();\r\n        context.translate(canvasCache.x, canvasCache.y);\r\n        const cacheCanvas = this._getCachedSceneCanvas();\r\n        const ratio = cacheCanvas.pixelRatio;\r\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\r\n        context.restore();\r\n    }\r\n    _drawCachedHitCanvas(context) {\r\n        const canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\r\n        context.save();\r\n        context.translate(canvasCache.x, canvasCache.y);\r\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\r\n        context.restore();\r\n    }\r\n    _getCachedSceneCanvas() {\r\n        let filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\r\n        if (filters) {\r\n            if (!this._filterUpToDate) {\r\n                const ratio = sceneCanvas.pixelRatio;\r\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\r\n                try {\r\n                    len = filters.length;\r\n                    filterContext.clear();\r\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\r\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\r\n                    for (n = 0; n < len; n++) {\r\n                        filter = filters[n];\r\n                        if (typeof filter !== 'function') {\r\n                            Util_1.Util.error('Filter should be type of function, but got ' +\r\n                                typeof filter +\r\n                                ' instead. Please check correct filters');\r\n                            continue;\r\n                        }\r\n                        filter.call(this, imageData);\r\n                        filterContext.putImageData(imageData, 0, 0);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    Util_1.Util.error('Unable to apply filter. ' +\r\n                        e.message +\r\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\r\n                }\r\n                this._filterUpToDate = true;\r\n            }\r\n            return filterCanvas;\r\n        }\r\n        return sceneCanvas;\r\n    }\r\n    on(evtStr, handler) {\r\n        if (this._cache) {\r\n            this._cache.delete(ALL_LISTENERS);\r\n        }\r\n        if (arguments.length === 3) {\r\n            return this._delegate.apply(this, arguments);\r\n        }\r\n        const events = evtStr.split(SPACE);\r\n        for (let n = 0; n < events.length; n++) {\r\n            const event = events[n];\r\n            const parts = event.split('.');\r\n            const baseEvent = parts[0];\r\n            const name = parts[1] || '';\r\n            if (!this.eventListeners[baseEvent]) {\r\n                this.eventListeners[baseEvent] = [];\r\n            }\r\n            this.eventListeners[baseEvent].push({ name, handler });\r\n        }\r\n        return this;\r\n    }\r\n    off(evtStr, callback) {\r\n        let events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\r\n        this._cache && this._cache.delete(ALL_LISTENERS);\r\n        if (!evtStr) {\r\n            for (t in this.eventListeners) {\r\n                this._off(t);\r\n            }\r\n        }\r\n        for (n = 0; n < len; n++) {\r\n            event = events[n];\r\n            parts = event.split('.');\r\n            baseEvent = parts[0];\r\n            name = parts[1];\r\n            if (baseEvent) {\r\n                if (this.eventListeners[baseEvent]) {\r\n                    this._off(baseEvent, name, callback);\r\n                }\r\n            }\r\n            else {\r\n                for (t in this.eventListeners) {\r\n                    this._off(t, name, callback);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    dispatchEvent(evt) {\r\n        const e = {\r\n            target: this,\r\n            type: evt.type,\r\n            evt: evt,\r\n        };\r\n        this.fire(evt.type, e);\r\n        return this;\r\n    }\r\n    addEventListener(type, handler) {\r\n        this.on(type, function (evt) {\r\n            handler.call(this, evt.evt);\r\n        });\r\n        return this;\r\n    }\r\n    removeEventListener(type) {\r\n        this.off(type);\r\n        return this;\r\n    }\r\n    _delegate(event, selector, handler) {\r\n        const stopNode = this;\r\n        this.on(event, function (evt) {\r\n            const targets = evt.target.findAncestors(selector, true, stopNode);\r\n            for (let i = 0; i < targets.length; i++) {\r\n                evt = Util_1.Util.cloneObject(evt);\r\n                evt.currentTarget = targets[i];\r\n                handler.call(targets[i], evt);\r\n            }\r\n        });\r\n    }\r\n    remove() {\r\n        if (this.isDragging()) {\r\n            this.stopDrag();\r\n        }\r\n        DragAndDrop_1.DD._dragElements.delete(this._id);\r\n        this._remove();\r\n        return this;\r\n    }\r\n    _clearCaches() {\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\r\n        this._clearSelfAndDescendantCache(STAGE);\r\n        this._clearSelfAndDescendantCache(VISIBLE);\r\n        this._clearSelfAndDescendantCache(LISTENING);\r\n    }\r\n    _remove() {\r\n        this._clearCaches();\r\n        const parent = this.getParent();\r\n        if (parent && parent.children) {\r\n            parent.children.splice(this.index, 1);\r\n            parent._setChildrenIndices();\r\n            this.parent = null;\r\n        }\r\n    }\r\n    destroy() {\r\n        this.remove();\r\n        this.clearCache();\r\n        return this;\r\n    }\r\n    getAttr(attr) {\r\n        const method = 'get' + Util_1.Util._capitalize(attr);\r\n        if (Util_1.Util._isFunction(this[method])) {\r\n            return this[method]();\r\n        }\r\n        return this.attrs[attr];\r\n    }\r\n    getAncestors() {\r\n        let parent = this.getParent(), ancestors = [];\r\n        while (parent) {\r\n            ancestors.push(parent);\r\n            parent = parent.getParent();\r\n        }\r\n        return ancestors;\r\n    }\r\n    getAttrs() {\r\n        return (this.attrs || {});\r\n    }\r\n    setAttrs(config) {\r\n        this._batchTransformChanges(() => {\r\n            let key, method;\r\n            if (!config) {\r\n                return this;\r\n            }\r\n            for (key in config) {\r\n                if (key === CHILDREN) {\r\n                    continue;\r\n                }\r\n                method = SET + Util_1.Util._capitalize(key);\r\n                if (Util_1.Util._isFunction(this[method])) {\r\n                    this[method](config[key]);\r\n                }\r\n                else {\r\n                    this._setAttr(key, config[key]);\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    isListening() {\r\n        return this._getCache(LISTENING, this._isListening);\r\n    }\r\n    _isListening(relativeTo) {\r\n        const listening = this.listening();\r\n        if (!listening) {\r\n            return false;\r\n        }\r\n        const parent = this.getParent();\r\n        if (parent && parent !== relativeTo && this !== relativeTo) {\r\n            return parent._isListening(relativeTo);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    isVisible() {\r\n        return this._getCache(VISIBLE, this._isVisible);\r\n    }\r\n    _isVisible(relativeTo) {\r\n        const visible = this.visible();\r\n        if (!visible) {\r\n            return false;\r\n        }\r\n        const parent = this.getParent();\r\n        if (parent && parent !== relativeTo && this !== relativeTo) {\r\n            return parent._isVisible(relativeTo);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    shouldDrawHit(top, skipDragCheck = false) {\r\n        if (top) {\r\n            return this._isVisible(top) && this._isListening(top);\r\n        }\r\n        const layer = this.getLayer();\r\n        let layerUnderDrag = false;\r\n        DragAndDrop_1.DD._dragElements.forEach((elem) => {\r\n            if (elem.dragStatus !== 'dragging') {\r\n                return;\r\n            }\r\n            else if (elem.node.nodeType === 'Stage') {\r\n                layerUnderDrag = true;\r\n            }\r\n            else if (elem.node.getLayer() === layer) {\r\n                layerUnderDrag = true;\r\n            }\r\n        });\r\n        const dragSkip = !skipDragCheck &&\r\n            !Global_1.Konva.hitOnDragEnabled &&\r\n            (layerUnderDrag || Global_1.Konva.isTransforming());\r\n        return this.isListening() && this.isVisible() && !dragSkip;\r\n    }\r\n    show() {\r\n        this.visible(true);\r\n        return this;\r\n    }\r\n    hide() {\r\n        this.visible(false);\r\n        return this;\r\n    }\r\n    getZIndex() {\r\n        return this.index || 0;\r\n    }\r\n    getAbsoluteZIndex() {\r\n        let depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\r\n        function addChildren(children) {\r\n            nodes = [];\r\n            len = children.length;\r\n            for (n = 0; n < len; n++) {\r\n                child = children[n];\r\n                index++;\r\n                if (child.nodeType !== SHAPE) {\r\n                    nodes = nodes.concat(child.getChildren().slice());\r\n                }\r\n                if (child._id === that._id) {\r\n                    n = len;\r\n                }\r\n            }\r\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\r\n                addChildren(nodes);\r\n            }\r\n        }\r\n        const stage = this.getStage();\r\n        if (that.nodeType !== UPPER_STAGE && stage) {\r\n            addChildren(stage.getChildren());\r\n        }\r\n        return index;\r\n    }\r\n    getDepth() {\r\n        let depth = 0, parent = this.parent;\r\n        while (parent) {\r\n            depth++;\r\n            parent = parent.parent;\r\n        }\r\n        return depth;\r\n    }\r\n    _batchTransformChanges(func) {\r\n        this._batchingTransformChange = true;\r\n        func();\r\n        this._batchingTransformChange = false;\r\n        if (this._needClearTransformCache) {\r\n            this._clearCache(TRANSFORM);\r\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        }\r\n        this._needClearTransformCache = false;\r\n    }\r\n    setPosition(pos) {\r\n        this._batchTransformChanges(() => {\r\n            this.x(pos.x);\r\n            this.y(pos.y);\r\n        });\r\n        return this;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            x: this.x(),\r\n            y: this.y(),\r\n        };\r\n    }\r\n    getRelativePointerPosition() {\r\n        const stage = this.getStage();\r\n        if (!stage) {\r\n            return null;\r\n        }\r\n        const pos = stage.getPointerPosition();\r\n        if (!pos) {\r\n            return null;\r\n        }\r\n        const transform = this.getAbsoluteTransform().copy();\r\n        transform.invert();\r\n        return transform.point(pos);\r\n    }\r\n    getAbsolutePosition(top) {\r\n        let haveCachedParent = false;\r\n        let parent = this.parent;\r\n        while (parent) {\r\n            if (parent.isCached()) {\r\n                haveCachedParent = true;\r\n                break;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        if (haveCachedParent && !top) {\r\n            top = true;\r\n        }\r\n        const absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Util_1.Transform(), offset = this.offset();\r\n        absoluteTransform.m = absoluteMatrix.slice();\r\n        absoluteTransform.translate(offset.x, offset.y);\r\n        return absoluteTransform.getTranslation();\r\n    }\r\n    setAbsolutePosition(pos) {\r\n        const { x, y, ...origTrans } = this._clearTransform();\r\n        this.attrs.x = x;\r\n        this.attrs.y = y;\r\n        this._clearCache(TRANSFORM);\r\n        const it = this._getAbsoluteTransform().copy();\r\n        it.invert();\r\n        it.translate(pos.x, pos.y);\r\n        pos = {\r\n            x: this.attrs.x + it.getTranslation().x,\r\n            y: this.attrs.y + it.getTranslation().y,\r\n        };\r\n        this._setTransform(origTrans);\r\n        this.setPosition({ x: pos.x, y: pos.y });\r\n        this._clearCache(TRANSFORM);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        return this;\r\n    }\r\n    _setTransform(trans) {\r\n        let key;\r\n        for (key in trans) {\r\n            this.attrs[key] = trans[key];\r\n        }\r\n    }\r\n    _clearTransform() {\r\n        const trans = {\r\n            x: this.x(),\r\n            y: this.y(),\r\n            rotation: this.rotation(),\r\n            scaleX: this.scaleX(),\r\n            scaleY: this.scaleY(),\r\n            offsetX: this.offsetX(),\r\n            offsetY: this.offsetY(),\r\n            skewX: this.skewX(),\r\n            skewY: this.skewY(),\r\n        };\r\n        this.attrs.x = 0;\r\n        this.attrs.y = 0;\r\n        this.attrs.rotation = 0;\r\n        this.attrs.scaleX = 1;\r\n        this.attrs.scaleY = 1;\r\n        this.attrs.offsetX = 0;\r\n        this.attrs.offsetY = 0;\r\n        this.attrs.skewX = 0;\r\n        this.attrs.skewY = 0;\r\n        return trans;\r\n    }\r\n    move(change) {\r\n        let changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\r\n        if (changeX !== undefined) {\r\n            x += changeX;\r\n        }\r\n        if (changeY !== undefined) {\r\n            y += changeY;\r\n        }\r\n        this.setPosition({ x: x, y: y });\r\n        return this;\r\n    }\r\n    _eachAncestorReverse(func, top) {\r\n        let family = [], parent = this.getParent(), len, n;\r\n        if (top && top._id === this._id) {\r\n            return;\r\n        }\r\n        family.unshift(this);\r\n        while (parent && (!top || parent._id !== top._id)) {\r\n            family.unshift(parent);\r\n            parent = parent.parent;\r\n        }\r\n        len = family.length;\r\n        for (n = 0; n < len; n++) {\r\n            func(family[n]);\r\n        }\r\n    }\r\n    rotate(theta) {\r\n        this.rotation(this.rotation() + theta);\r\n        return this;\r\n    }\r\n    moveToTop() {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveToTop function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index, len = this.parent.getChildren().length;\r\n        if (index < len - 1) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.push(this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveUp() {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveUp function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index, len = this.parent.getChildren().length;\r\n        if (index < len - 1) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.splice(index + 1, 0, this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveDown() {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveDown function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index;\r\n        if (index > 0) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.splice(index - 1, 0, this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveToBottom() {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveToBottom function is ignored.');\r\n            return false;\r\n        }\r\n        const index = this.index;\r\n        if (index > 0) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.unshift(this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    setZIndex(zIndex) {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. zIndex parameter is ignored.');\r\n            return this;\r\n        }\r\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\r\n            Util_1.Util.warn('Unexpected value ' +\r\n                zIndex +\r\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\r\n                (this.parent.children.length - 1) +\r\n                '.');\r\n        }\r\n        const index = this.index;\r\n        this.parent.children.splice(index, 1);\r\n        this.parent.children.splice(zIndex, 0, this);\r\n        this.parent._setChildrenIndices();\r\n        return this;\r\n    }\r\n    getAbsoluteOpacity() {\r\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\r\n    }\r\n    _getAbsoluteOpacity() {\r\n        let absOpacity = this.opacity();\r\n        const parent = this.getParent();\r\n        if (parent && !parent._isUnderCache) {\r\n            absOpacity *= parent.getAbsoluteOpacity();\r\n        }\r\n        return absOpacity;\r\n    }\r\n    moveTo(newContainer) {\r\n        if (this.getParent() !== newContainer) {\r\n            this._remove();\r\n            newContainer.add(this);\r\n        }\r\n        return this;\r\n    }\r\n    toObject() {\r\n        let attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\r\n        const obj = {\r\n            attrs: {},\r\n            className: this.getClassName(),\r\n        };\r\n        for (key in attrs) {\r\n            val = attrs[key];\r\n            nonPlainObject =\r\n                Util_1.Util.isObject(val) && !Util_1.Util._isPlainObject(val) && !Util_1.Util._isArray(val);\r\n            if (nonPlainObject) {\r\n                continue;\r\n            }\r\n            getter = typeof this[key] === 'function' && this[key];\r\n            delete attrs[key];\r\n            defaultValue = getter ? getter.call(this) : null;\r\n            attrs[key] = val;\r\n            if (defaultValue !== val) {\r\n                obj.attrs[key] = val;\r\n            }\r\n        }\r\n        return Util_1.Util._prepareToStringify(obj);\r\n    }\r\n    toJSON() {\r\n        return JSON.stringify(this.toObject());\r\n    }\r\n    getParent() {\r\n        return this.parent;\r\n    }\r\n    findAncestors(selector, includeSelf, stopNode) {\r\n        const res = [];\r\n        if (includeSelf && this._isMatch(selector)) {\r\n            res.push(this);\r\n        }\r\n        let ancestor = this.parent;\r\n        while (ancestor) {\r\n            if (ancestor === stopNode) {\r\n                return res;\r\n            }\r\n            if (ancestor._isMatch(selector)) {\r\n                res.push(ancestor);\r\n            }\r\n            ancestor = ancestor.parent;\r\n        }\r\n        return res;\r\n    }\r\n    isAncestorOf(node) {\r\n        return false;\r\n    }\r\n    findAncestor(selector, includeSelf, stopNode) {\r\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\r\n    }\r\n    _isMatch(selector) {\r\n        if (!selector) {\r\n            return false;\r\n        }\r\n        if (typeof selector === 'function') {\r\n            return selector(this);\r\n        }\r\n        let selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\r\n        for (n = 0; n < len; n++) {\r\n            sel = selectorArr[n];\r\n            if (!Util_1.Util.isValidSelector(sel)) {\r\n                Util_1.Util.warn('Selector \"' +\r\n                    sel +\r\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\r\n                Util_1.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\r\n                Util_1.Util.warn('Konva is awesome, right?');\r\n            }\r\n            if (sel.charAt(0) === '#') {\r\n                if (this.id() === sel.slice(1)) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (sel.charAt(0) === '.') {\r\n                if (this.hasName(sel.slice(1))) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (this.className === sel || this.nodeType === sel) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getLayer() {\r\n        const parent = this.getParent();\r\n        return parent ? parent.getLayer() : null;\r\n    }\r\n    getStage() {\r\n        return this._getCache(STAGE, this._getStage);\r\n    }\r\n    _getStage() {\r\n        const parent = this.getParent();\r\n        if (parent) {\r\n            return parent.getStage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    fire(eventType, evt = {}, bubble) {\r\n        evt.target = evt.target || this;\r\n        if (bubble) {\r\n            this._fireAndBubble(eventType, evt);\r\n        }\r\n        else {\r\n            this._fire(eventType, evt);\r\n        }\r\n        return this;\r\n    }\r\n    getAbsoluteTransform(top) {\r\n        if (top) {\r\n            return this._getAbsoluteTransform(top);\r\n        }\r\n        else {\r\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\r\n        }\r\n    }\r\n    _getAbsoluteTransform(top) {\r\n        let at;\r\n        if (top) {\r\n            at = new Util_1.Transform();\r\n            this._eachAncestorReverse(function (node) {\r\n                const transformsEnabled = node.transformsEnabled();\r\n                if (transformsEnabled === 'all') {\r\n                    at.multiply(node.getTransform());\r\n                }\r\n                else if (transformsEnabled === 'position') {\r\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\r\n                }\r\n            }, top);\r\n            return at;\r\n        }\r\n        else {\r\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Util_1.Transform();\r\n            if (this.parent) {\r\n                this.parent.getAbsoluteTransform().copyInto(at);\r\n            }\r\n            else {\r\n                at.reset();\r\n            }\r\n            const transformsEnabled = this.transformsEnabled();\r\n            if (transformsEnabled === 'all') {\r\n                at.multiply(this.getTransform());\r\n            }\r\n            else if (transformsEnabled === 'position') {\r\n                const x = this.attrs.x || 0;\r\n                const y = this.attrs.y || 0;\r\n                const offsetX = this.attrs.offsetX || 0;\r\n                const offsetY = this.attrs.offsetY || 0;\r\n                at.translate(x - offsetX, y - offsetY);\r\n            }\r\n            at.dirty = false;\r\n            return at;\r\n        }\r\n    }\r\n    getAbsoluteScale(top) {\r\n        let parent = this;\r\n        while (parent) {\r\n            if (parent._isUnderCache) {\r\n                top = parent;\r\n            }\r\n            parent = parent.getParent();\r\n        }\r\n        const transform = this.getAbsoluteTransform(top);\r\n        const attrs = transform.decompose();\r\n        return {\r\n            x: attrs.scaleX,\r\n            y: attrs.scaleY,\r\n        };\r\n    }\r\n    getAbsoluteRotation() {\r\n        return this.getAbsoluteTransform().decompose().rotation;\r\n    }\r\n    getTransform() {\r\n        return this._getCache(TRANSFORM, this._getTransform);\r\n    }\r\n    _getTransform() {\r\n        var _a, _b;\r\n        const m = this._cache.get(TRANSFORM) || new Util_1.Transform();\r\n        m.reset();\r\n        const x = this.x(), y = this.y(), rotation = Global_1.Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\r\n        if (x !== 0 || y !== 0) {\r\n            m.translate(x, y);\r\n        }\r\n        if (rotation !== 0) {\r\n            m.rotate(rotation);\r\n        }\r\n        if (skewX !== 0 || skewY !== 0) {\r\n            m.skew(skewX, skewY);\r\n        }\r\n        if (scaleX !== 1 || scaleY !== 1) {\r\n            m.scale(scaleX, scaleY);\r\n        }\r\n        if (offsetX !== 0 || offsetY !== 0) {\r\n            m.translate(-1 * offsetX, -1 * offsetY);\r\n        }\r\n        m.dirty = false;\r\n        return m;\r\n    }\r\n    clone(obj) {\r\n        let attrs = Util_1.Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\r\n        for (key in obj) {\r\n            attrs[key] = obj[key];\r\n        }\r\n        const node = new this.constructor(attrs);\r\n        for (key in this.eventListeners) {\r\n            allListeners = this.eventListeners[key];\r\n            len = allListeners.length;\r\n            for (n = 0; n < len; n++) {\r\n                listener = allListeners[n];\r\n                if (listener.name.indexOf(KONVA) < 0) {\r\n                    if (!node.eventListeners[key]) {\r\n                        node.eventListeners[key] = [];\r\n                    }\r\n                    node.eventListeners[key].push(listener);\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n    _toKonvaCanvas(config) {\r\n        config = config || {};\r\n        const box = this.getClientRect();\r\n        const stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new Canvas_1.SceneCanvas({\r\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\r\n            height: config.height ||\r\n                Math.ceil(box.height) ||\r\n                (stage ? stage.height() : 0),\r\n            pixelRatio: pixelRatio,\r\n        }), context = canvas.getContext();\r\n        const bufferCanvas = new Canvas_1.SceneCanvas({\r\n            width: canvas.width / canvas.pixelRatio + Math.abs(x),\r\n            height: canvas.height / canvas.pixelRatio + Math.abs(y),\r\n            pixelRatio: canvas.pixelRatio,\r\n        });\r\n        if (config.imageSmoothingEnabled === false) {\r\n            context._context.imageSmoothingEnabled = false;\r\n        }\r\n        context.save();\r\n        if (x || y) {\r\n            context.translate(-1 * x, -1 * y);\r\n        }\r\n        this.drawScene(canvas, undefined, bufferCanvas);\r\n        context.restore();\r\n        return canvas;\r\n    }\r\n    toCanvas(config) {\r\n        return this._toKonvaCanvas(config)._canvas;\r\n    }\r\n    toDataURL(config) {\r\n        config = config || {};\r\n        const mimeType = config.mimeType || null, quality = config.quality || null;\r\n        const url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\r\n        if (config.callback) {\r\n            config.callback(url);\r\n        }\r\n        return url;\r\n    }\r\n    toImage(config) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\r\n                if (callback)\r\n                    delete config.callback;\r\n                Util_1.Util._urlToImage(this.toDataURL(config), function (img) {\r\n                    resolve(img);\r\n                    callback === null || callback === void 0 ? void 0 : callback(img);\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    toBlob(config) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\r\n                if (callback)\r\n                    delete config.callback;\r\n                this.toCanvas(config).toBlob((blob) => {\r\n                    resolve(blob);\r\n                    callback === null || callback === void 0 ? void 0 : callback(blob);\r\n                }, config === null || config === void 0 ? void 0 : config.mimeType, config === null || config === void 0 ? void 0 : config.quality);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    setSize(size) {\r\n        this.width(size.width);\r\n        this.height(size.height);\r\n        return this;\r\n    }\r\n    getSize() {\r\n        return {\r\n            width: this.width(),\r\n            height: this.height(),\r\n        };\r\n    }\r\n    getClassName() {\r\n        return this.className || this.nodeType;\r\n    }\r\n    getType() {\r\n        return this.nodeType;\r\n    }\r\n    getDragDistance() {\r\n        if (this.attrs.dragDistance !== undefined) {\r\n            return this.attrs.dragDistance;\r\n        }\r\n        else if (this.parent) {\r\n            return this.parent.getDragDistance();\r\n        }\r\n        else {\r\n            return Global_1.Konva.dragDistance;\r\n        }\r\n    }\r\n    _off(type, name, callback) {\r\n        let evtListeners = this.eventListeners[type], i, evtName, handler;\r\n        for (i = 0; i < evtListeners.length; i++) {\r\n            evtName = evtListeners[i].name;\r\n            handler = evtListeners[i].handler;\r\n            if ((evtName !== 'konva' || name === 'konva') &&\r\n                (!name || evtName === name) &&\r\n                (!callback || callback === handler)) {\r\n                evtListeners.splice(i, 1);\r\n                if (evtListeners.length === 0) {\r\n                    delete this.eventListeners[type];\r\n                    break;\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    _fireChangeEvent(attr, oldVal, newVal) {\r\n        this._fire(attr + CHANGE, {\r\n            oldVal: oldVal,\r\n            newVal: newVal,\r\n        });\r\n    }\r\n    addName(name) {\r\n        if (!this.hasName(name)) {\r\n            const oldName = this.name();\r\n            const newName = oldName ? oldName + ' ' + name : name;\r\n            this.name(newName);\r\n        }\r\n        return this;\r\n    }\r\n    hasName(name) {\r\n        if (!name) {\r\n            return false;\r\n        }\r\n        const fullName = this.name();\r\n        if (!fullName) {\r\n            return false;\r\n        }\r\n        const names = (fullName || '').split(/\\s/g);\r\n        return names.indexOf(name) !== -1;\r\n    }\r\n    removeName(name) {\r\n        const names = (this.name() || '').split(/\\s/g);\r\n        const index = names.indexOf(name);\r\n        if (index !== -1) {\r\n            names.splice(index, 1);\r\n            this.name(names.join(' '));\r\n        }\r\n        return this;\r\n    }\r\n    setAttr(attr, val) {\r\n        const func = this[SET + Util_1.Util._capitalize(attr)];\r\n        if (Util_1.Util._isFunction(func)) {\r\n            func.call(this, val);\r\n        }\r\n        else {\r\n            this._setAttr(attr, val);\r\n        }\r\n        return this;\r\n    }\r\n    _requestDraw() {\r\n        if (Global_1.Konva.autoDrawEnabled) {\r\n            const drawNode = this.getLayer() || this.getStage();\r\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\r\n        }\r\n    }\r\n    _setAttr(key, val) {\r\n        const oldVal = this.attrs[key];\r\n        if (oldVal === val && !Util_1.Util.isObject(val)) {\r\n            return;\r\n        }\r\n        if (val === undefined || val === null) {\r\n            delete this.attrs[key];\r\n        }\r\n        else {\r\n            this.attrs[key] = val;\r\n        }\r\n        if (this._shouldFireChangeEvents) {\r\n            this._fireChangeEvent(key, oldVal, val);\r\n        }\r\n        this._requestDraw();\r\n    }\r\n    _setComponentAttr(key, component, val) {\r\n        let oldVal;\r\n        if (val !== undefined) {\r\n            oldVal = this.attrs[key];\r\n            if (!oldVal) {\r\n                this.attrs[key] = this.getAttr(key);\r\n            }\r\n            this.attrs[key][component] = val;\r\n            this._fireChangeEvent(key, oldVal, val);\r\n        }\r\n    }\r\n    _fireAndBubble(eventType, evt, compareShape) {\r\n        if (evt && this.nodeType === SHAPE) {\r\n            evt.target = this;\r\n        }\r\n        const nonBubbling = [\r\n            MOUSEENTER,\r\n            MOUSELEAVE,\r\n            POINTERENTER,\r\n            POINTERLEAVE,\r\n            TOUCHENTER,\r\n            TOUCHLEAVE,\r\n        ];\r\n        const shouldStop = nonBubbling.indexOf(eventType) !== -1 &&\r\n            ((compareShape &&\r\n                (this === compareShape ||\r\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\r\n                (this.nodeType === 'Stage' && !compareShape));\r\n        if (!shouldStop) {\r\n            this._fire(eventType, evt);\r\n            const stopBubble = nonBubbling.indexOf(eventType) !== -1 &&\r\n                compareShape &&\r\n                compareShape.isAncestorOf &&\r\n                compareShape.isAncestorOf(this) &&\r\n                !compareShape.isAncestorOf(this.parent);\r\n            if (((evt && !evt.cancelBubble) || !evt) &&\r\n                this.parent &&\r\n                this.parent.isListening() &&\r\n                !stopBubble) {\r\n                if (compareShape && compareShape.parent) {\r\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\r\n                }\r\n                else {\r\n                    this._fireAndBubble.call(this.parent, eventType, evt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getProtoListeners(eventType) {\r\n        var _a, _b, _c;\r\n        const allListeners = (_a = this._cache.get(ALL_LISTENERS)) !== null && _a !== void 0 ? _a : {};\r\n        let events = allListeners === null || allListeners === void 0 ? void 0 : allListeners[eventType];\r\n        if (events === undefined) {\r\n            events = [];\r\n            let obj = Object.getPrototypeOf(this);\r\n            while (obj) {\r\n                const hierarchyEvents = (_c = (_b = obj.eventListeners) === null || _b === void 0 ? void 0 : _b[eventType]) !== null && _c !== void 0 ? _c : [];\r\n                events.push(...hierarchyEvents);\r\n                obj = Object.getPrototypeOf(obj);\r\n            }\r\n            allListeners[eventType] = events;\r\n            this._cache.set(ALL_LISTENERS, allListeners);\r\n        }\r\n        return events;\r\n    }\r\n    _fire(eventType, evt) {\r\n        evt = evt || {};\r\n        evt.currentTarget = this;\r\n        evt.type = eventType;\r\n        const topListeners = this._getProtoListeners(eventType);\r\n        if (topListeners) {\r\n            for (let i = 0; i < topListeners.length; i++) {\r\n                topListeners[i].handler.call(this, evt);\r\n            }\r\n        }\r\n        const selfListeners = this.eventListeners[eventType];\r\n        if (selfListeners) {\r\n            for (let i = 0; i < selfListeners.length; i++) {\r\n                selfListeners[i].handler.call(this, evt);\r\n            }\r\n        }\r\n    }\r\n    draw() {\r\n        this.drawScene();\r\n        this.drawHit();\r\n        return this;\r\n    }\r\n    _createDragElement(evt) {\r\n        const pointerId = evt ? evt.pointerId : undefined;\r\n        const stage = this.getStage();\r\n        const ap = this.getAbsolutePosition();\r\n        if (!stage) {\r\n            return;\r\n        }\r\n        const pos = stage._getPointerById(pointerId) ||\r\n            stage._changedPointerPositions[0] ||\r\n            ap;\r\n        DragAndDrop_1.DD._dragElements.set(this._id, {\r\n            node: this,\r\n            startPointerPos: pos,\r\n            offset: {\r\n                x: pos.x - ap.x,\r\n                y: pos.y - ap.y,\r\n            },\r\n            dragStatus: 'ready',\r\n            pointerId,\r\n        });\r\n    }\r\n    startDrag(evt, bubbleEvent = true) {\r\n        if (!DragAndDrop_1.DD._dragElements.has(this._id)) {\r\n            this._createDragElement(evt);\r\n        }\r\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\r\n        elem.dragStatus = 'dragging';\r\n        this.fire('dragstart', {\r\n            type: 'dragstart',\r\n            target: this,\r\n            evt: evt && evt.evt,\r\n        }, bubbleEvent);\r\n    }\r\n    _setDragPosition(evt, elem) {\r\n        const pos = this.getStage()._getPointerById(elem.pointerId);\r\n        if (!pos) {\r\n            return;\r\n        }\r\n        let newNodePos = {\r\n            x: pos.x - elem.offset.x,\r\n            y: pos.y - elem.offset.y,\r\n        };\r\n        const dbf = this.dragBoundFunc();\r\n        if (dbf !== undefined) {\r\n            const bounded = dbf.call(this, newNodePos, evt);\r\n            if (!bounded) {\r\n                Util_1.Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\r\n            }\r\n            else {\r\n                newNodePos = bounded;\r\n            }\r\n        }\r\n        if (!this._lastPos ||\r\n            this._lastPos.x !== newNodePos.x ||\r\n            this._lastPos.y !== newNodePos.y) {\r\n            this.setAbsolutePosition(newNodePos);\r\n            this._requestDraw();\r\n        }\r\n        this._lastPos = newNodePos;\r\n    }\r\n    stopDrag(evt) {\r\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\r\n        if (elem) {\r\n            elem.dragStatus = 'stopped';\r\n        }\r\n        DragAndDrop_1.DD._endDragBefore(evt);\r\n        DragAndDrop_1.DD._endDragAfter(evt);\r\n    }\r\n    setDraggable(draggable) {\r\n        this._setAttr('draggable', draggable);\r\n        this._dragChange();\r\n    }\r\n    isDragging() {\r\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\r\n        return elem ? elem.dragStatus === 'dragging' : false;\r\n    }\r\n    _listenDrag() {\r\n        this._dragCleanup();\r\n        this.on('mousedown.konva touchstart.konva', function (evt) {\r\n            const shouldCheckButton = evt.evt['button'] !== undefined;\r\n            const canDrag = !shouldCheckButton || Global_1.Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\r\n            if (!canDrag) {\r\n                return;\r\n            }\r\n            if (this.isDragging()) {\r\n                return;\r\n            }\r\n            let hasDraggingChild = false;\r\n            DragAndDrop_1.DD._dragElements.forEach((elem) => {\r\n                if (this.isAncestorOf(elem.node)) {\r\n                    hasDraggingChild = true;\r\n                }\r\n            });\r\n            if (!hasDraggingChild) {\r\n                this._createDragElement(evt);\r\n            }\r\n        });\r\n    }\r\n    _dragChange() {\r\n        if (this.attrs.draggable) {\r\n            this._listenDrag();\r\n        }\r\n        else {\r\n            this._dragCleanup();\r\n            const stage = this.getStage();\r\n            if (!stage) {\r\n                return;\r\n            }\r\n            const dragElement = DragAndDrop_1.DD._dragElements.get(this._id);\r\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\r\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\r\n            if (isDragging) {\r\n                this.stopDrag();\r\n            }\r\n            else if (isReady) {\r\n                DragAndDrop_1.DD._dragElements.delete(this._id);\r\n            }\r\n        }\r\n    }\r\n    _dragCleanup() {\r\n        this.off('mousedown.konva');\r\n        this.off('touchstart.konva');\r\n    }\r\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\r\n        const stage = this.getStage();\r\n        if (!stage) {\r\n            return false;\r\n        }\r\n        const screenRect = {\r\n            x: -margin.x,\r\n            y: -margin.y,\r\n            width: stage.width() + 2 * margin.x,\r\n            height: stage.height() + 2 * margin.y,\r\n        };\r\n        return Util_1.Util.haveIntersection(screenRect, this.getClientRect());\r\n    }\r\n    static create(data, container) {\r\n        if (Util_1.Util._isString(data)) {\r\n            data = JSON.parse(data);\r\n        }\r\n        return this._createNode(data, container);\r\n    }\r\n    static _createNode(obj, container) {\r\n        let className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\r\n        if (container) {\r\n            obj.attrs.container = container;\r\n        }\r\n        if (!Global_1.Konva[className]) {\r\n            Util_1.Util.warn('Can not find a node with class name \"' +\r\n                className +\r\n                '\". Fallback to \"Shape\".');\r\n            className = 'Shape';\r\n        }\r\n        const Class = Global_1.Konva[className];\r\n        no = new Class(obj.attrs);\r\n        if (children) {\r\n            len = children.length;\r\n            for (n = 0; n < len; n++) {\r\n                no.add(Node._createNode(children[n]));\r\n            }\r\n        }\r\n        return no;\r\n    }\r\n}\r\nexports.Node = Node;\r\nNode.prototype.nodeType = 'Node';\r\nNode.prototype._attrsAffectingSize = [];\r\nNode.prototype.eventListeners = {};\r\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\r\n    if (this._batchingTransformChange) {\r\n        this._needClearTransformCache = true;\r\n        return;\r\n    }\r\n    this._clearCache(TRANSFORM);\r\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(VISIBLE);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(LISTENING);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n});\r\nconst addGetterSetter = Factory_1.Factory.addGetterSetter;\r\naddGetterSetter(Node, 'zIndex');\r\naddGetterSetter(Node, 'absolutePosition');\r\naddGetterSetter(Node, 'position');\r\naddGetterSetter(Node, 'x', 0, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'y', 0, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', (0, Validators_1.getStringValidator)());\r\naddGetterSetter(Node, 'opacity', 1, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'name', '', (0, Validators_1.getStringValidator)());\r\naddGetterSetter(Node, 'id', '', (0, Validators_1.getStringValidator)());\r\naddGetterSetter(Node, 'rotation', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\r\naddGetterSetter(Node, 'scaleX', 1, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'scaleY', 1, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\r\naddGetterSetter(Node, 'skewX', 0, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'skewY', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\r\naddGetterSetter(Node, 'offsetX', 0, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'offsetY', 0, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'dragDistance', undefined, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'width', 0, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'height', 0, (0, Validators_1.getNumberValidator)());\r\naddGetterSetter(Node, 'listening', true, (0, Validators_1.getBooleanValidator)());\r\naddGetterSetter(Node, 'preventDefault', true, (0, Validators_1.getBooleanValidator)());\r\naddGetterSetter(Node, 'filters', undefined, function (val) {\r\n    this._filterUpToDate = false;\r\n    return val;\r\n});\r\naddGetterSetter(Node, 'visible', true, (0, Validators_1.getBooleanValidator)());\r\naddGetterSetter(Node, 'transformsEnabled', 'all', (0, Validators_1.getStringValidator)());\r\naddGetterSetter(Node, 'size');\r\naddGetterSetter(Node, 'dragBoundFunc');\r\naddGetterSetter(Node, 'draggable', false, (0, Validators_1.getBooleanValidator)());\r\nFactory_1.Factory.backCompat(Node, {\r\n    rotateDeg: 'rotate',\r\n    setRotationDeg: 'setRotation',\r\n    getRotationDeg: 'getRotation',\r\n});\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Container = void 0;\r\nconst Factory_1 = require(\"./Factory\");\r\nconst Node_1 = require(\"./Node\");\r\nconst Validators_1 = require(\"./Validators\");\r\nclass Container extends Node_1.Node {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.children = [];\r\n    }\r\n    getChildren(filterFunc) {\r\n        const children = this.children || [];\r\n        if (filterFunc) {\r\n            return children.filter(filterFunc);\r\n        }\r\n        return children;\r\n    }\r\n    hasChildren() {\r\n        return this.getChildren().length > 0;\r\n    }\r\n    removeChildren() {\r\n        this.getChildren().forEach((child) => {\r\n            child.parent = null;\r\n            child.index = 0;\r\n            child.remove();\r\n        });\r\n        this.children = [];\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    destroyChildren() {\r\n        this.getChildren().forEach((child) => {\r\n            child.parent = null;\r\n            child.index = 0;\r\n            child.destroy();\r\n        });\r\n        this.children = [];\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    add(...children) {\r\n        if (children.length === 0) {\r\n            return this;\r\n        }\r\n        if (children.length > 1) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                this.add(children[i]);\r\n            }\r\n            return this;\r\n        }\r\n        const child = children[0];\r\n        if (child.getParent()) {\r\n            child.moveTo(this);\r\n            return this;\r\n        }\r\n        this._validateAdd(child);\r\n        child.index = this.getChildren().length;\r\n        child.parent = this;\r\n        child._clearCaches();\r\n        this.getChildren().push(child);\r\n        this._fire('add', {\r\n            child: child,\r\n        });\r\n        this._requestDraw();\r\n        return this;\r\n    }\r\n    destroy() {\r\n        if (this.hasChildren()) {\r\n            this.destroyChildren();\r\n        }\r\n        super.destroy();\r\n        return this;\r\n    }\r\n    find(selector) {\r\n        return this._generalFind(selector, false);\r\n    }\r\n    findOne(selector) {\r\n        const result = this._generalFind(selector, true);\r\n        return result.length > 0 ? result[0] : undefined;\r\n    }\r\n    _generalFind(selector, findOne) {\r\n        const retArr = [];\r\n        this._descendants((node) => {\r\n            const valid = node._isMatch(selector);\r\n            if (valid) {\r\n                retArr.push(node);\r\n            }\r\n            if (valid && findOne) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return retArr;\r\n    }\r\n    _descendants(fn) {\r\n        let shouldStop = false;\r\n        const children = this.getChildren();\r\n        for (const child of children) {\r\n            shouldStop = fn(child);\r\n            if (shouldStop) {\r\n                return true;\r\n            }\r\n            if (!child.hasChildren()) {\r\n                continue;\r\n            }\r\n            shouldStop = child._descendants(fn);\r\n            if (shouldStop) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    toObject() {\r\n        const obj = Node_1.Node.prototype.toObject.call(this);\r\n        obj.children = [];\r\n        this.getChildren().forEach((child) => {\r\n            obj.children.push(child.toObject());\r\n        });\r\n        return obj;\r\n    }\r\n    isAncestorOf(node) {\r\n        let parent = node.getParent();\r\n        while (parent) {\r\n            if (parent._id === this._id) {\r\n                return true;\r\n            }\r\n            parent = parent.getParent();\r\n        }\r\n        return false;\r\n    }\r\n    clone(obj) {\r\n        const node = Node_1.Node.prototype.clone.call(this, obj);\r\n        this.getChildren().forEach(function (no) {\r\n            node.add(no.clone());\r\n        });\r\n        return node;\r\n    }\r\n    getAllIntersections(pos) {\r\n        const arr = [];\r\n        this.find('Shape').forEach((shape) => {\r\n            if (shape.isVisible() && shape.intersects(pos)) {\r\n                arr.push(shape);\r\n            }\r\n        });\r\n        return arr;\r\n    }\r\n    _clearSelfAndDescendantCache(attr) {\r\n        var _a;\r\n        super._clearSelfAndDescendantCache(attr);\r\n        if (this.isCached()) {\r\n            return;\r\n        }\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\r\n            node._clearSelfAndDescendantCache(attr);\r\n        });\r\n    }\r\n    _setChildrenIndices() {\r\n        var _a;\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\r\n            child.index = n;\r\n        });\r\n        this._requestDraw();\r\n    }\r\n    drawScene(can, top, bufferCanvas) {\r\n        const layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\r\n        const caching = canvas && canvas.isCache;\r\n        if (!this.isVisible() && !caching) {\r\n            return this;\r\n        }\r\n        if (cachedSceneCanvas) {\r\n            context.save();\r\n            const m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedSceneCanvas(context);\r\n            context.restore();\r\n        }\r\n        else {\r\n            this._drawChildren('drawScene', canvas, top, bufferCanvas);\r\n        }\r\n        return this;\r\n    }\r\n    drawHit(can, top) {\r\n        if (!this.shouldDrawHit(top)) {\r\n            return this;\r\n        }\r\n        const layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\r\n        if (cachedHitCanvas) {\r\n            context.save();\r\n            const m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedHitCanvas(context);\r\n            context.restore();\r\n        }\r\n        else {\r\n            this._drawChildren('drawHit', canvas, top);\r\n        }\r\n        return this;\r\n    }\r\n    _drawChildren(drawMethod, canvas, top, bufferCanvas) {\r\n        var _a;\r\n        const context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (typeof clipWidth === 'number' && typeof clipHeight === 'number') ||\r\n            clipFunc;\r\n        const selfCache = top === this;\r\n        if (hasClip) {\r\n            context.save();\r\n            const transform = this.getAbsoluteTransform(top);\r\n            let m = transform.getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            context.beginPath();\r\n            let clipArgs;\r\n            if (clipFunc) {\r\n                clipArgs = clipFunc.call(this, context, this);\r\n            }\r\n            else {\r\n                const clipX = this.clipX();\r\n                const clipY = this.clipY();\r\n                context.rect(clipX || 0, clipY || 0, clipWidth, clipHeight);\r\n            }\r\n            context.clip.apply(context, clipArgs);\r\n            m = transform.copy().invert().getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n        }\r\n        const hasComposition = !selfCache &&\r\n            this.globalCompositeOperation() !== 'source-over' &&\r\n            drawMethod === 'drawScene';\r\n        if (hasComposition) {\r\n            context.save();\r\n            context._applyGlobalCompositeOperation(this);\r\n        }\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\r\n            child[drawMethod](canvas, top, bufferCanvas);\r\n        });\r\n        if (hasComposition) {\r\n            context.restore();\r\n        }\r\n        if (hasClip) {\r\n            context.restore();\r\n        }\r\n    }\r\n    getClientRect(config = {}) {\r\n        var _a;\r\n        const skipTransform = config.skipTransform;\r\n        const relativeTo = config.relativeTo;\r\n        let minX, minY, maxX, maxY;\r\n        let selfRect = {\r\n            x: Infinity,\r\n            y: Infinity,\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n        const that = this;\r\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\r\n            if (!child.visible()) {\r\n                return;\r\n            }\r\n            const rect = child.getClientRect({\r\n                relativeTo: that,\r\n                skipShadow: config.skipShadow,\r\n                skipStroke: config.skipStroke,\r\n            });\r\n            if (rect.width === 0 && rect.height === 0) {\r\n                return;\r\n            }\r\n            if (minX === undefined) {\r\n                minX = rect.x;\r\n                minY = rect.y;\r\n                maxX = rect.x + rect.width;\r\n                maxY = rect.y + rect.height;\r\n            }\r\n            else {\r\n                minX = Math.min(minX, rect.x);\r\n                minY = Math.min(minY, rect.y);\r\n                maxX = Math.max(maxX, rect.x + rect.width);\r\n                maxY = Math.max(maxY, rect.y + rect.height);\r\n            }\r\n        });\r\n        const shapes = this.find('Shape');\r\n        let hasVisible = false;\r\n        for (let i = 0; i < shapes.length; i++) {\r\n            const shape = shapes[i];\r\n            if (shape._isVisible(this)) {\r\n                hasVisible = true;\r\n                break;\r\n            }\r\n        }\r\n        if (hasVisible && minX !== undefined) {\r\n            selfRect = {\r\n                x: minX,\r\n                y: minY,\r\n                width: maxX - minX,\r\n                height: maxY - minY,\r\n            };\r\n        }\r\n        else {\r\n            selfRect = {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        }\r\n        if (!skipTransform) {\r\n            return this._transformedRect(selfRect, relativeTo);\r\n        }\r\n        return selfRect;\r\n    }\r\n}\r\nexports.Container = Container;\r\nFactory_1.Factory.addComponentsGetterSetter(Container, 'clip', [\r\n    'x',\r\n    'y',\r\n    'width',\r\n    'height',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Container, 'clipX', undefined, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipY', undefined, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipWidth', undefined, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipHeight', undefined, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipFunc');\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getCapturedShape = getCapturedShape;\r\nexports.createEvent = createEvent;\r\nexports.hasPointerCapture = hasPointerCapture;\r\nexports.setPointerCapture = setPointerCapture;\r\nexports.releaseCapture = releaseCapture;\r\nconst Global_1 = require(\"./Global\");\r\nconst Captures = new Map();\r\nconst SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\r\nfunction getCapturedShape(pointerId) {\r\n    return Captures.get(pointerId);\r\n}\r\nfunction createEvent(evt) {\r\n    return {\r\n        evt,\r\n        pointerId: evt.pointerId,\r\n    };\r\n}\r\nfunction hasPointerCapture(pointerId, shape) {\r\n    return Captures.get(pointerId) === shape;\r\n}\r\nfunction setPointerCapture(pointerId, shape) {\r\n    releaseCapture(pointerId);\r\n    const stage = shape.getStage();\r\n    if (!stage)\r\n        return;\r\n    Captures.set(pointerId, shape);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\r\n    }\r\n}\r\nfunction releaseCapture(pointerId, target) {\r\n    const shape = Captures.get(pointerId);\r\n    if (!shape)\r\n        return;\r\n    const stage = shape.getStage();\r\n    if (stage && stage.content) {\r\n    }\r\n    Captures.delete(pointerId);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\r\n    }\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Stage = exports.stages = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Factory_1 = require(\"./Factory\");\r\nconst Container_1 = require(\"./Container\");\r\nconst Global_1 = require(\"./Global\");\r\nconst Canvas_1 = require(\"./Canvas\");\r\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\r\nconst Global_2 = require(\"./Global\");\r\nconst PointerEvents = require(\"./PointerEvents\");\r\nconst STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\r\n    [MOUSEENTER, '_pointerenter'],\r\n    [MOUSEDOWN, '_pointerdown'],\r\n    [MOUSEMOVE, '_pointermove'],\r\n    [MOUSEUP, '_pointerup'],\r\n    [MOUSELEAVE, '_pointerleave'],\r\n    [TOUCHSTART, '_pointerdown'],\r\n    [TOUCHMOVE, '_pointermove'],\r\n    [TOUCHEND, '_pointerup'],\r\n    [TOUCHCANCEL, '_pointercancel'],\r\n    [MOUSEOVER, '_pointerover'],\r\n    [WHEEL, '_wheel'],\r\n    [CONTEXTMENU, '_contextmenu'],\r\n    [POINTERDOWN, '_pointerdown'],\r\n    [POINTERMOVE, '_pointermove'],\r\n    [POINTERUP, '_pointerup'],\r\n    [POINTERCANCEL, '_pointercancel'],\r\n    [POINTERLEAVE, '_pointerleave'],\r\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\r\n];\r\nconst EVENTS_MAP = {\r\n    mouse: {\r\n        [POINTEROUT]: MOUSEOUT,\r\n        [POINTERLEAVE]: MOUSELEAVE,\r\n        [POINTEROVER]: MOUSEOVER,\r\n        [POINTERENTER]: MOUSEENTER,\r\n        [POINTERMOVE]: MOUSEMOVE,\r\n        [POINTERDOWN]: MOUSEDOWN,\r\n        [POINTERUP]: MOUSEUP,\r\n        [POINTERCANCEL]: 'mousecancel',\r\n        pointerclick: 'click',\r\n        pointerdblclick: 'dblclick',\r\n    },\r\n    touch: {\r\n        [POINTEROUT]: 'touchout',\r\n        [POINTERLEAVE]: 'touchleave',\r\n        [POINTEROVER]: 'touchover',\r\n        [POINTERENTER]: 'touchenter',\r\n        [POINTERMOVE]: TOUCHMOVE,\r\n        [POINTERDOWN]: TOUCHSTART,\r\n        [POINTERUP]: TOUCHEND,\r\n        [POINTERCANCEL]: TOUCHCANCEL,\r\n        pointerclick: 'tap',\r\n        pointerdblclick: 'dbltap',\r\n    },\r\n    pointer: {\r\n        [POINTEROUT]: POINTEROUT,\r\n        [POINTERLEAVE]: POINTERLEAVE,\r\n        [POINTEROVER]: POINTEROVER,\r\n        [POINTERENTER]: POINTERENTER,\r\n        [POINTERMOVE]: POINTERMOVE,\r\n        [POINTERDOWN]: POINTERDOWN,\r\n        [POINTERUP]: POINTERUP,\r\n        [POINTERCANCEL]: POINTERCANCEL,\r\n        pointerclick: 'pointerclick',\r\n        pointerdblclick: 'pointerdblclick',\r\n    },\r\n};\r\nconst getEventType = (type) => {\r\n    if (type.indexOf('pointer') >= 0) {\r\n        return 'pointer';\r\n    }\r\n    if (type.indexOf('touch') >= 0) {\r\n        return 'touch';\r\n    }\r\n    return 'mouse';\r\n};\r\nconst getEventsMap = (eventType) => {\r\n    const type = getEventType(eventType);\r\n    if (type === 'pointer') {\r\n        return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\r\n    }\r\n    if (type === 'touch') {\r\n        return EVENTS_MAP.touch;\r\n    }\r\n    if (type === 'mouse') {\r\n        return EVENTS_MAP.mouse;\r\n    }\r\n};\r\nfunction checkNoClip(attrs = {}) {\r\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\r\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\r\n    }\r\n    return attrs;\r\n}\r\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\r\nexports.stages = [];\r\nclass Stage extends Container_1.Container {\r\n    constructor(config) {\r\n        super(checkNoClip(config));\r\n        this._pointerPositions = [];\r\n        this._changedPointerPositions = [];\r\n        this._buildDOM();\r\n        this._bindContentEvents();\r\n        exports.stages.push(this);\r\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\r\n        this.on('visibleChange.konva', this._checkVisibility);\r\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\r\n            checkNoClip(this.attrs);\r\n        });\r\n        this._checkVisibility();\r\n    }\r\n    _validateAdd(child) {\r\n        const isLayer = child.getType() === 'Layer';\r\n        const isFastLayer = child.getType() === 'FastLayer';\r\n        const valid = isLayer || isFastLayer;\r\n        if (!valid) {\r\n            Util_1.Util.throw('You may only add layers to the stage.');\r\n        }\r\n    }\r\n    _checkVisibility() {\r\n        if (!this.content) {\r\n            return;\r\n        }\r\n        const style = this.visible() ? '' : 'none';\r\n        this.content.style.display = style;\r\n    }\r\n    setContainer(container) {\r\n        if (typeof container === STRING) {\r\n            let id;\r\n            if (container.charAt(0) === '.') {\r\n                const className = container.slice(1);\r\n                container = document.getElementsByClassName(className)[0];\r\n            }\r\n            else {\r\n                if (container.charAt(0) !== '#') {\r\n                    id = container;\r\n                }\r\n                else {\r\n                    id = container.slice(1);\r\n                }\r\n                container = document.getElementById(id);\r\n            }\r\n            if (!container) {\r\n                throw 'Can not find container in document with id ' + id;\r\n            }\r\n        }\r\n        this._setAttr('container', container);\r\n        if (this.content) {\r\n            if (this.content.parentElement) {\r\n                this.content.parentElement.removeChild(this.content);\r\n            }\r\n            container.appendChild(this.content);\r\n        }\r\n        return this;\r\n    }\r\n    shouldDrawHit() {\r\n        return true;\r\n    }\r\n    clear() {\r\n        const layers = this.children, len = layers.length;\r\n        for (let n = 0; n < len; n++) {\r\n            layers[n].clear();\r\n        }\r\n        return this;\r\n    }\r\n    clone(obj) {\r\n        if (!obj) {\r\n            obj = {};\r\n        }\r\n        obj.container =\r\n            typeof document !== 'undefined' && document.createElement('div');\r\n        return Container_1.Container.prototype.clone.call(this, obj);\r\n    }\r\n    destroy() {\r\n        super.destroy();\r\n        const content = this.content;\r\n        if (content && Util_1.Util._isInDocument(content)) {\r\n            this.container().removeChild(content);\r\n        }\r\n        const index = exports.stages.indexOf(this);\r\n        if (index > -1) {\r\n            exports.stages.splice(index, 1);\r\n        }\r\n        Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\r\n        return this;\r\n    }\r\n    getPointerPosition() {\r\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\r\n        if (!pos) {\r\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\r\n            return null;\r\n        }\r\n        return {\r\n            x: pos.x,\r\n            y: pos.y,\r\n        };\r\n    }\r\n    _getPointerById(id) {\r\n        return this._pointerPositions.find((p) => p.id === id);\r\n    }\r\n    getPointersPositions() {\r\n        return this._pointerPositions;\r\n    }\r\n    getStage() {\r\n        return this;\r\n    }\r\n    getContent() {\r\n        return this.content;\r\n    }\r\n    _toKonvaCanvas(config) {\r\n        config = config || {};\r\n        config.x = config.x || 0;\r\n        config.y = config.y || 0;\r\n        config.width = config.width || this.width();\r\n        config.height = config.height || this.height();\r\n        const canvas = new Canvas_1.SceneCanvas({\r\n            width: config.width,\r\n            height: config.height,\r\n            pixelRatio: config.pixelRatio || 1,\r\n        });\r\n        const _context = canvas.getContext()._context;\r\n        const layers = this.children;\r\n        if (config.x || config.y) {\r\n            _context.translate(-1 * config.x, -1 * config.y);\r\n        }\r\n        layers.forEach(function (layer) {\r\n            if (!layer.isVisible()) {\r\n                return;\r\n            }\r\n            const layerCanvas = layer._toKonvaCanvas(config);\r\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\r\n        });\r\n        return canvas;\r\n    }\r\n    getIntersection(pos) {\r\n        if (!pos) {\r\n            return null;\r\n        }\r\n        const layers = this.children, len = layers.length, end = len - 1;\r\n        for (let n = end; n >= 0; n--) {\r\n            const shape = layers[n].getIntersection(pos);\r\n            if (shape) {\r\n                return shape;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    _resizeDOM() {\r\n        const width = this.width();\r\n        const height = this.height();\r\n        if (this.content) {\r\n            this.content.style.width = width + PX;\r\n            this.content.style.height = height + PX;\r\n        }\r\n        this.bufferCanvas.setSize(width, height);\r\n        this.bufferHitCanvas.setSize(width, height);\r\n        this.children.forEach((layer) => {\r\n            layer.setSize({ width, height });\r\n            layer.draw();\r\n        });\r\n    }\r\n    add(layer, ...rest) {\r\n        if (arguments.length > 1) {\r\n            for (let i = 0; i < arguments.length; i++) {\r\n                this.add(arguments[i]);\r\n            }\r\n            return this;\r\n        }\r\n        super.add(layer);\r\n        const length = this.children.length;\r\n        if (length > MAX_LAYERS_NUMBER) {\r\n            Util_1.Util.warn('The stage has ' +\r\n                length +\r\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\r\n        }\r\n        layer.setSize({ width: this.width(), height: this.height() });\r\n        layer.draw();\r\n        if (Global_1.Konva.isBrowser) {\r\n            this.content.appendChild(layer.canvas._canvas);\r\n        }\r\n        return this;\r\n    }\r\n    getParent() {\r\n        return null;\r\n    }\r\n    getLayer() {\r\n        return null;\r\n    }\r\n    hasPointerCapture(pointerId) {\r\n        return PointerEvents.hasPointerCapture(pointerId, this);\r\n    }\r\n    setPointerCapture(pointerId) {\r\n        PointerEvents.setPointerCapture(pointerId, this);\r\n    }\r\n    releaseCapture(pointerId) {\r\n        PointerEvents.releaseCapture(pointerId, this);\r\n    }\r\n    getLayers() {\r\n        return this.children;\r\n    }\r\n    _bindContentEvents() {\r\n        if (!Global_1.Konva.isBrowser) {\r\n            return;\r\n        }\r\n        EVENTS.forEach(([event, methodName]) => {\r\n            this.content.addEventListener(event, (evt) => {\r\n                this[methodName](evt);\r\n            }, { passive: false });\r\n        });\r\n    }\r\n    _pointerenter(evt) {\r\n        this.setPointersPositions(evt);\r\n        const events = getEventsMap(evt.type);\r\n        if (events) {\r\n            this._fire(events.pointerenter, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n    }\r\n    _pointerover(evt) {\r\n        this.setPointersPositions(evt);\r\n        const events = getEventsMap(evt.type);\r\n        if (events) {\r\n            this._fire(events.pointerover, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n    }\r\n    _getTargetShape(evenType) {\r\n        let shape = this[evenType + 'targetShape'];\r\n        if (shape && !shape.getStage()) {\r\n            shape = null;\r\n        }\r\n        return shape;\r\n    }\r\n    _pointerleave(evt) {\r\n        const events = getEventsMap(evt.type);\r\n        const eventType = getEventType(evt.type);\r\n        if (!events) {\r\n            return;\r\n        }\r\n        this.setPointersPositions(evt);\r\n        const targetShape = this._getTargetShape(eventType);\r\n        const eventsEnabled = !(Global_1.Konva.isDragging() || Global_1.Konva.isTransforming()) || Global_1.Konva.hitOnDragEnabled;\r\n        if (targetShape && eventsEnabled) {\r\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\r\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\r\n            this._fire(events.pointerleave, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n            this[eventType + 'targetShape'] = null;\r\n        }\r\n        else if (eventsEnabled) {\r\n            this._fire(events.pointerleave, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n            this._fire(events.pointerout, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n        this.pointerPos = null;\r\n        this._pointerPositions = [];\r\n    }\r\n    _pointerdown(evt) {\r\n        const events = getEventsMap(evt.type);\r\n        const eventType = getEventType(evt.type);\r\n        if (!events) {\r\n            return;\r\n        }\r\n        this.setPointersPositions(evt);\r\n        let triggeredOnShape = false;\r\n        this._changedPointerPositions.forEach((pos) => {\r\n            const shape = this.getIntersection(pos);\r\n            DragAndDrop_1.DD.justDragged = false;\r\n            Global_1.Konva['_' + eventType + 'ListenClick'] = true;\r\n            if (!shape || !shape.isListening()) {\r\n                this[eventType + 'ClickStartShape'] = undefined;\r\n                return;\r\n            }\r\n            if (Global_1.Konva.capturePointerEventsEnabled) {\r\n                shape.setPointerCapture(pos.id);\r\n            }\r\n            this[eventType + 'ClickStartShape'] = shape;\r\n            shape._fireAndBubble(events.pointerdown, {\r\n                evt: evt,\r\n                pointerId: pos.id,\r\n            });\r\n            triggeredOnShape = true;\r\n            const isTouch = evt.type.indexOf('touch') >= 0;\r\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\r\n                evt.preventDefault();\r\n            }\r\n        });\r\n        if (!triggeredOnShape) {\r\n            this._fire(events.pointerdown, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: this._pointerPositions[0].id,\r\n            });\r\n        }\r\n    }\r\n    _pointermove(evt) {\r\n        const events = getEventsMap(evt.type);\r\n        const eventType = getEventType(evt.type);\r\n        if (!events) {\r\n            return;\r\n        }\r\n        if (Global_1.Konva.isDragging() && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\r\n            evt.preventDefault();\r\n        }\r\n        this.setPointersPositions(evt);\r\n        const eventsEnabled = !(Global_1.Konva.isDragging() || Global_1.Konva.isTransforming()) || Global_1.Konva.hitOnDragEnabled;\r\n        if (!eventsEnabled) {\r\n            return;\r\n        }\r\n        const processedShapesIds = {};\r\n        let triggeredOnShape = false;\r\n        const targetShape = this._getTargetShape(eventType);\r\n        this._changedPointerPositions.forEach((pos) => {\r\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\r\n                this.getIntersection(pos));\r\n            const pointerId = pos.id;\r\n            const event = { evt: evt, pointerId };\r\n            const differentTarget = targetShape !== shape;\r\n            if (differentTarget && targetShape) {\r\n                targetShape._fireAndBubble(events.pointerout, { ...event }, shape);\r\n                targetShape._fireAndBubble(events.pointerleave, { ...event }, shape);\r\n            }\r\n            if (shape) {\r\n                if (processedShapesIds[shape._id]) {\r\n                    return;\r\n                }\r\n                processedShapesIds[shape._id] = true;\r\n            }\r\n            if (shape && shape.isListening()) {\r\n                triggeredOnShape = true;\r\n                if (differentTarget) {\r\n                    shape._fireAndBubble(events.pointerover, { ...event }, targetShape);\r\n                    shape._fireAndBubble(events.pointerenter, { ...event }, targetShape);\r\n                    this[eventType + 'targetShape'] = shape;\r\n                }\r\n                shape._fireAndBubble(events.pointermove, { ...event });\r\n            }\r\n            else {\r\n                if (targetShape) {\r\n                    this._fire(events.pointerover, {\r\n                        evt: evt,\r\n                        target: this,\r\n                        currentTarget: this,\r\n                        pointerId,\r\n                    });\r\n                    this[eventType + 'targetShape'] = null;\r\n                }\r\n            }\r\n        });\r\n        if (!triggeredOnShape) {\r\n            this._fire(events.pointermove, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: this._changedPointerPositions[0].id,\r\n            });\r\n        }\r\n    }\r\n    _pointerup(evt) {\r\n        const events = getEventsMap(evt.type);\r\n        const eventType = getEventType(evt.type);\r\n        if (!events) {\r\n            return;\r\n        }\r\n        this.setPointersPositions(evt);\r\n        const clickStartShape = this[eventType + 'ClickStartShape'];\r\n        const clickEndShape = this[eventType + 'ClickEndShape'];\r\n        const processedShapesIds = {};\r\n        let triggeredOnShape = false;\r\n        this._changedPointerPositions.forEach((pos) => {\r\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\r\n                this.getIntersection(pos));\r\n            if (shape) {\r\n                shape.releaseCapture(pos.id);\r\n                if (processedShapesIds[shape._id]) {\r\n                    return;\r\n                }\r\n                processedShapesIds[shape._id] = true;\r\n            }\r\n            const pointerId = pos.id;\r\n            const event = { evt: evt, pointerId };\r\n            let fireDblClick = false;\r\n            if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\r\n                fireDblClick = true;\r\n                clearTimeout(this[eventType + 'DblTimeout']);\r\n            }\r\n            else if (!DragAndDrop_1.DD.justDragged) {\r\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\r\n                clearTimeout(this[eventType + 'DblTimeout']);\r\n            }\r\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\r\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\r\n            }, Global_1.Konva.dblClickWindow);\r\n            if (shape && shape.isListening()) {\r\n                triggeredOnShape = true;\r\n                this[eventType + 'ClickEndShape'] = shape;\r\n                shape._fireAndBubble(events.pointerup, { ...event });\r\n                if (Global_1.Konva['_' + eventType + 'ListenClick'] &&\r\n                    clickStartShape &&\r\n                    clickStartShape === shape) {\r\n                    shape._fireAndBubble(events.pointerclick, { ...event });\r\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\r\n                        shape._fireAndBubble(events.pointerdblclick, { ...event });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this[eventType + 'ClickEndShape'] = null;\r\n                if (Global_1.Konva['_' + eventType + 'ListenClick']) {\r\n                    this._fire(events.pointerclick, {\r\n                        evt: evt,\r\n                        target: this,\r\n                        currentTarget: this,\r\n                        pointerId,\r\n                    });\r\n                }\r\n                if (fireDblClick) {\r\n                    this._fire(events.pointerdblclick, {\r\n                        evt: evt,\r\n                        target: this,\r\n                        currentTarget: this,\r\n                        pointerId,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        if (!triggeredOnShape) {\r\n            this._fire(events.pointerup, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: this._changedPointerPositions[0].id,\r\n            });\r\n        }\r\n        Global_1.Konva['_' + eventType + 'ListenClick'] = false;\r\n        if (evt.cancelable && eventType !== 'touch' && eventType !== 'pointer') {\r\n            evt.preventDefault();\r\n        }\r\n    }\r\n    _contextmenu(evt) {\r\n        this.setPointersPositions(evt);\r\n        const shape = this.getIntersection(this.getPointerPosition());\r\n        if (shape && shape.isListening()) {\r\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\r\n        }\r\n        else {\r\n            this._fire(CONTEXTMENU, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n    }\r\n    _wheel(evt) {\r\n        this.setPointersPositions(evt);\r\n        const shape = this.getIntersection(this.getPointerPosition());\r\n        if (shape && shape.isListening()) {\r\n            shape._fireAndBubble(WHEEL, { evt: evt });\r\n        }\r\n        else {\r\n            this._fire(WHEEL, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n    }\r\n    _pointercancel(evt) {\r\n        this.setPointersPositions(evt);\r\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\r\n            this.getIntersection(this.getPointerPosition());\r\n        if (shape) {\r\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\r\n        }\r\n        PointerEvents.releaseCapture(evt.pointerId);\r\n    }\r\n    _lostpointercapture(evt) {\r\n        PointerEvents.releaseCapture(evt.pointerId);\r\n    }\r\n    setPointersPositions(evt) {\r\n        const contentPosition = this._getContentPosition();\r\n        let x = null, y = null;\r\n        evt = evt ? evt : window.event;\r\n        if (evt.touches !== undefined) {\r\n            this._pointerPositions = [];\r\n            this._changedPointerPositions = [];\r\n            Array.prototype.forEach.call(evt.touches, (touch) => {\r\n                this._pointerPositions.push({\r\n                    id: touch.identifier,\r\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\r\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\r\n                });\r\n            });\r\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\r\n                this._changedPointerPositions.push({\r\n                    id: touch.identifier,\r\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\r\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\r\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\r\n            this.pointerPos = {\r\n                x: x,\r\n                y: y,\r\n            };\r\n            this._pointerPositions = [{ x, y, id: Util_1.Util._getFirstPointerId(evt) }];\r\n            this._changedPointerPositions = [\r\n                { x, y, id: Util_1.Util._getFirstPointerId(evt) },\r\n            ];\r\n        }\r\n    }\r\n    _setPointerPosition(evt) {\r\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\r\n        this.setPointersPositions(evt);\r\n    }\r\n    _getContentPosition() {\r\n        if (!this.content || !this.content.getBoundingClientRect) {\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n            };\r\n        }\r\n        const rect = this.content.getBoundingClientRect();\r\n        return {\r\n            top: rect.top,\r\n            left: rect.left,\r\n            scaleX: rect.width / this.content.clientWidth || 1,\r\n            scaleY: rect.height / this.content.clientHeight || 1,\r\n        };\r\n    }\r\n    _buildDOM() {\r\n        this.bufferCanvas = new Canvas_1.SceneCanvas({\r\n            width: this.width(),\r\n            height: this.height(),\r\n        });\r\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({\r\n            pixelRatio: 1,\r\n            width: this.width(),\r\n            height: this.height(),\r\n        });\r\n        if (!Global_1.Konva.isBrowser) {\r\n            return;\r\n        }\r\n        const container = this.container();\r\n        if (!container) {\r\n            throw 'Stage has no container. A container is required.';\r\n        }\r\n        container.innerHTML = '';\r\n        this.content = document.createElement('div');\r\n        this.content.style.position = 'relative';\r\n        this.content.style.userSelect = 'none';\r\n        this.content.className = 'konvajs-content';\r\n        this.content.setAttribute('role', 'presentation');\r\n        container.appendChild(this.content);\r\n        this._resizeDOM();\r\n    }\r\n    cache() {\r\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\r\n        return this;\r\n    }\r\n    clearCache() {\r\n        return this;\r\n    }\r\n    batchDraw() {\r\n        this.getChildren().forEach(function (layer) {\r\n            layer.batchDraw();\r\n        });\r\n        return this;\r\n    }\r\n}\r\nexports.Stage = Stage;\r\nStage.prototype.nodeType = STAGE;\r\n(0, Global_2._registerNode)(Stage);\r\nFactory_1.Factory.addGetterSetter(Stage, 'container');\r\nif (Global_1.Konva.isBrowser) {\r\n    document.addEventListener('visibilitychange', () => {\r\n        exports.stages.forEach((stage) => {\r\n            stage.batchDraw();\r\n        });\r\n    });\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Shape = exports.shapes = void 0;\r\nconst Global_1 = require(\"./Global\");\r\nconst Util_1 = require(\"./Util\");\r\nconst Factory_1 = require(\"./Factory\");\r\nconst Node_1 = require(\"./Node\");\r\nconst Validators_1 = require(\"./Validators\");\r\nconst Global_2 = require(\"./Global\");\r\nconst PointerEvents = require(\"./PointerEvents\");\r\nconst HAS_SHADOW = 'hasShadow';\r\nconst SHADOW_RGBA = 'shadowRGBA';\r\nconst patternImage = 'patternImage';\r\nconst linearGradient = 'linearGradient';\r\nconst radialGradient = 'radialGradient';\r\nlet dummyContext;\r\nfunction getDummyContext() {\r\n    if (dummyContext) {\r\n        return dummyContext;\r\n    }\r\n    dummyContext = Util_1.Util.createCanvasElement().getContext('2d');\r\n    return dummyContext;\r\n}\r\nexports.shapes = {};\r\nfunction _fillFunc(context) {\r\n    const fillRule = this.attrs.fillRule;\r\n    if (fillRule) {\r\n        context.fill(fillRule);\r\n    }\r\n    else {\r\n        context.fill();\r\n    }\r\n}\r\nfunction _strokeFunc(context) {\r\n    context.stroke();\r\n}\r\nfunction _fillFuncHit(context) {\r\n    const fillRule = this.attrs.fillRule;\r\n    if (fillRule) {\r\n        context.fill(fillRule);\r\n    }\r\n    else {\r\n        context.fill();\r\n    }\r\n}\r\nfunction _strokeFuncHit(context) {\r\n    context.stroke();\r\n}\r\nfunction _clearHasShadowCache() {\r\n    this._clearCache(HAS_SHADOW);\r\n}\r\nfunction _clearGetShadowRGBACache() {\r\n    this._clearCache(SHADOW_RGBA);\r\n}\r\nfunction _clearFillPatternCache() {\r\n    this._clearCache(patternImage);\r\n}\r\nfunction _clearLinearGradientCache() {\r\n    this._clearCache(linearGradient);\r\n}\r\nfunction _clearRadialGradientCache() {\r\n    this._clearCache(radialGradient);\r\n}\r\nclass Shape extends Node_1.Node {\r\n    constructor(config) {\r\n        super(config);\r\n        let key;\r\n        while (true) {\r\n            key = Util_1.Util.getRandomColor();\r\n            if (key && !(key in exports.shapes)) {\r\n                break;\r\n            }\r\n        }\r\n        this.colorKey = key;\r\n        exports.shapes[key] = this;\r\n    }\r\n    getContext() {\r\n        Util_1.Util.warn('shape.getContext() method is deprecated. Please do not use it.');\r\n        return this.getLayer().getContext();\r\n    }\r\n    getCanvas() {\r\n        Util_1.Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\r\n        return this.getLayer().getCanvas();\r\n    }\r\n    getSceneFunc() {\r\n        return this.attrs.sceneFunc || this['_sceneFunc'];\r\n    }\r\n    getHitFunc() {\r\n        return this.attrs.hitFunc || this['_hitFunc'];\r\n    }\r\n    hasShadow() {\r\n        return this._getCache(HAS_SHADOW, this._hasShadow);\r\n    }\r\n    _hasShadow() {\r\n        return (this.shadowEnabled() &&\r\n            this.shadowOpacity() !== 0 &&\r\n            !!(this.shadowColor() ||\r\n                this.shadowBlur() ||\r\n                this.shadowOffsetX() ||\r\n                this.shadowOffsetY()));\r\n    }\r\n    _getFillPattern() {\r\n        return this._getCache(patternImage, this.__getFillPattern);\r\n    }\r\n    __getFillPattern() {\r\n        if (this.fillPatternImage()) {\r\n            const ctx = getDummyContext();\r\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\r\n            if (pattern && pattern.setTransform) {\r\n                const tr = new Util_1.Transform();\r\n                tr.translate(this.fillPatternX(), this.fillPatternY());\r\n                tr.rotate(Global_1.Konva.getAngle(this.fillPatternRotation()));\r\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\r\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\r\n                const m = tr.getMatrix();\r\n                const matrix = typeof DOMMatrix === 'undefined'\r\n                    ? {\r\n                        a: m[0],\r\n                        b: m[1],\r\n                        c: m[2],\r\n                        d: m[3],\r\n                        e: m[4],\r\n                        f: m[5],\r\n                    }\r\n                    : new DOMMatrix(m);\r\n                pattern.setTransform(matrix);\r\n            }\r\n            return pattern;\r\n        }\r\n    }\r\n    _getLinearGradient() {\r\n        return this._getCache(linearGradient, this.__getLinearGradient);\r\n    }\r\n    __getLinearGradient() {\r\n        const colorStops = this.fillLinearGradientColorStops();\r\n        if (colorStops) {\r\n            const ctx = getDummyContext();\r\n            const start = this.fillLinearGradientStartPoint();\r\n            const end = this.fillLinearGradientEndPoint();\r\n            const grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\r\n            for (let n = 0; n < colorStops.length; n += 2) {\r\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\r\n            }\r\n            return grd;\r\n        }\r\n    }\r\n    _getRadialGradient() {\r\n        return this._getCache(radialGradient, this.__getRadialGradient);\r\n    }\r\n    __getRadialGradient() {\r\n        const colorStops = this.fillRadialGradientColorStops();\r\n        if (colorStops) {\r\n            const ctx = getDummyContext();\r\n            const start = this.fillRadialGradientStartPoint();\r\n            const end = this.fillRadialGradientEndPoint();\r\n            const grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\r\n            for (let n = 0; n < colorStops.length; n += 2) {\r\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\r\n            }\r\n            return grd;\r\n        }\r\n    }\r\n    getShadowRGBA() {\r\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\r\n    }\r\n    _getShadowRGBA() {\r\n        if (!this.hasShadow()) {\r\n            return;\r\n        }\r\n        const rgba = Util_1.Util.colorToRGBA(this.shadowColor());\r\n        if (rgba) {\r\n            return ('rgba(' +\r\n                rgba.r +\r\n                ',' +\r\n                rgba.g +\r\n                ',' +\r\n                rgba.b +\r\n                ',' +\r\n                rgba.a * (this.shadowOpacity() || 1) +\r\n                ')');\r\n        }\r\n    }\r\n    hasFill() {\r\n        return this._calculate('hasFill', [\r\n            'fillEnabled',\r\n            'fill',\r\n            'fillPatternImage',\r\n            'fillLinearGradientColorStops',\r\n            'fillRadialGradientColorStops',\r\n        ], () => {\r\n            return (this.fillEnabled() &&\r\n                !!(this.fill() ||\r\n                    this.fillPatternImage() ||\r\n                    this.fillLinearGradientColorStops() ||\r\n                    this.fillRadialGradientColorStops()));\r\n        });\r\n    }\r\n    hasStroke() {\r\n        return this._calculate('hasStroke', [\r\n            'strokeEnabled',\r\n            'strokeWidth',\r\n            'stroke',\r\n            'strokeLinearGradientColorStops',\r\n        ], () => {\r\n            return (this.strokeEnabled() &&\r\n                this.strokeWidth() &&\r\n                !!(this.stroke() || this.strokeLinearGradientColorStops()));\r\n        });\r\n    }\r\n    hasHitStroke() {\r\n        const width = this.hitStrokeWidth();\r\n        if (width === 'auto') {\r\n            return this.hasStroke();\r\n        }\r\n        return this.strokeEnabled() && !!width;\r\n    }\r\n    intersects(point) {\r\n        const stage = this.getStage();\r\n        if (!stage) {\r\n            return false;\r\n        }\r\n        const bufferHitCanvas = stage.bufferHitCanvas;\r\n        bufferHitCanvas.getContext().clear();\r\n        this.drawHit(bufferHitCanvas, undefined, true);\r\n        const p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\r\n        return p[3] > 0;\r\n    }\r\n    destroy() {\r\n        Node_1.Node.prototype.destroy.call(this);\r\n        delete exports.shapes[this.colorKey];\r\n        delete this.colorKey;\r\n        return this;\r\n    }\r\n    _useBufferCanvas(forceFill) {\r\n        var _a;\r\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\r\n        if (!perfectDrawEnabled) {\r\n            return false;\r\n        }\r\n        const hasFill = forceFill || this.hasFill();\r\n        const hasStroke = this.hasStroke();\r\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\r\n        if (hasFill && hasStroke && isTransparent) {\r\n            return true;\r\n        }\r\n        const hasShadow = this.hasShadow();\r\n        const strokeForShadow = this.shadowForStrokeEnabled();\r\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    setStrokeHitEnabled(val) {\r\n        Util_1.Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\r\n        if (val) {\r\n            this.hitStrokeWidth('auto');\r\n        }\r\n        else {\r\n            this.hitStrokeWidth(0);\r\n        }\r\n    }\r\n    getStrokeHitEnabled() {\r\n        if (this.hitStrokeWidth() === 0) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    getSelfRect() {\r\n        const size = this.size();\r\n        return {\r\n            x: this._centroid ? -size.width / 2 : 0,\r\n            y: this._centroid ? -size.height / 2 : 0,\r\n            width: size.width,\r\n            height: size.height,\r\n        };\r\n    }\r\n    getClientRect(config = {}) {\r\n        let hasCachedParent = false;\r\n        let parent = this.getParent();\r\n        while (parent) {\r\n            if (parent.isCached()) {\r\n                hasCachedParent = true;\r\n                break;\r\n            }\r\n            parent = parent.getParent();\r\n        }\r\n        const skipTransform = config.skipTransform;\r\n        const relativeTo = config.relativeTo || (hasCachedParent && this.getStage()) || undefined;\r\n        const fillRect = this.getSelfRect();\r\n        const applyStroke = !config.skipStroke && this.hasStroke();\r\n        const strokeWidth = (applyStroke && this.strokeWidth()) || 0;\r\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\r\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\r\n        const applyShadow = !config.skipShadow && this.hasShadow();\r\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\r\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\r\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\r\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\r\n        const blurRadius = (applyShadow && this.shadowBlur()) || 0;\r\n        const width = preWidth + blurRadius * 2;\r\n        const height = preHeight + blurRadius * 2;\r\n        const rect = {\r\n            width: width,\r\n            height: height,\r\n            x: -(strokeWidth / 2 + blurRadius) +\r\n                Math.min(shadowOffsetX, 0) +\r\n                fillRect.x,\r\n            y: -(strokeWidth / 2 + blurRadius) +\r\n                Math.min(shadowOffsetY, 0) +\r\n                fillRect.y,\r\n        };\r\n        if (!skipTransform) {\r\n            return this._transformedRect(rect, relativeTo);\r\n        }\r\n        return rect;\r\n    }\r\n    drawScene(can, top, bufferCanvas) {\r\n        const layer = this.getLayer();\r\n        const canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow();\r\n        let stage;\r\n        const skipBuffer = false;\r\n        const cachingSelf = top === this;\r\n        if (!this.isVisible() && !cachingSelf) {\r\n            return this;\r\n        }\r\n        if (cachedCanvas) {\r\n            context.save();\r\n            const m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedSceneCanvas(context);\r\n            context.restore();\r\n            return this;\r\n        }\r\n        if (!drawFunc) {\r\n            return this;\r\n        }\r\n        context.save();\r\n        if (this._useBufferCanvas() && !skipBuffer) {\r\n            stage = this.getStage();\r\n            const bc = bufferCanvas || stage.bufferCanvas;\r\n            const bufferContext = bc.getContext();\r\n            bufferContext.clear();\r\n            bufferContext.save();\r\n            bufferContext._applyLineJoin(this);\r\n            const o = this.getAbsoluteTransform(top).getMatrix();\r\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\r\n            drawFunc.call(this, bufferContext, this);\r\n            bufferContext.restore();\r\n            const ratio = bc.pixelRatio;\r\n            if (hasShadow) {\r\n                context._applyShadow(this);\r\n            }\r\n            context._applyOpacity(this);\r\n            context._applyGlobalCompositeOperation(this);\r\n            context.drawImage(bc._canvas, bc.x || 0, bc.y || 0, bc.width / ratio, bc.height / ratio);\r\n        }\r\n        else {\r\n            context._applyLineJoin(this);\r\n            if (!cachingSelf) {\r\n                const o = this.getAbsoluteTransform(top).getMatrix();\r\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\r\n                context._applyOpacity(this);\r\n                context._applyGlobalCompositeOperation(this);\r\n            }\r\n            if (hasShadow) {\r\n                context._applyShadow(this);\r\n            }\r\n            drawFunc.call(this, context, this);\r\n        }\r\n        context.restore();\r\n        return this;\r\n    }\r\n    drawHit(can, top, skipDragCheck = false) {\r\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\r\n            return this;\r\n        }\r\n        const layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\r\n        if (!this.colorKey) {\r\n            Util_1.Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\r\n        }\r\n        if (cachedHitCanvas) {\r\n            context.save();\r\n            const m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedHitCanvas(context);\r\n            context.restore();\r\n            return this;\r\n        }\r\n        if (!drawFunc) {\r\n            return this;\r\n        }\r\n        context.save();\r\n        context._applyLineJoin(this);\r\n        const selfCache = this === top;\r\n        if (!selfCache) {\r\n            const o = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\r\n        }\r\n        drawFunc.call(this, context, this);\r\n        context.restore();\r\n        return this;\r\n    }\r\n    drawHitFromCache(alphaThreshold = 0) {\r\n        const cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight();\r\n        hitContext.clear();\r\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\r\n        try {\r\n            const hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\r\n            const hitData = hitImageData.data;\r\n            const len = hitData.length;\r\n            const rgbColorKey = Util_1.Util._hexToRgb(this.colorKey);\r\n            for (let i = 0; i < len; i += 4) {\r\n                const alpha = hitData[i + 3];\r\n                if (alpha > alphaThreshold) {\r\n                    hitData[i] = rgbColorKey.r;\r\n                    hitData[i + 1] = rgbColorKey.g;\r\n                    hitData[i + 2] = rgbColorKey.b;\r\n                    hitData[i + 3] = 255;\r\n                }\r\n                else {\r\n                    hitData[i + 3] = 0;\r\n                }\r\n            }\r\n            hitContext.putImageData(hitImageData, 0, 0);\r\n        }\r\n        catch (e) {\r\n            Util_1.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\r\n        }\r\n        return this;\r\n    }\r\n    hasPointerCapture(pointerId) {\r\n        return PointerEvents.hasPointerCapture(pointerId, this);\r\n    }\r\n    setPointerCapture(pointerId) {\r\n        PointerEvents.setPointerCapture(pointerId, this);\r\n    }\r\n    releaseCapture(pointerId) {\r\n        PointerEvents.releaseCapture(pointerId, this);\r\n    }\r\n}\r\nexports.Shape = Shape;\r\nShape.prototype._fillFunc = _fillFunc;\r\nShape.prototype._strokeFunc = _strokeFunc;\r\nShape.prototype._fillFuncHit = _fillFuncHit;\r\nShape.prototype._strokeFuncHit = _strokeFuncHit;\r\nShape.prototype._centroid = false;\r\nShape.prototype.nodeType = 'Shape';\r\n(0, Global_2._registerNode)(Shape);\r\nShape.prototype.eventListeners = {};\r\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\r\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\r\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\r\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\r\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\r\nFactory_1.Factory.addGetterSetter(Shape, 'stroke', undefined, (0, Validators_1.getStringOrGradientValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeWidth', 2, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\r\nFactory_1.Factory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', (0, Validators_1.getNumberOrAutoValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeHitEnabled', true, (0, Validators_1.getBooleanValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'perfectDrawEnabled', true, (0, Validators_1.getBooleanValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, (0, Validators_1.getBooleanValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'lineJoin');\r\nFactory_1.Factory.addGetterSetter(Shape, 'lineCap');\r\nFactory_1.Factory.addGetterSetter(Shape, 'sceneFunc');\r\nFactory_1.Factory.addGetterSetter(Shape, 'hitFunc');\r\nFactory_1.Factory.addGetterSetter(Shape, 'dash');\r\nFactory_1.Factory.addGetterSetter(Shape, 'dashOffset', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowColor', undefined, (0, Validators_1.getStringValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowBlur', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOpacity', 1, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetX', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetY', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternImage');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fill', undefined, (0, Validators_1.getStringOrGradientValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternX', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternY', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'dashEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPriority', 'color');\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleX', 1, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleY', 1, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRotation', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRule', undefined, (0, Validators_1.getStringValidator)());\r\nFactory_1.Factory.backCompat(Shape, {\r\n    dashArray: 'dash',\r\n    getDashArray: 'getDash',\r\n    setDashArray: 'getDash',\r\n    drawFunc: 'sceneFunc',\r\n    getDrawFunc: 'getSceneFunc',\r\n    setDrawFunc: 'setSceneFunc',\r\n    drawHitFunc: 'hitFunc',\r\n    getDrawHitFunc: 'getHitFunc',\r\n    setDrawHitFunc: 'setHitFunc',\r\n});\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Layer = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Container_1 = require(\"./Container\");\r\nconst Node_1 = require(\"./Node\");\r\nconst Factory_1 = require(\"./Factory\");\r\nconst Canvas_1 = require(\"./Canvas\");\r\nconst Validators_1 = require(\"./Validators\");\r\nconst Shape_1 = require(\"./Shape\");\r\nconst Global_1 = require(\"./Global\");\r\nconst HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\r\n    { x: 0, y: 0 },\r\n    { x: -1, y: -1 },\r\n    { x: 1, y: -1 },\r\n    { x: 1, y: 1 },\r\n    { x: -1, y: 1 },\r\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\r\nclass Layer extends Container_1.Container {\r\n    constructor(config) {\r\n        super(config);\r\n        this.canvas = new Canvas_1.SceneCanvas();\r\n        this.hitCanvas = new Canvas_1.HitCanvas({\r\n            pixelRatio: 1,\r\n        });\r\n        this._waitingForDraw = false;\r\n        this.on('visibleChange.konva', this._checkVisibility);\r\n        this._checkVisibility();\r\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\r\n        this._setSmoothEnabled();\r\n    }\r\n    createPNGStream() {\r\n        const c = this.canvas._canvas;\r\n        return c.createPNGStream();\r\n    }\r\n    getCanvas() {\r\n        return this.canvas;\r\n    }\r\n    getNativeCanvasElement() {\r\n        return this.canvas._canvas;\r\n    }\r\n    getHitCanvas() {\r\n        return this.hitCanvas;\r\n    }\r\n    getContext() {\r\n        return this.getCanvas().getContext();\r\n    }\r\n    clear(bounds) {\r\n        this.getContext().clear(bounds);\r\n        this.getHitCanvas().getContext().clear(bounds);\r\n        return this;\r\n    }\r\n    setZIndex(index) {\r\n        super.setZIndex(index);\r\n        const stage = this.getStage();\r\n        if (stage && stage.content) {\r\n            stage.content.removeChild(this.getNativeCanvasElement());\r\n            if (index < stage.children.length - 1) {\r\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\r\n            }\r\n            else {\r\n                stage.content.appendChild(this.getNativeCanvasElement());\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    moveToTop() {\r\n        Node_1.Node.prototype.moveToTop.call(this);\r\n        const stage = this.getStage();\r\n        if (stage && stage.content) {\r\n            stage.content.removeChild(this.getNativeCanvasElement());\r\n            stage.content.appendChild(this.getNativeCanvasElement());\r\n        }\r\n        return true;\r\n    }\r\n    moveUp() {\r\n        const moved = Node_1.Node.prototype.moveUp.call(this);\r\n        if (!moved) {\r\n            return false;\r\n        }\r\n        const stage = this.getStage();\r\n        if (!stage || !stage.content) {\r\n            return false;\r\n        }\r\n        stage.content.removeChild(this.getNativeCanvasElement());\r\n        if (this.index < stage.children.length - 1) {\r\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\r\n        }\r\n        else {\r\n            stage.content.appendChild(this.getNativeCanvasElement());\r\n        }\r\n        return true;\r\n    }\r\n    moveDown() {\r\n        if (Node_1.Node.prototype.moveDown.call(this)) {\r\n            const stage = this.getStage();\r\n            if (stage) {\r\n                const children = stage.children;\r\n                if (stage.content) {\r\n                    stage.content.removeChild(this.getNativeCanvasElement());\r\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveToBottom() {\r\n        if (Node_1.Node.prototype.moveToBottom.call(this)) {\r\n            const stage = this.getStage();\r\n            if (stage) {\r\n                const children = stage.children;\r\n                if (stage.content) {\r\n                    stage.content.removeChild(this.getNativeCanvasElement());\r\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getLayer() {\r\n        return this;\r\n    }\r\n    remove() {\r\n        const _canvas = this.getNativeCanvasElement();\r\n        Node_1.Node.prototype.remove.call(this);\r\n        if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\r\n            _canvas.parentNode.removeChild(_canvas);\r\n        }\r\n        return this;\r\n    }\r\n    getStage() {\r\n        return this.parent;\r\n    }\r\n    setSize({ width, height }) {\r\n        this.canvas.setSize(width, height);\r\n        this.hitCanvas.setSize(width, height);\r\n        this._setSmoothEnabled();\r\n        return this;\r\n    }\r\n    _validateAdd(child) {\r\n        const type = child.getType();\r\n        if (type !== 'Group' && type !== 'Shape') {\r\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\r\n        }\r\n    }\r\n    _toKonvaCanvas(config) {\r\n        config = config || {};\r\n        config.width = config.width || this.getWidth();\r\n        config.height = config.height || this.getHeight();\r\n        config.x = config.x !== undefined ? config.x : this.x();\r\n        config.y = config.y !== undefined ? config.y : this.y();\r\n        return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\r\n    }\r\n    _checkVisibility() {\r\n        const visible = this.visible();\r\n        if (visible) {\r\n            this.canvas._canvas.style.display = 'block';\r\n        }\r\n        else {\r\n            this.canvas._canvas.style.display = 'none';\r\n        }\r\n    }\r\n    _setSmoothEnabled() {\r\n        this.getContext()._context.imageSmoothingEnabled =\r\n            this.imageSmoothingEnabled();\r\n    }\r\n    getWidth() {\r\n        if (this.parent) {\r\n            return this.parent.width();\r\n        }\r\n    }\r\n    setWidth() {\r\n        Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\r\n    }\r\n    getHeight() {\r\n        if (this.parent) {\r\n            return this.parent.height();\r\n        }\r\n    }\r\n    setHeight() {\r\n        Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\r\n    }\r\n    batchDraw() {\r\n        if (!this._waitingForDraw) {\r\n            this._waitingForDraw = true;\r\n            Util_1.Util.requestAnimFrame(() => {\r\n                this.draw();\r\n                this._waitingForDraw = false;\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    getIntersection(pos) {\r\n        if (!this.isListening() || !this.isVisible()) {\r\n            return null;\r\n        }\r\n        let spiralSearchDistance = 1;\r\n        let continueSearch = false;\r\n        while (true) {\r\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\r\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\r\n                const obj = this._getIntersection({\r\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\r\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\r\n                });\r\n                const shape = obj.shape;\r\n                if (shape) {\r\n                    return shape;\r\n                }\r\n                continueSearch = !!obj.antialiased;\r\n                if (!obj.antialiased) {\r\n                    break;\r\n                }\r\n            }\r\n            if (continueSearch) {\r\n                spiralSearchDistance += 1;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    _getIntersection(pos) {\r\n        const ratio = this.hitCanvas.pixelRatio;\r\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\r\n        const p3 = p[3];\r\n        if (p3 === 255) {\r\n            const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\r\n            const shape = Shape_1.shapes[HASH + colorKey];\r\n            if (shape) {\r\n                return {\r\n                    shape: shape,\r\n                };\r\n            }\r\n            return {\r\n                antialiased: true,\r\n            };\r\n        }\r\n        else if (p3 > 0) {\r\n            return {\r\n                antialiased: true,\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n    drawScene(can, top, bufferCanvas) {\r\n        const layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\r\n        this._fire(BEFORE_DRAW, {\r\n            node: this,\r\n        });\r\n        if (this.clearBeforeDraw()) {\r\n            canvas.getContext().clear();\r\n        }\r\n        Container_1.Container.prototype.drawScene.call(this, canvas, top, bufferCanvas);\r\n        this._fire(DRAW, {\r\n            node: this,\r\n        });\r\n        return this;\r\n    }\r\n    drawHit(can, top) {\r\n        const layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\r\n        if (layer && layer.clearBeforeDraw()) {\r\n            layer.getHitCanvas().getContext().clear();\r\n        }\r\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\r\n        return this;\r\n    }\r\n    enableHitGraph() {\r\n        this.hitGraphEnabled(true);\r\n        return this;\r\n    }\r\n    disableHitGraph() {\r\n        this.hitGraphEnabled(false);\r\n        return this;\r\n    }\r\n    setHitGraphEnabled(val) {\r\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\r\n        this.listening(val);\r\n    }\r\n    getHitGraphEnabled(val) {\r\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\r\n        return this.listening();\r\n    }\r\n    toggleHitCanvas() {\r\n        if (!this.parent || !this.parent['content']) {\r\n            return;\r\n        }\r\n        const parent = this.parent;\r\n        const added = !!this.hitCanvas._canvas.parentNode;\r\n        if (added) {\r\n            parent.content.removeChild(this.hitCanvas._canvas);\r\n        }\r\n        else {\r\n            parent.content.appendChild(this.hitCanvas._canvas);\r\n        }\r\n    }\r\n    destroy() {\r\n        Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\r\n        return super.destroy();\r\n    }\r\n}\r\nexports.Layer = Layer;\r\nLayer.prototype.nodeType = 'Layer';\r\n(0, Global_1._registerNode)(Layer);\r\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\r\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FastLayer = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Layer_1 = require(\"./Layer\");\r\nconst Global_1 = require(\"./Global\");\r\nclass FastLayer extends Layer_1.Layer {\r\n    constructor(attrs) {\r\n        super(attrs);\r\n        this.listening(false);\r\n        Util_1.Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\r\n    }\r\n}\r\nexports.FastLayer = FastLayer;\r\nFastLayer.prototype.nodeType = 'FastLayer';\r\n(0, Global_1._registerNode)(FastLayer);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Group = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Container_1 = require(\"./Container\");\r\nconst Global_1 = require(\"./Global\");\r\nclass Group extends Container_1.Container {\r\n    _validateAdd(child) {\r\n        const type = child.getType();\r\n        if (type !== 'Group' && type !== 'Shape') {\r\n            Util_1.Util.throw('You may only add groups and shapes to groups.');\r\n        }\r\n    }\r\n}\r\nexports.Group = Group;\r\nGroup.prototype.nodeType = 'Group';\r\n(0, Global_1._registerNode)(Group);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Animation = void 0;\r\nconst Global_1 = require(\"./Global\");\r\nconst Util_1 = require(\"./Util\");\r\nconst now = (function () {\r\n    if (Global_1.glob.performance && Global_1.glob.performance.now) {\r\n        return function () {\r\n            return Global_1.glob.performance.now();\r\n        };\r\n    }\r\n    return function () {\r\n        return new Date().getTime();\r\n    };\r\n})();\r\nclass Animation {\r\n    constructor(func, layers) {\r\n        this.id = Animation.animIdCounter++;\r\n        this.frame = {\r\n            time: 0,\r\n            timeDiff: 0,\r\n            lastTime: now(),\r\n            frameRate: 0,\r\n        };\r\n        this.func = func;\r\n        this.setLayers(layers);\r\n    }\r\n    setLayers(layers) {\r\n        let lays = [];\r\n        if (layers) {\r\n            lays = Array.isArray(layers) ? layers : [layers];\r\n        }\r\n        this.layers = lays;\r\n        return this;\r\n    }\r\n    getLayers() {\r\n        return this.layers;\r\n    }\r\n    addLayer(layer) {\r\n        const layers = this.layers;\r\n        const len = layers.length;\r\n        for (let n = 0; n < len; n++) {\r\n            if (layers[n]._id === layer._id) {\r\n                return false;\r\n            }\r\n        }\r\n        this.layers.push(layer);\r\n        return true;\r\n    }\r\n    isRunning() {\r\n        const a = Animation;\r\n        const animations = a.animations;\r\n        const len = animations.length;\r\n        for (let n = 0; n < len; n++) {\r\n            if (animations[n].id === this.id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    start() {\r\n        this.stop();\r\n        this.frame.timeDiff = 0;\r\n        this.frame.lastTime = now();\r\n        Animation._addAnimation(this);\r\n        return this;\r\n    }\r\n    stop() {\r\n        Animation._removeAnimation(this);\r\n        return this;\r\n    }\r\n    _updateFrameObject(time) {\r\n        this.frame.timeDiff = time - this.frame.lastTime;\r\n        this.frame.lastTime = time;\r\n        this.frame.time += this.frame.timeDiff;\r\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\r\n    }\r\n    static _addAnimation(anim) {\r\n        this.animations.push(anim);\r\n        this._handleAnimation();\r\n    }\r\n    static _removeAnimation(anim) {\r\n        const id = anim.id;\r\n        const animations = this.animations;\r\n        const len = animations.length;\r\n        for (let n = 0; n < len; n++) {\r\n            if (animations[n].id === id) {\r\n                this.animations.splice(n, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static _runFrames() {\r\n        const layerHash = {};\r\n        const animations = this.animations;\r\n        for (let n = 0; n < animations.length; n++) {\r\n            const anim = animations[n];\r\n            const layers = anim.layers;\r\n            const func = anim.func;\r\n            anim._updateFrameObject(now());\r\n            const layersLen = layers.length;\r\n            let needRedraw;\r\n            if (func) {\r\n                needRedraw = func.call(anim, anim.frame) !== false;\r\n            }\r\n            else {\r\n                needRedraw = true;\r\n            }\r\n            if (!needRedraw) {\r\n                continue;\r\n            }\r\n            for (let i = 0; i < layersLen; i++) {\r\n                const layer = layers[i];\r\n                if (layer._id !== undefined) {\r\n                    layerHash[layer._id] = layer;\r\n                }\r\n            }\r\n        }\r\n        for (const key in layerHash) {\r\n            if (!layerHash.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            layerHash[key].batchDraw();\r\n        }\r\n    }\r\n    static _animationLoop() {\r\n        const Anim = Animation;\r\n        if (Anim.animations.length) {\r\n            Anim._runFrames();\r\n            Util_1.Util.requestAnimFrame(Anim._animationLoop);\r\n        }\r\n        else {\r\n            Anim.animRunning = false;\r\n        }\r\n    }\r\n    static _handleAnimation() {\r\n        if (!this.animRunning) {\r\n            this.animRunning = true;\r\n            Util_1.Util.requestAnimFrame(this._animationLoop);\r\n        }\r\n    }\r\n}\r\nexports.Animation = Animation;\r\nAnimation.animations = [];\r\nAnimation.animIdCounter = 0;\r\nAnimation.animRunning = false;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Easings = exports.Tween = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst Animation_1 = require(\"./Animation\");\r\nconst Node_1 = require(\"./Node\");\r\nconst Global_1 = require(\"./Global\");\r\nconst blacklist = {\r\n    node: 1,\r\n    duration: 1,\r\n    easing: 1,\r\n    onFinish: 1,\r\n    yoyo: 1,\r\n}, PAUSED = 1, PLAYING = 2, REVERSING = 3, colorAttrs = ['fill', 'stroke', 'shadowColor'];\r\nlet idCounter = 0;\r\nclass TweenEngine {\r\n    constructor(prop, propFunc, func, begin, finish, duration, yoyo) {\r\n        this.prop = prop;\r\n        this.propFunc = propFunc;\r\n        this.begin = begin;\r\n        this._pos = begin;\r\n        this.duration = duration;\r\n        this._change = 0;\r\n        this.prevPos = 0;\r\n        this.yoyo = yoyo;\r\n        this._time = 0;\r\n        this._position = 0;\r\n        this._startTime = 0;\r\n        this._finish = 0;\r\n        this.func = func;\r\n        this._change = finish - this.begin;\r\n        this.pause();\r\n    }\r\n    fire(str) {\r\n        const handler = this[str];\r\n        if (handler) {\r\n            handler();\r\n        }\r\n    }\r\n    setTime(t) {\r\n        if (t > this.duration) {\r\n            if (this.yoyo) {\r\n                this._time = this.duration;\r\n                this.reverse();\r\n            }\r\n            else {\r\n                this.finish();\r\n            }\r\n        }\r\n        else if (t < 0) {\r\n            if (this.yoyo) {\r\n                this._time = 0;\r\n                this.play();\r\n            }\r\n            else {\r\n                this.reset();\r\n            }\r\n        }\r\n        else {\r\n            this._time = t;\r\n            this.update();\r\n        }\r\n    }\r\n    getTime() {\r\n        return this._time;\r\n    }\r\n    setPosition(p) {\r\n        this.prevPos = this._pos;\r\n        this.propFunc(p);\r\n        this._pos = p;\r\n    }\r\n    getPosition(t) {\r\n        if (t === undefined) {\r\n            t = this._time;\r\n        }\r\n        return this.func(t, this.begin, this._change, this.duration);\r\n    }\r\n    play() {\r\n        this.state = PLAYING;\r\n        this._startTime = this.getTimer() - this._time;\r\n        this.onEnterFrame();\r\n        this.fire('onPlay');\r\n    }\r\n    reverse() {\r\n        this.state = REVERSING;\r\n        this._time = this.duration - this._time;\r\n        this._startTime = this.getTimer() - this._time;\r\n        this.onEnterFrame();\r\n        this.fire('onReverse');\r\n    }\r\n    seek(t) {\r\n        this.pause();\r\n        this._time = t;\r\n        this.update();\r\n        this.fire('onSeek');\r\n    }\r\n    reset() {\r\n        this.pause();\r\n        this._time = 0;\r\n        this.update();\r\n        this.fire('onReset');\r\n    }\r\n    finish() {\r\n        this.pause();\r\n        this._time = this.duration;\r\n        this.update();\r\n        this.fire('onFinish');\r\n    }\r\n    update() {\r\n        this.setPosition(this.getPosition(this._time));\r\n        this.fire('onUpdate');\r\n    }\r\n    onEnterFrame() {\r\n        const t = this.getTimer() - this._startTime;\r\n        if (this.state === PLAYING) {\r\n            this.setTime(t);\r\n        }\r\n        else if (this.state === REVERSING) {\r\n            this.setTime(this.duration - t);\r\n        }\r\n    }\r\n    pause() {\r\n        this.state = PAUSED;\r\n        this.fire('onPause');\r\n    }\r\n    getTimer() {\r\n        return new Date().getTime();\r\n    }\r\n}\r\nclass Tween {\r\n    constructor(config) {\r\n        const that = this, node = config.node, nodeId = node._id, easing = config.easing || exports.Easings.Linear, yoyo = !!config.yoyo;\r\n        let duration, key;\r\n        if (typeof config.duration === 'undefined') {\r\n            duration = 0.3;\r\n        }\r\n        else if (config.duration === 0) {\r\n            duration = 0.001;\r\n        }\r\n        else {\r\n            duration = config.duration;\r\n        }\r\n        this.node = node;\r\n        this._id = idCounter++;\r\n        const layers = node.getLayer() ||\r\n            (node instanceof Global_1.Konva['Stage'] ? node.getLayers() : null);\r\n        if (!layers) {\r\n            Util_1.Util.error('Tween constructor have `node` that is not in a layer. Please add node into layer first.');\r\n        }\r\n        this.anim = new Animation_1.Animation(function () {\r\n            that.tween.onEnterFrame();\r\n        }, layers);\r\n        this.tween = new TweenEngine(key, function (i) {\r\n            that._tweenFunc(i);\r\n        }, easing, 0, 1, duration * 1000, yoyo);\r\n        this._addListeners();\r\n        if (!Tween.attrs[nodeId]) {\r\n            Tween.attrs[nodeId] = {};\r\n        }\r\n        if (!Tween.attrs[nodeId][this._id]) {\r\n            Tween.attrs[nodeId][this._id] = {};\r\n        }\r\n        if (!Tween.tweens[nodeId]) {\r\n            Tween.tweens[nodeId] = {};\r\n        }\r\n        for (key in config) {\r\n            if (blacklist[key] === undefined) {\r\n                this._addAttr(key, config[key]);\r\n            }\r\n        }\r\n        this.reset();\r\n        this.onFinish = config.onFinish;\r\n        this.onReset = config.onReset;\r\n        this.onUpdate = config.onUpdate;\r\n    }\r\n    _addAttr(key, end) {\r\n        const node = this.node, nodeId = node._id;\r\n        let diff, len, trueEnd, trueStart, endRGBA;\r\n        const tweenId = Tween.tweens[nodeId][key];\r\n        if (tweenId) {\r\n            delete Tween.attrs[nodeId][tweenId][key];\r\n        }\r\n        let start = node.getAttr(key);\r\n        if (Util_1.Util._isArray(end)) {\r\n            diff = [];\r\n            len = Math.max(end.length, start.length);\r\n            if (key === 'points' && end.length !== start.length) {\r\n                if (end.length > start.length) {\r\n                    trueStart = start;\r\n                    start = Util_1.Util._prepareArrayForTween(start, end, node.closed());\r\n                }\r\n                else {\r\n                    trueEnd = end;\r\n                    end = Util_1.Util._prepareArrayForTween(end, start, node.closed());\r\n                }\r\n            }\r\n            if (key.indexOf('fill') === 0) {\r\n                for (let n = 0; n < len; n++) {\r\n                    if (n % 2 === 0) {\r\n                        diff.push(end[n] - start[n]);\r\n                    }\r\n                    else {\r\n                        const startRGBA = Util_1.Util.colorToRGBA(start[n]);\r\n                        endRGBA = Util_1.Util.colorToRGBA(end[n]);\r\n                        start[n] = startRGBA;\r\n                        diff.push({\r\n                            r: endRGBA.r - startRGBA.r,\r\n                            g: endRGBA.g - startRGBA.g,\r\n                            b: endRGBA.b - startRGBA.b,\r\n                            a: endRGBA.a - startRGBA.a,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let n = 0; n < len; n++) {\r\n                    diff.push(end[n] - start[n]);\r\n                }\r\n            }\r\n        }\r\n        else if (colorAttrs.indexOf(key) !== -1) {\r\n            start = Util_1.Util.colorToRGBA(start);\r\n            endRGBA = Util_1.Util.colorToRGBA(end);\r\n            diff = {\r\n                r: endRGBA.r - start.r,\r\n                g: endRGBA.g - start.g,\r\n                b: endRGBA.b - start.b,\r\n                a: endRGBA.a - start.a,\r\n            };\r\n        }\r\n        else {\r\n            diff = end - start;\r\n        }\r\n        Tween.attrs[nodeId][this._id][key] = {\r\n            start: start,\r\n            diff: diff,\r\n            end: end,\r\n            trueEnd: trueEnd,\r\n            trueStart: trueStart,\r\n        };\r\n        Tween.tweens[nodeId][key] = this._id;\r\n    }\r\n    _tweenFunc(i) {\r\n        const node = this.node, attrs = Tween.attrs[node._id][this._id];\r\n        let key, attr, start, diff, newVal, n, len, end;\r\n        for (key in attrs) {\r\n            attr = attrs[key];\r\n            start = attr.start;\r\n            diff = attr.diff;\r\n            end = attr.end;\r\n            if (Util_1.Util._isArray(start)) {\r\n                newVal = [];\r\n                len = Math.max(start.length, end.length);\r\n                if (key.indexOf('fill') === 0) {\r\n                    for (n = 0; n < len; n++) {\r\n                        if (n % 2 === 0) {\r\n                            newVal.push((start[n] || 0) + diff[n] * i);\r\n                        }\r\n                        else {\r\n                            newVal.push('rgba(' +\r\n                                Math.round(start[n].r + diff[n].r * i) +\r\n                                ',' +\r\n                                Math.round(start[n].g + diff[n].g * i) +\r\n                                ',' +\r\n                                Math.round(start[n].b + diff[n].b * i) +\r\n                                ',' +\r\n                                (start[n].a + diff[n].a * i) +\r\n                                ')');\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (n = 0; n < len; n++) {\r\n                        newVal.push((start[n] || 0) + diff[n] * i);\r\n                    }\r\n                }\r\n            }\r\n            else if (colorAttrs.indexOf(key) !== -1) {\r\n                newVal =\r\n                    'rgba(' +\r\n                        Math.round(start.r + diff.r * i) +\r\n                        ',' +\r\n                        Math.round(start.g + diff.g * i) +\r\n                        ',' +\r\n                        Math.round(start.b + diff.b * i) +\r\n                        ',' +\r\n                        (start.a + diff.a * i) +\r\n                        ')';\r\n            }\r\n            else {\r\n                newVal = start + diff * i;\r\n            }\r\n            node.setAttr(key, newVal);\r\n        }\r\n    }\r\n    _addListeners() {\r\n        this.tween.onPlay = () => {\r\n            this.anim.start();\r\n        };\r\n        this.tween.onReverse = () => {\r\n            this.anim.start();\r\n        };\r\n        this.tween.onPause = () => {\r\n            this.anim.stop();\r\n        };\r\n        this.tween.onFinish = () => {\r\n            const node = this.node;\r\n            const attrs = Tween.attrs[node._id][this._id];\r\n            if (attrs.points && attrs.points.trueEnd) {\r\n                node.setAttr('points', attrs.points.trueEnd);\r\n            }\r\n            if (this.onFinish) {\r\n                this.onFinish.call(this);\r\n            }\r\n        };\r\n        this.tween.onReset = () => {\r\n            const node = this.node;\r\n            const attrs = Tween.attrs[node._id][this._id];\r\n            if (attrs.points && attrs.points.trueStart) {\r\n                node.points(attrs.points.trueStart);\r\n            }\r\n            if (this.onReset) {\r\n                this.onReset();\r\n            }\r\n        };\r\n        this.tween.onUpdate = () => {\r\n            if (this.onUpdate) {\r\n                this.onUpdate.call(this);\r\n            }\r\n        };\r\n    }\r\n    play() {\r\n        this.tween.play();\r\n        return this;\r\n    }\r\n    reverse() {\r\n        this.tween.reverse();\r\n        return this;\r\n    }\r\n    reset() {\r\n        this.tween.reset();\r\n        return this;\r\n    }\r\n    seek(t) {\r\n        this.tween.seek(t * 1000);\r\n        return this;\r\n    }\r\n    pause() {\r\n        this.tween.pause();\r\n        return this;\r\n    }\r\n    finish() {\r\n        this.tween.finish();\r\n        return this;\r\n    }\r\n    destroy() {\r\n        const nodeId = this.node._id, thisId = this._id, attrs = Tween.tweens[nodeId];\r\n        this.pause();\r\n        if (this.anim) {\r\n            this.anim.stop();\r\n        }\r\n        for (const key in attrs) {\r\n            delete Tween.tweens[nodeId][key];\r\n        }\r\n        delete Tween.attrs[nodeId][thisId];\r\n        if (Tween.tweens[nodeId]) {\r\n            if (Object.keys(Tween.tweens[nodeId]).length === 0) {\r\n                delete Tween.tweens[nodeId];\r\n            }\r\n            if (Object.keys(Tween.attrs[nodeId]).length === 0) {\r\n                delete Tween.attrs[nodeId];\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Tween = Tween;\r\nTween.attrs = {};\r\nTween.tweens = {};\r\nNode_1.Node.prototype.to = function (params) {\r\n    const onFinish = params.onFinish;\r\n    params.node = this;\r\n    params.onFinish = function () {\r\n        this.destroy();\r\n        if (onFinish) {\r\n            onFinish();\r\n        }\r\n    };\r\n    const tween = new Tween(params);\r\n    tween.play();\r\n};\r\nexports.Easings = {\r\n    BackEaseIn(t, b, c, d) {\r\n        const s = 1.70158;\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    },\r\n    BackEaseOut(t, b, c, d) {\r\n        const s = 1.70158;\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    },\r\n    BackEaseInOut(t, b, c, d) {\r\n        let s = 1.70158;\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\r\n        }\r\n        return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\r\n    },\r\n    ElasticEaseIn(t, b, c, d, a, p) {\r\n        let s = 0;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d) === 1) {\r\n            return b + c;\r\n        }\r\n        if (!p) {\r\n            p = d * 0.3;\r\n        }\r\n        if (!a || a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        return (-(a *\r\n            Math.pow(2, 10 * (t -= 1)) *\r\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b);\r\n    },\r\n    ElasticEaseOut(t, b, c, d, a, p) {\r\n        let s = 0;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d) === 1) {\r\n            return b + c;\r\n        }\r\n        if (!p) {\r\n            p = d * 0.3;\r\n        }\r\n        if (!a || a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        return (a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) +\r\n            c +\r\n            b);\r\n    },\r\n    ElasticEaseInOut(t, b, c, d, a, p) {\r\n        let s = 0;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d / 2) === 2) {\r\n            return b + c;\r\n        }\r\n        if (!p) {\r\n            p = d * (0.3 * 1.5);\r\n        }\r\n        if (!a || a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        if (t < 1) {\r\n            return (-0.5 *\r\n                (a *\r\n                    Math.pow(2, 10 * (t -= 1)) *\r\n                    Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\r\n                b);\r\n        }\r\n        return (a *\r\n            Math.pow(2, -10 * (t -= 1)) *\r\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\r\n            0.5 +\r\n            c +\r\n            b);\r\n    },\r\n    BounceEaseOut(t, b, c, d) {\r\n        if ((t /= d) < 1 / 2.75) {\r\n            return c * (7.5625 * t * t) + b;\r\n        }\r\n        else if (t < 2 / 2.75) {\r\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\r\n        }\r\n        else if (t < 2.5 / 2.75) {\r\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\r\n        }\r\n        else {\r\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\r\n        }\r\n    },\r\n    BounceEaseIn(t, b, c, d) {\r\n        return c - exports.Easings.BounceEaseOut(d - t, 0, c, d) + b;\r\n    },\r\n    BounceEaseInOut(t, b, c, d) {\r\n        if (t < d / 2) {\r\n            return exports.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\r\n        }\r\n        else {\r\n            return exports.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n        }\r\n    },\r\n    EaseIn(t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n    },\r\n    EaseOut(t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    },\r\n    EaseInOut(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t + b;\r\n        }\r\n        return (-c / 2) * (--t * (t - 2) - 1) + b;\r\n    },\r\n    StrongEaseIn(t, b, c, d) {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    },\r\n    StrongEaseOut(t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    },\r\n    StrongEaseInOut(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t * t * t * t + b;\r\n        }\r\n        return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\r\n    },\r\n    Linear(t, b, c, d) {\r\n        return (c * t) / d + b;\r\n    },\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Konva = void 0;\r\nconst Global_1 = require(\"./Global\");\r\nconst Util_1 = require(\"./Util\");\r\nconst Node_1 = require(\"./Node\");\r\nconst Container_1 = require(\"./Container\");\r\nconst Stage_1 = require(\"./Stage\");\r\nconst Layer_1 = require(\"./Layer\");\r\nconst FastLayer_1 = require(\"./FastLayer\");\r\nconst Group_1 = require(\"./Group\");\r\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\r\nconst Shape_1 = require(\"./Shape\");\r\nconst Animation_1 = require(\"./Animation\");\r\nconst Tween_1 = require(\"./Tween\");\r\nconst Context_1 = require(\"./Context\");\r\nconst Canvas_1 = require(\"./Canvas\");\r\nexports.Konva = Util_1.Util._assign(Global_1.Konva, {\r\n    Util: Util_1.Util,\r\n    Transform: Util_1.Transform,\r\n    Node: Node_1.Node,\r\n    Container: Container_1.Container,\r\n    Stage: Stage_1.Stage,\r\n    stages: Stage_1.stages,\r\n    Layer: Layer_1.Layer,\r\n    FastLayer: FastLayer_1.FastLayer,\r\n    Group: Group_1.Group,\r\n    DD: DragAndDrop_1.DD,\r\n    Shape: Shape_1.Shape,\r\n    shapes: Shape_1.shapes,\r\n    Animation: Animation_1.Animation,\r\n    Tween: Tween_1.Tween,\r\n    Easings: Tween_1.Easings,\r\n    Context: Context_1.Context,\r\n    Canvas: Canvas_1.Canvas,\r\n});\r\nexports.default = exports.Konva;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Arc = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_2 = require(\"../Global\");\r\nclass Arc extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        const angle = Global_1.Konva.getAngle(this.angle()), clockwise = this.clockwise();\r\n        context.beginPath();\r\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\r\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        return this.outerRadius() * 2;\r\n    }\r\n    getHeight() {\r\n        return this.outerRadius() * 2;\r\n    }\r\n    setWidth(width) {\r\n        this.outerRadius(width / 2);\r\n    }\r\n    setHeight(height) {\r\n        this.outerRadius(height / 2);\r\n    }\r\n    getSelfRect() {\r\n        const innerRadius = this.innerRadius();\r\n        const outerRadius = this.outerRadius();\r\n        const clockwise = this.clockwise();\r\n        const angle = Global_1.Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\r\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\r\n        const boundRightRatio = 1;\r\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\r\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\r\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\r\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\r\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\r\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\r\n        return {\r\n            x: boundLeft,\r\n            y: clockwise ? -1 * boundBottom : boundTop,\r\n            width: boundRight - boundLeft,\r\n            height: boundBottom - boundTop,\r\n        };\r\n    }\r\n}\r\nexports.Arc = Arc;\r\nArc.prototype._centroid = true;\r\nArc.prototype.className = 'Arc';\r\nArc.prototype._attrsAffectingSize = [\r\n    'innerRadius',\r\n    'outerRadius',\r\n    'angle',\r\n    'clockwise',\r\n];\r\n(0, Global_2._registerNode)(Arc);\r\nFactory_1.Factory.addGetterSetter(Arc, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Arc, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Arc, 'angle', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Arc, 'clockwise', false, (0, Validators_1.getBooleanValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Line = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Validators_1 = require(\"../Validators\");\r\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\r\n    const d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\r\n    return [p1x, p1y, p2x, p2y];\r\n}\r\nfunction expandPoints(p, tension) {\r\n    const len = p.length, allPoints = [];\r\n    for (let n = 2; n < len - 2; n += 2) {\r\n        const cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\r\n        if (isNaN(cp[0])) {\r\n            continue;\r\n        }\r\n        allPoints.push(cp[0]);\r\n        allPoints.push(cp[1]);\r\n        allPoints.push(p[n]);\r\n        allPoints.push(p[n + 1]);\r\n        allPoints.push(cp[2]);\r\n        allPoints.push(cp[3]);\r\n    }\r\n    return allPoints;\r\n}\r\nclass Line extends Shape_1.Shape {\r\n    constructor(config) {\r\n        super(config);\r\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\r\n            this._clearCache('tensionPoints');\r\n        });\r\n    }\r\n    _sceneFunc(context) {\r\n        const points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier();\r\n        if (!length) {\r\n            return;\r\n        }\r\n        let n = 0;\r\n        context.beginPath();\r\n        context.moveTo(points[0], points[1]);\r\n        if (tension !== 0 && length > 4) {\r\n            const tp = this.getTensionPoints();\r\n            const len = tp.length;\r\n            n = closed ? 0 : 4;\r\n            if (!closed) {\r\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\r\n            }\r\n            while (n < len - 2) {\r\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\r\n            }\r\n            if (!closed) {\r\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\r\n            }\r\n        }\r\n        else if (bezier) {\r\n            n = 2;\r\n            while (n < length) {\r\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\r\n            }\r\n        }\r\n        else {\r\n            for (n = 2; n < length; n += 2) {\r\n                context.lineTo(points[n], points[n + 1]);\r\n            }\r\n        }\r\n        if (closed) {\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        else {\r\n            context.strokeShape(this);\r\n        }\r\n    }\r\n    getTensionPoints() {\r\n        return this._getCache('tensionPoints', this._getTensionPoints);\r\n    }\r\n    _getTensionPoints() {\r\n        if (this.closed()) {\r\n            return this._getTensionPointsClosed();\r\n        }\r\n        else {\r\n            return expandPoints(this.points(), this.tension());\r\n        }\r\n    }\r\n    _getTensionPointsClosed() {\r\n        const p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\r\n            .concat(middle)\r\n            .concat([\r\n            lastControlPoints[0],\r\n            lastControlPoints[1],\r\n            p[len - 2],\r\n            p[len - 1],\r\n            lastControlPoints[2],\r\n            lastControlPoints[3],\r\n            firstControlPoints[0],\r\n            firstControlPoints[1],\r\n            p[0],\r\n            p[1],\r\n        ]);\r\n        return tp;\r\n    }\r\n    getWidth() {\r\n        return this.getSelfRect().width;\r\n    }\r\n    getHeight() {\r\n        return this.getSelfRect().height;\r\n    }\r\n    getSelfRect() {\r\n        let points = this.points();\r\n        if (points.length < 4) {\r\n            return {\r\n                x: points[0] || 0,\r\n                y: points[1] || 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        }\r\n        if (this.tension() !== 0) {\r\n            points = [\r\n                points[0],\r\n                points[1],\r\n                ...this._getTensionPoints(),\r\n                points[points.length - 2],\r\n                points[points.length - 1],\r\n            ];\r\n        }\r\n        else {\r\n            points = this.points();\r\n        }\r\n        let minX = points[0];\r\n        let maxX = points[0];\r\n        let minY = points[1];\r\n        let maxY = points[1];\r\n        let x, y;\r\n        for (let i = 0; i < points.length / 2; i++) {\r\n            x = points[i * 2];\r\n            y = points[i * 2 + 1];\r\n            minX = Math.min(minX, x);\r\n            maxX = Math.max(maxX, x);\r\n            minY = Math.min(minY, y);\r\n            maxY = Math.max(maxY, y);\r\n        }\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    }\r\n}\r\nexports.Line = Line;\r\nLine.prototype.className = 'Line';\r\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\r\n(0, Global_1._registerNode)(Line);\r\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\r\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\r\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Line, 'points', [], (0, Validators_1.getNumberArrayValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.t2length = exports.getQuadraticArcLength = exports.getCubicArcLength = exports.binomialCoefficients = exports.cValues = exports.tValues = void 0;\r\nexports.tValues = [\r\n    [],\r\n    [],\r\n    [\r\n        -0.5773502691896257645091487805019574556476,\r\n        0.5773502691896257645091487805019574556476,\r\n    ],\r\n    [\r\n        0, -0.7745966692414833770358530799564799221665,\r\n        0.7745966692414833770358530799564799221665,\r\n    ],\r\n    [\r\n        -0.3399810435848562648026657591032446872005,\r\n        0.3399810435848562648026657591032446872005,\r\n        -0.8611363115940525752239464888928095050957,\r\n        0.8611363115940525752239464888928095050957,\r\n    ],\r\n    [\r\n        0, -0.5384693101056830910363144207002088049672,\r\n        0.5384693101056830910363144207002088049672,\r\n        -0.9061798459386639927976268782993929651256,\r\n        0.9061798459386639927976268782993929651256,\r\n    ],\r\n    [\r\n        0.6612093864662645136613995950199053470064,\r\n        -0.6612093864662645136613995950199053470064,\r\n        -0.2386191860831969086305017216807119354186,\r\n        0.2386191860831969086305017216807119354186,\r\n        -0.9324695142031520278123015544939946091347,\r\n        0.9324695142031520278123015544939946091347,\r\n    ],\r\n    [\r\n        0, 0.4058451513773971669066064120769614633473,\r\n        -0.4058451513773971669066064120769614633473,\r\n        -0.7415311855993944398638647732807884070741,\r\n        0.7415311855993944398638647732807884070741,\r\n        -0.9491079123427585245261896840478512624007,\r\n        0.9491079123427585245261896840478512624007,\r\n    ],\r\n    [\r\n        -0.1834346424956498049394761423601839806667,\r\n        0.1834346424956498049394761423601839806667,\r\n        -0.5255324099163289858177390491892463490419,\r\n        0.5255324099163289858177390491892463490419,\r\n        -0.7966664774136267395915539364758304368371,\r\n        0.7966664774136267395915539364758304368371,\r\n        -0.9602898564975362316835608685694729904282,\r\n        0.9602898564975362316835608685694729904282,\r\n    ],\r\n    [\r\n        0, -0.8360311073266357942994297880697348765441,\r\n        0.8360311073266357942994297880697348765441,\r\n        -0.9681602395076260898355762029036728700494,\r\n        0.9681602395076260898355762029036728700494,\r\n        -0.3242534234038089290385380146433366085719,\r\n        0.3242534234038089290385380146433366085719,\r\n        -0.6133714327005903973087020393414741847857,\r\n        0.6133714327005903973087020393414741847857,\r\n    ],\r\n    [\r\n        -0.1488743389816312108848260011297199846175,\r\n        0.1488743389816312108848260011297199846175,\r\n        -0.4333953941292471907992659431657841622,\r\n        0.4333953941292471907992659431657841622,\r\n        -0.6794095682990244062343273651148735757692,\r\n        0.6794095682990244062343273651148735757692,\r\n        -0.8650633666889845107320966884234930485275,\r\n        0.8650633666889845107320966884234930485275,\r\n        -0.9739065285171717200779640120844520534282,\r\n        0.9739065285171717200779640120844520534282,\r\n    ],\r\n    [\r\n        0, -0.2695431559523449723315319854008615246796,\r\n        0.2695431559523449723315319854008615246796,\r\n        -0.5190961292068118159257256694586095544802,\r\n        0.5190961292068118159257256694586095544802,\r\n        -0.7301520055740493240934162520311534580496,\r\n        0.7301520055740493240934162520311534580496,\r\n        -0.8870625997680952990751577693039272666316,\r\n        0.8870625997680952990751577693039272666316,\r\n        -0.9782286581460569928039380011228573907714,\r\n        0.9782286581460569928039380011228573907714,\r\n    ],\r\n    [\r\n        -0.1252334085114689154724413694638531299833,\r\n        0.1252334085114689154724413694638531299833,\r\n        -0.3678314989981801937526915366437175612563,\r\n        0.3678314989981801937526915366437175612563,\r\n        -0.587317954286617447296702418940534280369,\r\n        0.587317954286617447296702418940534280369,\r\n        -0.7699026741943046870368938332128180759849,\r\n        0.7699026741943046870368938332128180759849,\r\n        -0.9041172563704748566784658661190961925375,\r\n        0.9041172563704748566784658661190961925375,\r\n        -0.9815606342467192506905490901492808229601,\r\n        0.9815606342467192506905490901492808229601,\r\n    ],\r\n    [\r\n        0, -0.2304583159551347940655281210979888352115,\r\n        0.2304583159551347940655281210979888352115,\r\n        -0.4484927510364468528779128521276398678019,\r\n        0.4484927510364468528779128521276398678019,\r\n        -0.6423493394403402206439846069955156500716,\r\n        0.6423493394403402206439846069955156500716,\r\n        -0.8015780907333099127942064895828598903056,\r\n        0.8015780907333099127942064895828598903056,\r\n        -0.9175983992229779652065478365007195123904,\r\n        0.9175983992229779652065478365007195123904,\r\n        -0.9841830547185881494728294488071096110649,\r\n        0.9841830547185881494728294488071096110649,\r\n    ],\r\n    [\r\n        -0.1080549487073436620662446502198347476119,\r\n        0.1080549487073436620662446502198347476119,\r\n        -0.3191123689278897604356718241684754668342,\r\n        0.3191123689278897604356718241684754668342,\r\n        -0.5152486363581540919652907185511886623088,\r\n        0.5152486363581540919652907185511886623088,\r\n        -0.6872929048116854701480198030193341375384,\r\n        0.6872929048116854701480198030193341375384,\r\n        -0.8272013150697649931897947426503949610397,\r\n        0.8272013150697649931897947426503949610397,\r\n        -0.928434883663573517336391139377874264477,\r\n        0.928434883663573517336391139377874264477,\r\n        -0.986283808696812338841597266704052801676,\r\n        0.986283808696812338841597266704052801676,\r\n    ],\r\n    [\r\n        0, -0.2011940939974345223006283033945962078128,\r\n        0.2011940939974345223006283033945962078128,\r\n        -0.3941513470775633698972073709810454683627,\r\n        0.3941513470775633698972073709810454683627,\r\n        -0.5709721726085388475372267372539106412383,\r\n        0.5709721726085388475372267372539106412383,\r\n        -0.7244177313601700474161860546139380096308,\r\n        0.7244177313601700474161860546139380096308,\r\n        -0.8482065834104272162006483207742168513662,\r\n        0.8482065834104272162006483207742168513662,\r\n        -0.9372733924007059043077589477102094712439,\r\n        0.9372733924007059043077589477102094712439,\r\n        -0.9879925180204854284895657185866125811469,\r\n        0.9879925180204854284895657185866125811469,\r\n    ],\r\n    [\r\n        -0.0950125098376374401853193354249580631303,\r\n        0.0950125098376374401853193354249580631303,\r\n        -0.281603550779258913230460501460496106486,\r\n        0.281603550779258913230460501460496106486,\r\n        -0.45801677765722738634241944298357757354,\r\n        0.45801677765722738634241944298357757354,\r\n        -0.6178762444026437484466717640487910189918,\r\n        0.6178762444026437484466717640487910189918,\r\n        -0.7554044083550030338951011948474422683538,\r\n        0.7554044083550030338951011948474422683538,\r\n        -0.8656312023878317438804678977123931323873,\r\n        0.8656312023878317438804678977123931323873,\r\n        -0.9445750230732325760779884155346083450911,\r\n        0.9445750230732325760779884155346083450911,\r\n        -0.9894009349916499325961541734503326274262,\r\n        0.9894009349916499325961541734503326274262,\r\n    ],\r\n    [\r\n        0, -0.1784841814958478558506774936540655574754,\r\n        0.1784841814958478558506774936540655574754,\r\n        -0.3512317634538763152971855170953460050405,\r\n        0.3512317634538763152971855170953460050405,\r\n        -0.5126905370864769678862465686295518745829,\r\n        0.5126905370864769678862465686295518745829,\r\n        -0.6576711592166907658503022166430023351478,\r\n        0.6576711592166907658503022166430023351478,\r\n        -0.7815140038968014069252300555204760502239,\r\n        0.7815140038968014069252300555204760502239,\r\n        -0.8802391537269859021229556944881556926234,\r\n        0.8802391537269859021229556944881556926234,\r\n        -0.9506755217687677612227169578958030214433,\r\n        0.9506755217687677612227169578958030214433,\r\n        -0.9905754753144173356754340199406652765077,\r\n        0.9905754753144173356754340199406652765077,\r\n    ],\r\n    [\r\n        -0.0847750130417353012422618529357838117333,\r\n        0.0847750130417353012422618529357838117333,\r\n        -0.2518862256915055095889728548779112301628,\r\n        0.2518862256915055095889728548779112301628,\r\n        -0.4117511614628426460359317938330516370789,\r\n        0.4117511614628426460359317938330516370789,\r\n        -0.5597708310739475346078715485253291369276,\r\n        0.5597708310739475346078715485253291369276,\r\n        -0.6916870430603532078748910812888483894522,\r\n        0.6916870430603532078748910812888483894522,\r\n        -0.8037049589725231156824174550145907971032,\r\n        0.8037049589725231156824174550145907971032,\r\n        -0.8926024664975557392060605911271455154078,\r\n        0.8926024664975557392060605911271455154078,\r\n        -0.9558239495713977551811958929297763099728,\r\n        0.9558239495713977551811958929297763099728,\r\n        -0.9915651684209309467300160047061507702525,\r\n        0.9915651684209309467300160047061507702525,\r\n    ],\r\n    [\r\n        0, -0.1603586456402253758680961157407435495048,\r\n        0.1603586456402253758680961157407435495048,\r\n        -0.3165640999636298319901173288498449178922,\r\n        0.3165640999636298319901173288498449178922,\r\n        -0.4645707413759609457172671481041023679762,\r\n        0.4645707413759609457172671481041023679762,\r\n        -0.6005453046616810234696381649462392798683,\r\n        0.6005453046616810234696381649462392798683,\r\n        -0.7209661773352293786170958608237816296571,\r\n        0.7209661773352293786170958608237816296571,\r\n        -0.8227146565371428249789224867127139017745,\r\n        0.8227146565371428249789224867127139017745,\r\n        -0.9031559036148179016426609285323124878093,\r\n        0.9031559036148179016426609285323124878093,\r\n        -0.960208152134830030852778840687651526615,\r\n        0.960208152134830030852778840687651526615,\r\n        -0.9924068438435844031890176702532604935893,\r\n        0.9924068438435844031890176702532604935893,\r\n    ],\r\n    [\r\n        -0.0765265211334973337546404093988382110047,\r\n        0.0765265211334973337546404093988382110047,\r\n        -0.227785851141645078080496195368574624743,\r\n        0.227785851141645078080496195368574624743,\r\n        -0.3737060887154195606725481770249272373957,\r\n        0.3737060887154195606725481770249272373957,\r\n        -0.5108670019508270980043640509552509984254,\r\n        0.5108670019508270980043640509552509984254,\r\n        -0.6360536807265150254528366962262859367433,\r\n        0.6360536807265150254528366962262859367433,\r\n        -0.7463319064601507926143050703556415903107,\r\n        0.7463319064601507926143050703556415903107,\r\n        -0.8391169718222188233945290617015206853296,\r\n        0.8391169718222188233945290617015206853296,\r\n        -0.9122344282513259058677524412032981130491,\r\n        0.9122344282513259058677524412032981130491,\r\n        -0.963971927277913791267666131197277221912,\r\n        0.963971927277913791267666131197277221912,\r\n        -0.9931285991850949247861223884713202782226,\r\n        0.9931285991850949247861223884713202782226,\r\n    ],\r\n    [\r\n        0, -0.1455618541608950909370309823386863301163,\r\n        0.1455618541608950909370309823386863301163,\r\n        -0.288021316802401096600792516064600319909,\r\n        0.288021316802401096600792516064600319909,\r\n        -0.4243421202074387835736688885437880520964,\r\n        0.4243421202074387835736688885437880520964,\r\n        -0.551618835887219807059018796724313286622,\r\n        0.551618835887219807059018796724313286622,\r\n        -0.667138804197412319305966669990339162597,\r\n        0.667138804197412319305966669990339162597,\r\n        -0.7684399634756779086158778513062280348209,\r\n        0.7684399634756779086158778513062280348209,\r\n        -0.8533633645833172836472506385875676702761,\r\n        0.8533633645833172836472506385875676702761,\r\n        -0.9200993341504008287901871337149688941591,\r\n        0.9200993341504008287901871337149688941591,\r\n        -0.9672268385663062943166222149076951614246,\r\n        0.9672268385663062943166222149076951614246,\r\n        -0.9937521706203895002602420359379409291933,\r\n        0.9937521706203895002602420359379409291933,\r\n    ],\r\n    [\r\n        -0.0697392733197222212138417961186280818222,\r\n        0.0697392733197222212138417961186280818222,\r\n        -0.2078604266882212854788465339195457342156,\r\n        0.2078604266882212854788465339195457342156,\r\n        -0.3419358208920842251581474204273796195591,\r\n        0.3419358208920842251581474204273796195591,\r\n        -0.4693558379867570264063307109664063460953,\r\n        0.4693558379867570264063307109664063460953,\r\n        -0.5876404035069115929588769276386473488776,\r\n        0.5876404035069115929588769276386473488776,\r\n        -0.6944872631866827800506898357622567712673,\r\n        0.6944872631866827800506898357622567712673,\r\n        -0.7878168059792081620042779554083515213881,\r\n        0.7878168059792081620042779554083515213881,\r\n        -0.8658125777203001365364256370193787290847,\r\n        0.8658125777203001365364256370193787290847,\r\n        -0.9269567721871740005206929392590531966353,\r\n        0.9269567721871740005206929392590531966353,\r\n        -0.9700604978354287271239509867652687108059,\r\n        0.9700604978354287271239509867652687108059,\r\n        -0.994294585482399292073031421161298980393,\r\n        0.994294585482399292073031421161298980393,\r\n    ],\r\n    [\r\n        0, -0.1332568242984661109317426822417661370104,\r\n        0.1332568242984661109317426822417661370104,\r\n        -0.264135680970344930533869538283309602979,\r\n        0.264135680970344930533869538283309602979,\r\n        -0.390301038030290831421488872880605458578,\r\n        0.390301038030290831421488872880605458578,\r\n        -0.5095014778460075496897930478668464305448,\r\n        0.5095014778460075496897930478668464305448,\r\n        -0.6196098757636461563850973116495956533871,\r\n        0.6196098757636461563850973116495956533871,\r\n        -0.7186613631319501944616244837486188483299,\r\n        0.7186613631319501944616244837486188483299,\r\n        -0.8048884016188398921511184069967785579414,\r\n        0.8048884016188398921511184069967785579414,\r\n        -0.8767523582704416673781568859341456716389,\r\n        0.8767523582704416673781568859341456716389,\r\n        -0.9329710868260161023491969890384229782357,\r\n        0.9329710868260161023491969890384229782357,\r\n        -0.9725424712181152319560240768207773751816,\r\n        0.9725424712181152319560240768207773751816,\r\n        -0.9947693349975521235239257154455743605736,\r\n        0.9947693349975521235239257154455743605736,\r\n    ],\r\n    [\r\n        -0.0640568928626056260850430826247450385909,\r\n        0.0640568928626056260850430826247450385909,\r\n        -0.1911188674736163091586398207570696318404,\r\n        0.1911188674736163091586398207570696318404,\r\n        -0.3150426796961633743867932913198102407864,\r\n        0.3150426796961633743867932913198102407864,\r\n        -0.4337935076260451384870842319133497124524,\r\n        0.4337935076260451384870842319133497124524,\r\n        -0.5454214713888395356583756172183723700107,\r\n        0.5454214713888395356583756172183723700107,\r\n        -0.6480936519369755692524957869107476266696,\r\n        0.6480936519369755692524957869107476266696,\r\n        -0.7401241915785543642438281030999784255232,\r\n        0.7401241915785543642438281030999784255232,\r\n        -0.8200019859739029219539498726697452080761,\r\n        0.8200019859739029219539498726697452080761,\r\n        -0.8864155270044010342131543419821967550873,\r\n        0.8864155270044010342131543419821967550873,\r\n        -0.9382745520027327585236490017087214496548,\r\n        0.9382745520027327585236490017087214496548,\r\n        -0.9747285559713094981983919930081690617411,\r\n        0.9747285559713094981983919930081690617411,\r\n        -0.9951872199970213601799974097007368118745,\r\n        0.9951872199970213601799974097007368118745,\r\n    ],\r\n];\r\nexports.cValues = [\r\n    [],\r\n    [],\r\n    [1.0, 1.0],\r\n    [\r\n        0.8888888888888888888888888888888888888888,\r\n        0.5555555555555555555555555555555555555555,\r\n        0.5555555555555555555555555555555555555555,\r\n    ],\r\n    [\r\n        0.6521451548625461426269360507780005927646,\r\n        0.6521451548625461426269360507780005927646,\r\n        0.3478548451374538573730639492219994072353,\r\n        0.3478548451374538573730639492219994072353,\r\n    ],\r\n    [\r\n        0.5688888888888888888888888888888888888888,\r\n        0.4786286704993664680412915148356381929122,\r\n        0.4786286704993664680412915148356381929122,\r\n        0.2369268850561890875142640407199173626432,\r\n        0.2369268850561890875142640407199173626432,\r\n    ],\r\n    [\r\n        0.3607615730481386075698335138377161116615,\r\n        0.3607615730481386075698335138377161116615,\r\n        0.4679139345726910473898703439895509948116,\r\n        0.4679139345726910473898703439895509948116,\r\n        0.1713244923791703450402961421727328935268,\r\n        0.1713244923791703450402961421727328935268,\r\n    ],\r\n    [\r\n        0.4179591836734693877551020408163265306122,\r\n        0.3818300505051189449503697754889751338783,\r\n        0.3818300505051189449503697754889751338783,\r\n        0.2797053914892766679014677714237795824869,\r\n        0.2797053914892766679014677714237795824869,\r\n        0.1294849661688696932706114326790820183285,\r\n        0.1294849661688696932706114326790820183285,\r\n    ],\r\n    [\r\n        0.3626837833783619829651504492771956121941,\r\n        0.3626837833783619829651504492771956121941,\r\n        0.3137066458778872873379622019866013132603,\r\n        0.3137066458778872873379622019866013132603,\r\n        0.2223810344533744705443559944262408844301,\r\n        0.2223810344533744705443559944262408844301,\r\n        0.1012285362903762591525313543099621901153,\r\n        0.1012285362903762591525313543099621901153,\r\n    ],\r\n    [\r\n        0.3302393550012597631645250692869740488788,\r\n        0.1806481606948574040584720312429128095143,\r\n        0.1806481606948574040584720312429128095143,\r\n        0.0812743883615744119718921581105236506756,\r\n        0.0812743883615744119718921581105236506756,\r\n        0.3123470770400028400686304065844436655987,\r\n        0.3123470770400028400686304065844436655987,\r\n        0.2606106964029354623187428694186328497718,\r\n        0.2606106964029354623187428694186328497718,\r\n    ],\r\n    [\r\n        0.295524224714752870173892994651338329421,\r\n        0.295524224714752870173892994651338329421,\r\n        0.2692667193099963550912269215694693528597,\r\n        0.2692667193099963550912269215694693528597,\r\n        0.2190863625159820439955349342281631924587,\r\n        0.2190863625159820439955349342281631924587,\r\n        0.1494513491505805931457763396576973324025,\r\n        0.1494513491505805931457763396576973324025,\r\n        0.0666713443086881375935688098933317928578,\r\n        0.0666713443086881375935688098933317928578,\r\n    ],\r\n    [\r\n        0.272925086777900630714483528336342189156,\r\n        0.2628045445102466621806888698905091953727,\r\n        0.2628045445102466621806888698905091953727,\r\n        0.2331937645919904799185237048431751394317,\r\n        0.2331937645919904799185237048431751394317,\r\n        0.1862902109277342514260976414316558916912,\r\n        0.1862902109277342514260976414316558916912,\r\n        0.1255803694649046246346942992239401001976,\r\n        0.1255803694649046246346942992239401001976,\r\n        0.0556685671161736664827537204425485787285,\r\n        0.0556685671161736664827537204425485787285,\r\n    ],\r\n    [\r\n        0.2491470458134027850005624360429512108304,\r\n        0.2491470458134027850005624360429512108304,\r\n        0.2334925365383548087608498989248780562594,\r\n        0.2334925365383548087608498989248780562594,\r\n        0.2031674267230659217490644558097983765065,\r\n        0.2031674267230659217490644558097983765065,\r\n        0.160078328543346226334652529543359071872,\r\n        0.160078328543346226334652529543359071872,\r\n        0.1069393259953184309602547181939962242145,\r\n        0.1069393259953184309602547181939962242145,\r\n        0.047175336386511827194615961485017060317,\r\n        0.047175336386511827194615961485017060317,\r\n    ],\r\n    [\r\n        0.2325515532308739101945895152688359481566,\r\n        0.2262831802628972384120901860397766184347,\r\n        0.2262831802628972384120901860397766184347,\r\n        0.2078160475368885023125232193060527633865,\r\n        0.2078160475368885023125232193060527633865,\r\n        0.1781459807619457382800466919960979955128,\r\n        0.1781459807619457382800466919960979955128,\r\n        0.1388735102197872384636017768688714676218,\r\n        0.1388735102197872384636017768688714676218,\r\n        0.0921214998377284479144217759537971209236,\r\n        0.0921214998377284479144217759537971209236,\r\n        0.0404840047653158795200215922009860600419,\r\n        0.0404840047653158795200215922009860600419,\r\n    ],\r\n    [\r\n        0.2152638534631577901958764433162600352749,\r\n        0.2152638534631577901958764433162600352749,\r\n        0.2051984637212956039659240656612180557103,\r\n        0.2051984637212956039659240656612180557103,\r\n        0.1855383974779378137417165901251570362489,\r\n        0.1855383974779378137417165901251570362489,\r\n        0.1572031671581935345696019386238421566056,\r\n        0.1572031671581935345696019386238421566056,\r\n        0.1215185706879031846894148090724766259566,\r\n        0.1215185706879031846894148090724766259566,\r\n        0.0801580871597602098056332770628543095836,\r\n        0.0801580871597602098056332770628543095836,\r\n        0.0351194603317518630318328761381917806197,\r\n        0.0351194603317518630318328761381917806197,\r\n    ],\r\n    [\r\n        0.2025782419255612728806201999675193148386,\r\n        0.1984314853271115764561183264438393248186,\r\n        0.1984314853271115764561183264438393248186,\r\n        0.1861610000155622110268005618664228245062,\r\n        0.1861610000155622110268005618664228245062,\r\n        0.1662692058169939335532008604812088111309,\r\n        0.1662692058169939335532008604812088111309,\r\n        0.1395706779261543144478047945110283225208,\r\n        0.1395706779261543144478047945110283225208,\r\n        0.1071592204671719350118695466858693034155,\r\n        0.1071592204671719350118695466858693034155,\r\n        0.0703660474881081247092674164506673384667,\r\n        0.0703660474881081247092674164506673384667,\r\n        0.0307532419961172683546283935772044177217,\r\n        0.0307532419961172683546283935772044177217,\r\n    ],\r\n    [\r\n        0.1894506104550684962853967232082831051469,\r\n        0.1894506104550684962853967232082831051469,\r\n        0.1826034150449235888667636679692199393835,\r\n        0.1826034150449235888667636679692199393835,\r\n        0.1691565193950025381893120790303599622116,\r\n        0.1691565193950025381893120790303599622116,\r\n        0.1495959888165767320815017305474785489704,\r\n        0.1495959888165767320815017305474785489704,\r\n        0.1246289712555338720524762821920164201448,\r\n        0.1246289712555338720524762821920164201448,\r\n        0.0951585116824927848099251076022462263552,\r\n        0.0951585116824927848099251076022462263552,\r\n        0.0622535239386478928628438369943776942749,\r\n        0.0622535239386478928628438369943776942749,\r\n        0.0271524594117540948517805724560181035122,\r\n        0.0271524594117540948517805724560181035122,\r\n    ],\r\n    [\r\n        0.1794464703562065254582656442618856214487,\r\n        0.1765627053669926463252709901131972391509,\r\n        0.1765627053669926463252709901131972391509,\r\n        0.1680041021564500445099706637883231550211,\r\n        0.1680041021564500445099706637883231550211,\r\n        0.1540457610768102880814315948019586119404,\r\n        0.1540457610768102880814315948019586119404,\r\n        0.1351363684685254732863199817023501973721,\r\n        0.1351363684685254732863199817023501973721,\r\n        0.1118838471934039710947883856263559267358,\r\n        0.1118838471934039710947883856263559267358,\r\n        0.0850361483171791808835353701910620738504,\r\n        0.0850361483171791808835353701910620738504,\r\n        0.0554595293739872011294401653582446605128,\r\n        0.0554595293739872011294401653582446605128,\r\n        0.0241483028685479319601100262875653246916,\r\n        0.0241483028685479319601100262875653246916,\r\n    ],\r\n    [\r\n        0.1691423829631435918406564701349866103341,\r\n        0.1691423829631435918406564701349866103341,\r\n        0.1642764837458327229860537764659275904123,\r\n        0.1642764837458327229860537764659275904123,\r\n        0.1546846751262652449254180038363747721932,\r\n        0.1546846751262652449254180038363747721932,\r\n        0.1406429146706506512047313037519472280955,\r\n        0.1406429146706506512047313037519472280955,\r\n        0.1225552067114784601845191268002015552281,\r\n        0.1225552067114784601845191268002015552281,\r\n        0.1009420441062871655628139849248346070628,\r\n        0.1009420441062871655628139849248346070628,\r\n        0.0764257302548890565291296776166365256053,\r\n        0.0764257302548890565291296776166365256053,\r\n        0.0497145488949697964533349462026386416808,\r\n        0.0497145488949697964533349462026386416808,\r\n        0.0216160135264833103133427102664524693876,\r\n        0.0216160135264833103133427102664524693876,\r\n    ],\r\n    [\r\n        0.1610544498487836959791636253209167350399,\r\n        0.1589688433939543476499564394650472016787,\r\n        0.1589688433939543476499564394650472016787,\r\n        0.152766042065859666778855400897662998461,\r\n        0.152766042065859666778855400897662998461,\r\n        0.1426067021736066117757461094419029724756,\r\n        0.1426067021736066117757461094419029724756,\r\n        0.1287539625393362276755157848568771170558,\r\n        0.1287539625393362276755157848568771170558,\r\n        0.1115666455473339947160239016817659974813,\r\n        0.1115666455473339947160239016817659974813,\r\n        0.0914900216224499994644620941238396526609,\r\n        0.0914900216224499994644620941238396526609,\r\n        0.0690445427376412265807082580060130449618,\r\n        0.0690445427376412265807082580060130449618,\r\n        0.0448142267656996003328381574019942119517,\r\n        0.0448142267656996003328381574019942119517,\r\n        0.0194617882297264770363120414644384357529,\r\n        0.0194617882297264770363120414644384357529,\r\n    ],\r\n    [\r\n        0.1527533871307258506980843319550975934919,\r\n        0.1527533871307258506980843319550975934919,\r\n        0.1491729864726037467878287370019694366926,\r\n        0.1491729864726037467878287370019694366926,\r\n        0.1420961093183820513292983250671649330345,\r\n        0.1420961093183820513292983250671649330345,\r\n        0.1316886384491766268984944997481631349161,\r\n        0.1316886384491766268984944997481631349161,\r\n        0.118194531961518417312377377711382287005,\r\n        0.118194531961518417312377377711382287005,\r\n        0.1019301198172404350367501354803498761666,\r\n        0.1019301198172404350367501354803498761666,\r\n        0.0832767415767047487247581432220462061001,\r\n        0.0832767415767047487247581432220462061001,\r\n        0.0626720483341090635695065351870416063516,\r\n        0.0626720483341090635695065351870416063516,\r\n        0.040601429800386941331039952274932109879,\r\n        0.040601429800386941331039952274932109879,\r\n        0.0176140071391521183118619623518528163621,\r\n        0.0176140071391521183118619623518528163621,\r\n    ],\r\n    [\r\n        0.1460811336496904271919851476833711882448,\r\n        0.1445244039899700590638271665537525436099,\r\n        0.1445244039899700590638271665537525436099,\r\n        0.1398873947910731547221334238675831108927,\r\n        0.1398873947910731547221334238675831108927,\r\n        0.132268938633337461781052574496775604329,\r\n        0.132268938633337461781052574496775604329,\r\n        0.1218314160537285341953671771257335983563,\r\n        0.1218314160537285341953671771257335983563,\r\n        0.1087972991671483776634745780701056420336,\r\n        0.1087972991671483776634745780701056420336,\r\n        0.0934444234560338615532897411139320884835,\r\n        0.0934444234560338615532897411139320884835,\r\n        0.0761001136283793020170516533001831792261,\r\n        0.0761001136283793020170516533001831792261,\r\n        0.0571344254268572082836358264724479574912,\r\n        0.0571344254268572082836358264724479574912,\r\n        0.0369537897708524937999506682993296661889,\r\n        0.0369537897708524937999506682993296661889,\r\n        0.0160172282577743333242246168584710152658,\r\n        0.0160172282577743333242246168584710152658,\r\n    ],\r\n    [\r\n        0.1392518728556319933754102483418099578739,\r\n        0.1392518728556319933754102483418099578739,\r\n        0.1365414983460151713525738312315173965863,\r\n        0.1365414983460151713525738312315173965863,\r\n        0.1311735047870623707329649925303074458757,\r\n        0.1311735047870623707329649925303074458757,\r\n        0.1232523768105124242855609861548144719594,\r\n        0.1232523768105124242855609861548144719594,\r\n        0.1129322960805392183934006074217843191142,\r\n        0.1129322960805392183934006074217843191142,\r\n        0.1004141444428809649320788378305362823508,\r\n        0.1004141444428809649320788378305362823508,\r\n        0.0859416062170677274144436813727028661891,\r\n        0.0859416062170677274144436813727028661891,\r\n        0.0697964684245204880949614189302176573987,\r\n        0.0697964684245204880949614189302176573987,\r\n        0.0522933351526832859403120512732112561121,\r\n        0.0522933351526832859403120512732112561121,\r\n        0.0337749015848141547933022468659129013491,\r\n        0.0337749015848141547933022468659129013491,\r\n        0.0146279952982722006849910980471854451902,\r\n        0.0146279952982722006849910980471854451902,\r\n    ],\r\n    [\r\n        0.1336545721861061753514571105458443385831,\r\n        0.132462039404696617371642464703316925805,\r\n        0.132462039404696617371642464703316925805,\r\n        0.1289057221880821499785953393997936532597,\r\n        0.1289057221880821499785953393997936532597,\r\n        0.1230490843067295304675784006720096548158,\r\n        0.1230490843067295304675784006720096548158,\r\n        0.1149966402224113649416435129339613014914,\r\n        0.1149966402224113649416435129339613014914,\r\n        0.1048920914645414100740861850147438548584,\r\n        0.1048920914645414100740861850147438548584,\r\n        0.0929157660600351474770186173697646486034,\r\n        0.0929157660600351474770186173697646486034,\r\n        0.0792814117767189549228925247420432269137,\r\n        0.0792814117767189549228925247420432269137,\r\n        0.0642324214085258521271696151589109980391,\r\n        0.0642324214085258521271696151589109980391,\r\n        0.0480376717310846685716410716320339965612,\r\n        0.0480376717310846685716410716320339965612,\r\n        0.0309880058569794443106942196418845053837,\r\n        0.0309880058569794443106942196418845053837,\r\n        0.0134118594871417720813094934586150649766,\r\n        0.0134118594871417720813094934586150649766,\r\n    ],\r\n    [\r\n        0.1279381953467521569740561652246953718517,\r\n        0.1279381953467521569740561652246953718517,\r\n        0.1258374563468282961213753825111836887264,\r\n        0.1258374563468282961213753825111836887264,\r\n        0.121670472927803391204463153476262425607,\r\n        0.121670472927803391204463153476262425607,\r\n        0.1155056680537256013533444839067835598622,\r\n        0.1155056680537256013533444839067835598622,\r\n        0.1074442701159656347825773424466062227946,\r\n        0.1074442701159656347825773424466062227946,\r\n        0.0976186521041138882698806644642471544279,\r\n        0.0976186521041138882698806644642471544279,\r\n        0.086190161531953275917185202983742667185,\r\n        0.086190161531953275917185202983742667185,\r\n        0.0733464814110803057340336152531165181193,\r\n        0.0733464814110803057340336152531165181193,\r\n        0.0592985849154367807463677585001085845412,\r\n        0.0592985849154367807463677585001085845412,\r\n        0.0442774388174198061686027482113382288593,\r\n        0.0442774388174198061686027482113382288593,\r\n        0.0285313886289336631813078159518782864491,\r\n        0.0285313886289336631813078159518782864491,\r\n        0.0123412297999871995468056670700372915759,\r\n        0.0123412297999871995468056670700372915759,\r\n    ],\r\n];\r\nexports.binomialCoefficients = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]];\r\nconst getCubicArcLength = (xs, ys, t) => {\r\n    let sum;\r\n    let correctedT;\r\n    const n = 20;\r\n    const z = t / 2;\r\n    sum = 0;\r\n    for (let i = 0; i < n; i++) {\r\n        correctedT = z * exports.tValues[n][i] + z;\r\n        sum += exports.cValues[n][i] * BFunc(xs, ys, correctedT);\r\n    }\r\n    return z * sum;\r\n};\r\nexports.getCubicArcLength = getCubicArcLength;\r\nconst getQuadraticArcLength = (xs, ys, t) => {\r\n    if (t === undefined) {\r\n        t = 1;\r\n    }\r\n    const ax = xs[0] - 2 * xs[1] + xs[2];\r\n    const ay = ys[0] - 2 * ys[1] + ys[2];\r\n    const bx = 2 * xs[1] - 2 * xs[0];\r\n    const by = 2 * ys[1] - 2 * ys[0];\r\n    const A = 4 * (ax * ax + ay * ay);\r\n    const B = 4 * (ax * bx + ay * by);\r\n    const C = bx * bx + by * by;\r\n    if (A === 0) {\r\n        return (t * Math.sqrt(Math.pow(xs[2] - xs[0], 2) + Math.pow(ys[2] - ys[0], 2)));\r\n    }\r\n    const b = B / (2 * A);\r\n    const c = C / A;\r\n    const u = t + b;\r\n    const k = c - b * b;\r\n    const uuk = u * u + k > 0 ? Math.sqrt(u * u + k) : 0;\r\n    const bbk = b * b + k > 0 ? Math.sqrt(b * b + k) : 0;\r\n    const term = b + Math.sqrt(b * b + k) !== 0\r\n        ? k * Math.log(Math.abs((u + uuk) / (b + bbk)))\r\n        : 0;\r\n    return (Math.sqrt(A) / 2) * (u * uuk - b * bbk + term);\r\n};\r\nexports.getQuadraticArcLength = getQuadraticArcLength;\r\nfunction BFunc(xs, ys, t) {\r\n    const xbase = getDerivative(1, t, xs);\r\n    const ybase = getDerivative(1, t, ys);\r\n    const combined = xbase * xbase + ybase * ybase;\r\n    return Math.sqrt(combined);\r\n}\r\nconst getDerivative = (derivative, t, vs) => {\r\n    const n = vs.length - 1;\r\n    let _vs;\r\n    let value;\r\n    if (n === 0) {\r\n        return 0;\r\n    }\r\n    if (derivative === 0) {\r\n        value = 0;\r\n        for (let k = 0; k <= n; k++) {\r\n            value +=\r\n                exports.binomialCoefficients[n][k] *\r\n                    Math.pow(1 - t, n - k) *\r\n                    Math.pow(t, k) *\r\n                    vs[k];\r\n        }\r\n        return value;\r\n    }\r\n    else {\r\n        _vs = new Array(n);\r\n        for (let k = 0; k < n; k++) {\r\n            _vs[k] = n * (vs[k + 1] - vs[k]);\r\n        }\r\n        return getDerivative(derivative - 1, t, _vs);\r\n    }\r\n};\r\nconst t2length = (length, totalLength, func) => {\r\n    let error = 1;\r\n    let t = length / totalLength;\r\n    let step = (length - func(t)) / totalLength;\r\n    let numIterations = 0;\r\n    while (error > 0.001) {\r\n        const increasedTLength = func(t + step);\r\n        const increasedTError = Math.abs(length - increasedTLength) / totalLength;\r\n        if (increasedTError < error) {\r\n            error = increasedTError;\r\n            t += step;\r\n        }\r\n        else {\r\n            const decreasedTLength = func(t - step);\r\n            const decreasedTError = Math.abs(length - decreasedTLength) / totalLength;\r\n            if (decreasedTError < error) {\r\n                error = decreasedTError;\r\n                t -= step;\r\n            }\r\n            else {\r\n                step /= 2;\r\n            }\r\n        }\r\n        numIterations++;\r\n        if (numIterations > 500) {\r\n            break;\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexports.t2length = t2length;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Path = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst BezierFunctions_1 = require(\"../BezierFunctions\");\r\nclass Path extends Shape_1.Shape {\r\n    constructor(config) {\r\n        super(config);\r\n        this.dataArray = [];\r\n        this.pathLength = 0;\r\n        this._readDataAttribute();\r\n        this.on('dataChange.konva', function () {\r\n            this._readDataAttribute();\r\n        });\r\n    }\r\n    _readDataAttribute() {\r\n        this.dataArray = Path.parsePathData(this.data());\r\n        this.pathLength = Path.getPathLength(this.dataArray);\r\n    }\r\n    _sceneFunc(context) {\r\n        const ca = this.dataArray;\r\n        context.beginPath();\r\n        let isClosed = false;\r\n        for (let n = 0; n < ca.length; n++) {\r\n            const c = ca[n].command;\r\n            const p = ca[n].points;\r\n            switch (c) {\r\n                case 'L':\r\n                    context.lineTo(p[0], p[1]);\r\n                    break;\r\n                case 'M':\r\n                    context.moveTo(p[0], p[1]);\r\n                    break;\r\n                case 'C':\r\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\r\n                    break;\r\n                case 'Q':\r\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\r\n                    break;\r\n                case 'A':\r\n                    const cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\r\n                    const r = rx > ry ? rx : ry;\r\n                    const scaleX = rx > ry ? 1 : rx / ry;\r\n                    const scaleY = rx > ry ? ry / rx : 1;\r\n                    context.translate(cx, cy);\r\n                    context.rotate(psi);\r\n                    context.scale(scaleX, scaleY);\r\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\r\n                    context.scale(1 / scaleX, 1 / scaleY);\r\n                    context.rotate(-psi);\r\n                    context.translate(-cx, -cy);\r\n                    break;\r\n                case 'z':\r\n                    isClosed = true;\r\n                    context.closePath();\r\n                    break;\r\n            }\r\n        }\r\n        if (!isClosed && !this.hasFill()) {\r\n            context.strokeShape(this);\r\n        }\r\n        else {\r\n            context.fillStrokeShape(this);\r\n        }\r\n    }\r\n    getSelfRect() {\r\n        let points = [];\r\n        this.dataArray.forEach(function (data) {\r\n            if (data.command === 'A') {\r\n                const start = data.points[4];\r\n                const dTheta = data.points[5];\r\n                const end = data.points[4] + dTheta;\r\n                let inc = Math.PI / 180.0;\r\n                if (Math.abs(start - end) < inc) {\r\n                    inc = Math.abs(start - end);\r\n                }\r\n                if (dTheta < 0) {\r\n                    for (let t = start - inc; t > end; t -= inc) {\r\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\r\n                        points.push(point.x, point.y);\r\n                    }\r\n                }\r\n                else {\r\n                    for (let t = start + inc; t < end; t += inc) {\r\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\r\n                        points.push(point.x, point.y);\r\n                    }\r\n                }\r\n            }\r\n            else if (data.command === 'C') {\r\n                for (let t = 0.0; t <= 1; t += 0.01) {\r\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\r\n                    points.push(point.x, point.y);\r\n                }\r\n            }\r\n            else {\r\n                points = points.concat(data.points);\r\n            }\r\n        });\r\n        let minX = points[0];\r\n        let maxX = points[0];\r\n        let minY = points[1];\r\n        let maxY = points[1];\r\n        let x, y;\r\n        for (let i = 0; i < points.length / 2; i++) {\r\n            x = points[i * 2];\r\n            y = points[i * 2 + 1];\r\n            if (!isNaN(x)) {\r\n                minX = Math.min(minX, x);\r\n                maxX = Math.max(maxX, x);\r\n            }\r\n            if (!isNaN(y)) {\r\n                minY = Math.min(minY, y);\r\n                maxY = Math.max(maxY, y);\r\n            }\r\n        }\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    }\r\n    getLength() {\r\n        return this.pathLength;\r\n    }\r\n    getPointAtLength(length) {\r\n        return Path.getPointAtLengthOfDataArray(length, this.dataArray);\r\n    }\r\n    static getLineLength(x1, y1, x2, y2) {\r\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    }\r\n    static getPathLength(dataArray) {\r\n        let pathLength = 0;\r\n        for (let i = 0; i < dataArray.length; ++i) {\r\n            pathLength += dataArray[i].pathLength;\r\n        }\r\n        return pathLength;\r\n    }\r\n    static getPointAtLengthOfDataArray(length, dataArray) {\r\n        let points, i = 0, ii = dataArray.length;\r\n        if (!ii) {\r\n            return null;\r\n        }\r\n        while (i < ii && length > dataArray[i].pathLength) {\r\n            length -= dataArray[i].pathLength;\r\n            ++i;\r\n        }\r\n        if (i === ii) {\r\n            points = dataArray[i - 1].points.slice(-2);\r\n            return {\r\n                x: points[0],\r\n                y: points[1],\r\n            };\r\n        }\r\n        if (length < 0.01) {\r\n            const cmd = dataArray[i].command;\r\n            if (cmd === 'M') {\r\n                points = dataArray[i].points.slice(0, 2);\r\n                return {\r\n                    x: points[0],\r\n                    y: points[1],\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    x: dataArray[i].start.x,\r\n                    y: dataArray[i].start.y,\r\n                };\r\n            }\r\n        }\r\n        const cp = dataArray[i];\r\n        const p = cp.points;\r\n        switch (cp.command) {\r\n            case 'L':\r\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\r\n            case 'C':\r\n                return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\r\n                    return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\r\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\r\n            case 'Q':\r\n                return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\r\n                    return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\r\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\r\n            case 'A':\r\n                const cx = p[0], cy = p[1], rx = p[2], ry = p[3], dTheta = p[5], psi = p[6];\r\n                let theta = p[4];\r\n                theta += (dTheta * length) / cp.pathLength;\r\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\r\n        }\r\n        return null;\r\n    }\r\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\r\n        fromX = fromX !== null && fromX !== void 0 ? fromX : P1x;\r\n        fromY = fromY !== null && fromY !== void 0 ? fromY : P1y;\r\n        const len = this.getLineLength(P1x, P1y, P2x, P2y);\r\n        if (len < 1e-10) {\r\n            return { x: P1x, y: P1y };\r\n        }\r\n        if (P2x === P1x) {\r\n            return { x: fromX, y: fromY + (P2y > P1y ? dist : -dist) };\r\n        }\r\n        const m = (P2y - P1y) / (P2x - P1x);\r\n        const run = Math.sqrt((dist * dist) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\r\n        const rise = m * run;\r\n        if (Math.abs(fromY - P1y - m * (fromX - P1x)) < 1e-10) {\r\n            return { x: fromX + run, y: fromY + rise };\r\n        }\r\n        const u = ((fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y)) / (len * len);\r\n        const ix = P1x + u * (P2x - P1x);\r\n        const iy = P1y + u * (P2y - P1y);\r\n        const pRise = this.getLineLength(fromX, fromY, ix, iy);\r\n        const pRun = Math.sqrt(dist * dist - pRise * pRise);\r\n        const adjustedRun = Math.sqrt((pRun * pRun) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\r\n        const adjustedRise = m * adjustedRun;\r\n        return { x: ix + adjustedRun, y: iy + adjustedRise };\r\n    }\r\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\r\n        function CB1(t) {\r\n            return t * t * t;\r\n        }\r\n        function CB2(t) {\r\n            return 3 * t * t * (1 - t);\r\n        }\r\n        function CB3(t) {\r\n            return 3 * t * (1 - t) * (1 - t);\r\n        }\r\n        function CB4(t) {\r\n            return (1 - t) * (1 - t) * (1 - t);\r\n        }\r\n        const x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\r\n        const y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\r\n        return { x, y };\r\n    }\r\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\r\n        function QB1(t) {\r\n            return t * t;\r\n        }\r\n        function QB2(t) {\r\n            return 2 * t * (1 - t);\r\n        }\r\n        function QB3(t) {\r\n            return (1 - t) * (1 - t);\r\n        }\r\n        const x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\r\n        const y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\r\n        return { x, y };\r\n    }\r\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\r\n        const cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\r\n        const pt = {\r\n            x: rx * Math.cos(theta),\r\n            y: ry * Math.sin(theta),\r\n        };\r\n        return {\r\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\r\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\r\n        };\r\n    }\r\n    static parsePathData(data) {\r\n        if (!data) {\r\n            return [];\r\n        }\r\n        let cs = data;\r\n        const cc = [\r\n            'm',\r\n            'M',\r\n            'l',\r\n            'L',\r\n            'v',\r\n            'V',\r\n            'h',\r\n            'H',\r\n            'z',\r\n            'Z',\r\n            'c',\r\n            'C',\r\n            'q',\r\n            'Q',\r\n            't',\r\n            'T',\r\n            's',\r\n            'S',\r\n            'a',\r\n            'A',\r\n        ];\r\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\r\n        for (let n = 0; n < cc.length; n++) {\r\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\r\n        }\r\n        const arr = cs.split('|');\r\n        const ca = [];\r\n        const coords = [];\r\n        let cpx = 0;\r\n        let cpy = 0;\r\n        const re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\r\n        let match;\r\n        for (let n = 1; n < arr.length; n++) {\r\n            let str = arr[n];\r\n            let c = str.charAt(0);\r\n            str = str.slice(1);\r\n            coords.length = 0;\r\n            while ((match = re.exec(str))) {\r\n                coords.push(match[0]);\r\n            }\r\n            const p = [];\r\n            for (let j = 0, jlen = coords.length; j < jlen; j++) {\r\n                if (coords[j] === '00') {\r\n                    p.push(0, 0);\r\n                    continue;\r\n                }\r\n                const parsed = parseFloat(coords[j]);\r\n                if (!isNaN(parsed)) {\r\n                    p.push(parsed);\r\n                }\r\n                else {\r\n                    p.push(0);\r\n                }\r\n            }\r\n            while (p.length > 0) {\r\n                if (isNaN(p[0])) {\r\n                    break;\r\n                }\r\n                let cmd = '';\r\n                let points = [];\r\n                const startX = cpx, startY = cpy;\r\n                let prevCmd, ctlPtx, ctlPty;\r\n                let rx, ry, psi, fa, fs, x1, y1;\r\n                switch (c) {\r\n                    case 'l':\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'L':\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'm':\r\n                        const dx = p.shift();\r\n                        const dy = p.shift();\r\n                        cpx += dx;\r\n                        cpy += dy;\r\n                        cmd = 'M';\r\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\r\n                            for (let idx = ca.length - 2; idx >= 0; idx--) {\r\n                                if (ca[idx].command === 'M') {\r\n                                    cpx = ca[idx].points[0] + dx;\r\n                                    cpy = ca[idx].points[1] + dy;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        points.push(cpx, cpy);\r\n                        c = 'l';\r\n                        break;\r\n                    case 'M':\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'M';\r\n                        points.push(cpx, cpy);\r\n                        c = 'L';\r\n                        break;\r\n                    case 'h':\r\n                        cpx += p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'H':\r\n                        cpx = p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'v':\r\n                        cpy += p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'V':\r\n                        cpy = p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'C':\r\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'c':\r\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'C';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'S':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'C') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\r\n                        }\r\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'C';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 's':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'C') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\r\n                        }\r\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'C';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'Q':\r\n                        points.push(p.shift(), p.shift());\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'q':\r\n                        points.push(cpx + p.shift(), cpy + p.shift());\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'Q';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'T':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'Q') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\r\n                        }\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'Q';\r\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\r\n                        break;\r\n                    case 't':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'Q') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\r\n                        }\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'Q';\r\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\r\n                        break;\r\n                    case 'A':\r\n                        rx = p.shift();\r\n                        ry = p.shift();\r\n                        psi = p.shift();\r\n                        fa = p.shift();\r\n                        fs = p.shift();\r\n                        x1 = cpx;\r\n                        y1 = cpy;\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'A';\r\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\r\n                        break;\r\n                    case 'a':\r\n                        rx = p.shift();\r\n                        ry = p.shift();\r\n                        psi = p.shift();\r\n                        fa = p.shift();\r\n                        fs = p.shift();\r\n                        x1 = cpx;\r\n                        y1 = cpy;\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'A';\r\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\r\n                        break;\r\n                }\r\n                ca.push({\r\n                    command: cmd || c,\r\n                    points: points,\r\n                    start: {\r\n                        x: startX,\r\n                        y: startY,\r\n                    },\r\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\r\n                });\r\n            }\r\n            if (c === 'z' || c === 'Z') {\r\n                ca.push({\r\n                    command: 'z',\r\n                    points: [],\r\n                    start: undefined,\r\n                    pathLength: 0,\r\n                });\r\n            }\r\n        }\r\n        return ca;\r\n    }\r\n    static calcLength(x, y, cmd, points) {\r\n        let len, p1, p2, t;\r\n        const path = Path;\r\n        switch (cmd) {\r\n            case 'L':\r\n                return path.getLineLength(x, y, points[0], points[1]);\r\n            case 'C':\r\n                return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\r\n            case 'Q':\r\n                return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\r\n            case 'A':\r\n                len = 0.0;\r\n                const start = points[4];\r\n                const dTheta = points[5];\r\n                const end = points[4] + dTheta;\r\n                let inc = Math.PI / 180.0;\r\n                if (Math.abs(start - end) < inc) {\r\n                    inc = Math.abs(start - end);\r\n                }\r\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\r\n                if (dTheta < 0) {\r\n                    for (t = start - inc; t > end; t -= inc) {\r\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\r\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                        p1 = p2;\r\n                    }\r\n                }\r\n                else {\r\n                    for (t = start + inc; t < end; t += inc) {\r\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\r\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                        p1 = p2;\r\n                    }\r\n                }\r\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\r\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                return len;\r\n        }\r\n        return 0;\r\n    }\r\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\r\n        const psi = psiDeg * (Math.PI / 180.0);\r\n        const xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\r\n        const yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\r\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\r\n        const lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\r\n        if (lambda > 1) {\r\n            rx *= Math.sqrt(lambda);\r\n            ry *= Math.sqrt(lambda);\r\n        }\r\n        let f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\r\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\r\n        if (fa === fs) {\r\n            f *= -1;\r\n        }\r\n        if (isNaN(f)) {\r\n            f = 0;\r\n        }\r\n        const cxp = (f * rx * yp) / ry;\r\n        const cyp = (f * -ry * xp) / rx;\r\n        const cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\r\n        const cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\r\n        const vMag = function (v) {\r\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n        };\r\n        const vRatio = function (u, v) {\r\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\r\n        };\r\n        const vAngle = function (u, v) {\r\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\r\n        };\r\n        const theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\r\n        const u = [(xp - cxp) / rx, (yp - cyp) / ry];\r\n        const v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\r\n        let dTheta = vAngle(u, v);\r\n        if (vRatio(u, v) <= -1) {\r\n            dTheta = Math.PI;\r\n        }\r\n        if (vRatio(u, v) >= 1) {\r\n            dTheta = 0;\r\n        }\r\n        if (fs === 0 && dTheta > 0) {\r\n            dTheta = dTheta - 2 * Math.PI;\r\n        }\r\n        if (fs === 1 && dTheta < 0) {\r\n            dTheta = dTheta + 2 * Math.PI;\r\n        }\r\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\r\n    }\r\n}\r\nexports.Path = Path;\r\nPath.prototype.className = 'Path';\r\nPath.prototype._attrsAffectingSize = ['data'];\r\n(0, Global_1._registerNode)(Path);\r\nFactory_1.Factory.addGetterSetter(Path, 'data');\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Arrow = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Line_1 = require(\"./Line\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Path_1 = require(\"./Path\");\r\nclass Arrow extends Line_1.Line {\r\n    _sceneFunc(ctx) {\r\n        super._sceneFunc(ctx);\r\n        const PI2 = Math.PI * 2;\r\n        const points = this.points();\r\n        let tp = points;\r\n        const fromTension = this.tension() !== 0 && points.length > 4;\r\n        if (fromTension) {\r\n            tp = this.getTensionPoints();\r\n        }\r\n        const length = this.pointerLength();\r\n        const n = points.length;\r\n        let dx, dy;\r\n        if (fromTension) {\r\n            const lp = [\r\n                tp[tp.length - 4],\r\n                tp[tp.length - 3],\r\n                tp[tp.length - 2],\r\n                tp[tp.length - 1],\r\n                points[n - 2],\r\n                points[n - 1],\r\n            ];\r\n            const lastLength = Path_1.Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\r\n            const previous = Path_1.Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\r\n            dx = points[n - 2] - previous.x;\r\n            dy = points[n - 1] - previous.y;\r\n        }\r\n        else {\r\n            dx = points[n - 2] - points[n - 4];\r\n            dy = points[n - 1] - points[n - 3];\r\n        }\r\n        const radians = (Math.atan2(dy, dx) + PI2) % PI2;\r\n        const width = this.pointerWidth();\r\n        if (this.pointerAtEnding()) {\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.translate(points[n - 2], points[n - 1]);\r\n            ctx.rotate(radians);\r\n            ctx.moveTo(0, 0);\r\n            ctx.lineTo(-length, width / 2);\r\n            ctx.lineTo(-length, -width / 2);\r\n            ctx.closePath();\r\n            ctx.restore();\r\n            this.__fillStroke(ctx);\r\n        }\r\n        if (this.pointerAtBeginning()) {\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.translate(points[0], points[1]);\r\n            if (fromTension) {\r\n                dx = (tp[0] + tp[2]) / 2 - points[0];\r\n                dy = (tp[1] + tp[3]) / 2 - points[1];\r\n            }\r\n            else {\r\n                dx = points[2] - points[0];\r\n                dy = points[3] - points[1];\r\n            }\r\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\r\n            ctx.moveTo(0, 0);\r\n            ctx.lineTo(-length, width / 2);\r\n            ctx.lineTo(-length, -width / 2);\r\n            ctx.closePath();\r\n            ctx.restore();\r\n            this.__fillStroke(ctx);\r\n        }\r\n    }\r\n    __fillStroke(ctx) {\r\n        const isDashEnabled = this.dashEnabled();\r\n        if (isDashEnabled) {\r\n            this.attrs.dashEnabled = false;\r\n            ctx.setLineDash([]);\r\n        }\r\n        ctx.fillStrokeShape(this);\r\n        if (isDashEnabled) {\r\n            this.attrs.dashEnabled = true;\r\n        }\r\n    }\r\n    getSelfRect() {\r\n        const lineRect = super.getSelfRect();\r\n        const offset = this.pointerWidth() / 2;\r\n        return {\r\n            x: lineRect.x,\r\n            y: lineRect.y - offset,\r\n            width: lineRect.width,\r\n            height: lineRect.height + offset * 2,\r\n        };\r\n    }\r\n}\r\nexports.Arrow = Arrow;\r\nArrow.prototype.className = 'Arrow';\r\n(0, Global_1._registerNode)(Arrow);\r\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerLength', 10, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerWidth', 10, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\r\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtEnding', true);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nclass Circle extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        context.beginPath();\r\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        return this.radius() * 2;\r\n    }\r\n    getHeight() {\r\n        return this.radius() * 2;\r\n    }\r\n    setWidth(width) {\r\n        if (this.radius() !== width / 2) {\r\n            this.radius(width / 2);\r\n        }\r\n    }\r\n    setHeight(height) {\r\n        if (this.radius() !== height / 2) {\r\n            this.radius(height / 2);\r\n        }\r\n    }\r\n}\r\nexports.Circle = Circle;\r\nCircle.prototype._centroid = true;\r\nCircle.prototype.className = 'Circle';\r\nCircle.prototype._attrsAffectingSize = ['radius'];\r\n(0, Global_1._registerNode)(Circle);\r\nFactory_1.Factory.addGetterSetter(Circle, 'radius', 0, (0, Validators_1.getNumberValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Ellipse = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nclass Ellipse extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        const rx = this.radiusX(), ry = this.radiusY();\r\n        context.beginPath();\r\n        context.save();\r\n        if (rx !== ry) {\r\n            context.scale(1, ry / rx);\r\n        }\r\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\r\n        context.restore();\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        return this.radiusX() * 2;\r\n    }\r\n    getHeight() {\r\n        return this.radiusY() * 2;\r\n    }\r\n    setWidth(width) {\r\n        this.radiusX(width / 2);\r\n    }\r\n    setHeight(height) {\r\n        this.radiusY(height / 2);\r\n    }\r\n}\r\nexports.Ellipse = Ellipse;\r\nEllipse.prototype.className = 'Ellipse';\r\nEllipse.prototype._centroid = true;\r\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\r\n(0, Global_1._registerNode)(Ellipse);\r\nFactory_1.Factory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusX', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusY', 0, (0, Validators_1.getNumberValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Image = void 0;\r\nconst Util_1 = require(\"../Util\");\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Validators_1 = require(\"../Validators\");\r\nclass Image extends Shape_1.Shape {\r\n    constructor(attrs) {\r\n        super(attrs);\r\n        this._loadListener = () => {\r\n            this._requestDraw();\r\n        };\r\n        this.on('imageChange.konva', (props) => {\r\n            this._removeImageLoad(props.oldVal);\r\n            this._setImageLoad();\r\n        });\r\n        this._setImageLoad();\r\n    }\r\n    _setImageLoad() {\r\n        const image = this.image();\r\n        if (image && image.complete) {\r\n            return;\r\n        }\r\n        if (image && image.readyState === 4) {\r\n            return;\r\n        }\r\n        if (image && image['addEventListener']) {\r\n            image['addEventListener']('load', this._loadListener);\r\n        }\r\n    }\r\n    _removeImageLoad(image) {\r\n        if (image && image['removeEventListener']) {\r\n            image['removeEventListener']('load', this._loadListener);\r\n        }\r\n    }\r\n    destroy() {\r\n        this._removeImageLoad(this.image());\r\n        super.destroy();\r\n        return this;\r\n    }\r\n    _useBufferCanvas() {\r\n        const hasCornerRadius = !!this.cornerRadius();\r\n        const hasShadow = this.hasShadow();\r\n        if (hasCornerRadius && hasShadow) {\r\n            return true;\r\n        }\r\n        return super._useBufferCanvas(true);\r\n    }\r\n    _sceneFunc(context) {\r\n        const width = this.getWidth();\r\n        const height = this.getHeight();\r\n        const cornerRadius = this.cornerRadius();\r\n        const image = this.attrs.image;\r\n        let params;\r\n        if (image) {\r\n            const cropWidth = this.attrs.cropWidth;\r\n            const cropHeight = this.attrs.cropHeight;\r\n            if (cropWidth && cropHeight) {\r\n                params = [\r\n                    image,\r\n                    this.cropX(),\r\n                    this.cropY(),\r\n                    cropWidth,\r\n                    cropHeight,\r\n                    0,\r\n                    0,\r\n                    width,\r\n                    height,\r\n                ];\r\n            }\r\n            else {\r\n                params = [image, 0, 0, width, height];\r\n            }\r\n        }\r\n        if (this.hasFill() || this.hasStroke() || cornerRadius) {\r\n            context.beginPath();\r\n            cornerRadius\r\n                ? Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius)\r\n                : context.rect(0, 0, width, height);\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        if (image) {\r\n            if (cornerRadius) {\r\n                context.clip();\r\n            }\r\n            context.drawImage.apply(context, params);\r\n        }\r\n    }\r\n    _hitFunc(context) {\r\n        const width = this.width(), height = this.height(), cornerRadius = this.cornerRadius();\r\n        context.beginPath();\r\n        if (!cornerRadius) {\r\n            context.rect(0, 0, width, height);\r\n        }\r\n        else {\r\n            Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        var _a, _b;\r\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\r\n    }\r\n    getHeight() {\r\n        var _a, _b;\r\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\r\n    }\r\n    static fromURL(url, callback, onError = null) {\r\n        const img = Util_1.Util.createImageElement();\r\n        img.onload = function () {\r\n            const image = new Image({\r\n                image: img,\r\n            });\r\n            callback(image);\r\n        };\r\n        img.onerror = onError;\r\n        img.crossOrigin = 'Anonymous';\r\n        img.src = url;\r\n    }\r\n}\r\nexports.Image = Image;\r\nImage.prototype.className = 'Image';\r\n(0, Global_1._registerNode)(Image);\r\nFactory_1.Factory.addGetterSetter(Image, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\r\nFactory_1.Factory.addGetterSetter(Image, 'image');\r\nFactory_1.Factory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\r\nFactory_1.Factory.addGetterSetter(Image, 'cropX', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Image, 'cropY', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Image, 'cropWidth', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Image, 'cropHeight', 0, (0, Validators_1.getNumberValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tag = exports.Label = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Group_1 = require(\"../Group\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nconst ATTR_CHANGE_LIST = [\r\n    'fontFamily',\r\n    'fontSize',\r\n    'fontStyle',\r\n    'padding',\r\n    'lineHeight',\r\n    'text',\r\n    'width',\r\n    'height',\r\n    'pointerDirection',\r\n    'pointerWidth',\r\n    'pointerHeight',\r\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\r\nclass Label extends Group_1.Group {\r\n    constructor(config) {\r\n        super(config);\r\n        this.on('add.konva', function (evt) {\r\n            this._addListeners(evt.child);\r\n            this._sync();\r\n        });\r\n    }\r\n    getText() {\r\n        return this.find('Text')[0];\r\n    }\r\n    getTag() {\r\n        return this.find('Tag')[0];\r\n    }\r\n    _addListeners(text) {\r\n        let that = this, n;\r\n        const func = function () {\r\n            that._sync();\r\n        };\r\n        for (n = 0; n < attrChangeListLen; n++) {\r\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\r\n        }\r\n    }\r\n    getWidth() {\r\n        return this.getText().width();\r\n    }\r\n    getHeight() {\r\n        return this.getText().height();\r\n    }\r\n    _sync() {\r\n        let text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\r\n        if (text && tag) {\r\n            width = text.width();\r\n            height = text.height();\r\n            pointerDirection = tag.pointerDirection();\r\n            pointerWidth = tag.pointerWidth();\r\n            pointerHeight = tag.pointerHeight();\r\n            x = 0;\r\n            y = 0;\r\n            switch (pointerDirection) {\r\n                case UP:\r\n                    x = width / 2;\r\n                    y = -1 * pointerHeight;\r\n                    break;\r\n                case RIGHT:\r\n                    x = width + pointerWidth;\r\n                    y = height / 2;\r\n                    break;\r\n                case DOWN:\r\n                    x = width / 2;\r\n                    y = height + pointerHeight;\r\n                    break;\r\n                case LEFT:\r\n                    x = -1 * pointerWidth;\r\n                    y = height / 2;\r\n                    break;\r\n            }\r\n            tag.setAttrs({\r\n                x: -1 * x,\r\n                y: -1 * y,\r\n                width: width,\r\n                height: height,\r\n            });\r\n            text.setAttrs({\r\n                x: -1 * x,\r\n                y: -1 * y,\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.Label = Label;\r\nLabel.prototype.className = 'Label';\r\n(0, Global_1._registerNode)(Label);\r\nclass Tag extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        const width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\r\n        let topLeft = 0;\r\n        let topRight = 0;\r\n        let bottomLeft = 0;\r\n        let bottomRight = 0;\r\n        if (typeof cornerRadius === 'number') {\r\n            topLeft =\r\n                topRight =\r\n                    bottomLeft =\r\n                        bottomRight =\r\n                            Math.min(cornerRadius, width / 2, height / 2);\r\n        }\r\n        else {\r\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\r\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\r\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\r\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\r\n        }\r\n        context.beginPath();\r\n        context.moveTo(topLeft, 0);\r\n        if (pointerDirection === UP) {\r\n            context.lineTo((width - pointerWidth) / 2, 0);\r\n            context.lineTo(width / 2, -1 * pointerHeight);\r\n            context.lineTo((width + pointerWidth) / 2, 0);\r\n        }\r\n        context.lineTo(width - topRight, 0);\r\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\r\n        if (pointerDirection === RIGHT) {\r\n            context.lineTo(width, (height - pointerHeight) / 2);\r\n            context.lineTo(width + pointerWidth, height / 2);\r\n            context.lineTo(width, (height + pointerHeight) / 2);\r\n        }\r\n        context.lineTo(width, height - bottomRight);\r\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\r\n        if (pointerDirection === DOWN) {\r\n            context.lineTo((width + pointerWidth) / 2, height);\r\n            context.lineTo(width / 2, height + pointerHeight);\r\n            context.lineTo((width - pointerWidth) / 2, height);\r\n        }\r\n        context.lineTo(bottomLeft, height);\r\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\r\n        if (pointerDirection === LEFT) {\r\n            context.lineTo(0, (height + pointerHeight) / 2);\r\n            context.lineTo(-1 * pointerWidth, height / 2);\r\n            context.lineTo(0, (height - pointerHeight) / 2);\r\n        }\r\n        context.lineTo(0, topLeft);\r\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getSelfRect() {\r\n        let x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\r\n        if (direction === UP) {\r\n            y -= pointerHeight;\r\n            height += pointerHeight;\r\n        }\r\n        else if (direction === DOWN) {\r\n            height += pointerHeight;\r\n        }\r\n        else if (direction === LEFT) {\r\n            x -= pointerWidth * 1.5;\r\n            width += pointerWidth;\r\n        }\r\n        else if (direction === RIGHT) {\r\n            width += pointerWidth * 1.5;\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height,\r\n        };\r\n    }\r\n}\r\nexports.Tag = Tag;\r\nTag.prototype.className = 'Tag';\r\n(0, Global_1._registerNode)(Tag);\r\nFactory_1.Factory.addGetterSetter(Tag, 'pointerDirection', NONE);\r\nFactory_1.Factory.addGetterSetter(Tag, 'pointerWidth', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Tag, 'pointerHeight', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Tag, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rect = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Util_1 = require(\"../Util\");\r\nconst Validators_1 = require(\"../Validators\");\r\nclass Rect extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        const cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\r\n        context.beginPath();\r\n        if (!cornerRadius) {\r\n            context.rect(0, 0, width, height);\r\n        }\r\n        else {\r\n            Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n}\r\nexports.Rect = Rect;\r\nRect.prototype.className = 'Rect';\r\n(0, Global_1._registerNode)(Rect);\r\nFactory_1.Factory.addGetterSetter(Rect, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RegularPolygon = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nclass RegularPolygon extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        const points = this._getPoints();\r\n        context.beginPath();\r\n        context.moveTo(points[0].x, points[0].y);\r\n        for (let n = 1; n < points.length; n++) {\r\n            context.lineTo(points[n].x, points[n].y);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    _getPoints() {\r\n        const sides = this.attrs.sides;\r\n        const radius = this.attrs.radius || 0;\r\n        const points = [];\r\n        for (let n = 0; n < sides; n++) {\r\n            points.push({\r\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\r\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\r\n            });\r\n        }\r\n        return points;\r\n    }\r\n    getSelfRect() {\r\n        const points = this._getPoints();\r\n        let minX = points[0].x;\r\n        let maxX = points[0].y;\r\n        let minY = points[0].x;\r\n        let maxY = points[0].y;\r\n        points.forEach((point) => {\r\n            minX = Math.min(minX, point.x);\r\n            maxX = Math.max(maxX, point.x);\r\n            minY = Math.min(minY, point.y);\r\n            maxY = Math.max(maxY, point.y);\r\n        });\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    }\r\n    getWidth() {\r\n        return this.radius() * 2;\r\n    }\r\n    getHeight() {\r\n        return this.radius() * 2;\r\n    }\r\n    setWidth(width) {\r\n        this.radius(width / 2);\r\n    }\r\n    setHeight(height) {\r\n        this.radius(height / 2);\r\n    }\r\n}\r\nexports.RegularPolygon = RegularPolygon;\r\nRegularPolygon.prototype.className = 'RegularPolygon';\r\nRegularPolygon.prototype._centroid = true;\r\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\r\n(0, Global_1._registerNode)(RegularPolygon);\r\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'radius', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'sides', 0, (0, Validators_1.getNumberValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Ring = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nconst PIx2 = Math.PI * 2;\r\nclass Ring extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        context.beginPath();\r\n        context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\r\n        context.moveTo(this.outerRadius(), 0);\r\n        context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        return this.outerRadius() * 2;\r\n    }\r\n    getHeight() {\r\n        return this.outerRadius() * 2;\r\n    }\r\n    setWidth(width) {\r\n        this.outerRadius(width / 2);\r\n    }\r\n    setHeight(height) {\r\n        this.outerRadius(height / 2);\r\n    }\r\n}\r\nexports.Ring = Ring;\r\nRing.prototype.className = 'Ring';\r\nRing.prototype._centroid = true;\r\nRing.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\r\n(0, Global_1._registerNode)(Ring);\r\nFactory_1.Factory.addGetterSetter(Ring, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Ring, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sprite = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Animation_1 = require(\"../Animation\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nclass Sprite extends Shape_1.Shape {\r\n    constructor(config) {\r\n        super(config);\r\n        this._updated = true;\r\n        this.anim = new Animation_1.Animation(() => {\r\n            const updated = this._updated;\r\n            this._updated = false;\r\n            return updated;\r\n        });\r\n        this.on('animationChange.konva', function () {\r\n            this.frameIndex(0);\r\n        });\r\n        this.on('frameIndexChange.konva', function () {\r\n            this._updated = true;\r\n        });\r\n        this.on('frameRateChange.konva', function () {\r\n            if (!this.anim.isRunning()) {\r\n                return;\r\n            }\r\n            clearInterval(this.interval);\r\n            this._setInterval();\r\n        });\r\n    }\r\n    _sceneFunc(context) {\r\n        const anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\r\n        if (this.hasFill() || this.hasStroke()) {\r\n            context.beginPath();\r\n            context.rect(0, 0, width, height);\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        if (image) {\r\n            if (offsets) {\r\n                const offset = offsets[anim], ix2 = index * 2;\r\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\r\n            }\r\n            else {\r\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\r\n            }\r\n        }\r\n    }\r\n    _hitFunc(context) {\r\n        const anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\r\n        context.beginPath();\r\n        if (offsets) {\r\n            const offset = offsets[anim];\r\n            const ix2 = index * 2;\r\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\r\n        }\r\n        else {\r\n            context.rect(0, 0, width, height);\r\n        }\r\n        context.closePath();\r\n        context.fillShape(this);\r\n    }\r\n    _useBufferCanvas() {\r\n        return super._useBufferCanvas(true);\r\n    }\r\n    _setInterval() {\r\n        const that = this;\r\n        this.interval = setInterval(function () {\r\n            that._updateIndex();\r\n        }, 1000 / this.frameRate());\r\n    }\r\n    start() {\r\n        if (this.isRunning()) {\r\n            return;\r\n        }\r\n        const layer = this.getLayer();\r\n        this.anim.setLayers(layer);\r\n        this._setInterval();\r\n        this.anim.start();\r\n    }\r\n    stop() {\r\n        this.anim.stop();\r\n        clearInterval(this.interval);\r\n    }\r\n    isRunning() {\r\n        return this.anim.isRunning();\r\n    }\r\n    _updateIndex() {\r\n        const index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\r\n        if (index < len - 1) {\r\n            this.frameIndex(index + 1);\r\n        }\r\n        else {\r\n            this.frameIndex(0);\r\n        }\r\n    }\r\n}\r\nexports.Sprite = Sprite;\r\nSprite.prototype.className = 'Sprite';\r\n(0, Global_1._registerNode)(Sprite);\r\nFactory_1.Factory.addGetterSetter(Sprite, 'animation');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'animations');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'frameOffsets');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'image');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'frameIndex', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Sprite, 'frameRate', 17, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.backCompat(Sprite, {\r\n    index: 'frameIndex',\r\n    getIndex: 'getFrameIndex',\r\n    setIndex: 'setFrameIndex',\r\n});\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Star = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nclass Star extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        const innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\r\n        context.beginPath();\r\n        context.moveTo(0, 0 - outerRadius);\r\n        for (let n = 1; n < numPoints * 2; n++) {\r\n            const radius = n % 2 === 0 ? outerRadius : innerRadius;\r\n            const x = radius * Math.sin((n * Math.PI) / numPoints);\r\n            const y = -1 * radius * Math.cos((n * Math.PI) / numPoints);\r\n            context.lineTo(x, y);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        return this.outerRadius() * 2;\r\n    }\r\n    getHeight() {\r\n        return this.outerRadius() * 2;\r\n    }\r\n    setWidth(width) {\r\n        this.outerRadius(width / 2);\r\n    }\r\n    setHeight(height) {\r\n        this.outerRadius(height / 2);\r\n    }\r\n}\r\nexports.Star = Star;\r\nStar.prototype.className = 'Star';\r\nStar.prototype._centroid = true;\r\nStar.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\r\n(0, Global_1._registerNode)(Star);\r\nFactory_1.Factory.addGetterSetter(Star, 'numPoints', 5, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Star, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Star, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Text = void 0;\r\nexports.stringToArray = stringToArray;\r\nconst Util_1 = require(\"../Util\");\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_2 = require(\"../Global\");\r\nfunction stringToArray(string) {\r\n    return [...string].reduce((acc, char, index, array) => {\r\n        if (/\\p{Emoji}/u.test(char)) {\r\n            const nextChar = array[index + 1];\r\n            if (nextChar && /\\p{Emoji_Modifier}|\\u200D/u.test(nextChar)) {\r\n                acc.push(char + nextChar);\r\n                array[index + 1] = '';\r\n            }\r\n            else {\r\n                acc.push(char);\r\n            }\r\n        }\r\n        else if (/\\p{Regional_Indicator}{2}/u.test(char + (array[index + 1] || ''))) {\r\n            acc.push(char + array[index + 1]);\r\n        }\r\n        else if (index > 0 && /\\p{Mn}|\\p{Me}|\\p{Mc}/u.test(char)) {\r\n            acc[acc.length - 1] += char;\r\n        }\r\n        else if (char) {\r\n            acc.push(char);\r\n        }\r\n        return acc;\r\n    }, []);\r\n}\r\nconst AUTO = 'auto', CENTER = 'center', INHERIT = 'inherit', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', RTL = 'rtl', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '…', ATTR_CHANGE_LIST = [\r\n    'direction',\r\n    'fontFamily',\r\n    'fontSize',\r\n    'fontStyle',\r\n    'fontVariant',\r\n    'padding',\r\n    'align',\r\n    'verticalAlign',\r\n    'lineHeight',\r\n    'text',\r\n    'width',\r\n    'height',\r\n    'wrap',\r\n    'ellipsis',\r\n    'letterSpacing',\r\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\r\nfunction normalizeFontFamily(fontFamily) {\r\n    return fontFamily\r\n        .split(',')\r\n        .map((family) => {\r\n        family = family.trim();\r\n        const hasSpace = family.indexOf(' ') >= 0;\r\n        const hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\r\n        if (hasSpace && !hasQuotes) {\r\n            family = `\"${family}\"`;\r\n        }\r\n        return family;\r\n    })\r\n        .join(', ');\r\n}\r\nlet dummyContext;\r\nfunction getDummyContext() {\r\n    if (dummyContext) {\r\n        return dummyContext;\r\n    }\r\n    dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\r\n    return dummyContext;\r\n}\r\nfunction _fillFunc(context) {\r\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\r\n}\r\nfunction _strokeFunc(context) {\r\n    context.setAttr('miterLimit', 2);\r\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\r\n}\r\nfunction checkDefaultFill(config) {\r\n    config = config || {};\r\n    if (!config.fillLinearGradientColorStops &&\r\n        !config.fillRadialGradientColorStops &&\r\n        !config.fillPatternImage) {\r\n        config.fill = config.fill || 'black';\r\n    }\r\n    return config;\r\n}\r\nclass Text extends Shape_1.Shape {\r\n    constructor(config) {\r\n        super(checkDefaultFill(config));\r\n        this._partialTextX = 0;\r\n        this._partialTextY = 0;\r\n        for (let n = 0; n < attrChangeListLen; n++) {\r\n            this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\r\n        }\r\n        this._setTextData();\r\n    }\r\n    _sceneFunc(context) {\r\n        const textArr = this.textArr, textArrLen = textArr.length;\r\n        if (!this.text()) {\r\n            return;\r\n        }\r\n        let padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), direction = this.direction(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\r\n        direction = direction === INHERIT ? context.direction : direction;\r\n        let translateY = lineHeightPx / 2;\r\n        let baseline = MIDDLE;\r\n        if (Global_1.Konva._fixTextRendering) {\r\n            const metrics = this.measureSize('M');\r\n            baseline = 'alphabetic';\r\n            translateY =\r\n                (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent) / 2 +\r\n                    lineHeightPx / 2;\r\n        }\r\n        if (direction === RTL) {\r\n            context.setAttr('direction', direction);\r\n        }\r\n        context.setAttr('font', this._getContextFont());\r\n        context.setAttr('textBaseline', baseline);\r\n        context.setAttr('textAlign', LEFT);\r\n        if (verticalAlign === MIDDLE) {\r\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\r\n        }\r\n        else if (verticalAlign === BOTTOM) {\r\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\r\n        }\r\n        context.translate(padding, alignY + padding);\r\n        for (n = 0; n < textArrLen; n++) {\r\n            let lineTranslateX = 0;\r\n            let lineTranslateY = 0;\r\n            const obj = textArr[n], text = obj.text, width = obj.width, lastLine = obj.lastInParagraph;\r\n            context.save();\r\n            if (align === RIGHT) {\r\n                lineTranslateX += totalWidth - width - padding * 2;\r\n            }\r\n            else if (align === CENTER) {\r\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\r\n            }\r\n            if (shouldUnderline) {\r\n                context.save();\r\n                context.beginPath();\r\n                const yOffset = Global_1.Konva._fixTextRendering\r\n                    ? Math.round(fontSize / 4)\r\n                    : Math.round(fontSize / 2);\r\n                const x = lineTranslateX;\r\n                const y = translateY + lineTranslateY + yOffset;\r\n                context.moveTo(x, y);\r\n                const lineWidth = align === JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\r\n                context.lineTo(x + Math.round(lineWidth), y);\r\n                context.lineWidth = fontSize / 15;\r\n                const gradient = this._getLinearGradient();\r\n                context.strokeStyle = gradient || fill;\r\n                context.stroke();\r\n                context.restore();\r\n            }\r\n            if (shouldLineThrough) {\r\n                context.save();\r\n                context.beginPath();\r\n                const yOffset = Global_1.Konva._fixTextRendering ? -Math.round(fontSize / 4) : 0;\r\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + yOffset);\r\n                const lineWidth = align === JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\r\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + yOffset);\r\n                context.lineWidth = fontSize / 15;\r\n                const gradient = this._getLinearGradient();\r\n                context.strokeStyle = gradient || fill;\r\n                context.stroke();\r\n                context.restore();\r\n            }\r\n            if (direction !== RTL && (letterSpacing !== 0 || align === JUSTIFY)) {\r\n                const spacesNumber = text.split(' ').length - 1;\r\n                const array = stringToArray(text);\r\n                for (let li = 0; li < array.length; li++) {\r\n                    const letter = array[li];\r\n                    if (letter === ' ' && !lastLine && align === JUSTIFY) {\r\n                        lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\r\n                    }\r\n                    this._partialTextX = lineTranslateX;\r\n                    this._partialTextY = translateY + lineTranslateY;\r\n                    this._partialText = letter;\r\n                    context.fillStrokeShape(this);\r\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\r\n                }\r\n            }\r\n            else {\r\n                if (letterSpacing !== 0) {\r\n                    context.setAttr('letterSpacing', `${letterSpacing}px`);\r\n                }\r\n                this._partialTextX = lineTranslateX;\r\n                this._partialTextY = translateY + lineTranslateY;\r\n                this._partialText = text;\r\n                context.fillStrokeShape(this);\r\n            }\r\n            context.restore();\r\n            if (textArrLen > 1) {\r\n                translateY += lineHeightPx;\r\n            }\r\n        }\r\n    }\r\n    _hitFunc(context) {\r\n        const width = this.getWidth(), height = this.getHeight();\r\n        context.beginPath();\r\n        context.rect(0, 0, width, height);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    setText(text) {\r\n        const str = Util_1.Util._isString(text)\r\n            ? text\r\n            : text === null || text === undefined\r\n                ? ''\r\n                : text + '';\r\n        this._setAttr(TEXT, str);\r\n        return this;\r\n    }\r\n    getWidth() {\r\n        const isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\r\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\r\n    }\r\n    getHeight() {\r\n        const isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\r\n        return isAuto\r\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\r\n                this.padding() * 2\r\n            : this.attrs.height;\r\n    }\r\n    getTextWidth() {\r\n        return this.textWidth;\r\n    }\r\n    getTextHeight() {\r\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\r\n        return this.textHeight;\r\n    }\r\n    measureSize(text) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\r\n        let _context = getDummyContext(), fontSize = this.fontSize(), metrics;\r\n        _context.save();\r\n        _context.font = this._getContextFont();\r\n        metrics = _context.measureText(text);\r\n        _context.restore();\r\n        const scaleFactor = fontSize / 100;\r\n        return {\r\n            actualBoundingBoxAscent: (_a = metrics.actualBoundingBoxAscent) !== null && _a !== void 0 ? _a : 71.58203125 * scaleFactor,\r\n            actualBoundingBoxDescent: (_b = metrics.actualBoundingBoxDescent) !== null && _b !== void 0 ? _b : 0,\r\n            actualBoundingBoxLeft: (_c = metrics.actualBoundingBoxLeft) !== null && _c !== void 0 ? _c : -7.421875 * scaleFactor,\r\n            actualBoundingBoxRight: (_d = metrics.actualBoundingBoxRight) !== null && _d !== void 0 ? _d : 75.732421875 * scaleFactor,\r\n            alphabeticBaseline: (_e = metrics.alphabeticBaseline) !== null && _e !== void 0 ? _e : 0,\r\n            emHeightAscent: (_f = metrics.emHeightAscent) !== null && _f !== void 0 ? _f : 100 * scaleFactor,\r\n            emHeightDescent: (_g = metrics.emHeightDescent) !== null && _g !== void 0 ? _g : -20 * scaleFactor,\r\n            fontBoundingBoxAscent: (_h = metrics.fontBoundingBoxAscent) !== null && _h !== void 0 ? _h : 91 * scaleFactor,\r\n            fontBoundingBoxDescent: (_j = metrics.fontBoundingBoxDescent) !== null && _j !== void 0 ? _j : 21 * scaleFactor,\r\n            hangingBaseline: (_k = metrics.hangingBaseline) !== null && _k !== void 0 ? _k : 72.80000305175781 * scaleFactor,\r\n            ideographicBaseline: (_l = metrics.ideographicBaseline) !== null && _l !== void 0 ? _l : -21 * scaleFactor,\r\n            width: metrics.width,\r\n            height: fontSize,\r\n        };\r\n    }\r\n    _getContextFont() {\r\n        return (this.fontStyle() +\r\n            SPACE +\r\n            this.fontVariant() +\r\n            SPACE +\r\n            (this.fontSize() + PX_SPACE) +\r\n            normalizeFontFamily(this.fontFamily()));\r\n    }\r\n    _addTextLine(line) {\r\n        const align = this.align();\r\n        if (align === JUSTIFY) {\r\n            line = line.trim();\r\n        }\r\n        const width = this._getTextWidth(line);\r\n        return this.textArr.push({\r\n            text: line,\r\n            width: width,\r\n            lastInParagraph: false,\r\n        });\r\n    }\r\n    _getTextWidth(text) {\r\n        const letterSpacing = this.letterSpacing();\r\n        const length = text.length;\r\n        return getDummyContext().measureText(text).width + letterSpacing * length;\r\n    }\r\n    _setTextData() {\r\n        let lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\r\n        this.textArr = [];\r\n        getDummyContext().font = this._getContextFont();\r\n        const additionalWidth = shouldAddEllipsis\r\n            ? this._getTextWidth(ELLIPSIS)\r\n            : 0;\r\n        for (let i = 0, max = lines.length; i < max; ++i) {\r\n            let line = lines[i];\r\n            let lineWidth = this._getTextWidth(line);\r\n            if (fixedWidth && lineWidth > maxWidth) {\r\n                while (line.length > 0) {\r\n                    let low = 0, high = stringToArray(line).length, match = '', matchWidth = 0;\r\n                    while (low < high) {\r\n                        const mid = (low + high) >>> 1, lineArray = stringToArray(line), substr = lineArray.slice(0, mid + 1).join(''), substrWidth = this._getTextWidth(substr);\r\n                        const shouldConsiderEllipsis = shouldAddEllipsis &&\r\n                            fixedHeight &&\r\n                            currentHeightPx + lineHeightPx > maxHeightPx;\r\n                        const effectiveWidth = shouldConsiderEllipsis\r\n                            ? substrWidth + additionalWidth\r\n                            : substrWidth;\r\n                        if (effectiveWidth <= maxWidth) {\r\n                            low = mid + 1;\r\n                            match = substr;\r\n                            matchWidth = substrWidth;\r\n                        }\r\n                        else {\r\n                            high = mid;\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        if (wrapAtWord) {\r\n                            const lineArray = stringToArray(line);\r\n                            const matchArray = stringToArray(match);\r\n                            const nextChar = lineArray[matchArray.length];\r\n                            const nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\r\n                            let wrapIndex;\r\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\r\n                                wrapIndex = matchArray.length;\r\n                            }\r\n                            else {\r\n                                const lastSpaceIndex = matchArray.lastIndexOf(SPACE);\r\n                                const lastDashIndex = matchArray.lastIndexOf(DASH);\r\n                                wrapIndex = Math.max(lastSpaceIndex, lastDashIndex) + 1;\r\n                            }\r\n                            if (wrapIndex > 0) {\r\n                                low = wrapIndex;\r\n                                match = lineArray.slice(0, low).join('');\r\n                                matchWidth = this._getTextWidth(match);\r\n                            }\r\n                        }\r\n                        match = match.trimRight();\r\n                        this._addTextLine(match);\r\n                        textWidth = Math.max(textWidth, matchWidth);\r\n                        currentHeightPx += lineHeightPx;\r\n                        const shouldHandleEllipsis = this._shouldHandleEllipsis(currentHeightPx);\r\n                        if (shouldHandleEllipsis) {\r\n                            this._tryToAddEllipsisToLastLine();\r\n                            break;\r\n                        }\r\n                        const lineArray = stringToArray(line);\r\n                        line = lineArray.slice(low).join('').trimLeft();\r\n                        if (line.length > 0) {\r\n                            lineWidth = this._getTextWidth(line);\r\n                            if (lineWidth <= maxWidth) {\r\n                                this._addTextLine(line);\r\n                                currentHeightPx += lineHeightPx;\r\n                                textWidth = Math.max(textWidth, lineWidth);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._addTextLine(line);\r\n                currentHeightPx += lineHeightPx;\r\n                textWidth = Math.max(textWidth, lineWidth);\r\n                if (this._shouldHandleEllipsis(currentHeightPx) && i < max - 1) {\r\n                    this._tryToAddEllipsisToLastLine();\r\n                }\r\n            }\r\n            if (this.textArr[this.textArr.length - 1]) {\r\n                this.textArr[this.textArr.length - 1].lastInParagraph = true;\r\n            }\r\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\r\n                break;\r\n            }\r\n        }\r\n        this.textHeight = fontSize;\r\n        this.textWidth = textWidth;\r\n    }\r\n    _shouldHandleEllipsis(currentHeightPx) {\r\n        const fontSize = +this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, height = this.attrs.height, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxHeightPx = height - padding * 2, wrap = this.wrap(), shouldWrap = wrap !== NONE;\r\n        return (!shouldWrap ||\r\n            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx));\r\n    }\r\n    _tryToAddEllipsisToLastLine() {\r\n        const width = this.attrs.width, fixedWidth = width !== AUTO && width !== undefined, padding = this.padding(), maxWidth = width - padding * 2, shouldAddEllipsis = this.ellipsis();\r\n        const lastLine = this.textArr[this.textArr.length - 1];\r\n        if (!lastLine || !shouldAddEllipsis) {\r\n            return;\r\n        }\r\n        if (fixedWidth) {\r\n            const haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\r\n            if (!haveSpace) {\r\n                lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\r\n            }\r\n        }\r\n        this.textArr.splice(this.textArr.length - 1, 1);\r\n        this._addTextLine(lastLine.text + ELLIPSIS);\r\n    }\r\n    getStrokeScaleEnabled() {\r\n        return true;\r\n    }\r\n    _useBufferCanvas() {\r\n        const hasLine = this.textDecoration().indexOf('underline') !== -1 ||\r\n            this.textDecoration().indexOf('line-through') !== -1;\r\n        const hasShadow = this.hasShadow();\r\n        if (hasLine && hasShadow) {\r\n            return true;\r\n        }\r\n        return super._useBufferCanvas();\r\n    }\r\n}\r\nexports.Text = Text;\r\nText.prototype._fillFunc = _fillFunc;\r\nText.prototype._strokeFunc = _strokeFunc;\r\nText.prototype.className = TEXT_UPPER;\r\nText.prototype._attrsAffectingSize = [\r\n    'text',\r\n    'fontSize',\r\n    'padding',\r\n    'wrap',\r\n    'lineHeight',\r\n    'letterSpacing',\r\n];\r\n(0, Global_2._registerNode)(Text);\r\nFactory_1.Factory.overWriteSetter(Text, 'width', (0, Validators_1.getNumberOrAutoValidator)());\r\nFactory_1.Factory.overWriteSetter(Text, 'height', (0, Validators_1.getNumberOrAutoValidator)());\r\nFactory_1.Factory.addGetterSetter(Text, 'direction', INHERIT);\r\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\r\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\r\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\r\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\r\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\r\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\r\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false, (0, Validators_1.getBooleanValidator)());\r\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Text, 'text', '', (0, Validators_1.getStringValidator)());\r\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TextPath = void 0;\r\nconst Util_1 = require(\"../Util\");\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Path_1 = require(\"./Path\");\r\nconst Text_1 = require(\"./Text\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_1 = require(\"../Global\");\r\nconst EMPTY_STRING = '', NORMAL = 'normal';\r\nfunction _fillFunc(context) {\r\n    context.fillText(this.partialText, 0, 0);\r\n}\r\nfunction _strokeFunc(context) {\r\n    context.strokeText(this.partialText, 0, 0);\r\n}\r\nclass TextPath extends Shape_1.Shape {\r\n    constructor(config) {\r\n        super(config);\r\n        this.dummyCanvas = Util_1.Util.createCanvasElement();\r\n        this.dataArray = [];\r\n        this._readDataAttribute();\r\n        this.on('dataChange.konva', function () {\r\n            this._readDataAttribute();\r\n            this._setTextData();\r\n        });\r\n        this.on('textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva', this._setTextData);\r\n        this._setTextData();\r\n    }\r\n    _getTextPathLength() {\r\n        return Path_1.Path.getPathLength(this.dataArray);\r\n    }\r\n    _getPointAtLength(length) {\r\n        if (!this.attrs.data) {\r\n            return null;\r\n        }\r\n        const totalLength = this.pathLength;\r\n        if (length - 1 > totalLength) {\r\n            return null;\r\n        }\r\n        return Path_1.Path.getPointAtLengthOfDataArray(length, this.dataArray);\r\n    }\r\n    _readDataAttribute() {\r\n        this.dataArray = Path_1.Path.parsePathData(this.attrs.data);\r\n        this.pathLength = this._getTextPathLength();\r\n    }\r\n    _sceneFunc(context) {\r\n        context.setAttr('font', this._getContextFont());\r\n        context.setAttr('textBaseline', this.textBaseline());\r\n        context.setAttr('textAlign', 'left');\r\n        context.save();\r\n        const textDecoration = this.textDecoration();\r\n        const fill = this.fill();\r\n        const fontSize = this.fontSize();\r\n        const glyphInfo = this.glyphInfo;\r\n        if (textDecoration === 'underline') {\r\n            context.beginPath();\r\n        }\r\n        for (let i = 0; i < glyphInfo.length; i++) {\r\n            context.save();\r\n            const p0 = glyphInfo[i].p0;\r\n            context.translate(p0.x, p0.y);\r\n            context.rotate(glyphInfo[i].rotation);\r\n            this.partialText = glyphInfo[i].text;\r\n            context.fillStrokeShape(this);\r\n            if (textDecoration === 'underline') {\r\n                if (i === 0) {\r\n                    context.moveTo(0, fontSize / 2 + 1);\r\n                }\r\n                context.lineTo(fontSize, fontSize / 2 + 1);\r\n            }\r\n            context.restore();\r\n        }\r\n        if (textDecoration === 'underline') {\r\n            context.strokeStyle = fill;\r\n            context.lineWidth = fontSize / 20;\r\n            context.stroke();\r\n        }\r\n        context.restore();\r\n    }\r\n    _hitFunc(context) {\r\n        context.beginPath();\r\n        const glyphInfo = this.glyphInfo;\r\n        if (glyphInfo.length >= 1) {\r\n            const p0 = glyphInfo[0].p0;\r\n            context.moveTo(p0.x, p0.y);\r\n        }\r\n        for (let i = 0; i < glyphInfo.length; i++) {\r\n            const p1 = glyphInfo[i].p1;\r\n            context.lineTo(p1.x, p1.y);\r\n        }\r\n        context.setAttr('lineWidth', this.fontSize());\r\n        context.setAttr('strokeStyle', this.colorKey);\r\n        context.stroke();\r\n    }\r\n    getTextWidth() {\r\n        return this.textWidth;\r\n    }\r\n    getTextHeight() {\r\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\r\n        return this.textHeight;\r\n    }\r\n    setText(text) {\r\n        return Text_1.Text.prototype.setText.call(this, text);\r\n    }\r\n    _getContextFont() {\r\n        return Text_1.Text.prototype._getContextFont.call(this);\r\n    }\r\n    _getTextSize(text) {\r\n        const dummyCanvas = this.dummyCanvas;\r\n        const _context = dummyCanvas.getContext('2d');\r\n        _context.save();\r\n        _context.font = this._getContextFont();\r\n        const metrics = _context.measureText(text);\r\n        _context.restore();\r\n        return {\r\n            width: metrics.width,\r\n            height: parseInt(`${this.fontSize()}`, 10),\r\n        };\r\n    }\r\n    _setTextData() {\r\n        const { width, height } = this._getTextSize(this.attrs.text);\r\n        this.textWidth = width;\r\n        this.textHeight = height;\r\n        this.glyphInfo = [];\r\n        if (!this.attrs.data) {\r\n            return null;\r\n        }\r\n        const letterSpacing = this.letterSpacing();\r\n        const align = this.align();\r\n        const kerningFunc = this.kerningFunc();\r\n        const textWidth = Math.max(this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing, 0);\r\n        let offset = 0;\r\n        if (align === 'center') {\r\n            offset = Math.max(0, this.pathLength / 2 - textWidth / 2);\r\n        }\r\n        if (align === 'right') {\r\n            offset = Math.max(0, this.pathLength - textWidth);\r\n        }\r\n        const charArr = (0, Text_1.stringToArray)(this.text());\r\n        let offsetToGlyph = offset;\r\n        for (let i = 0; i < charArr.length; i++) {\r\n            const charStartPoint = this._getPointAtLength(offsetToGlyph);\r\n            if (!charStartPoint)\r\n                return;\r\n            let glyphWidth = this._getTextSize(charArr[i]).width + letterSpacing;\r\n            if (charArr[i] === ' ' && align === 'justify') {\r\n                const numberOfSpaces = this.text().split(' ').length - 1;\r\n                glyphWidth += (this.pathLength - textWidth) / numberOfSpaces;\r\n            }\r\n            const charEndPoint = this._getPointAtLength(offsetToGlyph + glyphWidth);\r\n            if (!charEndPoint)\r\n                return;\r\n            const width = Path_1.Path.getLineLength(charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\r\n            let kern = 0;\r\n            if (kerningFunc) {\r\n                try {\r\n                    kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\r\n                }\r\n                catch (e) {\r\n                    kern = 0;\r\n                }\r\n            }\r\n            charStartPoint.x += kern;\r\n            charEndPoint.x += kern;\r\n            this.textWidth += kern;\r\n            const midpoint = Path_1.Path.getPointOnLine(kern + width / 2.0, charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\r\n            const rotation = Math.atan2(charEndPoint.y - charStartPoint.y, charEndPoint.x - charStartPoint.x);\r\n            this.glyphInfo.push({\r\n                transposeX: midpoint.x,\r\n                transposeY: midpoint.y,\r\n                text: charArr[i],\r\n                rotation: rotation,\r\n                p0: charStartPoint,\r\n                p1: charEndPoint,\r\n            });\r\n            offsetToGlyph += glyphWidth;\r\n        }\r\n    }\r\n    getSelfRect() {\r\n        if (!this.glyphInfo.length) {\r\n            return {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        }\r\n        const points = [];\r\n        this.glyphInfo.forEach(function (info) {\r\n            points.push(info.p0.x);\r\n            points.push(info.p0.y);\r\n            points.push(info.p1.x);\r\n            points.push(info.p1.y);\r\n        });\r\n        let minX = points[0] || 0;\r\n        let maxX = points[0] || 0;\r\n        let minY = points[1] || 0;\r\n        let maxY = points[1] || 0;\r\n        let x, y;\r\n        for (let i = 0; i < points.length / 2; i++) {\r\n            x = points[i * 2];\r\n            y = points[i * 2 + 1];\r\n            minX = Math.min(minX, x);\r\n            maxX = Math.max(maxX, x);\r\n            minY = Math.min(minY, y);\r\n            maxY = Math.max(maxY, y);\r\n        }\r\n        const fontSize = this.fontSize();\r\n        return {\r\n            x: minX - fontSize / 2,\r\n            y: minY - fontSize / 2,\r\n            width: maxX - minX + fontSize,\r\n            height: maxY - minY + fontSize,\r\n        };\r\n    }\r\n    destroy() {\r\n        Util_1.Util.releaseCanvas(this.dummyCanvas);\r\n        return super.destroy();\r\n    }\r\n}\r\nexports.TextPath = TextPath;\r\nTextPath.prototype._fillFunc = _fillFunc;\r\nTextPath.prototype._strokeFunc = _strokeFunc;\r\nTextPath.prototype._fillFuncHit = _fillFunc;\r\nTextPath.prototype._strokeFuncHit = _strokeFunc;\r\nTextPath.prototype.className = 'TextPath';\r\nTextPath.prototype._attrsAffectingSize = ['text', 'fontSize', 'data'];\r\n(0, Global_1._registerNode)(TextPath);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'data');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontFamily', 'Arial');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontStyle', NORMAL);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'align', 'left');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(TextPath, 'textBaseline', 'middle');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontVariant', NORMAL);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'text', EMPTY_STRING);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'textDecoration', '');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'kerningFunc', undefined);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Transformer = void 0;\r\nconst Util_1 = require(\"../Util\");\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Rect_1 = require(\"./Rect\");\r\nconst Group_1 = require(\"../Group\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_2 = require(\"../Global\");\r\nconst EVENTS_NAME = 'tr-konva';\r\nconst ATTR_CHANGE_LIST = [\r\n    'resizeEnabledChange',\r\n    'rotateAnchorOffsetChange',\r\n    'rotateEnabledChange',\r\n    'enabledAnchorsChange',\r\n    'anchorSizeChange',\r\n    'borderEnabledChange',\r\n    'borderStrokeChange',\r\n    'borderStrokeWidthChange',\r\n    'borderDashChange',\r\n    'anchorStrokeChange',\r\n    'anchorStrokeWidthChange',\r\n    'anchorFillChange',\r\n    'anchorCornerRadiusChange',\r\n    'ignoreStrokeChange',\r\n    'anchorStyleFuncChange',\r\n]\r\n    .map((e) => e + `.${EVENTS_NAME}`)\r\n    .join(' ');\r\nconst NODES_RECT = 'nodesRect';\r\nconst TRANSFORM_CHANGE_STR = [\r\n    'widthChange',\r\n    'heightChange',\r\n    'scaleXChange',\r\n    'scaleYChange',\r\n    'skewXChange',\r\n    'skewYChange',\r\n    'rotationChange',\r\n    'offsetXChange',\r\n    'offsetYChange',\r\n    'transformsEnabledChange',\r\n    'strokeWidthChange',\r\n];\r\nconst ANGLES = {\r\n    'top-left': -45,\r\n    'top-center': 0,\r\n    'top-right': 45,\r\n    'middle-right': -90,\r\n    'middle-left': 90,\r\n    'bottom-left': -135,\r\n    'bottom-center': 180,\r\n    'bottom-right': 135,\r\n};\r\nconst TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\r\nfunction getCursor(anchorName, rad, rotateCursor) {\r\n    if (anchorName === 'rotater') {\r\n        return rotateCursor;\r\n    }\r\n    rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\r\n    const angle = ((Util_1.Util.radToDeg(rad) % 360) + 360) % 360;\r\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\r\n        return 'ns-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\r\n        return 'nesw-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\r\n        return 'ew-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\r\n        return 'nwse-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\r\n        return 'ns-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\r\n        return 'nesw-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\r\n        return 'ew-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\r\n        return 'nwse-resize';\r\n    }\r\n    else {\r\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\r\n        return 'pointer';\r\n    }\r\n}\r\nconst ANCHORS_NAMES = [\r\n    'top-left',\r\n    'top-center',\r\n    'top-right',\r\n    'middle-right',\r\n    'middle-left',\r\n    'bottom-left',\r\n    'bottom-center',\r\n    'bottom-right',\r\n];\r\nconst MAX_SAFE_INTEGER = 100000000;\r\nfunction getCenter(shape) {\r\n    return {\r\n        x: shape.x +\r\n            (shape.width / 2) * Math.cos(shape.rotation) +\r\n            (shape.height / 2) * Math.sin(-shape.rotation),\r\n        y: shape.y +\r\n            (shape.height / 2) * Math.cos(shape.rotation) +\r\n            (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n}\r\nfunction rotateAroundPoint(shape, angleRad, point) {\r\n    const x = point.x +\r\n        (shape.x - point.x) * Math.cos(angleRad) -\r\n        (shape.y - point.y) * Math.sin(angleRad);\r\n    const y = point.y +\r\n        (shape.x - point.x) * Math.sin(angleRad) +\r\n        (shape.y - point.y) * Math.cos(angleRad);\r\n    return {\r\n        ...shape,\r\n        rotation: shape.rotation + angleRad,\r\n        x,\r\n        y,\r\n    };\r\n}\r\nfunction rotateAroundCenter(shape, deltaRad) {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaRad, center);\r\n}\r\nfunction getSnap(snaps, newRotationRad, tol) {\r\n    let snapped = newRotationRad;\r\n    for (let i = 0; i < snaps.length; i++) {\r\n        const angle = Global_1.Konva.getAngle(snaps[i]);\r\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\r\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\r\n        if (dif < tol) {\r\n            snapped = angle;\r\n        }\r\n    }\r\n    return snapped;\r\n}\r\nlet activeTransformersCount = 0;\r\nclass Transformer extends Group_1.Group {\r\n    constructor(config) {\r\n        super(config);\r\n        this._movingAnchorName = null;\r\n        this._transforming = false;\r\n        this._createElements();\r\n        this._handleMouseMove = this._handleMouseMove.bind(this);\r\n        this._handleMouseUp = this._handleMouseUp.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.on(ATTR_CHANGE_LIST, this.update);\r\n        if (this.getNode()) {\r\n            this.update();\r\n        }\r\n    }\r\n    attachTo(node) {\r\n        this.setNode(node);\r\n        return this;\r\n    }\r\n    setNode(node) {\r\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\r\n        return this.setNodes([node]);\r\n    }\r\n    getNode() {\r\n        return this._nodes && this._nodes[0];\r\n    }\r\n    _getEventNamespace() {\r\n        return EVENTS_NAME + this._id;\r\n    }\r\n    setNodes(nodes = []) {\r\n        if (this._nodes && this._nodes.length) {\r\n            this.detach();\r\n        }\r\n        const filteredNodes = nodes.filter((node) => {\r\n            if (node.isAncestorOf(this)) {\r\n                Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        this._nodes = nodes = filteredNodes;\r\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\r\n            this.rotation(nodes[0].getAbsoluteRotation());\r\n        }\r\n        else {\r\n            this.rotation(0);\r\n        }\r\n        this._nodes.forEach((node) => {\r\n            const onChange = () => {\r\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\r\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\r\n                }\r\n                this._resetTransformCache();\r\n                if (!this._transforming && !this.isDragging()) {\r\n                    this.update();\r\n                }\r\n            };\r\n            if (node._attrsAffectingSize.length) {\r\n                const additionalEvents = node._attrsAffectingSize\r\n                    .map((prop) => prop + 'Change.' + this._getEventNamespace())\r\n                    .join(' ');\r\n                node.on(additionalEvents, onChange);\r\n            }\r\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\r\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\r\n            this._proxyDrag(node);\r\n        });\r\n        this._resetTransformCache();\r\n        const elementsCreated = !!this.findOne('.top-left');\r\n        if (elementsCreated) {\r\n            this.update();\r\n        }\r\n        return this;\r\n    }\r\n    _proxyDrag(node) {\r\n        let lastPos;\r\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\r\n            lastPos = node.getAbsolutePosition();\r\n            if (!this.isDragging() && node !== this.findOne('.back')) {\r\n                this.startDrag(e, false);\r\n            }\r\n        });\r\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\r\n            if (!lastPos) {\r\n                return;\r\n            }\r\n            const abs = node.getAbsolutePosition();\r\n            const dx = abs.x - lastPos.x;\r\n            const dy = abs.y - lastPos.y;\r\n            this.nodes().forEach((otherNode) => {\r\n                if (otherNode === node) {\r\n                    return;\r\n                }\r\n                if (otherNode.isDragging()) {\r\n                    return;\r\n                }\r\n                const otherAbs = otherNode.getAbsolutePosition();\r\n                otherNode.setAbsolutePosition({\r\n                    x: otherAbs.x + dx,\r\n                    y: otherAbs.y + dy,\r\n                });\r\n                otherNode.startDrag(e);\r\n            });\r\n            lastPos = null;\r\n        });\r\n    }\r\n    getNodes() {\r\n        return this._nodes || [];\r\n    }\r\n    getActiveAnchor() {\r\n        return this._movingAnchorName;\r\n    }\r\n    detach() {\r\n        if (this._nodes) {\r\n            this._nodes.forEach((node) => {\r\n                node.off('.' + this._getEventNamespace());\r\n            });\r\n        }\r\n        this._nodes = [];\r\n        this._resetTransformCache();\r\n    }\r\n    _resetTransformCache() {\r\n        this._clearCache(NODES_RECT);\r\n        this._clearCache('transform');\r\n        this._clearSelfAndDescendantCache('absoluteTransform');\r\n    }\r\n    _getNodeRect() {\r\n        return this._getCache(NODES_RECT, this.__getNodeRect);\r\n    }\r\n    __getNodeShape(node, rot = this.rotation(), relative) {\r\n        const rect = node.getClientRect({\r\n            skipTransform: true,\r\n            skipShadow: true,\r\n            skipStroke: this.ignoreStroke(),\r\n        });\r\n        const absScale = node.getAbsoluteScale(relative);\r\n        const absPos = node.getAbsolutePosition(relative);\r\n        const dx = rect.x * absScale.x - node.offsetX() * absScale.x;\r\n        const dy = rect.y * absScale.y - node.offsetY() * absScale.y;\r\n        const rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\r\n            (Math.PI * 2);\r\n        const box = {\r\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\r\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\r\n            width: rect.width * absScale.x,\r\n            height: rect.height * absScale.y,\r\n            rotation: rotation,\r\n        };\r\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\r\n            x: 0,\r\n            y: 0,\r\n        });\r\n    }\r\n    __getNodeRect() {\r\n        const node = this.getNode();\r\n        if (!node) {\r\n            return {\r\n                x: -MAX_SAFE_INTEGER,\r\n                y: -MAX_SAFE_INTEGER,\r\n                width: 0,\r\n                height: 0,\r\n                rotation: 0,\r\n            };\r\n        }\r\n        const totalPoints = [];\r\n        this.nodes().map((node) => {\r\n            const box = node.getClientRect({\r\n                skipTransform: true,\r\n                skipShadow: true,\r\n                skipStroke: this.ignoreStroke(),\r\n            });\r\n            const points = [\r\n                { x: box.x, y: box.y },\r\n                { x: box.x + box.width, y: box.y },\r\n                { x: box.x + box.width, y: box.y + box.height },\r\n                { x: box.x, y: box.y + box.height },\r\n            ];\r\n            const trans = node.getAbsoluteTransform();\r\n            points.forEach(function (point) {\r\n                const transformed = trans.point(point);\r\n                totalPoints.push(transformed);\r\n            });\r\n        });\r\n        const tr = new Util_1.Transform();\r\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\r\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\r\n        totalPoints.forEach(function (point) {\r\n            const transformed = tr.point(point);\r\n            if (minX === undefined) {\r\n                minX = maxX = transformed.x;\r\n                minY = maxY = transformed.y;\r\n            }\r\n            minX = Math.min(minX, transformed.x);\r\n            minY = Math.min(minY, transformed.y);\r\n            maxX = Math.max(maxX, transformed.x);\r\n            maxY = Math.max(maxY, transformed.y);\r\n        });\r\n        tr.invert();\r\n        const p = tr.point({ x: minX, y: minY });\r\n        return {\r\n            x: p.x,\r\n            y: p.y,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n            rotation: Global_1.Konva.getAngle(this.rotation()),\r\n        };\r\n    }\r\n    getX() {\r\n        return this._getNodeRect().x;\r\n    }\r\n    getY() {\r\n        return this._getNodeRect().y;\r\n    }\r\n    getWidth() {\r\n        return this._getNodeRect().width;\r\n    }\r\n    getHeight() {\r\n        return this._getNodeRect().height;\r\n    }\r\n    _createElements() {\r\n        this._createBack();\r\n        ANCHORS_NAMES.forEach((name) => {\r\n            this._createAnchor(name);\r\n        });\r\n        this._createAnchor('rotater');\r\n    }\r\n    _createAnchor(name) {\r\n        const anchor = new Rect_1.Rect({\r\n            stroke: 'rgb(0, 161, 255)',\r\n            fill: 'white',\r\n            strokeWidth: 1,\r\n            name: name + ' _anchor',\r\n            dragDistance: 0,\r\n            draggable: true,\r\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\r\n        });\r\n        const self = this;\r\n        anchor.on('mousedown touchstart', function (e) {\r\n            self._handleMouseDown(e);\r\n        });\r\n        anchor.on('dragstart', (e) => {\r\n            anchor.stopDrag();\r\n            e.cancelBubble = true;\r\n        });\r\n        anchor.on('dragend', (e) => {\r\n            e.cancelBubble = true;\r\n        });\r\n        anchor.on('mouseenter', () => {\r\n            const rad = Global_1.Konva.getAngle(this.rotation());\r\n            const rotateCursor = this.rotateAnchorCursor();\r\n            const cursor = getCursor(name, rad, rotateCursor);\r\n            anchor.getStage().content &&\r\n                (anchor.getStage().content.style.cursor = cursor);\r\n            this._cursorChange = true;\r\n        });\r\n        anchor.on('mouseout', () => {\r\n            anchor.getStage().content &&\r\n                (anchor.getStage().content.style.cursor = '');\r\n            this._cursorChange = false;\r\n        });\r\n        this.add(anchor);\r\n    }\r\n    _createBack() {\r\n        const back = new Shape_1.Shape({\r\n            name: 'back',\r\n            width: 0,\r\n            height: 0,\r\n            draggable: true,\r\n            sceneFunc(ctx, shape) {\r\n                const tr = shape.getParent();\r\n                const padding = tr.padding();\r\n                ctx.beginPath();\r\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\r\n                ctx.moveTo(shape.width() / 2, -padding);\r\n                if (tr.rotateEnabled() && tr.rotateLineVisible()) {\r\n                    ctx.lineTo(shape.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(shape.height()) - padding);\r\n                }\r\n                ctx.fillStrokeShape(shape);\r\n            },\r\n            hitFunc: (ctx, shape) => {\r\n                if (!this.shouldOverdrawWholeArea()) {\r\n                    return;\r\n                }\r\n                const padding = this.padding();\r\n                ctx.beginPath();\r\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\r\n                ctx.fillStrokeShape(shape);\r\n            },\r\n        });\r\n        this.add(back);\r\n        this._proxyDrag(back);\r\n        back.on('dragstart', (e) => {\r\n            e.cancelBubble = true;\r\n        });\r\n        back.on('dragmove', (e) => {\r\n            e.cancelBubble = true;\r\n        });\r\n        back.on('dragend', (e) => {\r\n            e.cancelBubble = true;\r\n        });\r\n        this.on('dragmove', (e) => {\r\n            this.update();\r\n        });\r\n    }\r\n    _handleMouseDown(e) {\r\n        if (this._transforming) {\r\n            return;\r\n        }\r\n        this._movingAnchorName = e.target.name().split(' ')[0];\r\n        const attrs = this._getNodeRect();\r\n        const width = attrs.width;\r\n        const height = attrs.height;\r\n        const hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n        this.sin = Math.abs(height / hypotenuse);\r\n        this.cos = Math.abs(width / hypotenuse);\r\n        if (typeof window !== 'undefined') {\r\n            window.addEventListener('mousemove', this._handleMouseMove);\r\n            window.addEventListener('touchmove', this._handleMouseMove);\r\n            window.addEventListener('mouseup', this._handleMouseUp, true);\r\n            window.addEventListener('touchend', this._handleMouseUp, true);\r\n        }\r\n        this._transforming = true;\r\n        const ap = e.target.getAbsolutePosition();\r\n        const pos = e.target.getStage().getPointerPosition();\r\n        this._anchorDragOffset = {\r\n            x: pos.x - ap.x,\r\n            y: pos.y - ap.y,\r\n        };\r\n        activeTransformersCount++;\r\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\r\n        this._nodes.forEach((target) => {\r\n            target._fire('transformstart', { evt: e.evt, target });\r\n        });\r\n    }\r\n    _handleMouseMove(e) {\r\n        let x, y, newHypotenuse;\r\n        const anchorNode = this.findOne('.' + this._movingAnchorName);\r\n        const stage = anchorNode.getStage();\r\n        stage.setPointersPositions(e);\r\n        const pp = stage.getPointerPosition();\r\n        let newNodePos = {\r\n            x: pp.x - this._anchorDragOffset.x,\r\n            y: pp.y - this._anchorDragOffset.y,\r\n        };\r\n        const oldAbs = anchorNode.getAbsolutePosition();\r\n        if (this.anchorDragBoundFunc()) {\r\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\r\n        }\r\n        anchorNode.setAbsolutePosition(newNodePos);\r\n        const newAbs = anchorNode.getAbsolutePosition();\r\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\r\n            return;\r\n        }\r\n        if (this._movingAnchorName === 'rotater') {\r\n            const attrs = this._getNodeRect();\r\n            x = anchorNode.x() - attrs.width / 2;\r\n            y = -anchorNode.y() + attrs.height / 2;\r\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\r\n            if (attrs.height < 0) {\r\n                delta -= Math.PI;\r\n            }\r\n            const oldRotation = Global_1.Konva.getAngle(this.rotation());\r\n            const newRotation = oldRotation + delta;\r\n            const tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\r\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\r\n            const diff = snappedRot - attrs.rotation;\r\n            const shape = rotateAroundCenter(attrs, diff);\r\n            this._fitNodesInto(shape, e);\r\n            return;\r\n        }\r\n        const shiftBehavior = this.shiftBehavior();\r\n        let keepProportion;\r\n        if (shiftBehavior === 'inverted') {\r\n            keepProportion = this.keepRatio() && !e.shiftKey;\r\n        }\r\n        else if (shiftBehavior === 'none') {\r\n            keepProportion = this.keepRatio();\r\n        }\r\n        else {\r\n            keepProportion = this.keepRatio() || e.shiftKey;\r\n        }\r\n        let centeredScaling = this.centeredScaling() || e.altKey;\r\n        if (this._movingAnchorName === 'top-left') {\r\n            if (keepProportion) {\r\n                const comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.bottom-right').x(),\r\n                        y: this.findOne('.bottom-right').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\r\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\r\n                const reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\r\n                const reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                this.findOne('.top-left').x(comparePoint.x - x);\r\n                this.findOne('.top-left').y(comparePoint.y - y);\r\n            }\r\n        }\r\n        else if (this._movingAnchorName === 'top-center') {\r\n            this.findOne('.top-left').y(anchorNode.y());\r\n        }\r\n        else if (this._movingAnchorName === 'top-right') {\r\n            if (keepProportion) {\r\n                const comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.bottom-left').x(),\r\n                        y: this.findOne('.bottom-left').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\r\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\r\n                const reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\r\n                const reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                this.findOne('.top-right').x(comparePoint.x + x);\r\n                this.findOne('.top-right').y(comparePoint.y - y);\r\n            }\r\n            var pos = anchorNode.position();\r\n            this.findOne('.top-left').y(pos.y);\r\n            this.findOne('.bottom-right').x(pos.x);\r\n        }\r\n        else if (this._movingAnchorName === 'middle-left') {\r\n            this.findOne('.top-left').x(anchorNode.x());\r\n        }\r\n        else if (this._movingAnchorName === 'middle-right') {\r\n            this.findOne('.bottom-right').x(anchorNode.x());\r\n        }\r\n        else if (this._movingAnchorName === 'bottom-left') {\r\n            if (keepProportion) {\r\n                const comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.top-right').x(),\r\n                        y: this.findOne('.top-right').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\r\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\r\n                const reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\r\n                const reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                anchorNode.x(comparePoint.x - x);\r\n                anchorNode.y(comparePoint.y + y);\r\n            }\r\n            pos = anchorNode.position();\r\n            this.findOne('.top-left').x(pos.x);\r\n            this.findOne('.bottom-right').y(pos.y);\r\n        }\r\n        else if (this._movingAnchorName === 'bottom-center') {\r\n            this.findOne('.bottom-right').y(anchorNode.y());\r\n        }\r\n        else if (this._movingAnchorName === 'bottom-right') {\r\n            if (keepProportion) {\r\n                const comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.top-left').x(),\r\n                        y: this.findOne('.top-left').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\r\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\r\n                const reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\r\n                const reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                this.findOne('.bottom-right').x(comparePoint.x + x);\r\n                this.findOne('.bottom-right').y(comparePoint.y + y);\r\n            }\r\n        }\r\n        else {\r\n            console.error(new Error('Wrong position argument of selection resizer: ' +\r\n                this._movingAnchorName));\r\n        }\r\n        centeredScaling = this.centeredScaling() || e.altKey;\r\n        if (centeredScaling) {\r\n            const topLeft = this.findOne('.top-left');\r\n            const bottomRight = this.findOne('.bottom-right');\r\n            const topOffsetX = topLeft.x();\r\n            const topOffsetY = topLeft.y();\r\n            const bottomOffsetX = this.getWidth() - bottomRight.x();\r\n            const bottomOffsetY = this.getHeight() - bottomRight.y();\r\n            bottomRight.move({\r\n                x: -topOffsetX,\r\n                y: -topOffsetY,\r\n            });\r\n            topLeft.move({\r\n                x: bottomOffsetX,\r\n                y: bottomOffsetY,\r\n            });\r\n        }\r\n        const absPos = this.findOne('.top-left').getAbsolutePosition();\r\n        x = absPos.x;\r\n        y = absPos.y;\r\n        const width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\r\n        const height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\r\n        this._fitNodesInto({\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height,\r\n            rotation: Global_1.Konva.getAngle(this.rotation()),\r\n        }, e);\r\n    }\r\n    _handleMouseUp(e) {\r\n        this._removeEvents(e);\r\n    }\r\n    getAbsoluteTransform() {\r\n        return this.getTransform();\r\n    }\r\n    _removeEvents(e) {\r\n        var _a;\r\n        if (this._transforming) {\r\n            this._transforming = false;\r\n            if (typeof window !== 'undefined') {\r\n                window.removeEventListener('mousemove', this._handleMouseMove);\r\n                window.removeEventListener('touchmove', this._handleMouseMove);\r\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\r\n                window.removeEventListener('touchend', this._handleMouseUp, true);\r\n            }\r\n            const node = this.getNode();\r\n            activeTransformersCount--;\r\n            this._fire('transformend', { evt: e, target: node });\r\n            (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\r\n            if (node) {\r\n                this._nodes.forEach((target) => {\r\n                    var _a;\r\n                    target._fire('transformend', { evt: e, target });\r\n                    (_a = target.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\r\n                });\r\n            }\r\n            this._movingAnchorName = null;\r\n        }\r\n    }\r\n    _fitNodesInto(newAttrs, evt) {\r\n        const oldAttrs = this._getNodeRect();\r\n        const minSize = 1;\r\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\r\n            this.update();\r\n            return;\r\n        }\r\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\r\n            this.update();\r\n            return;\r\n        }\r\n        const t = new Util_1.Transform();\r\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\r\n        if (this._movingAnchorName &&\r\n            newAttrs.width < 0 &&\r\n            this._movingAnchorName.indexOf('left') >= 0) {\r\n            const offset = t.point({\r\n                x: -this.padding() * 2,\r\n                y: 0,\r\n            });\r\n            newAttrs.x += offset.x;\r\n            newAttrs.y += offset.y;\r\n            newAttrs.width += this.padding() * 2;\r\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n        }\r\n        else if (this._movingAnchorName &&\r\n            newAttrs.width < 0 &&\r\n            this._movingAnchorName.indexOf('right') >= 0) {\r\n            const offset = t.point({\r\n                x: this.padding() * 2,\r\n                y: 0,\r\n            });\r\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n            newAttrs.width += this.padding() * 2;\r\n        }\r\n        if (this._movingAnchorName &&\r\n            newAttrs.height < 0 &&\r\n            this._movingAnchorName.indexOf('top') >= 0) {\r\n            const offset = t.point({\r\n                x: 0,\r\n                y: -this.padding() * 2,\r\n            });\r\n            newAttrs.x += offset.x;\r\n            newAttrs.y += offset.y;\r\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n            newAttrs.height += this.padding() * 2;\r\n        }\r\n        else if (this._movingAnchorName &&\r\n            newAttrs.height < 0 &&\r\n            this._movingAnchorName.indexOf('bottom') >= 0) {\r\n            const offset = t.point({\r\n                x: 0,\r\n                y: this.padding() * 2,\r\n            });\r\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n            newAttrs.height += this.padding() * 2;\r\n        }\r\n        if (this.boundBoxFunc()) {\r\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\r\n            if (bounded) {\r\n                newAttrs = bounded;\r\n            }\r\n            else {\r\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\r\n            }\r\n        }\r\n        const baseSize = 10000000;\r\n        const oldTr = new Util_1.Transform();\r\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\r\n        oldTr.rotate(oldAttrs.rotation);\r\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\r\n        const newTr = new Util_1.Transform();\r\n        const newScaleX = newAttrs.width / baseSize;\r\n        const newScaleY = newAttrs.height / baseSize;\r\n        if (this.flipEnabled() === false) {\r\n            newTr.translate(newAttrs.x, newAttrs.y);\r\n            newTr.rotate(newAttrs.rotation);\r\n            newTr.translate(newAttrs.width < 0 ? newAttrs.width : 0, newAttrs.height < 0 ? newAttrs.height : 0);\r\n            newTr.scale(Math.abs(newScaleX), Math.abs(newScaleY));\r\n        }\r\n        else {\r\n            newTr.translate(newAttrs.x, newAttrs.y);\r\n            newTr.rotate(newAttrs.rotation);\r\n            newTr.scale(newScaleX, newScaleY);\r\n        }\r\n        const delta = newTr.multiply(oldTr.invert());\r\n        this._nodes.forEach((node) => {\r\n            var _a;\r\n            const parentTransform = node.getParent().getAbsoluteTransform();\r\n            const localTransform = node.getTransform().copy();\r\n            localTransform.translate(node.offsetX(), node.offsetY());\r\n            const newLocalTransform = new Util_1.Transform();\r\n            newLocalTransform\r\n                .multiply(parentTransform.copy().invert())\r\n                .multiply(delta)\r\n                .multiply(parentTransform)\r\n                .multiply(localTransform);\r\n            const attrs = newLocalTransform.decompose();\r\n            node.setAttrs(attrs);\r\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\r\n        });\r\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\r\n        this._nodes.forEach((node) => {\r\n            this._fire('transform', { evt: evt, target: node });\r\n            node._fire('transform', { evt: evt, target: node });\r\n        });\r\n        this._resetTransformCache();\r\n        this.update();\r\n        this.getLayer().batchDraw();\r\n    }\r\n    forceUpdate() {\r\n        this._resetTransformCache();\r\n        this.update();\r\n    }\r\n    _batchChangeChild(selector, attrs) {\r\n        const anchor = this.findOne(selector);\r\n        anchor.setAttrs(attrs);\r\n    }\r\n    update() {\r\n        var _a;\r\n        const attrs = this._getNodeRect();\r\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\r\n        const width = attrs.width;\r\n        const height = attrs.height;\r\n        const enabledAnchors = this.enabledAnchors();\r\n        const resizeEnabled = this.resizeEnabled();\r\n        const padding = this.padding();\r\n        const anchorSize = this.anchorSize();\r\n        const anchors = this.find('._anchor');\r\n        anchors.forEach((node) => {\r\n            node.setAttrs({\r\n                width: anchorSize,\r\n                height: anchorSize,\r\n                offsetX: anchorSize / 2,\r\n                offsetY: anchorSize / 2,\r\n                stroke: this.anchorStroke(),\r\n                strokeWidth: this.anchorStrokeWidth(),\r\n                fill: this.anchorFill(),\r\n                cornerRadius: this.anchorCornerRadius(),\r\n            });\r\n        });\r\n        this._batchChangeChild('.top-left', {\r\n            x: 0,\r\n            y: 0,\r\n            offsetX: anchorSize / 2 + padding,\r\n            offsetY: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\r\n        });\r\n        this._batchChangeChild('.top-center', {\r\n            x: width / 2,\r\n            y: 0,\r\n            offsetY: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\r\n        });\r\n        this._batchChangeChild('.top-right', {\r\n            x: width,\r\n            y: 0,\r\n            offsetX: anchorSize / 2 - padding,\r\n            offsetY: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\r\n        });\r\n        this._batchChangeChild('.middle-left', {\r\n            x: 0,\r\n            y: height / 2,\r\n            offsetX: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\r\n        });\r\n        this._batchChangeChild('.middle-right', {\r\n            x: width,\r\n            y: height / 2,\r\n            offsetX: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\r\n        });\r\n        this._batchChangeChild('.bottom-left', {\r\n            x: 0,\r\n            y: height,\r\n            offsetX: anchorSize / 2 + padding,\r\n            offsetY: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\r\n        });\r\n        this._batchChangeChild('.bottom-center', {\r\n            x: width / 2,\r\n            y: height,\r\n            offsetY: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\r\n        });\r\n        this._batchChangeChild('.bottom-right', {\r\n            x: width,\r\n            y: height,\r\n            offsetX: anchorSize / 2 - padding,\r\n            offsetY: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\r\n        });\r\n        this._batchChangeChild('.rotater', {\r\n            x: width / 2,\r\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\r\n            visible: this.rotateEnabled(),\r\n        });\r\n        this._batchChangeChild('.back', {\r\n            width: width,\r\n            height: height,\r\n            visible: this.borderEnabled(),\r\n            stroke: this.borderStroke(),\r\n            strokeWidth: this.borderStrokeWidth(),\r\n            dash: this.borderDash(),\r\n            x: 0,\r\n            y: 0,\r\n        });\r\n        const styleFunc = this.anchorStyleFunc();\r\n        if (styleFunc) {\r\n            anchors.forEach((node) => {\r\n                styleFunc(node);\r\n            });\r\n        }\r\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\r\n    }\r\n    isTransforming() {\r\n        return this._transforming;\r\n    }\r\n    stopTransform() {\r\n        if (this._transforming) {\r\n            this._removeEvents();\r\n            const anchorNode = this.findOne('.' + this._movingAnchorName);\r\n            if (anchorNode) {\r\n                anchorNode.stopDrag();\r\n            }\r\n        }\r\n    }\r\n    destroy() {\r\n        if (this.getStage() && this._cursorChange) {\r\n            this.getStage().content && (this.getStage().content.style.cursor = '');\r\n        }\r\n        Group_1.Group.prototype.destroy.call(this);\r\n        this.detach();\r\n        this._removeEvents();\r\n        return this;\r\n    }\r\n    toObject() {\r\n        return Node_1.Node.prototype.toObject.call(this);\r\n    }\r\n    clone(obj) {\r\n        const node = Node_1.Node.prototype.clone.call(this, obj);\r\n        return node;\r\n    }\r\n    getClientRect() {\r\n        if (this.nodes().length > 0) {\r\n            return super.getClientRect();\r\n        }\r\n        else {\r\n            return { x: 0, y: 0, width: 0, height: 0 };\r\n        }\r\n    }\r\n}\r\nexports.Transformer = Transformer;\r\nTransformer.isTransforming = () => {\r\n    return activeTransformersCount > 0;\r\n};\r\nfunction validateAnchors(val) {\r\n    if (!(val instanceof Array)) {\r\n        Util_1.Util.warn('enabledAnchors value should be an array');\r\n    }\r\n    if (val instanceof Array) {\r\n        val.forEach(function (name) {\r\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\r\n                Util_1.Util.warn('Unknown anchor name: ' +\r\n                    name +\r\n                    '. Available names are: ' +\r\n                    ANCHORS_NAMES.join(', '));\r\n            }\r\n        });\r\n    }\r\n    return val || [];\r\n}\r\nTransformer.prototype.className = 'Transformer';\r\n(0, Global_2._registerNode)(Transformer);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateLineVisible', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorCursor', 'crosshair');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\r\nFactory_1.Factory.backCompat(Transformer, {\r\n    lineEnabled: 'borderEnabled',\r\n    rotateHandlerOffset: 'rotateAnchorOffset',\r\n    enabledHandlers: 'enabledAnchors',\r\n});\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Wedge = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Shape_1 = require(\"../Shape\");\r\nconst Global_1 = require(\"../Global\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Global_2 = require(\"../Global\");\r\nclass Wedge extends Shape_1.Shape {\r\n    _sceneFunc(context) {\r\n        context.beginPath();\r\n        context.arc(0, 0, this.radius(), 0, Global_1.Konva.getAngle(this.angle()), this.clockwise());\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    }\r\n    getWidth() {\r\n        return this.radius() * 2;\r\n    }\r\n    getHeight() {\r\n        return this.radius() * 2;\r\n    }\r\n    setWidth(width) {\r\n        this.radius(width / 2);\r\n    }\r\n    setHeight(height) {\r\n        this.radius(height / 2);\r\n    }\r\n}\r\nexports.Wedge = Wedge;\r\nWedge.prototype.className = 'Wedge';\r\nWedge.prototype._centroid = true;\r\nWedge.prototype._attrsAffectingSize = ['radius'];\r\n(0, Global_2._registerNode)(Wedge);\r\nFactory_1.Factory.addGetterSetter(Wedge, 'radius', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Wedge, 'angle', 0, (0, Validators_1.getNumberValidator)());\r\nFactory_1.Factory.addGetterSetter(Wedge, 'clockwise', false);\r\nFactory_1.Factory.backCompat(Wedge, {\r\n    angleDeg: 'angle',\r\n    getAngleDeg: 'getAngle',\r\n    setAngleDeg: 'setAngle',\r\n});\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Blur = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nfunction BlurStack() {\r\n    this.r = 0;\r\n    this.g = 0;\r\n    this.b = 0;\r\n    this.a = 0;\r\n    this.next = null;\r\n}\r\nconst mul_table = [\r\n    512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292,\r\n    512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292,\r\n    273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259,\r\n    496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292,\r\n    282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373,\r\n    364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259,\r\n    507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381,\r\n    374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292,\r\n    287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461,\r\n    454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373,\r\n    368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309,\r\n    305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259,\r\n    257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442,\r\n    437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381,\r\n    377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332,\r\n    329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292,\r\n    289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259,\r\n];\r\nconst shg_table = [\r\n    9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17,\r\n    17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19,\r\n    19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\r\n    20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\r\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\r\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\r\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23,\r\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\r\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\r\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24,\r\n];\r\nfunction filterGaussBlurRGBA(imageData, radius) {\r\n    const pixels = imageData.data, width = imageData.width, height = imageData.height;\r\n    let p, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\r\n    const div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), mul_sum = mul_table[radius], shg_sum = shg_table[radius];\r\n    let stackEnd = null, stack = stackStart, stackIn = null, stackOut = null;\r\n    for (let i = 1; i < div; i++) {\r\n        stack = stack.next = new BlurStack();\r\n        if (i === radiusPlus1) {\r\n            stackEnd = stack;\r\n        }\r\n    }\r\n    stack.next = stackStart;\r\n    yw = yi = 0;\r\n    for (let y = 0; y < height; y++) {\r\n        r_in_sum =\r\n            g_in_sum =\r\n                b_in_sum =\r\n                    a_in_sum =\r\n                        r_sum =\r\n                            g_sum =\r\n                                b_sum =\r\n                                    a_sum =\r\n                                        0;\r\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\r\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\r\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\r\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\r\n        r_sum += sumFactor * pr;\r\n        g_sum += sumFactor * pg;\r\n        b_sum += sumFactor * pb;\r\n        a_sum += sumFactor * pa;\r\n        stack = stackStart;\r\n        for (let i = 0; i < radiusPlus1; i++) {\r\n            stack.r = pr;\r\n            stack.g = pg;\r\n            stack.b = pb;\r\n            stack.a = pa;\r\n            stack = stack.next;\r\n        }\r\n        for (let i = 1; i < radiusPlus1; i++) {\r\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\r\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\r\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\r\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\r\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\r\n            r_in_sum += pr;\r\n            g_in_sum += pg;\r\n            b_in_sum += pb;\r\n            a_in_sum += pa;\r\n            stack = stack.next;\r\n        }\r\n        stackIn = stackStart;\r\n        stackOut = stackEnd;\r\n        for (let x = 0; x < width; x++) {\r\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\r\n            if (pa !== 0) {\r\n                pa = 255 / pa;\r\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\r\n            }\r\n            else {\r\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\r\n            }\r\n            r_sum -= r_out_sum;\r\n            g_sum -= g_out_sum;\r\n            b_sum -= b_out_sum;\r\n            a_sum -= a_out_sum;\r\n            r_out_sum -= stackIn.r;\r\n            g_out_sum -= stackIn.g;\r\n            b_out_sum -= stackIn.b;\r\n            a_out_sum -= stackIn.a;\r\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\r\n            r_in_sum += stackIn.r = pixels[p];\r\n            g_in_sum += stackIn.g = pixels[p + 1];\r\n            b_in_sum += stackIn.b = pixels[p + 2];\r\n            a_in_sum += stackIn.a = pixels[p + 3];\r\n            r_sum += r_in_sum;\r\n            g_sum += g_in_sum;\r\n            b_sum += b_in_sum;\r\n            a_sum += a_in_sum;\r\n            stackIn = stackIn.next;\r\n            r_out_sum += pr = stackOut.r;\r\n            g_out_sum += pg = stackOut.g;\r\n            b_out_sum += pb = stackOut.b;\r\n            a_out_sum += pa = stackOut.a;\r\n            r_in_sum -= pr;\r\n            g_in_sum -= pg;\r\n            b_in_sum -= pb;\r\n            a_in_sum -= pa;\r\n            stackOut = stackOut.next;\r\n            yi += 4;\r\n        }\r\n        yw += width;\r\n    }\r\n    for (let x = 0; x < width; x++) {\r\n        g_in_sum =\r\n            b_in_sum =\r\n                a_in_sum =\r\n                    r_in_sum =\r\n                        g_sum =\r\n                            b_sum =\r\n                                a_sum =\r\n                                    r_sum =\r\n                                        0;\r\n        yi = x << 2;\r\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\r\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\r\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\r\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\r\n        r_sum += sumFactor * pr;\r\n        g_sum += sumFactor * pg;\r\n        b_sum += sumFactor * pb;\r\n        a_sum += sumFactor * pa;\r\n        stack = stackStart;\r\n        for (let i = 0; i < radiusPlus1; i++) {\r\n            stack.r = pr;\r\n            stack.g = pg;\r\n            stack.b = pb;\r\n            stack.a = pa;\r\n            stack = stack.next;\r\n        }\r\n        let yp = width;\r\n        for (let i = 1; i <= radius; i++) {\r\n            yi = (yp + x) << 2;\r\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\r\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\r\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\r\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\r\n            r_in_sum += pr;\r\n            g_in_sum += pg;\r\n            b_in_sum += pb;\r\n            a_in_sum += pa;\r\n            stack = stack.next;\r\n            if (i < heightMinus1) {\r\n                yp += width;\r\n            }\r\n        }\r\n        yi = x;\r\n        stackIn = stackStart;\r\n        stackOut = stackEnd;\r\n        for (let y = 0; y < height; y++) {\r\n            p = yi << 2;\r\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\r\n            if (pa > 0) {\r\n                pa = 255 / pa;\r\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\r\n            }\r\n            else {\r\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\r\n            }\r\n            r_sum -= r_out_sum;\r\n            g_sum -= g_out_sum;\r\n            b_sum -= b_out_sum;\r\n            a_sum -= a_out_sum;\r\n            r_out_sum -= stackIn.r;\r\n            g_out_sum -= stackIn.g;\r\n            b_out_sum -= stackIn.b;\r\n            a_out_sum -= stackIn.a;\r\n            p =\r\n                (x +\r\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\r\n                    2;\r\n            r_sum += r_in_sum += stackIn.r = pixels[p];\r\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\r\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\r\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\r\n            stackIn = stackIn.next;\r\n            r_out_sum += pr = stackOut.r;\r\n            g_out_sum += pg = stackOut.g;\r\n            b_out_sum += pb = stackOut.b;\r\n            a_out_sum += pa = stackOut.a;\r\n            r_in_sum -= pr;\r\n            g_in_sum -= pg;\r\n            b_in_sum -= pb;\r\n            a_in_sum -= pa;\r\n            stackOut = stackOut.next;\r\n            yi += width;\r\n        }\r\n    }\r\n}\r\nconst Blur = function Blur(imageData) {\r\n    const radius = Math.round(this.blurRadius());\r\n    if (radius > 0) {\r\n        filterGaussBlurRGBA(imageData, radius);\r\n    }\r\n};\r\nexports.Blur = Blur;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blurRadius', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Brighten = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Brighten = function (imageData) {\r\n    const brightness = this.brightness() * 255, data = imageData.data, len = data.length;\r\n    for (let i = 0; i < len; i += 4) {\r\n        data[i] += brightness;\r\n        data[i + 1] += brightness;\r\n        data[i + 2] += brightness;\r\n    }\r\n};\r\nexports.Brighten = Brighten;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'brightness', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Contrast = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Contrast = function (imageData) {\r\n    const adjust = Math.pow((this.contrast() + 100) / 100, 2);\r\n    const data = imageData.data, nPixels = data.length;\r\n    let red = 150, green = 150, blue = 150;\r\n    for (let i = 0; i < nPixels; i += 4) {\r\n        red = data[i];\r\n        green = data[i + 1];\r\n        blue = data[i + 2];\r\n        red /= 255;\r\n        red -= 0.5;\r\n        red *= adjust;\r\n        red += 0.5;\r\n        red *= 255;\r\n        green /= 255;\r\n        green -= 0.5;\r\n        green *= adjust;\r\n        green += 0.5;\r\n        green *= 255;\r\n        blue /= 255;\r\n        blue -= 0.5;\r\n        blue *= adjust;\r\n        blue += 0.5;\r\n        blue *= 255;\r\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\r\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\r\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\r\n        data[i] = red;\r\n        data[i + 1] = green;\r\n        data[i + 2] = blue;\r\n    }\r\n};\r\nexports.Contrast = Contrast;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'contrast', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Emboss = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Util_1 = require(\"../Util\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Emboss = function (imageData) {\r\n    const strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4;\r\n    let dirY = 0, dirX = 0, y = h;\r\n    switch (direction) {\r\n        case 'top-left':\r\n            dirY = -1;\r\n            dirX = -1;\r\n            break;\r\n        case 'top':\r\n            dirY = -1;\r\n            dirX = 0;\r\n            break;\r\n        case 'top-right':\r\n            dirY = -1;\r\n            dirX = 1;\r\n            break;\r\n        case 'right':\r\n            dirY = 0;\r\n            dirX = 1;\r\n            break;\r\n        case 'bottom-right':\r\n            dirY = 1;\r\n            dirX = 1;\r\n            break;\r\n        case 'bottom':\r\n            dirY = 1;\r\n            dirX = 0;\r\n            break;\r\n        case 'bottom-left':\r\n            dirY = 1;\r\n            dirX = -1;\r\n            break;\r\n        case 'left':\r\n            dirY = 0;\r\n            dirX = -1;\r\n            break;\r\n        default:\r\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\r\n    }\r\n    do {\r\n        const offsetY = (y - 1) * w4;\r\n        let otherY = dirY;\r\n        if (y + otherY < 1) {\r\n            otherY = 0;\r\n        }\r\n        if (y + otherY > h) {\r\n            otherY = 0;\r\n        }\r\n        const offsetYOther = (y - 1 + otherY) * w * 4;\r\n        let x = w;\r\n        do {\r\n            const offset = offsetY + (x - 1) * 4;\r\n            let otherX = dirX;\r\n            if (x + otherX < 1) {\r\n                otherX = 0;\r\n            }\r\n            if (x + otherX > w) {\r\n                otherX = 0;\r\n            }\r\n            const offsetOther = offsetYOther + (x - 1 + otherX) * 4;\r\n            const dR = data[offset] - data[offsetOther];\r\n            const dG = data[offset + 1] - data[offsetOther + 1];\r\n            const dB = data[offset + 2] - data[offsetOther + 2];\r\n            let dif = dR;\r\n            const absDif = dif > 0 ? dif : -dif;\r\n            const absG = dG > 0 ? dG : -dG;\r\n            const absB = dB > 0 ? dB : -dB;\r\n            if (absG > absDif) {\r\n                dif = dG;\r\n            }\r\n            if (absB > absDif) {\r\n                dif = dB;\r\n            }\r\n            dif *= strength;\r\n            if (blend) {\r\n                const r = data[offset] + dif;\r\n                const g = data[offset + 1] + dif;\r\n                const b = data[offset + 2] + dif;\r\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\r\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\r\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\r\n            }\r\n            else {\r\n                let grey = greyLevel - dif;\r\n                if (grey < 0) {\r\n                    grey = 0;\r\n                }\r\n                else if (grey > 255) {\r\n                    grey = 255;\r\n                }\r\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\r\n            }\r\n        } while (--x);\r\n    } while (--y);\r\n};\r\nexports.Emboss = Emboss;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', undefined, Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, undefined, Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Enhance = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\r\n    const fromRange = fromMax - fromMin, toRange = toMax - toMin;\r\n    if (fromRange === 0) {\r\n        return toMin + toRange / 2;\r\n    }\r\n    if (toRange === 0) {\r\n        return toMin;\r\n    }\r\n    let toValue = (fromValue - fromMin) / fromRange;\r\n    toValue = toRange * toValue + toMin;\r\n    return toValue;\r\n}\r\nconst Enhance = function (imageData) {\r\n    const data = imageData.data, nSubPixels = data.length;\r\n    let rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b;\r\n    const enhanceAmount = this.enhance();\r\n    if (enhanceAmount === 0) {\r\n        return;\r\n    }\r\n    for (let i = 0; i < nSubPixels; i += 4) {\r\n        r = data[i + 0];\r\n        if (r < rMin) {\r\n            rMin = r;\r\n        }\r\n        else if (r > rMax) {\r\n            rMax = r;\r\n        }\r\n        g = data[i + 1];\r\n        if (g < gMin) {\r\n            gMin = g;\r\n        }\r\n        else if (g > gMax) {\r\n            gMax = g;\r\n        }\r\n        b = data[i + 2];\r\n        if (b < bMin) {\r\n            bMin = b;\r\n        }\r\n        else if (b > bMax) {\r\n            bMax = b;\r\n        }\r\n    }\r\n    if (rMax === rMin) {\r\n        rMax = 255;\r\n        rMin = 0;\r\n    }\r\n    if (gMax === gMin) {\r\n        gMax = 255;\r\n        gMin = 0;\r\n    }\r\n    if (bMax === bMin) {\r\n        bMax = 255;\r\n        bMin = 0;\r\n    }\r\n    let rGoalMax, rGoalMin, gGoalMax, gGoalMin, bGoalMax, bGoalMin;\r\n    if (enhanceAmount > 0) {\r\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\r\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\r\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\r\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\r\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\r\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\r\n    }\r\n    else {\r\n        const rMid = (rMax + rMin) * 0.5;\r\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\r\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\r\n        const gMid = (gMax + gMin) * 0.5;\r\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\r\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\r\n        const bMid = (bMax + bMin) * 0.5;\r\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\r\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\r\n    }\r\n    for (let i = 0; i < nSubPixels; i += 4) {\r\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\r\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\r\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\r\n    }\r\n};\r\nexports.Enhance = Enhance;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Grayscale = void 0;\r\nconst Grayscale = function (imageData) {\r\n    const data = imageData.data, len = data.length;\r\n    for (let i = 0; i < len; i += 4) {\r\n        const brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\r\n        data[i] = brightness;\r\n        data[i + 1] = brightness;\r\n        data[i + 2] = brightness;\r\n    }\r\n};\r\nexports.Grayscale = Grayscale;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HSL = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'luminance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nconst HSL = function (imageData) {\r\n    const data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127;\r\n    const vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\r\n    const rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\r\n    const gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\r\n    const br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\r\n    let r, g, b, a;\r\n    for (let i = 0; i < nPixels; i += 4) {\r\n        r = data[i + 0];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n        a = data[i + 3];\r\n        data[i + 0] = rr * r + rg * g + rb * b + l;\r\n        data[i + 1] = gr * r + gg * g + gb * b + l;\r\n        data[i + 2] = br * r + bg * g + bb * b + l;\r\n        data[i + 3] = a;\r\n    }\r\n};\r\nexports.HSL = HSL;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HSV = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst HSV = function (imageData) {\r\n    const data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360;\r\n    const vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\r\n    const rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\r\n    const gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\r\n    const br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\r\n    for (let i = 0; i < nPixels; i += 4) {\r\n        const r = data[i + 0];\r\n        const g = data[i + 1];\r\n        const b = data[i + 2];\r\n        const a = data[i + 3];\r\n        data[i + 0] = rr * r + rg * g + rb * b;\r\n        data[i + 1] = gr * r + gg * g + gb * b;\r\n        data[i + 2] = br * r + bg * g + bb * b;\r\n        data[i + 3] = a;\r\n    }\r\n};\r\nexports.HSV = HSV;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'value', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Invert = void 0;\r\nconst Invert = function (imageData) {\r\n    const data = imageData.data, len = data.length;\r\n    for (let i = 0; i < len; i += 4) {\r\n        data[i] = 255 - data[i];\r\n        data[i + 1] = 255 - data[i + 1];\r\n        data[i + 2] = 255 - data[i + 2];\r\n    }\r\n};\r\nexports.Invert = Invert;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Kaleidoscope = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Util_1 = require(\"../Util\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst ToPolar = function (src, dst, opt) {\r\n    const srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2;\r\n    let rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    let x = xSize - xMid;\r\n    let y = ySize - yMid;\r\n    const rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    const rSize = ySize, tSize = xSize;\r\n    const conversion = ((360 / tSize) * Math.PI) / 180;\r\n    for (let theta = 0; theta < tSize; theta += 1) {\r\n        const sin = Math.sin(theta * conversion);\r\n        const cos = Math.cos(theta * conversion);\r\n        for (let radius = 0; radius < rSize; radius += 1) {\r\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\r\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\r\n            let i = (y * xSize + x) * 4;\r\n            const r = srcPixels[i + 0];\r\n            const g = srcPixels[i + 1];\r\n            const b = srcPixels[i + 2];\r\n            const a = srcPixels[i + 3];\r\n            i = (theta + radius * xSize) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nconst FromPolar = function (src, dst, opt) {\r\n    const srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2;\r\n    let rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    let x = xSize - xMid;\r\n    let y = ySize - yMid;\r\n    const rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    const rSize = ySize, tSize = xSize, phaseShift = opt.polarRotation || 0;\r\n    let x1, y1;\r\n    for (x = 0; x < xSize; x += 1) {\r\n        for (y = 0; y < ySize; y += 1) {\r\n            const dx = x - xMid;\r\n            const dy = y - yMid;\r\n            const radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\r\n            let theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\r\n            theta = (theta * tSize) / 360;\r\n            x1 = Math.floor(theta);\r\n            y1 = Math.floor(radius);\r\n            let i = (y1 * xSize + x1) * 4;\r\n            const r = srcPixels[i + 0];\r\n            const g = srcPixels[i + 1];\r\n            const b = srcPixels[i + 2];\r\n            const a = srcPixels[i + 3];\r\n            i = (y * xSize + x) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nconst Kaleidoscope = function (imageData) {\r\n    const xSize = imageData.width, ySize = imageData.height;\r\n    let x, y, xoff, i, r, g, b, a, srcPos, dstPos;\r\n    let power = Math.round(this.kaleidoscopePower());\r\n    const angle = Math.round(this.kaleidoscopeAngle());\r\n    const offset = Math.floor((xSize * (angle % 360)) / 360);\r\n    if (power < 1) {\r\n        return;\r\n    }\r\n    const tempCanvas = Util_1.Util.createCanvasElement();\r\n    tempCanvas.width = xSize;\r\n    tempCanvas.height = ySize;\r\n    const scratchData = tempCanvas\r\n        .getContext('2d')\r\n        .getImageData(0, 0, xSize, ySize);\r\n    Util_1.Util.releaseCanvas(tempCanvas);\r\n    ToPolar(imageData, scratchData, {\r\n        polarCenterX: xSize / 2,\r\n        polarCenterY: ySize / 2,\r\n    });\r\n    let minSectionSize = xSize / Math.pow(2, power);\r\n    while (minSectionSize <= 8) {\r\n        minSectionSize = minSectionSize * 2;\r\n        power -= 1;\r\n    }\r\n    minSectionSize = Math.ceil(minSectionSize);\r\n    let sectionSize = minSectionSize;\r\n    let xStart = 0, xEnd = sectionSize, xDelta = 1;\r\n    if (offset + minSectionSize > xSize) {\r\n        xStart = sectionSize;\r\n        xEnd = 0;\r\n        xDelta = -1;\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        for (x = xStart; x !== xEnd; x += xDelta) {\r\n            xoff = Math.round(x + offset) % xSize;\r\n            srcPos = (xSize * y + xoff) * 4;\r\n            r = scratchData.data[srcPos + 0];\r\n            g = scratchData.data[srcPos + 1];\r\n            b = scratchData.data[srcPos + 2];\r\n            a = scratchData.data[srcPos + 3];\r\n            dstPos = (xSize * y + x) * 4;\r\n            scratchData.data[dstPos + 0] = r;\r\n            scratchData.data[dstPos + 1] = g;\r\n            scratchData.data[dstPos + 2] = b;\r\n            scratchData.data[dstPos + 3] = a;\r\n        }\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        sectionSize = Math.floor(minSectionSize);\r\n        for (i = 0; i < power; i += 1) {\r\n            for (x = 0; x < sectionSize + 1; x += 1) {\r\n                srcPos = (xSize * y + x) * 4;\r\n                r = scratchData.data[srcPos + 0];\r\n                g = scratchData.data[srcPos + 1];\r\n                b = scratchData.data[srcPos + 2];\r\n                a = scratchData.data[srcPos + 3];\r\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\r\n                scratchData.data[dstPos + 0] = r;\r\n                scratchData.data[dstPos + 1] = g;\r\n                scratchData.data[dstPos + 2] = b;\r\n                scratchData.data[dstPos + 3] = a;\r\n            }\r\n            sectionSize *= 2;\r\n        }\r\n    }\r\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\r\n};\r\nexports.Kaleidoscope = Kaleidoscope;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Mask = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nfunction pixelAt(idata, x, y) {\r\n    let idx = (y * idata.width + x) * 4;\r\n    const d = [];\r\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\r\n    return d;\r\n}\r\nfunction rgbDistance(p1, p2) {\r\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\r\n        Math.pow(p1[1] - p2[1], 2) +\r\n        Math.pow(p1[2] - p2[2], 2));\r\n}\r\nfunction rgbMean(pTab) {\r\n    const m = [0, 0, 0];\r\n    for (let i = 0; i < pTab.length; i++) {\r\n        m[0] += pTab[i][0];\r\n        m[1] += pTab[i][1];\r\n        m[2] += pTab[i][2];\r\n    }\r\n    m[0] /= pTab.length;\r\n    m[1] /= pTab.length;\r\n    m[2] /= pTab.length;\r\n    return m;\r\n}\r\nfunction backgroundMask(idata, threshold) {\r\n    const rgbv_no = pixelAt(idata, 0, 0);\r\n    const rgbv_ne = pixelAt(idata, idata.width - 1, 0);\r\n    const rgbv_so = pixelAt(idata, 0, idata.height - 1);\r\n    const rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\r\n    const thres = threshold || 10;\r\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\r\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\r\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\r\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\r\n        const mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\r\n        const mask = [];\r\n        for (let i = 0; i < idata.width * idata.height; i++) {\r\n            const d = rgbDistance(mean, [\r\n                idata.data[i * 4],\r\n                idata.data[i * 4 + 1],\r\n                idata.data[i * 4 + 2],\r\n            ]);\r\n            mask[i] = d < thres ? 0 : 255;\r\n        }\r\n        return mask;\r\n    }\r\n}\r\nfunction applyMask(idata, mask) {\r\n    for (let i = 0; i < idata.width * idata.height; i++) {\r\n        idata.data[4 * i + 3] = mask[i];\r\n    }\r\n}\r\nfunction erodeMask(mask, sw, sh) {\r\n    const weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\r\n    const side = Math.round(Math.sqrt(weights.length));\r\n    const halfSide = Math.floor(side / 2);\r\n    const maskResult = [];\r\n    for (let y = 0; y < sh; y++) {\r\n        for (let x = 0; x < sw; x++) {\r\n            const so = y * sw + x;\r\n            let a = 0;\r\n            for (let cy = 0; cy < side; cy++) {\r\n                for (let cx = 0; cx < side; cx++) {\r\n                    const scy = y + cy - halfSide;\r\n                    const scx = x + cx - halfSide;\r\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n                        const srcOff = scy * sw + scx;\r\n                        const wt = weights[cy * side + cx];\r\n                        a += mask[srcOff] * wt;\r\n                    }\r\n                }\r\n            }\r\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\r\n        }\r\n    }\r\n    return maskResult;\r\n}\r\nfunction dilateMask(mask, sw, sh) {\r\n    const weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n    const side = Math.round(Math.sqrt(weights.length));\r\n    const halfSide = Math.floor(side / 2);\r\n    const maskResult = [];\r\n    for (let y = 0; y < sh; y++) {\r\n        for (let x = 0; x < sw; x++) {\r\n            const so = y * sw + x;\r\n            let a = 0;\r\n            for (let cy = 0; cy < side; cy++) {\r\n                for (let cx = 0; cx < side; cx++) {\r\n                    const scy = y + cy - halfSide;\r\n                    const scx = x + cx - halfSide;\r\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n                        const srcOff = scy * sw + scx;\r\n                        const wt = weights[cy * side + cx];\r\n                        a += mask[srcOff] * wt;\r\n                    }\r\n                }\r\n            }\r\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\r\n        }\r\n    }\r\n    return maskResult;\r\n}\r\nfunction smoothEdgeMask(mask, sw, sh) {\r\n    const weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\r\n    const side = Math.round(Math.sqrt(weights.length));\r\n    const halfSide = Math.floor(side / 2);\r\n    const maskResult = [];\r\n    for (let y = 0; y < sh; y++) {\r\n        for (let x = 0; x < sw; x++) {\r\n            const so = y * sw + x;\r\n            let a = 0;\r\n            for (let cy = 0; cy < side; cy++) {\r\n                for (let cx = 0; cx < side; cx++) {\r\n                    const scy = y + cy - halfSide;\r\n                    const scx = x + cx - halfSide;\r\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n                        const srcOff = scy * sw + scx;\r\n                        const wt = weights[cy * side + cx];\r\n                        a += mask[srcOff] * wt;\r\n                    }\r\n                }\r\n            }\r\n            maskResult[so] = a;\r\n        }\r\n    }\r\n    return maskResult;\r\n}\r\nconst Mask = function (imageData) {\r\n    const threshold = this.threshold();\r\n    let mask = backgroundMask(imageData, threshold);\r\n    if (mask) {\r\n        mask = erodeMask(mask, imageData.width, imageData.height);\r\n        mask = dilateMask(mask, imageData.width, imageData.height);\r\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\r\n        applyMask(imageData, mask);\r\n    }\r\n    return imageData;\r\n};\r\nexports.Mask = Mask;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Noise = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Noise = function (imageData) {\r\n    const amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2;\r\n    for (let i = 0; i < nPixels; i += 4) {\r\n        data[i + 0] += half - 2 * half * Math.random();\r\n        data[i + 1] += half - 2 * half * Math.random();\r\n        data[i + 2] += half - 2 * half * Math.random();\r\n    }\r\n};\r\nexports.Noise = Noise;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'noise', 0.2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Pixelate = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Util_1 = require(\"../Util\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Pixelate = function (imageData) {\r\n    let pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), data = imageData.data;\r\n    if (pixelSize <= 0) {\r\n        Util_1.Util.error('pixelSize value can not be <= 0');\r\n        return;\r\n    }\r\n    for (let xBin = 0; xBin < nBinsX; xBin += 1) {\r\n        for (let yBin = 0; yBin < nBinsY; yBin += 1) {\r\n            let red = 0;\r\n            let green = 0;\r\n            let blue = 0;\r\n            let alpha = 0;\r\n            const xBinStart = xBin * pixelSize;\r\n            const xBinEnd = xBinStart + pixelSize;\r\n            const yBinStart = yBin * pixelSize;\r\n            const yBinEnd = yBinStart + pixelSize;\r\n            let pixelsInBin = 0;\r\n            for (let x = xBinStart; x < xBinEnd; x += 1) {\r\n                if (x >= width) {\r\n                    continue;\r\n                }\r\n                for (let y = yBinStart; y < yBinEnd; y += 1) {\r\n                    if (y >= height) {\r\n                        continue;\r\n                    }\r\n                    const i = (width * y + x) * 4;\r\n                    red += data[i + 0];\r\n                    green += data[i + 1];\r\n                    blue += data[i + 2];\r\n                    alpha += data[i + 3];\r\n                    pixelsInBin += 1;\r\n                }\r\n            }\r\n            red = red / pixelsInBin;\r\n            green = green / pixelsInBin;\r\n            blue = blue / pixelsInBin;\r\n            alpha = alpha / pixelsInBin;\r\n            for (let x = xBinStart; x < xBinEnd; x += 1) {\r\n                if (x >= width) {\r\n                    continue;\r\n                }\r\n                for (let y = yBinStart; y < yBinEnd; y += 1) {\r\n                    if (y >= height) {\r\n                        continue;\r\n                    }\r\n                    const i = (width * y + x) * 4;\r\n                    data[i + 0] = red;\r\n                    data[i + 1] = green;\r\n                    data[i + 2] = blue;\r\n                    data[i + 3] = alpha;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.Pixelate = Pixelate;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Posterize = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Posterize = function (imageData) {\r\n    const levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels;\r\n    for (let i = 0; i < len; i += 1) {\r\n        data[i] = Math.floor(data[i] / scale) * scale;\r\n    }\r\n};\r\nexports.Posterize = Posterize;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'levels', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RGB = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst RGB = function (imageData) {\r\n    const data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue();\r\n    for (let i = 0; i < nPixels; i += 4) {\r\n        const brightness = (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\r\n        data[i] = brightness * red;\r\n        data[i + 1] = brightness * green;\r\n        data[i + 2] = brightness * blue;\r\n        data[i + 3] = data[i + 3];\r\n    }\r\n};\r\nexports.RGB = RGB;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RGBA = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst RGBA = function (imageData) {\r\n    const data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha();\r\n    for (let i = 0; i < nPixels; i += 4) {\r\n        const ia = 1 - alpha;\r\n        data[i] = red * alpha + data[i] * ia;\r\n        data[i + 1] = green * alpha + data[i + 1] * ia;\r\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\r\n    }\r\n};\r\nexports.RGBA = RGBA;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 1) {\r\n        return 1;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return val;\r\n    }\r\n});\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sepia = void 0;\r\nconst Sepia = function (imageData) {\r\n    const data = imageData.data, nPixels = data.length;\r\n    for (let i = 0; i < nPixels; i += 4) {\r\n        const r = data[i + 0];\r\n        const g = data[i + 1];\r\n        const b = data[i + 2];\r\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\r\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\r\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\r\n    }\r\n};\r\nexports.Sepia = Sepia;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Solarize = void 0;\r\nconst Solarize = function (imageData) {\r\n    const data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4;\r\n    let y = h;\r\n    do {\r\n        const offsetY = (y - 1) * w4;\r\n        let x = w;\r\n        do {\r\n            const offset = offsetY + (x - 1) * 4;\r\n            let r = data[offset];\r\n            let g = data[offset + 1];\r\n            let b = data[offset + 2];\r\n            if (r > 127) {\r\n                r = 255 - r;\r\n            }\r\n            if (g > 127) {\r\n                g = 255 - g;\r\n            }\r\n            if (b > 127) {\r\n                b = 255 - b;\r\n            }\r\n            data[offset] = r;\r\n            data[offset + 1] = g;\r\n            data[offset + 2] = b;\r\n        } while (--x);\r\n    } while (--y);\r\n};\r\nexports.Solarize = Solarize;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Threshold = void 0;\r\nconst Factory_1 = require(\"../Factory\");\r\nconst Node_1 = require(\"../Node\");\r\nconst Validators_1 = require(\"../Validators\");\r\nconst Threshold = function (imageData) {\r\n    const level = this.threshold() * 255, data = imageData.data, len = data.length;\r\n    for (let i = 0; i < len; i += 1) {\r\n        data[i] = data[i] < level ? 0 : 255;\r\n    }\r\n};\r\nexports.Threshold = Threshold;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Konva = void 0;\r\nconst _CoreInternals_1 = require(\"./_CoreInternals\");\r\nconst Arc_1 = require(\"./shapes/Arc\");\r\nconst Arrow_1 = require(\"./shapes/Arrow\");\r\nconst Circle_1 = require(\"./shapes/Circle\");\r\nconst Ellipse_1 = require(\"./shapes/Ellipse\");\r\nconst Image_1 = require(\"./shapes/Image\");\r\nconst Label_1 = require(\"./shapes/Label\");\r\nconst Line_1 = require(\"./shapes/Line\");\r\nconst Path_1 = require(\"./shapes/Path\");\r\nconst Rect_1 = require(\"./shapes/Rect\");\r\nconst RegularPolygon_1 = require(\"./shapes/RegularPolygon\");\r\nconst Ring_1 = require(\"./shapes/Ring\");\r\nconst Sprite_1 = require(\"./shapes/Sprite\");\r\nconst Star_1 = require(\"./shapes/Star\");\r\nconst Text_1 = require(\"./shapes/Text\");\r\nconst TextPath_1 = require(\"./shapes/TextPath\");\r\nconst Transformer_1 = require(\"./shapes/Transformer\");\r\nconst Wedge_1 = require(\"./shapes/Wedge\");\r\nconst Blur_1 = require(\"./filters/Blur\");\r\nconst Brighten_1 = require(\"./filters/Brighten\");\r\nconst Contrast_1 = require(\"./filters/Contrast\");\r\nconst Emboss_1 = require(\"./filters/Emboss\");\r\nconst Enhance_1 = require(\"./filters/Enhance\");\r\nconst Grayscale_1 = require(\"./filters/Grayscale\");\r\nconst HSL_1 = require(\"./filters/HSL\");\r\nconst HSV_1 = require(\"./filters/HSV\");\r\nconst Invert_1 = require(\"./filters/Invert\");\r\nconst Kaleidoscope_1 = require(\"./filters/Kaleidoscope\");\r\nconst Mask_1 = require(\"./filters/Mask\");\r\nconst Noise_1 = require(\"./filters/Noise\");\r\nconst Pixelate_1 = require(\"./filters/Pixelate\");\r\nconst Posterize_1 = require(\"./filters/Posterize\");\r\nconst RGB_1 = require(\"./filters/RGB\");\r\nconst RGBA_1 = require(\"./filters/RGBA\");\r\nconst Sepia_1 = require(\"./filters/Sepia\");\r\nconst Solarize_1 = require(\"./filters/Solarize\");\r\nconst Threshold_1 = require(\"./filters/Threshold\");\r\nexports.Konva = _CoreInternals_1.Konva.Util._assign(_CoreInternals_1.Konva, {\r\n    Arc: Arc_1.Arc,\r\n    Arrow: Arrow_1.Arrow,\r\n    Circle: Circle_1.Circle,\r\n    Ellipse: Ellipse_1.Ellipse,\r\n    Image: Image_1.Image,\r\n    Label: Label_1.Label,\r\n    Tag: Label_1.Tag,\r\n    Line: Line_1.Line,\r\n    Path: Path_1.Path,\r\n    Rect: Rect_1.Rect,\r\n    RegularPolygon: RegularPolygon_1.RegularPolygon,\r\n    Ring: Ring_1.Ring,\r\n    Sprite: Sprite_1.Sprite,\r\n    Star: Star_1.Star,\r\n    Text: Text_1.Text,\r\n    TextPath: TextPath_1.TextPath,\r\n    Transformer: Transformer_1.Transformer,\r\n    Wedge: Wedge_1.Wedge,\r\n    Filters: {\r\n        Blur: Blur_1.Blur,\r\n        Brighten: Brighten_1.Brighten,\r\n        Contrast: Contrast_1.Contrast,\r\n        Emboss: Emboss_1.Emboss,\r\n        Enhance: Enhance_1.Enhance,\r\n        Grayscale: Grayscale_1.Grayscale,\r\n        HSL: HSL_1.HSL,\r\n        HSV: HSV_1.HSV,\r\n        Invert: Invert_1.Invert,\r\n        Kaleidoscope: Kaleidoscope_1.Kaleidoscope,\r\n        Mask: Mask_1.Mask,\r\n        Noise: Noise_1.Noise,\r\n        Pixelate: Pixelate_1.Pixelate,\r\n        Posterize: Posterize_1.Posterize,\r\n        RGB: RGB_1.RGB,\r\n        RGBA: RGBA_1.RGBA,\r\n        Sepia: Sepia_1.Sepia,\r\n        Solarize: Solarize_1.Solarize,\r\n        Threshold: Threshold_1.Threshold,\r\n    },\r\n});\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _FullInternals_1 = require(\"./_FullInternals\");\r\nmodule.exports = _FullInternals_1.Konva;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Konva = void 0;\r\nvar _CoreInternals_1 = require(\"./_CoreInternals\");\r\nObject.defineProperty(exports, \"Konva\", { enumerable: true, get: function () { return _CoreInternals_1.Konva; } });\r\nconst _CoreInternals_2 = require(\"./_CoreInternals\");\r\nmodule.exports = _CoreInternals_2.Konva;\r\n", "/**\r\n * @license React\r\n * react-reconciler.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  module.exports = function $$$reconciler($$$hostConfig) {\r\n    var exports = {};\r\n'use strict';\r\n\r\nvar React = require('react');\r\nvar Scheduler = require('scheduler');\r\n\r\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\nvar suppressWarning = false;\r\nfunction setSuppressWarning(newSuppressWarning) {\r\n  {\r\n    suppressWarning = newSuppressWarning;\r\n  }\r\n} // In DEV, calls to console.warn and console.error get replaced\r\n// by calls to these methods by a Babel plugin.\r\n//\r\n// In PROD (or in packages without access to React internals),\r\n// they are left as they are instead.\r\n\r\nfunction warn(format) {\r\n  {\r\n    if (!suppressWarning) {\r\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        args[_key - 1] = arguments[_key];\r\n      }\r\n\r\n      printWarning('warn', format, args);\r\n    }\r\n  }\r\n}\r\nfunction error(format) {\r\n  {\r\n    if (!suppressWarning) {\r\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n        args[_key2 - 1] = arguments[_key2];\r\n      }\r\n\r\n      printWarning('error', format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  {\r\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n\r\n    if (stack !== '') {\r\n      format += '%s';\r\n      args = args.concat([stack]);\r\n    } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n\r\n    var argsWithFormat = args.map(function (item) {\r\n      return String(item);\r\n    }); // Careful: RN currently depends on this prefix\r\n\r\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n\r\nvar assign = Object.assign;\r\n\r\n/**\r\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\r\n * instance (key) and the internal representation (value). This allows public\r\n * methods to accept the user facing instance as an argument and map them back\r\n * to internal methods.\r\n *\r\n * Note that this module is currently shared and assumed to be stateless.\r\n * If this becomes an actual Map, that will break.\r\n */\r\nfunction get(key) {\r\n  return key._reactInternals;\r\n}\r\nfunction set(key, value) {\r\n  key._reactInternals = value;\r\n}\r\n\r\n// -----------------------------------------------------------------------------\r\n// the react-reconciler package.\r\n\r\nvar enableNewReconciler = false; // Support legacy Primer support on internal FB www\r\n\r\nvar enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.\r\n\r\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\r\n\r\nvar enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz\r\nvar warnAboutStringRefs = true; // -----------------------------------------------------------------------------\r\n// Debugging and DevTools\r\n// -----------------------------------------------------------------------------\r\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\r\n// for an experimental timeline tool.\r\n\r\nvar enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState\r\n\r\nvar enableProfilerTimer = true; // Record durations for commit and passive effects phases.\r\n\r\nvar enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\r\n\r\nvar FunctionComponent = 0;\r\nvar ClassComponent = 1;\r\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\r\n\r\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\r\n\r\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\r\n\r\nvar HostComponent = 5;\r\nvar HostText = 6;\r\nvar Fragment = 7;\r\nvar Mode = 8;\r\nvar ContextConsumer = 9;\r\nvar ContextProvider = 10;\r\nvar ForwardRef = 11;\r\nvar Profiler = 12;\r\nvar SuspenseComponent = 13;\r\nvar MemoComponent = 14;\r\nvar SimpleMemoComponent = 15;\r\nvar LazyComponent = 16;\r\nvar IncompleteClassComponent = 17;\r\nvar DehydratedFragment = 18;\r\nvar SuspenseListComponent = 19;\r\nvar ScopeComponent = 21;\r\nvar OffscreenComponent = 22;\r\nvar LegacyHiddenComponent = 23;\r\nvar CacheComponent = 24;\r\nvar TracingMarkerComponent = 25;\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n// The Symbol used to tag the ReactElement-like types.\r\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\r\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\r\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\r\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\r\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\r\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\r\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\r\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\r\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\r\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\r\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\r\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\r\nvar REACT_SCOPE_TYPE = Symbol.for('react.scope');\r\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');\r\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\r\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\r\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\r\nvar REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\r\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\r\nfunction getIteratorFn(maybeIterable) {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n\r\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getWrappedName(outerType, innerType, wrapperName) {\r\n  var displayName = outerType.displayName;\r\n\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n\r\n  var functionName = innerType.displayName || innerType.name || '';\r\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\r\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\r\n\r\n\r\nfunction getContextName(type) {\r\n  return type.displayName || 'Context';\r\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\n\r\n\r\nfunction getComponentNameFromType(type) {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n\r\n  {\r\n    if (typeof type.tag === 'number') {\r\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n\r\n  if (typeof type === 'function') {\r\n    return type.displayName || type.name || null;\r\n  }\r\n\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return 'SuspenseList';\r\n\r\n  }\r\n\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        var context = type;\r\n        return getContextName(context) + '.Consumer';\r\n\r\n      case REACT_PROVIDER_TYPE:\r\n        var provider = type;\r\n        return getContextName(provider._context) + '.Provider';\r\n\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n\r\n      case REACT_MEMO_TYPE:\r\n        var outerName = type.displayName || null;\r\n\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n\r\n        return getComponentNameFromType(type.type) || 'Memo';\r\n\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var lazyComponent = type;\r\n          var payload = lazyComponent._payload;\r\n          var init = lazyComponent._init;\r\n\r\n          try {\r\n            return getComponentNameFromType(init(payload));\r\n          } catch (x) {\r\n            return null;\r\n          }\r\n        }\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\r\n  var functionName = innerType.displayName || innerType.name || '';\r\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\r\n} // Keep in sync with shared/getComponentNameFromType\r\n\r\n\r\nfunction getContextName$1(type) {\r\n  return type.displayName || 'Context';\r\n}\r\n\r\nfunction getComponentNameFromFiber(fiber) {\r\n  var tag = fiber.tag,\r\n      type = fiber.type;\r\n\r\n  switch (tag) {\r\n    case CacheComponent:\r\n      return 'Cache';\r\n\r\n    case ContextConsumer:\r\n      var context = type;\r\n      return getContextName$1(context) + '.Consumer';\r\n\r\n    case ContextProvider:\r\n      var provider = type;\r\n      return getContextName$1(provider._context) + '.Provider';\r\n\r\n    case DehydratedFragment:\r\n      return 'DehydratedFragment';\r\n\r\n    case ForwardRef:\r\n      return getWrappedName$1(type, type.render, 'ForwardRef');\r\n\r\n    case Fragment:\r\n      return 'Fragment';\r\n\r\n    case HostComponent:\r\n      // Host component type is the display name (e.g. \"div\", \"View\")\r\n      return type;\r\n\r\n    case HostPortal:\r\n      return 'Portal';\r\n\r\n    case HostRoot:\r\n      return 'Root';\r\n\r\n    case HostText:\r\n      return 'Text';\r\n\r\n    case LazyComponent:\r\n      // Name comes from the type in this case; we don't have a tag.\r\n      return getComponentNameFromType(type);\r\n\r\n    case Mode:\r\n      if (type === REACT_STRICT_MODE_TYPE) {\r\n        // Don't be less specific than shared/getComponentNameFromType\r\n        return 'StrictMode';\r\n      }\r\n\r\n      return 'Mode';\r\n\r\n    case OffscreenComponent:\r\n      return 'Offscreen';\r\n\r\n    case Profiler:\r\n      return 'Profiler';\r\n\r\n    case ScopeComponent:\r\n      return 'Scope';\r\n\r\n    case SuspenseComponent:\r\n      return 'Suspense';\r\n\r\n    case SuspenseListComponent:\r\n      return 'SuspenseList';\r\n\r\n    case TracingMarkerComponent:\r\n      return 'TracingMarker';\r\n    // The display name for this tags come from the user-provided type:\r\n\r\n    case ClassComponent:\r\n    case FunctionComponent:\r\n    case IncompleteClassComponent:\r\n    case IndeterminateComponent:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent:\r\n      if (typeof type === 'function') {\r\n        return type.displayName || type.name || null;\r\n      }\r\n\r\n      if (typeof type === 'string') {\r\n        return type;\r\n      }\r\n\r\n      break;\r\n\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// Don't change these two values. They're used by React Dev Tools.\r\nvar NoFlags =\r\n/*                      */\r\n0;\r\nvar PerformedWork =\r\n/*                */\r\n1; // You can change the rest (and add more).\r\n\r\nvar Placement =\r\n/*                    */\r\n2;\r\nvar Update =\r\n/*                       */\r\n4;\r\nvar ChildDeletion =\r\n/*                */\r\n16;\r\nvar ContentReset =\r\n/*                 */\r\n32;\r\nvar Callback =\r\n/*                     */\r\n64;\r\nvar DidCapture =\r\n/*                   */\r\n128;\r\nvar ForceClientRender =\r\n/*            */\r\n256;\r\nvar Ref =\r\n/*                          */\r\n512;\r\nvar Snapshot =\r\n/*                     */\r\n1024;\r\nvar Passive =\r\n/*                      */\r\n2048;\r\nvar Hydrating =\r\n/*                    */\r\n4096;\r\nvar Visibility =\r\n/*                   */\r\n8192;\r\nvar StoreConsistency =\r\n/*             */\r\n16384;\r\nvar LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\r\n\r\nvar HostEffectMask =\r\n/*               */\r\n32767; // These are not really side effects, but we still reuse this field.\r\n\r\nvar Incomplete =\r\n/*                   */\r\n32768;\r\nvar ShouldCapture =\r\n/*                */\r\n65536;\r\nvar ForceUpdateForLegacySuspense =\r\n/* */\r\n131072;\r\nvar Forked =\r\n/*                       */\r\n1048576; // Static tags describe aspects of a fiber that are not specific to a render,\r\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\r\n// This enables us to defer more work in the unmount case,\r\n// since we can defer traversing the tree during layout to look for Passive effects,\r\n// and instead rely on the static flag as a signal that there may be cleanup work.\r\n\r\nvar RefStatic =\r\n/*                    */\r\n2097152;\r\nvar LayoutStatic =\r\n/*                 */\r\n4194304;\r\nvar PassiveStatic =\r\n/*                */\r\n8388608; // These flags allow us to traverse to fibers that have effects on mount\r\n// without traversing the entire tree after every commit for\r\n// double invoking\r\n\r\nvar MountLayoutDev =\r\n/*               */\r\n16777216;\r\nvar MountPassiveDev =\r\n/*              */\r\n33554432; // Groups of flags that are used in the commit phase to skip over trees that\r\n// don't contain effects, by checking subtreeFlags.\r\n\r\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\r\n// flag logic (see #20043)\r\nUpdate | Snapshot | ( 0);\r\nvar MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\r\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\r\n\r\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\r\n// This allows certain concepts to persist without recalculating them,\r\n// e.g. whether a subtree contains passive effects or portals.\r\n\r\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\r\n\r\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nfunction getNearestMountedFiber(fiber) {\r\n  var node = fiber;\r\n  var nearestMounted = fiber;\r\n\r\n  if (!fiber.alternate) {\r\n    // If there is no alternate, this might be a new tree that isn't inserted\r\n    // yet. If it is, then it will have a pending insertion effect on it.\r\n    var nextNode = node;\r\n\r\n    do {\r\n      node = nextNode;\r\n\r\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\r\n        // This is an insertion or in-progress hydration. The nearest possible\r\n        // mounted fiber is the parent but we need to continue to figure out\r\n        // if that one is still mounted.\r\n        nearestMounted = node.return;\r\n      }\r\n\r\n      nextNode = node.return;\r\n    } while (nextNode);\r\n  } else {\r\n    while (node.return) {\r\n      node = node.return;\r\n    }\r\n  }\r\n\r\n  if (node.tag === HostRoot) {\r\n    // TODO: Check if this was a nested HostRoot when used with\r\n    // renderContainerIntoSubtree.\r\n    return nearestMounted;\r\n  } // If we didn't hit the root, that means that we're in an disconnected tree\r\n  // that has been unmounted.\r\n\r\n\r\n  return null;\r\n}\r\nfunction isFiberMounted(fiber) {\r\n  return getNearestMountedFiber(fiber) === fiber;\r\n}\r\nfunction isMounted(component) {\r\n  {\r\n    var owner = ReactCurrentOwner.current;\r\n\r\n    if (owner !== null && owner.tag === ClassComponent) {\r\n      var ownerFiber = owner;\r\n      var instance = ownerFiber.stateNode;\r\n\r\n      if (!instance._warnedAboutRefsInRender) {\r\n        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromFiber(ownerFiber) || 'A component');\r\n      }\r\n\r\n      instance._warnedAboutRefsInRender = true;\r\n    }\r\n  }\r\n\r\n  var fiber = get(component);\r\n\r\n  if (!fiber) {\r\n    return false;\r\n  }\r\n\r\n  return getNearestMountedFiber(fiber) === fiber;\r\n}\r\n\r\nfunction assertIsMounted(fiber) {\r\n  if (getNearestMountedFiber(fiber) !== fiber) {\r\n    throw new Error('Unable to find node on an unmounted component.');\r\n  }\r\n}\r\n\r\nfunction findCurrentFiberUsingSlowPath(fiber) {\r\n  var alternate = fiber.alternate;\r\n\r\n  if (!alternate) {\r\n    // If there is no alternate, then we only need to check if it is mounted.\r\n    var nearestMounted = getNearestMountedFiber(fiber);\r\n\r\n    if (nearestMounted === null) {\r\n      throw new Error('Unable to find node on an unmounted component.');\r\n    }\r\n\r\n    if (nearestMounted !== fiber) {\r\n      return null;\r\n    }\r\n\r\n    return fiber;\r\n  } // If we have two possible branches, we'll walk backwards up to the root\r\n  // to see what path the root points to. On the way we may hit one of the\r\n  // special cases and we'll deal with them.\r\n\r\n\r\n  var a = fiber;\r\n  var b = alternate;\r\n\r\n  while (true) {\r\n    var parentA = a.return;\r\n\r\n    if (parentA === null) {\r\n      // We're at the root.\r\n      break;\r\n    }\r\n\r\n    var parentB = parentA.alternate;\r\n\r\n    if (parentB === null) {\r\n      // There is no alternate. This is an unusual case. Currently, it only\r\n      // happens when a Suspense component is hidden. An extra fragment fiber\r\n      // is inserted in between the Suspense fiber and its children. Skip\r\n      // over this extra fragment fiber and proceed to the next parent.\r\n      var nextParent = parentA.return;\r\n\r\n      if (nextParent !== null) {\r\n        a = b = nextParent;\r\n        continue;\r\n      } // If there's no parent, we're at the root.\r\n\r\n\r\n      break;\r\n    } // If both copies of the parent fiber point to the same child, we can\r\n    // assume that the child is current. This happens when we bailout on low\r\n    // priority: the bailed out fiber's child reuses the current child.\r\n\r\n\r\n    if (parentA.child === parentB.child) {\r\n      var child = parentA.child;\r\n\r\n      while (child) {\r\n        if (child === a) {\r\n          // We've determined that A is the current branch.\r\n          assertIsMounted(parentA);\r\n          return fiber;\r\n        }\r\n\r\n        if (child === b) {\r\n          // We've determined that B is the current branch.\r\n          assertIsMounted(parentA);\r\n          return alternate;\r\n        }\r\n\r\n        child = child.sibling;\r\n      } // We should never have an alternate for any mounting node. So the only\r\n      // way this could possibly happen is if this was unmounted, if at all.\r\n\r\n\r\n      throw new Error('Unable to find node on an unmounted component.');\r\n    }\r\n\r\n    if (a.return !== b.return) {\r\n      // The return pointer of A and the return pointer of B point to different\r\n      // fibers. We assume that return pointers never criss-cross, so A must\r\n      // belong to the child set of A.return, and B must belong to the child\r\n      // set of B.return.\r\n      a = parentA;\r\n      b = parentB;\r\n    } else {\r\n      // The return pointers point to the same fiber. We'll have to use the\r\n      // default, slow path: scan the child sets of each parent alternate to see\r\n      // which child belongs to which set.\r\n      //\r\n      // Search parent A's child set\r\n      var didFindChild = false;\r\n      var _child = parentA.child;\r\n\r\n      while (_child) {\r\n        if (_child === a) {\r\n          didFindChild = true;\r\n          a = parentA;\r\n          b = parentB;\r\n          break;\r\n        }\r\n\r\n        if (_child === b) {\r\n          didFindChild = true;\r\n          b = parentA;\r\n          a = parentB;\r\n          break;\r\n        }\r\n\r\n        _child = _child.sibling;\r\n      }\r\n\r\n      if (!didFindChild) {\r\n        // Search parent B's child set\r\n        _child = parentB.child;\r\n\r\n        while (_child) {\r\n          if (_child === a) {\r\n            didFindChild = true;\r\n            a = parentB;\r\n            b = parentA;\r\n            break;\r\n          }\r\n\r\n          if (_child === b) {\r\n            didFindChild = true;\r\n            b = parentB;\r\n            a = parentA;\r\n            break;\r\n          }\r\n\r\n          _child = _child.sibling;\r\n        }\r\n\r\n        if (!didFindChild) {\r\n          throw new Error('Child was not found in either parent set. This indicates a bug ' + 'in React related to the return pointer. Please file an issue.');\r\n        }\r\n      }\r\n    }\r\n\r\n    if (a.alternate !== b) {\r\n      throw new Error(\"Return fibers should always be each others' alternates. \" + 'This error is likely caused by a bug in React. Please file an issue.');\r\n    }\r\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\r\n  // unmounted.\r\n\r\n\r\n  if (a.tag !== HostRoot) {\r\n    throw new Error('Unable to find node on an unmounted component.');\r\n  }\r\n\r\n  if (a.stateNode.current === a) {\r\n    // We've determined that A is the current branch.\r\n    return fiber;\r\n  } // Otherwise B has to be current branch.\r\n\r\n\r\n  return alternate;\r\n}\r\nfunction findCurrentHostFiber(parent) {\r\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\r\n  return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\r\n}\r\n\r\nfunction findCurrentHostFiberImpl(node) {\r\n  // Next we'll drill down this component to find the first HostComponent/Text.\r\n  if (node.tag === HostComponent || node.tag === HostText) {\r\n    return node;\r\n  }\r\n\r\n  var child = node.child;\r\n\r\n  while (child !== null) {\r\n    var match = findCurrentHostFiberImpl(child);\r\n\r\n    if (match !== null) {\r\n      return match;\r\n    }\r\n\r\n    child = child.sibling;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction findCurrentHostFiberWithNoPortals(parent) {\r\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\r\n  return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;\r\n}\r\n\r\nfunction findCurrentHostFiberWithNoPortalsImpl(node) {\r\n  // Next we'll drill down this component to find the first HostComponent/Text.\r\n  if (node.tag === HostComponent || node.tag === HostText) {\r\n    return node;\r\n  }\r\n\r\n  var child = node.child;\r\n\r\n  while (child !== null) {\r\n    if (child.tag !== HostPortal) {\r\n      var match = findCurrentHostFiberWithNoPortalsImpl(child);\r\n\r\n      if (match !== null) {\r\n        return match;\r\n      }\r\n    }\r\n\r\n    child = child.sibling;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\r\n\r\nfunction isArray(a) {\r\n  return isArrayImpl(a);\r\n}\r\n\r\n// This is a host config that's used for the `react-reconciler` package on npm.\r\n// It is only used by third-party renderers.\r\n//\r\n// Its API lets you pass the host config as an argument.\r\n// However, inside the `react-reconciler` we treat host config as a module.\r\n// This file is a shim between two worlds.\r\n//\r\n// It works because the `react-reconciler` bundle is wrapped in something like:\r\n//\r\n// module.exports = function ($$$config) {\r\n//   /* reconciler code */\r\n// }\r\n//\r\n// So `$$$config` looks like a global variable, but it's\r\n// really an argument to a top-level wrapping function.\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\n// eslint-disable-line no-undef\r\nvar getPublicInstance = $$$hostConfig.getPublicInstance;\r\nvar getRootHostContext = $$$hostConfig.getRootHostContext;\r\nvar getChildHostContext = $$$hostConfig.getChildHostContext;\r\nvar prepareForCommit = $$$hostConfig.prepareForCommit;\r\nvar resetAfterCommit = $$$hostConfig.resetAfterCommit;\r\nvar createInstance = $$$hostConfig.createInstance;\r\nvar appendInitialChild = $$$hostConfig.appendInitialChild;\r\nvar finalizeInitialChildren = $$$hostConfig.finalizeInitialChildren;\r\nvar prepareUpdate = $$$hostConfig.prepareUpdate;\r\nvar shouldSetTextContent = $$$hostConfig.shouldSetTextContent;\r\nvar createTextInstance = $$$hostConfig.createTextInstance;\r\nvar scheduleTimeout = $$$hostConfig.scheduleTimeout;\r\nvar cancelTimeout = $$$hostConfig.cancelTimeout;\r\nvar noTimeout = $$$hostConfig.noTimeout;\r\nvar isPrimaryRenderer = $$$hostConfig.isPrimaryRenderer;\r\nvar warnsIfNotActing = $$$hostConfig.warnsIfNotActing;\r\nvar supportsMutation = $$$hostConfig.supportsMutation;\r\nvar supportsPersistence = $$$hostConfig.supportsPersistence;\r\nvar supportsHydration = $$$hostConfig.supportsHydration;\r\nvar getInstanceFromNode = $$$hostConfig.getInstanceFromNode;\r\nvar beforeActiveInstanceBlur = $$$hostConfig.beforeActiveInstanceBlur;\r\nvar afterActiveInstanceBlur = $$$hostConfig.afterActiveInstanceBlur;\r\nvar preparePortalMount = $$$hostConfig.preparePortalMount;\r\nvar prepareScopeUpdate = $$$hostConfig.prepareScopeUpdate;\r\nvar getInstanceFromScope = $$$hostConfig.getInstanceFromScope;\r\nvar getCurrentEventPriority = $$$hostConfig.getCurrentEventPriority;\r\nvar detachDeletedInstance = $$$hostConfig.detachDeletedInstance; // -------------------\r\n//      Microtasks\r\n//     (optional)\r\n// -------------------\r\n\r\nvar supportsMicrotasks = $$$hostConfig.supportsMicrotasks;\r\nvar scheduleMicrotask = $$$hostConfig.scheduleMicrotask; // -------------------\r\n//      Test selectors\r\n//     (optional)\r\n// -------------------\r\n\r\nvar supportsTestSelectors = $$$hostConfig.supportsTestSelectors;\r\nvar findFiberRoot = $$$hostConfig.findFiberRoot;\r\nvar getBoundingRect = $$$hostConfig.getBoundingRect;\r\nvar getTextContent = $$$hostConfig.getTextContent;\r\nvar isHiddenSubtree = $$$hostConfig.isHiddenSubtree;\r\nvar matchAccessibilityRole = $$$hostConfig.matchAccessibilityRole;\r\nvar setFocusIfFocusable = $$$hostConfig.setFocusIfFocusable;\r\nvar setupIntersectionObserver = $$$hostConfig.setupIntersectionObserver; // -------------------\r\n//      Mutation\r\n//     (optional)\r\n// -------------------\r\n\r\nvar appendChild = $$$hostConfig.appendChild;\r\nvar appendChildToContainer = $$$hostConfig.appendChildToContainer;\r\nvar commitTextUpdate = $$$hostConfig.commitTextUpdate;\r\nvar commitMount = $$$hostConfig.commitMount;\r\nvar commitUpdate = $$$hostConfig.commitUpdate;\r\nvar insertBefore = $$$hostConfig.insertBefore;\r\nvar insertInContainerBefore = $$$hostConfig.insertInContainerBefore;\r\nvar removeChild = $$$hostConfig.removeChild;\r\nvar removeChildFromContainer = $$$hostConfig.removeChildFromContainer;\r\nvar resetTextContent = $$$hostConfig.resetTextContent;\r\nvar hideInstance = $$$hostConfig.hideInstance;\r\nvar hideTextInstance = $$$hostConfig.hideTextInstance;\r\nvar unhideInstance = $$$hostConfig.unhideInstance;\r\nvar unhideTextInstance = $$$hostConfig.unhideTextInstance;\r\nvar clearContainer = $$$hostConfig.clearContainer; // -------------------\r\n//     Persistence\r\n//     (optional)\r\n// -------------------\r\n\r\nvar cloneInstance = $$$hostConfig.cloneInstance;\r\nvar createContainerChildSet = $$$hostConfig.createContainerChildSet;\r\nvar appendChildToContainerChildSet = $$$hostConfig.appendChildToContainerChildSet;\r\nvar finalizeContainerChildren = $$$hostConfig.finalizeContainerChildren;\r\nvar replaceContainerChildren = $$$hostConfig.replaceContainerChildren;\r\nvar cloneHiddenInstance = $$$hostConfig.cloneHiddenInstance;\r\nvar cloneHiddenTextInstance = $$$hostConfig.cloneHiddenTextInstance; // -------------------\r\n//     Hydration\r\n//     (optional)\r\n// -------------------\r\n\r\nvar canHydrateInstance = $$$hostConfig.canHydrateInstance;\r\nvar canHydrateTextInstance = $$$hostConfig.canHydrateTextInstance;\r\nvar canHydrateSuspenseInstance = $$$hostConfig.canHydrateSuspenseInstance;\r\nvar isSuspenseInstancePending = $$$hostConfig.isSuspenseInstancePending;\r\nvar isSuspenseInstanceFallback = $$$hostConfig.isSuspenseInstanceFallback;\r\nvar getSuspenseInstanceFallbackErrorDetails = $$$hostConfig.getSuspenseInstanceFallbackErrorDetails;\r\nvar registerSuspenseInstanceRetry = $$$hostConfig.registerSuspenseInstanceRetry;\r\nvar getNextHydratableSibling = $$$hostConfig.getNextHydratableSibling;\r\nvar getFirstHydratableChild = $$$hostConfig.getFirstHydratableChild;\r\nvar getFirstHydratableChildWithinContainer = $$$hostConfig.getFirstHydratableChildWithinContainer;\r\nvar getFirstHydratableChildWithinSuspenseInstance = $$$hostConfig.getFirstHydratableChildWithinSuspenseInstance;\r\nvar hydrateInstance = $$$hostConfig.hydrateInstance;\r\nvar hydrateTextInstance = $$$hostConfig.hydrateTextInstance;\r\nvar hydrateSuspenseInstance = $$$hostConfig.hydrateSuspenseInstance;\r\nvar getNextHydratableInstanceAfterSuspenseInstance = $$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance;\r\nvar commitHydratedContainer = $$$hostConfig.commitHydratedContainer;\r\nvar commitHydratedSuspenseInstance = $$$hostConfig.commitHydratedSuspenseInstance;\r\nvar clearSuspenseBoundary = $$$hostConfig.clearSuspenseBoundary;\r\nvar clearSuspenseBoundaryFromContainer = $$$hostConfig.clearSuspenseBoundaryFromContainer;\r\nvar shouldDeleteUnhydratedTailInstances = $$$hostConfig.shouldDeleteUnhydratedTailInstances;\r\nvar didNotMatchHydratedContainerTextInstance = $$$hostConfig.didNotMatchHydratedContainerTextInstance;\r\nvar didNotMatchHydratedTextInstance = $$$hostConfig.didNotMatchHydratedTextInstance;\r\nvar didNotHydrateInstanceWithinContainer = $$$hostConfig.didNotHydrateInstanceWithinContainer;\r\nvar didNotHydrateInstanceWithinSuspenseInstance = $$$hostConfig.didNotHydrateInstanceWithinSuspenseInstance;\r\nvar didNotHydrateInstance = $$$hostConfig.didNotHydrateInstance;\r\nvar didNotFindHydratableInstanceWithinContainer = $$$hostConfig.didNotFindHydratableInstanceWithinContainer;\r\nvar didNotFindHydratableTextInstanceWithinContainer = $$$hostConfig.didNotFindHydratableTextInstanceWithinContainer;\r\nvar didNotFindHydratableSuspenseInstanceWithinContainer = $$$hostConfig.didNotFindHydratableSuspenseInstanceWithinContainer;\r\nvar didNotFindHydratableInstanceWithinSuspenseInstance = $$$hostConfig.didNotFindHydratableInstanceWithinSuspenseInstance;\r\nvar didNotFindHydratableTextInstanceWithinSuspenseInstance = $$$hostConfig.didNotFindHydratableTextInstanceWithinSuspenseInstance;\r\nvar didNotFindHydratableSuspenseInstanceWithinSuspenseInstance = $$$hostConfig.didNotFindHydratableSuspenseInstanceWithinSuspenseInstance;\r\nvar didNotFindHydratableInstance = $$$hostConfig.didNotFindHydratableInstance;\r\nvar didNotFindHydratableTextInstance = $$$hostConfig.didNotFindHydratableTextInstance;\r\nvar didNotFindHydratableSuspenseInstance = $$$hostConfig.didNotFindHydratableSuspenseInstance;\r\nvar errorHydratingContainer = $$$hostConfig.errorHydratingContainer;\r\n\r\n// Helpers to patch console.logs to avoid logging during side-effect free\r\n// replaying on render function. This currently only patches the object\r\n// lazily which won't cover if the log function was extracted eagerly.\r\n// We could also eagerly patch the method.\r\nvar disabledDepth = 0;\r\nvar prevLog;\r\nvar prevInfo;\r\nvar prevWarn;\r\nvar prevError;\r\nvar prevGroup;\r\nvar prevGroupCollapsed;\r\nvar prevGroupEnd;\r\n\r\nfunction disabledLog() {}\r\n\r\ndisabledLog.__reactDisabledLog = true;\r\nfunction disableLogs() {\r\n  {\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      prevLog = console.log;\r\n      prevInfo = console.info;\r\n      prevWarn = console.warn;\r\n      prevError = console.error;\r\n      prevGroup = console.group;\r\n      prevGroupCollapsed = console.groupCollapsed;\r\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\r\n\r\n      var props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: disabledLog,\r\n        writable: true\r\n      }; // $FlowFixMe Flow thinks console is immutable.\r\n\r\n      Object.defineProperties(console, {\r\n        info: props,\r\n        log: props,\r\n        warn: props,\r\n        error: props,\r\n        group: props,\r\n        groupCollapsed: props,\r\n        groupEnd: props\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n\r\n    disabledDepth++;\r\n  }\r\n}\r\nfunction reenableLogs() {\r\n  {\r\n    disabledDepth--;\r\n\r\n    if (disabledDepth === 0) {\r\n      /* eslint-disable react-internal/no-production-logging */\r\n      var props = {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true\r\n      }; // $FlowFixMe Flow thinks console is immutable.\r\n\r\n      Object.defineProperties(console, {\r\n        log: assign({}, props, {\r\n          value: prevLog\r\n        }),\r\n        info: assign({}, props, {\r\n          value: prevInfo\r\n        }),\r\n        warn: assign({}, props, {\r\n          value: prevWarn\r\n        }),\r\n        error: assign({}, props, {\r\n          value: prevError\r\n        }),\r\n        group: assign({}, props, {\r\n          value: prevGroup\r\n        }),\r\n        groupCollapsed: assign({}, props, {\r\n          value: prevGroupCollapsed\r\n        }),\r\n        groupEnd: assign({}, props, {\r\n          value: prevGroupEnd\r\n        })\r\n      });\r\n      /* eslint-enable react-internal/no-production-logging */\r\n    }\r\n\r\n    if (disabledDepth < 0) {\r\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n}\r\n\r\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\nvar prefix;\r\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\r\n  {\r\n    if (prefix === undefined) {\r\n      // Extract the VM specific prefix used by each line.\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\r\n        prefix = match && match[1] || '';\r\n      }\r\n    } // We use the prefix to ensure our stacks line up with native stack frames.\r\n\r\n\r\n    return '\\n' + prefix + name;\r\n  }\r\n}\r\nvar reentry = false;\r\nvar componentFrameCache;\r\n\r\n{\r\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\n\r\nfunction describeNativeComponentFrame(fn, construct) {\r\n  // If something asked for a stack inside a fake render, it should get ignored.\r\n  if ( !fn || reentry) {\r\n    return '';\r\n  }\r\n\r\n  {\r\n    var frame = componentFrameCache.get(fn);\r\n\r\n    if (frame !== undefined) {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  var control;\r\n  reentry = true;\r\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\r\n\r\n  Error.prepareStackTrace = undefined;\r\n  var previousDispatcher;\r\n\r\n  {\r\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\r\n    // for warnings.\r\n\r\n    ReactCurrentDispatcher.current = null;\r\n    disableLogs();\r\n  }\r\n\r\n  try {\r\n    // This should throw.\r\n    if (construct) {\r\n      // Something should be setting the props in the constructor.\r\n      var Fake = function () {\r\n        throw Error();\r\n      }; // $FlowFixMe\r\n\r\n\r\n      Object.defineProperty(Fake.prototype, 'props', {\r\n        set: function () {\r\n          // We use a throwing setter instead of frozen or non-writable props\r\n          // because that won't throw in a non-strict mode function.\r\n          throw Error();\r\n        }\r\n      });\r\n\r\n      if (typeof Reflect === 'object' && Reflect.construct) {\r\n        // We construct a different control for this case to include any extra\r\n        // frames added by the construct call.\r\n        try {\r\n          Reflect.construct(Fake, []);\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n\r\n        Reflect.construct(fn, [], Fake);\r\n      } else {\r\n        try {\r\n          Fake.call();\r\n        } catch (x) {\r\n          control = x;\r\n        }\r\n\r\n        fn.call(Fake.prototype);\r\n      }\r\n    } else {\r\n      try {\r\n        throw Error();\r\n      } catch (x) {\r\n        control = x;\r\n      }\r\n\r\n      fn();\r\n    }\r\n  } catch (sample) {\r\n    // This is inlined manually because closure doesn't do it for us.\r\n    if (sample && control && typeof sample.stack === 'string') {\r\n      // This extracts the first frame from the sample that isn't also in the control.\r\n      // Skipping one frame that we assume is the frame that calls the two.\r\n      var sampleLines = sample.stack.split('\\n');\r\n      var controlLines = control.stack.split('\\n');\r\n      var s = sampleLines.length - 1;\r\n      var c = controlLines.length - 1;\r\n\r\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\r\n        // We expect at least one stack frame to be shared.\r\n        // Typically this will be the root most one. However, stack frames may be\r\n        // cut off due to maximum stack limits. In this case, one maybe cut off\r\n        // earlier than the other. We assume that the sample is longer or the same\r\n        // and there for cut off earlier. So we should find the root most frame in\r\n        // the sample somewhere in the control.\r\n        c--;\r\n      }\r\n\r\n      for (; s >= 1 && c >= 0; s--, c--) {\r\n        // Next we find the first one that isn't the same which should be the\r\n        // frame that called our sample function and the control.\r\n        if (sampleLines[s] !== controlLines[c]) {\r\n          // In V8, the first line is describing the message but other VMs don't.\r\n          // If we're about to return the first line, and the control is also on the same\r\n          // line, that's a pretty good indicator that our sample threw at same line as\r\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\r\n          // This can happen if you passed a class to function component, or non-function.\r\n          if (s !== 1 || c !== 1) {\r\n            do {\r\n              s--;\r\n              c--; // We may still have similar intermediate frames from the construct call.\r\n              // The next one that isn't the same should be our match though.\r\n\r\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\r\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\r\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\r\n                // but we have a user-provided \"displayName\"\r\n                // splice it in to make the stack more readable.\r\n\r\n\r\n                if (fn.displayName && _frame.includes('<anonymous>')) {\r\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\r\n                }\r\n\r\n                {\r\n                  if (typeof fn === 'function') {\r\n                    componentFrameCache.set(fn, _frame);\r\n                  }\r\n                } // Return the line we found.\r\n\r\n\r\n                return _frame;\r\n              }\r\n            } while (s >= 1 && c >= 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } finally {\r\n    reentry = false;\r\n\r\n    {\r\n      ReactCurrentDispatcher.current = previousDispatcher;\r\n      reenableLogs();\r\n    }\r\n\r\n    Error.prepareStackTrace = previousPrepareStackTrace;\r\n  } // Fallback to just using the name if we couldn't make it throw.\r\n\r\n\r\n  var name = fn ? fn.displayName || fn.name : '';\r\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\r\n\r\n  {\r\n    if (typeof fn === 'function') {\r\n      componentFrameCache.set(fn, syntheticFrame);\r\n    }\r\n  }\r\n\r\n  return syntheticFrame;\r\n}\r\n\r\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\r\n  {\r\n    return describeNativeComponentFrame(ctor, true);\r\n  }\r\n}\r\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\r\n  {\r\n    return describeNativeComponentFrame(fn, false);\r\n  }\r\n}\r\n\r\nfunction shouldConstruct(Component) {\r\n  var prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\r\n\r\n  if (type == null) {\r\n    return '';\r\n  }\r\n\r\n  if (typeof type === 'function') {\r\n    {\r\n      return describeNativeComponentFrame(type, shouldConstruct(type));\r\n    }\r\n  }\r\n\r\n  if (typeof type === 'string') {\r\n    return describeBuiltInComponentFrame(type);\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame('Suspense');\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame('SuspenseList');\r\n  }\r\n\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render);\r\n\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var lazyComponent = type;\r\n          var payload = lazyComponent._payload;\r\n          var init = lazyComponent._init;\r\n\r\n          try {\r\n            // Lazy may contain any component type so we recursively resolve it.\r\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\r\n          } catch (x) {}\r\n        }\r\n    }\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nvar loggedTypeFailures = {};\r\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  {\r\n    if (element) {\r\n      var owner = element._owner;\r\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\r\n  {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    var has = Function.call.bind(hasOwnProperty);\r\n\r\n    for (var typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n\r\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\r\n        } catch (ex) {\r\n          error$1 = ex;\r\n        }\r\n\r\n        if (error$1 && !(error$1 instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n\r\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error$1.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error('Failed %s type: %s', location, error$1.message);\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar valueStack = [];\r\nvar fiberStack;\r\n\r\n{\r\n  fiberStack = [];\r\n}\r\n\r\nvar index = -1;\r\n\r\nfunction createCursor(defaultValue) {\r\n  return {\r\n    current: defaultValue\r\n  };\r\n}\r\n\r\nfunction pop(cursor, fiber) {\r\n  if (index < 0) {\r\n    {\r\n      error('Unexpected pop.');\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  {\r\n    if (fiber !== fiberStack[index]) {\r\n      error('Unexpected Fiber popped.');\r\n    }\r\n  }\r\n\r\n  cursor.current = valueStack[index];\r\n  valueStack[index] = null;\r\n\r\n  {\r\n    fiberStack[index] = null;\r\n  }\r\n\r\n  index--;\r\n}\r\n\r\nfunction push(cursor, value, fiber) {\r\n  index++;\r\n  valueStack[index] = cursor.current;\r\n\r\n  {\r\n    fiberStack[index] = fiber;\r\n  }\r\n\r\n  cursor.current = value;\r\n}\r\n\r\nvar warnedAboutMissingGetChildContext;\r\n\r\n{\r\n  warnedAboutMissingGetChildContext = {};\r\n}\r\n\r\nvar emptyContextObject = {};\r\n\r\n{\r\n  Object.freeze(emptyContextObject);\r\n} // A cursor to the current merged context object on the stack.\r\n\r\n\r\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\r\n\r\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\r\n// We use this to get access to the parent context after we have already\r\n// pushed the next context provider, and now need to merge their contexts.\r\n\r\nvar previousContext = emptyContextObject;\r\n\r\nfunction getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\r\n  {\r\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\r\n      // If the fiber is a context provider itself, when we read its context\r\n      // we may have already pushed its own child context on the stack. A context\r\n      // provider should not \"see\" its own child context. Therefore we read the\r\n      // previous (parent) context instead for a context provider.\r\n      return previousContext;\r\n    }\r\n\r\n    return contextStackCursor.current;\r\n  }\r\n}\r\n\r\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\r\n  {\r\n    var instance = workInProgress.stateNode;\r\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\r\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\r\n  }\r\n}\r\n\r\nfunction getMaskedContext(workInProgress, unmaskedContext) {\r\n  {\r\n    var type = workInProgress.type;\r\n    var contextTypes = type.contextTypes;\r\n\r\n    if (!contextTypes) {\r\n      return emptyContextObject;\r\n    } // Avoid recreating masked context unless unmasked context has changed.\r\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\r\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\r\n\r\n\r\n    var instance = workInProgress.stateNode;\r\n\r\n    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\r\n      return instance.__reactInternalMemoizedMaskedChildContext;\r\n    }\r\n\r\n    var context = {};\r\n\r\n    for (var key in contextTypes) {\r\n      context[key] = unmaskedContext[key];\r\n    }\r\n\r\n    {\r\n      var name = getComponentNameFromFiber(workInProgress) || 'Unknown';\r\n      checkPropTypes(contextTypes, context, 'context', name);\r\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\r\n    // Context is created before the class component is instantiated so check for instance.\r\n\r\n\r\n    if (instance) {\r\n      cacheContext(workInProgress, unmaskedContext, context);\r\n    }\r\n\r\n    return context;\r\n  }\r\n}\r\n\r\nfunction hasContextChanged() {\r\n  {\r\n    return didPerformWorkStackCursor.current;\r\n  }\r\n}\r\n\r\nfunction isContextProvider(type) {\r\n  {\r\n    var childContextTypes = type.childContextTypes;\r\n    return childContextTypes !== null && childContextTypes !== undefined;\r\n  }\r\n}\r\n\r\nfunction popContext(fiber) {\r\n  {\r\n    pop(didPerformWorkStackCursor, fiber);\r\n    pop(contextStackCursor, fiber);\r\n  }\r\n}\r\n\r\nfunction popTopLevelContextObject(fiber) {\r\n  {\r\n    pop(didPerformWorkStackCursor, fiber);\r\n    pop(contextStackCursor, fiber);\r\n  }\r\n}\r\n\r\nfunction pushTopLevelContextObject(fiber, context, didChange) {\r\n  {\r\n    if (contextStackCursor.current !== emptyContextObject) {\r\n      throw new Error('Unexpected context found on stack. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n    }\r\n\r\n    push(contextStackCursor, context, fiber);\r\n    push(didPerformWorkStackCursor, didChange, fiber);\r\n  }\r\n}\r\n\r\nfunction processChildContext(fiber, type, parentContext) {\r\n  {\r\n    var instance = fiber.stateNode;\r\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\r\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\r\n\r\n    if (typeof instance.getChildContext !== 'function') {\r\n      {\r\n        var componentName = getComponentNameFromFiber(fiber) || 'Unknown';\r\n\r\n        if (!warnedAboutMissingGetChildContext[componentName]) {\r\n          warnedAboutMissingGetChildContext[componentName] = true;\r\n\r\n          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\r\n        }\r\n      }\r\n\r\n      return parentContext;\r\n    }\r\n\r\n    var childContext = instance.getChildContext();\r\n\r\n    for (var contextKey in childContext) {\r\n      if (!(contextKey in childContextTypes)) {\r\n        throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + \".getChildContext(): key \\\"\" + contextKey + \"\\\" is not defined in childContextTypes.\");\r\n      }\r\n    }\r\n\r\n    {\r\n      var name = getComponentNameFromFiber(fiber) || 'Unknown';\r\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\r\n    }\r\n\r\n    return assign({}, parentContext, childContext);\r\n  }\r\n}\r\n\r\nfunction pushContextProvider(workInProgress) {\r\n  {\r\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\r\n    // If the instance does not exist yet, we will push null at first,\r\n    // and replace it on the stack later when invalidating the context.\r\n\r\n    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.\r\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\r\n\r\n    previousContext = contextStackCursor.current;\r\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\r\n    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction invalidateContextProvider(workInProgress, type, didChange) {\r\n  {\r\n    var instance = workInProgress.stateNode;\r\n\r\n    if (!instance) {\r\n      throw new Error('Expected to have an instance by this point. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n    }\r\n\r\n    if (didChange) {\r\n      // Merge parent and own context.\r\n      // Skip this if we're not updating due to sCU.\r\n      // This avoids unnecessarily recomputing memoized values.\r\n      var mergedContext = processChildContext(workInProgress, type, previousContext);\r\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\r\n      // It is important to unwind the context in the reverse order.\r\n\r\n      pop(didPerformWorkStackCursor, workInProgress);\r\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\r\n\r\n      push(contextStackCursor, mergedContext, workInProgress);\r\n      push(didPerformWorkStackCursor, didChange, workInProgress);\r\n    } else {\r\n      pop(didPerformWorkStackCursor, workInProgress);\r\n      push(didPerformWorkStackCursor, didChange, workInProgress);\r\n    }\r\n  }\r\n}\r\n\r\nfunction findCurrentUnmaskedContext(fiber) {\r\n  {\r\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\r\n    // makes sense elsewhere\r\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\r\n      throw new Error('Expected subtree parent to be a mounted class component. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n    }\r\n\r\n    var node = fiber;\r\n\r\n    do {\r\n      switch (node.tag) {\r\n        case HostRoot:\r\n          return node.stateNode.context;\r\n\r\n        case ClassComponent:\r\n          {\r\n            var Component = node.type;\r\n\r\n            if (isContextProvider(Component)) {\r\n              return node.stateNode.__reactInternalMemoizedMergedChildContext;\r\n            }\r\n\r\n            break;\r\n          }\r\n      }\r\n\r\n      node = node.return;\r\n    } while (node !== null);\r\n\r\n    throw new Error('Found unexpected detached subtree parent. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n}\r\n\r\nvar LegacyRoot = 0;\r\nvar ConcurrentRoot = 1;\r\n\r\nvar NoMode =\r\n/*                         */\r\n0; // TODO: Remove ConcurrentMode by reading from the root tag instead\r\n\r\nvar ConcurrentMode =\r\n/*                 */\r\n1;\r\nvar ProfileMode =\r\n/*                    */\r\n2;\r\nvar StrictLegacyMode =\r\n/*               */\r\n8;\r\nvar StrictEffectsMode =\r\n/*              */\r\n16;\r\n\r\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\r\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\r\n// Based on:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\nvar log = Math.log;\r\nvar LN2 = Math.LN2;\r\n\r\nfunction clz32Fallback(x) {\r\n  var asUint = x >>> 0;\r\n\r\n  if (asUint === 0) {\r\n    return 32;\r\n  }\r\n\r\n  return 31 - (log(asUint) / LN2 | 0) | 0;\r\n}\r\n\r\n// If those values are changed that package should be rebuilt and redeployed.\r\n\r\nvar TotalLanes = 31;\r\nvar NoLanes =\r\n/*                        */\r\n0;\r\nvar NoLane =\r\n/*                          */\r\n0;\r\nvar SyncLane =\r\n/*                        */\r\n1;\r\nvar InputContinuousHydrationLane =\r\n/*    */\r\n2;\r\nvar InputContinuousLane =\r\n/*             */\r\n4;\r\nvar DefaultHydrationLane =\r\n/*            */\r\n8;\r\nvar DefaultLane =\r\n/*                     */\r\n16;\r\nvar TransitionHydrationLane =\r\n/*                */\r\n32;\r\nvar TransitionLanes =\r\n/*                       */\r\n4194240;\r\nvar TransitionLane1 =\r\n/*                        */\r\n64;\r\nvar TransitionLane2 =\r\n/*                        */\r\n128;\r\nvar TransitionLane3 =\r\n/*                        */\r\n256;\r\nvar TransitionLane4 =\r\n/*                        */\r\n512;\r\nvar TransitionLane5 =\r\n/*                        */\r\n1024;\r\nvar TransitionLane6 =\r\n/*                        */\r\n2048;\r\nvar TransitionLane7 =\r\n/*                        */\r\n4096;\r\nvar TransitionLane8 =\r\n/*                        */\r\n8192;\r\nvar TransitionLane9 =\r\n/*                        */\r\n16384;\r\nvar TransitionLane10 =\r\n/*                       */\r\n32768;\r\nvar TransitionLane11 =\r\n/*                       */\r\n65536;\r\nvar TransitionLane12 =\r\n/*                       */\r\n131072;\r\nvar TransitionLane13 =\r\n/*                       */\r\n262144;\r\nvar TransitionLane14 =\r\n/*                       */\r\n524288;\r\nvar TransitionLane15 =\r\n/*                       */\r\n1048576;\r\nvar TransitionLane16 =\r\n/*                       */\r\n2097152;\r\nvar RetryLanes =\r\n/*                            */\r\n130023424;\r\nvar RetryLane1 =\r\n/*                             */\r\n4194304;\r\nvar RetryLane2 =\r\n/*                             */\r\n8388608;\r\nvar RetryLane3 =\r\n/*                             */\r\n16777216;\r\nvar RetryLane4 =\r\n/*                             */\r\n33554432;\r\nvar RetryLane5 =\r\n/*                             */\r\n67108864;\r\nvar SomeRetryLane = RetryLane1;\r\nvar SelectiveHydrationLane =\r\n/*          */\r\n134217728;\r\nvar NonIdleLanes =\r\n/*                          */\r\n268435455;\r\nvar IdleHydrationLane =\r\n/*               */\r\n268435456;\r\nvar IdleLane =\r\n/*                        */\r\n536870912;\r\nvar OffscreenLane =\r\n/*                   */\r\n1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\r\n// It should be kept in sync with the Lanes values above.\r\n\r\nfunction getLabelForLane(lane) {\r\n  {\r\n    if (lane & SyncLane) {\r\n      return 'Sync';\r\n    }\r\n\r\n    if (lane & InputContinuousHydrationLane) {\r\n      return 'InputContinuousHydration';\r\n    }\r\n\r\n    if (lane & InputContinuousLane) {\r\n      return 'InputContinuous';\r\n    }\r\n\r\n    if (lane & DefaultHydrationLane) {\r\n      return 'DefaultHydration';\r\n    }\r\n\r\n    if (lane & DefaultLane) {\r\n      return 'Default';\r\n    }\r\n\r\n    if (lane & TransitionHydrationLane) {\r\n      return 'TransitionHydration';\r\n    }\r\n\r\n    if (lane & TransitionLanes) {\r\n      return 'Transition';\r\n    }\r\n\r\n    if (lane & RetryLanes) {\r\n      return 'Retry';\r\n    }\r\n\r\n    if (lane & SelectiveHydrationLane) {\r\n      return 'SelectiveHydration';\r\n    }\r\n\r\n    if (lane & IdleHydrationLane) {\r\n      return 'IdleHydration';\r\n    }\r\n\r\n    if (lane & IdleLane) {\r\n      return 'Idle';\r\n    }\r\n\r\n    if (lane & OffscreenLane) {\r\n      return 'Offscreen';\r\n    }\r\n  }\r\n}\r\nvar NoTimestamp = -1;\r\nvar nextTransitionLane = TransitionLane1;\r\nvar nextRetryLane = RetryLane1;\r\n\r\nfunction getHighestPriorityLanes(lanes) {\r\n  switch (getHighestPriorityLane(lanes)) {\r\n    case SyncLane:\r\n      return SyncLane;\r\n\r\n    case InputContinuousHydrationLane:\r\n      return InputContinuousHydrationLane;\r\n\r\n    case InputContinuousLane:\r\n      return InputContinuousLane;\r\n\r\n    case DefaultHydrationLane:\r\n      return DefaultHydrationLane;\r\n\r\n    case DefaultLane:\r\n      return DefaultLane;\r\n\r\n    case TransitionHydrationLane:\r\n      return TransitionHydrationLane;\r\n\r\n    case TransitionLane1:\r\n    case TransitionLane2:\r\n    case TransitionLane3:\r\n    case TransitionLane4:\r\n    case TransitionLane5:\r\n    case TransitionLane6:\r\n    case TransitionLane7:\r\n    case TransitionLane8:\r\n    case TransitionLane9:\r\n    case TransitionLane10:\r\n    case TransitionLane11:\r\n    case TransitionLane12:\r\n    case TransitionLane13:\r\n    case TransitionLane14:\r\n    case TransitionLane15:\r\n    case TransitionLane16:\r\n      return lanes & TransitionLanes;\r\n\r\n    case RetryLane1:\r\n    case RetryLane2:\r\n    case RetryLane3:\r\n    case RetryLane4:\r\n    case RetryLane5:\r\n      return lanes & RetryLanes;\r\n\r\n    case SelectiveHydrationLane:\r\n      return SelectiveHydrationLane;\r\n\r\n    case IdleHydrationLane:\r\n      return IdleHydrationLane;\r\n\r\n    case IdleLane:\r\n      return IdleLane;\r\n\r\n    case OffscreenLane:\r\n      return OffscreenLane;\r\n\r\n    default:\r\n      {\r\n        error('Should have found matching lanes. This is a bug in React.');\r\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\r\n\r\n\r\n      return lanes;\r\n  }\r\n}\r\n\r\nfunction getNextLanes(root, wipLanes) {\r\n  // Early bailout if there's no pending work left.\r\n  var pendingLanes = root.pendingLanes;\r\n\r\n  if (pendingLanes === NoLanes) {\r\n    return NoLanes;\r\n  }\r\n\r\n  var nextLanes = NoLanes;\r\n  var suspendedLanes = root.suspendedLanes;\r\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\r\n  // even if the work is suspended.\r\n\r\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\r\n\r\n  if (nonIdlePendingLanes !== NoLanes) {\r\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\r\n\r\n    if (nonIdleUnblockedLanes !== NoLanes) {\r\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\r\n    } else {\r\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\r\n\r\n      if (nonIdlePingedLanes !== NoLanes) {\r\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\r\n      }\r\n    }\r\n  } else {\r\n    // The only remaining work is Idle.\r\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\r\n\r\n    if (unblockedLanes !== NoLanes) {\r\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\r\n    } else {\r\n      if (pingedLanes !== NoLanes) {\r\n        nextLanes = getHighestPriorityLanes(pingedLanes);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nextLanes === NoLanes) {\r\n    // This should only be reachable if we're suspended\r\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\r\n    return NoLanes;\r\n  } // If we're already in the middle of a render, switching lanes will interrupt\r\n  // it and we'll lose our progress. We should only do this if the new lanes are\r\n  // higher priority.\r\n\r\n\r\n  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\r\n  // bother waiting until the root is complete.\r\n  (wipLanes & suspendedLanes) === NoLanes) {\r\n    var nextLane = getHighestPriorityLane(nextLanes);\r\n    var wipLane = getHighestPriorityLane(wipLanes);\r\n\r\n    if ( // Tests whether the next lane is equal or lower priority than the wip\r\n    // one. This works because the bits decrease in priority as you go left.\r\n    nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\r\n    // only difference between default updates and transition updates is that\r\n    // default updates do not support refresh transitions.\r\n    nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\r\n      // Keep working on the existing in-progress tree. Do not interrupt.\r\n      return wipLanes;\r\n    }\r\n  }\r\n\r\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\r\n    // When updates are sync by default, we entangle continuous priority updates\r\n    // and default updates, so they render in the same batch. The only reason\r\n    // they use separate lanes is because continuous updates should interrupt\r\n    // transitions, but default updates should not.\r\n    nextLanes |= pendingLanes & DefaultLane;\r\n  } // Check for entangled lanes and add them to the batch.\r\n  //\r\n  // A lane is said to be entangled with another when it's not allowed to render\r\n  // in a batch that does not also include the other lane. Typically we do this\r\n  // when multiple updates have the same source, and we only want to respond to\r\n  // the most recent event from that source.\r\n  //\r\n  // Note that we apply entanglements *after* checking for partial work above.\r\n  // This means that if a lane is entangled during an interleaved event while\r\n  // it's already rendering, we won't interrupt it. This is intentional, since\r\n  // entanglement is usually \"best effort\": we'll try our best to render the\r\n  // lanes in the same batch, but it's not worth throwing out partially\r\n  // completed work in order to do it.\r\n  // TODO: Reconsider this. The counter-argument is that the partial work\r\n  // represents an intermediate state, which we don't want to show to the user.\r\n  // And by spending extra time finishing it, we're increasing the amount of\r\n  // time it takes to show the final state, which is what they are actually\r\n  // waiting for.\r\n  //\r\n  // For those exceptions where entanglement is semantically important, like\r\n  // useMutableSource, we should ensure that there is no partial work at the\r\n  // time we apply the entanglement.\r\n\r\n\r\n  var entangledLanes = root.entangledLanes;\r\n\r\n  if (entangledLanes !== NoLanes) {\r\n    var entanglements = root.entanglements;\r\n    var lanes = nextLanes & entangledLanes;\r\n\r\n    while (lanes > 0) {\r\n      var index = pickArbitraryLaneIndex(lanes);\r\n      var lane = 1 << index;\r\n      nextLanes |= entanglements[index];\r\n      lanes &= ~lane;\r\n    }\r\n  }\r\n\r\n  return nextLanes;\r\n}\r\nfunction getMostRecentEventTime(root, lanes) {\r\n  var eventTimes = root.eventTimes;\r\n  var mostRecentEventTime = NoTimestamp;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    var eventTime = eventTimes[index];\r\n\r\n    if (eventTime > mostRecentEventTime) {\r\n      mostRecentEventTime = eventTime;\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n\r\n  return mostRecentEventTime;\r\n}\r\n\r\nfunction computeExpirationTime(lane, currentTime) {\r\n  switch (lane) {\r\n    case SyncLane:\r\n    case InputContinuousHydrationLane:\r\n    case InputContinuousLane:\r\n      // User interactions should expire slightly more quickly.\r\n      //\r\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\r\n      // When we made it larger, a product metric in www regressed, suggesting\r\n      // there's a user interaction that's being starved by a series of\r\n      // synchronous updates. If that theory is correct, the proper solution is\r\n      // to fix the starvation. However, this scenario supports the idea that\r\n      // expiration times are an important safeguard when starvation\r\n      // does happen.\r\n      return currentTime + 250;\r\n\r\n    case DefaultHydrationLane:\r\n    case DefaultLane:\r\n    case TransitionHydrationLane:\r\n    case TransitionLane1:\r\n    case TransitionLane2:\r\n    case TransitionLane3:\r\n    case TransitionLane4:\r\n    case TransitionLane5:\r\n    case TransitionLane6:\r\n    case TransitionLane7:\r\n    case TransitionLane8:\r\n    case TransitionLane9:\r\n    case TransitionLane10:\r\n    case TransitionLane11:\r\n    case TransitionLane12:\r\n    case TransitionLane13:\r\n    case TransitionLane14:\r\n    case TransitionLane15:\r\n    case TransitionLane16:\r\n      return currentTime + 5000;\r\n\r\n    case RetryLane1:\r\n    case RetryLane2:\r\n    case RetryLane3:\r\n    case RetryLane4:\r\n    case RetryLane5:\r\n      // TODO: Retries should be allowed to expire if they are CPU bound for\r\n      // too long, but when I made this change it caused a spike in browser\r\n      // crashes. There must be some other underlying bug; not super urgent but\r\n      // ideally should figure out why and fix it. Unfortunately we don't have\r\n      // a repro for the crashes, only detected via production metrics.\r\n      return NoTimestamp;\r\n\r\n    case SelectiveHydrationLane:\r\n    case IdleHydrationLane:\r\n    case IdleLane:\r\n    case OffscreenLane:\r\n      // Anything idle priority or lower should never expire.\r\n      return NoTimestamp;\r\n\r\n    default:\r\n      {\r\n        error('Should have found matching lanes. This is a bug in React.');\r\n      }\r\n\r\n      return NoTimestamp;\r\n  }\r\n}\r\n\r\nfunction markStarvedLanesAsExpired(root, currentTime) {\r\n  // TODO: This gets called every time we yield. We can optimize by storing\r\n  // the earliest expiration time on the root. Then use that to quickly bail out\r\n  // of this function.\r\n  var pendingLanes = root.pendingLanes;\r\n  var suspendedLanes = root.suspendedLanes;\r\n  var pingedLanes = root.pingedLanes;\r\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\r\n  // expiration time. If so, we'll assume the update is being starved and mark\r\n  // it as expired to force it to finish.\r\n\r\n  var lanes = pendingLanes;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    var expirationTime = expirationTimes[index];\r\n\r\n    if (expirationTime === NoTimestamp) {\r\n      // Found a pending lane with no expiration time. If it's not suspended, or\r\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\r\n      // using the current time.\r\n      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\r\n        // Assumes timestamps are monotonically increasing.\r\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\r\n      }\r\n    } else if (expirationTime <= currentTime) {\r\n      // This lane expired\r\n      root.expiredLanes |= lane;\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n} // This returns the highest priority pending lanes regardless of whether they\r\n// are suspended.\r\n\r\nfunction getHighestPriorityPendingLanes(root) {\r\n  return getHighestPriorityLanes(root.pendingLanes);\r\n}\r\nfunction getLanesToRetrySynchronouslyOnError(root) {\r\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\r\n\r\n  if (everythingButOffscreen !== NoLanes) {\r\n    return everythingButOffscreen;\r\n  }\r\n\r\n  if (everythingButOffscreen & OffscreenLane) {\r\n    return OffscreenLane;\r\n  }\r\n\r\n  return NoLanes;\r\n}\r\nfunction includesSyncLane(lanes) {\r\n  return (lanes & SyncLane) !== NoLanes;\r\n}\r\nfunction includesNonIdleWork(lanes) {\r\n  return (lanes & NonIdleLanes) !== NoLanes;\r\n}\r\nfunction includesOnlyRetries(lanes) {\r\n  return (lanes & RetryLanes) === lanes;\r\n}\r\nfunction includesOnlyNonUrgentLanes(lanes) {\r\n  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\r\n  return (lanes & UrgentLanes) === NoLanes;\r\n}\r\nfunction includesOnlyTransitions(lanes) {\r\n  return (lanes & TransitionLanes) === lanes;\r\n}\r\nfunction includesBlockingLane(root, lanes) {\r\n\r\n  var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\r\n  return (lanes & SyncDefaultLanes) !== NoLanes;\r\n}\r\nfunction includesExpiredLane(root, lanes) {\r\n  // This is a separate check from includesBlockingLane because a lane can\r\n  // expire after a render has already started.\r\n  return (lanes & root.expiredLanes) !== NoLanes;\r\n}\r\nfunction isTransitionLane(lane) {\r\n  return (lane & TransitionLanes) !== NoLanes;\r\n}\r\nfunction claimNextTransitionLane() {\r\n  // Cycle through the lanes, assigning each new transition to the next lane.\r\n  // In most cases, this means every transition gets its own lane, until we\r\n  // run out of lanes and cycle back to the beginning.\r\n  var lane = nextTransitionLane;\r\n  nextTransitionLane <<= 1;\r\n\r\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\r\n    nextTransitionLane = TransitionLane1;\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction claimNextRetryLane() {\r\n  var lane = nextRetryLane;\r\n  nextRetryLane <<= 1;\r\n\r\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\r\n    nextRetryLane = RetryLane1;\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction getHighestPriorityLane(lanes) {\r\n  return lanes & -lanes;\r\n}\r\nfunction pickArbitraryLane(lanes) {\r\n  // This wrapper function gets inlined. Only exists so to communicate that it\r\n  // doesn't matter which bit is selected; you can pick any bit without\r\n  // affecting the algorithms where its used. Here I'm using\r\n  // getHighestPriorityLane because it requires the fewest operations.\r\n  return getHighestPriorityLane(lanes);\r\n}\r\n\r\nfunction pickArbitraryLaneIndex(lanes) {\r\n  return 31 - clz32(lanes);\r\n}\r\n\r\nfunction laneToIndex(lane) {\r\n  return pickArbitraryLaneIndex(lane);\r\n}\r\n\r\nfunction includesSomeLane(a, b) {\r\n  return (a & b) !== NoLanes;\r\n}\r\nfunction isSubsetOfLanes(set, subset) {\r\n  return (set & subset) === subset;\r\n}\r\nfunction mergeLanes(a, b) {\r\n  return a | b;\r\n}\r\nfunction removeLanes(set, subset) {\r\n  return set & ~subset;\r\n}\r\nfunction intersectLanes(a, b) {\r\n  return a & b;\r\n} // Seems redundant, but it changes the type from a single lane (used for\r\n// updates) to a group of lanes (used for flushing work).\r\n\r\nfunction laneToLanes(lane) {\r\n  return lane;\r\n}\r\nfunction higherPriorityLane(a, b) {\r\n  // This works because the bit ranges decrease in priority as you go left.\r\n  return a !== NoLane && a < b ? a : b;\r\n}\r\nfunction createLaneMap(initial) {\r\n  // Intentionally pushing one by one.\r\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\r\n  var laneMap = [];\r\n\r\n  for (var i = 0; i < TotalLanes; i++) {\r\n    laneMap.push(initial);\r\n  }\r\n\r\n  return laneMap;\r\n}\r\nfunction markRootUpdated(root, updateLane, eventTime) {\r\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\r\n  // could unblock them. Clear the suspended lanes so that we can try rendering\r\n  // them again.\r\n  //\r\n  // TODO: We really only need to unsuspend only lanes that are in the\r\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\r\n  // path. This would exclude suspended updates in an unrelated sibling tree,\r\n  // since there's no way for this update to unblock it.\r\n  //\r\n  // We don't do this if the incoming update is idle, because we never process\r\n  // idle updates until after all the regular updates have finished; there's no\r\n  // way it could unblock a transition.\r\n\r\n  if (updateLane !== IdleLane) {\r\n    root.suspendedLanes = NoLanes;\r\n    root.pingedLanes = NoLanes;\r\n  }\r\n\r\n  var eventTimes = root.eventTimes;\r\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\r\n  // recent event, and we assume time is monotonically increasing.\r\n\r\n  eventTimes[index] = eventTime;\r\n}\r\nfunction markRootSuspended(root, suspendedLanes) {\r\n  root.suspendedLanes |= suspendedLanes;\r\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\r\n\r\n  var expirationTimes = root.expirationTimes;\r\n  var lanes = suspendedLanes;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    expirationTimes[index] = NoTimestamp;\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction markRootPinged(root, pingedLanes, eventTime) {\r\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\r\n}\r\nfunction markRootFinished(root, remainingLanes) {\r\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\r\n  root.pendingLanes = remainingLanes; // Let's try everything again\r\n\r\n  root.suspendedLanes = NoLanes;\r\n  root.pingedLanes = NoLanes;\r\n  root.expiredLanes &= remainingLanes;\r\n  root.mutableReadLanes &= remainingLanes;\r\n  root.entangledLanes &= remainingLanes;\r\n  var entanglements = root.entanglements;\r\n  var eventTimes = root.eventTimes;\r\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\r\n\r\n  var lanes = noLongerPendingLanes;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    entanglements[index] = NoLanes;\r\n    eventTimes[index] = NoTimestamp;\r\n    expirationTimes[index] = NoTimestamp;\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction markRootEntangled(root, entangledLanes) {\r\n  // In addition to entangling each of the given lanes with each other, we also\r\n  // have to consider _transitive_ entanglements. For each lane that is already\r\n  // entangled with *any* of the given lanes, that lane is now transitively\r\n  // entangled with *all* the given lanes.\r\n  //\r\n  // Translated: If C is entangled with A, then entangling A with B also\r\n  // entangles C with B.\r\n  //\r\n  // If this is hard to grasp, it might help to intentionally break this\r\n  // function and look at the tests that fail in ReactTransition-test.js. Try\r\n  // commenting out one of the conditions below.\r\n  var rootEntangledLanes = root.entangledLanes |= entangledLanes;\r\n  var entanglements = root.entanglements;\r\n  var lanes = rootEntangledLanes;\r\n\r\n  while (lanes) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n\r\n    if ( // Is this one of the newly entangled lanes?\r\n    lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?\r\n    entanglements[index] & entangledLanes) {\r\n      entanglements[index] |= entangledLanes;\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction getBumpedLaneForHydration(root, renderLanes) {\r\n  var renderLane = getHighestPriorityLane(renderLanes);\r\n  var lane;\r\n\r\n  switch (renderLane) {\r\n    case InputContinuousLane:\r\n      lane = InputContinuousHydrationLane;\r\n      break;\r\n\r\n    case DefaultLane:\r\n      lane = DefaultHydrationLane;\r\n      break;\r\n\r\n    case TransitionLane1:\r\n    case TransitionLane2:\r\n    case TransitionLane3:\r\n    case TransitionLane4:\r\n    case TransitionLane5:\r\n    case TransitionLane6:\r\n    case TransitionLane7:\r\n    case TransitionLane8:\r\n    case TransitionLane9:\r\n    case TransitionLane10:\r\n    case TransitionLane11:\r\n    case TransitionLane12:\r\n    case TransitionLane13:\r\n    case TransitionLane14:\r\n    case TransitionLane15:\r\n    case TransitionLane16:\r\n    case RetryLane1:\r\n    case RetryLane2:\r\n    case RetryLane3:\r\n    case RetryLane4:\r\n    case RetryLane5:\r\n      lane = TransitionHydrationLane;\r\n      break;\r\n\r\n    case IdleLane:\r\n      lane = IdleHydrationLane;\r\n      break;\r\n\r\n    default:\r\n      // Everything else is already either a hydration lane, or shouldn't\r\n      // be retried at a hydration lane.\r\n      lane = NoLane;\r\n      break;\r\n  } // Check if the lane we chose is suspended. If so, that indicates that we\r\n  // already attempted and failed to hydrate at that level. Also check if we're\r\n  // already rendering that lane, which is rare but could happen.\r\n\r\n\r\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\r\n    // Give up trying to hydrate and fall back to client render.\r\n    return NoLane;\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction addFiberToLanesMap(root, fiber, lanes) {\r\n\r\n  if (!isDevToolsPresent) {\r\n    return;\r\n  }\r\n\r\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\r\n\r\n  while (lanes > 0) {\r\n    var index = laneToIndex(lanes);\r\n    var lane = 1 << index;\r\n    var updaters = pendingUpdatersLaneMap[index];\r\n    updaters.add(fiber);\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction movePendingFibersToMemoized(root, lanes) {\r\n\r\n  if (!isDevToolsPresent) {\r\n    return;\r\n  }\r\n\r\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\r\n  var memoizedUpdaters = root.memoizedUpdaters;\r\n\r\n  while (lanes > 0) {\r\n    var index = laneToIndex(lanes);\r\n    var lane = 1 << index;\r\n    var updaters = pendingUpdatersLaneMap[index];\r\n\r\n    if (updaters.size > 0) {\r\n      updaters.forEach(function (fiber) {\r\n        var alternate = fiber.alternate;\r\n\r\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\r\n          memoizedUpdaters.add(fiber);\r\n        }\r\n      });\r\n      updaters.clear();\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction getTransitionsForLanes(root, lanes) {\r\n  {\r\n    return null;\r\n  }\r\n}\r\n\r\nvar DiscreteEventPriority = SyncLane;\r\nvar ContinuousEventPriority = InputContinuousLane;\r\nvar DefaultEventPriority = DefaultLane;\r\nvar IdleEventPriority = IdleLane;\r\nvar currentUpdatePriority = NoLane;\r\nfunction getCurrentUpdatePriority() {\r\n  return currentUpdatePriority;\r\n}\r\nfunction setCurrentUpdatePriority(newPriority) {\r\n  currentUpdatePriority = newPriority;\r\n}\r\nfunction runWithPriority(priority, fn) {\r\n  var previousPriority = currentUpdatePriority;\r\n\r\n  try {\r\n    currentUpdatePriority = priority;\r\n    return fn();\r\n  } finally {\r\n    currentUpdatePriority = previousPriority;\r\n  }\r\n}\r\nfunction higherEventPriority(a, b) {\r\n  return a !== 0 && a < b ? a : b;\r\n}\r\nfunction lowerEventPriority(a, b) {\r\n  return a === 0 || a > b ? a : b;\r\n}\r\nfunction isHigherEventPriority(a, b) {\r\n  return a !== 0 && a < b;\r\n}\r\nfunction lanesToEventPriority(lanes) {\r\n  var lane = getHighestPriorityLane(lanes);\r\n\r\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\r\n    return DiscreteEventPriority;\r\n  }\r\n\r\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\r\n    return ContinuousEventPriority;\r\n  }\r\n\r\n  if (includesNonIdleWork(lane)) {\r\n    return DefaultEventPriority;\r\n  }\r\n\r\n  return IdleEventPriority;\r\n}\r\n\r\n// This module only exists as an ESM wrapper around the external CommonJS\r\nvar scheduleCallback = Scheduler.unstable_scheduleCallback;\r\nvar cancelCallback = Scheduler.unstable_cancelCallback;\r\nvar shouldYield = Scheduler.unstable_shouldYield;\r\nvar requestPaint = Scheduler.unstable_requestPaint;\r\nvar now = Scheduler.unstable_now;\r\nvar ImmediatePriority = Scheduler.unstable_ImmediatePriority;\r\nvar UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\r\nvar NormalPriority = Scheduler.unstable_NormalPriority;\r\nvar IdlePriority = Scheduler.unstable_IdlePriority;\r\n// this doesn't actually exist on the scheduler, but it *does*\r\n// on scheduler/unstable_mock, which we'll need for internal testing\r\nvar unstable_yieldValue = Scheduler.unstable_yieldValue;\r\nvar unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;\r\n\r\nvar rendererID = null;\r\nvar injectedHook = null;\r\nvar injectedProfilingHooks = null;\r\nvar hasLoggedError = false;\r\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\r\nfunction injectInternals(internals) {\r\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\r\n    // No DevTools\r\n    return false;\r\n  }\r\n\r\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\r\n\r\n  if (hook.isDisabled) {\r\n    // This isn't a real property on the hook, but it can be set to opt out\r\n    // of DevTools integration and associated warnings and logs.\r\n    // https://github.com/facebook/react/issues/3877\r\n    return true;\r\n  }\r\n\r\n  if (!hook.supportsFiber) {\r\n    {\r\n      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');\r\n    } // DevTools exists, even though it doesn't support Fiber.\r\n\r\n\r\n    return true;\r\n  }\r\n\r\n  try {\r\n    if (enableSchedulingProfiler) {\r\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\r\n      // This gives DevTools a way to feature detect that isn't tied to version number\r\n      // (since profiling and timeline are controlled by different feature flags).\r\n      internals = assign({}, internals, {\r\n        getLaneLabelMap: getLaneLabelMap,\r\n        injectProfilingHooks: injectProfilingHooks\r\n      });\r\n    }\r\n\r\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\r\n\r\n    injectedHook = hook;\r\n  } catch (err) {\r\n    // Catch all errors because it is unsafe to throw during initialization.\r\n    {\r\n      error('React instrumentation encountered an error: %s.', err);\r\n    }\r\n  }\r\n\r\n  if (hook.checkDCE) {\r\n    // This is the real DevTools.\r\n    return true;\r\n  } else {\r\n    // This is likely a hook installed by Fast Refresh runtime.\r\n    return false;\r\n  }\r\n}\r\nfunction onScheduleRoot(root, children) {\r\n  {\r\n    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {\r\n      try {\r\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\r\n      } catch (err) {\r\n        if ( !hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error('React instrumentation encountered an error: %s', err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction onCommitRoot(root, eventPriority) {\r\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\r\n    try {\r\n      var didError = (root.current.flags & DidCapture) === DidCapture;\r\n\r\n      if (enableProfilerTimer) {\r\n        var schedulerPriority;\r\n\r\n        switch (eventPriority) {\r\n          case DiscreteEventPriority:\r\n            schedulerPriority = ImmediatePriority;\r\n            break;\r\n\r\n          case ContinuousEventPriority:\r\n            schedulerPriority = UserBlockingPriority;\r\n            break;\r\n\r\n          case DefaultEventPriority:\r\n            schedulerPriority = NormalPriority;\r\n            break;\r\n\r\n          case IdleEventPriority:\r\n            schedulerPriority = IdlePriority;\r\n            break;\r\n\r\n          default:\r\n            schedulerPriority = NormalPriority;\r\n            break;\r\n        }\r\n\r\n        injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\r\n      } else {\r\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\r\n      }\r\n    } catch (err) {\r\n      {\r\n        if (!hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error('React instrumentation encountered an error: %s', err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction onPostCommitRoot(root) {\r\n  if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') {\r\n    try {\r\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\r\n    } catch (err) {\r\n      {\r\n        if (!hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error('React instrumentation encountered an error: %s', err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction onCommitUnmount(fiber) {\r\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\r\n    try {\r\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\r\n    } catch (err) {\r\n      {\r\n        if (!hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error('React instrumentation encountered an error: %s', err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\r\n  {\r\n    if (typeof unstable_yieldValue === 'function') {\r\n      // We're in a test because Scheduler.unstable_yieldValue only exists\r\n      // in SchedulerMock. To reduce the noise in strict mode tests,\r\n      // suppress warnings and disable scheduler yielding during the double render\r\n      unstable_setDisableYieldValue(newIsStrictMode);\r\n      setSuppressWarning(newIsStrictMode);\r\n    }\r\n\r\n    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {\r\n      try {\r\n        injectedHook.setStrictMode(rendererID, newIsStrictMode);\r\n      } catch (err) {\r\n        {\r\n          if (!hasLoggedError) {\r\n            hasLoggedError = true;\r\n\r\n            error('React instrumentation encountered an error: %s', err);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n} // Profiler API hooks\r\n\r\nfunction injectProfilingHooks(profilingHooks) {\r\n  injectedProfilingHooks = profilingHooks;\r\n}\r\n\r\nfunction getLaneLabelMap() {\r\n  {\r\n    var map = new Map();\r\n    var lane = 1;\r\n\r\n    for (var index = 0; index < TotalLanes; index++) {\r\n      var label = getLabelForLane(lane);\r\n      map.set(lane, label);\r\n      lane *= 2;\r\n    }\r\n\r\n    return map;\r\n  }\r\n}\r\n\r\nfunction markCommitStarted(lanes) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === 'function') {\r\n      injectedProfilingHooks.markCommitStarted(lanes);\r\n    }\r\n  }\r\n}\r\nfunction markCommitStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === 'function') {\r\n      injectedProfilingHooks.markCommitStopped();\r\n    }\r\n  }\r\n}\r\nfunction markComponentRenderStarted(fiber) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === 'function') {\r\n      injectedProfilingHooks.markComponentRenderStarted(fiber);\r\n    }\r\n  }\r\n}\r\nfunction markComponentRenderStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === 'function') {\r\n      injectedProfilingHooks.markComponentRenderStopped();\r\n    }\r\n  }\r\n}\r\nfunction markComponentPassiveEffectMountStarted(fiber) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === 'function') {\r\n      injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);\r\n    }\r\n  }\r\n}\r\nfunction markComponentPassiveEffectMountStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === 'function') {\r\n      injectedProfilingHooks.markComponentPassiveEffectMountStopped();\r\n    }\r\n  }\r\n}\r\nfunction markComponentPassiveEffectUnmountStarted(fiber) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === 'function') {\r\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);\r\n    }\r\n  }\r\n}\r\nfunction markComponentPassiveEffectUnmountStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === 'function') {\r\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();\r\n    }\r\n  }\r\n}\r\nfunction markComponentLayoutEffectMountStarted(fiber) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === 'function') {\r\n      injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);\r\n    }\r\n  }\r\n}\r\nfunction markComponentLayoutEffectMountStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === 'function') {\r\n      injectedProfilingHooks.markComponentLayoutEffectMountStopped();\r\n    }\r\n  }\r\n}\r\nfunction markComponentLayoutEffectUnmountStarted(fiber) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === 'function') {\r\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);\r\n    }\r\n  }\r\n}\r\nfunction markComponentLayoutEffectUnmountStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === 'function') {\r\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();\r\n    }\r\n  }\r\n}\r\nfunction markComponentErrored(fiber, thrownValue, lanes) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === 'function') {\r\n      injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);\r\n    }\r\n  }\r\n}\r\nfunction markComponentSuspended(fiber, wakeable, lanes) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === 'function') {\r\n      injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);\r\n    }\r\n  }\r\n}\r\nfunction markLayoutEffectsStarted(lanes) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function') {\r\n      injectedProfilingHooks.markLayoutEffectsStarted(lanes);\r\n    }\r\n  }\r\n}\r\nfunction markLayoutEffectsStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function') {\r\n      injectedProfilingHooks.markLayoutEffectsStopped();\r\n    }\r\n  }\r\n}\r\nfunction markPassiveEffectsStarted(lanes) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function') {\r\n      injectedProfilingHooks.markPassiveEffectsStarted(lanes);\r\n    }\r\n  }\r\n}\r\nfunction markPassiveEffectsStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function') {\r\n      injectedProfilingHooks.markPassiveEffectsStopped();\r\n    }\r\n  }\r\n}\r\nfunction markRenderStarted(lanes) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === 'function') {\r\n      injectedProfilingHooks.markRenderStarted(lanes);\r\n    }\r\n  }\r\n}\r\nfunction markRenderYielded() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === 'function') {\r\n      injectedProfilingHooks.markRenderYielded();\r\n    }\r\n  }\r\n}\r\nfunction markRenderStopped() {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === 'function') {\r\n      injectedProfilingHooks.markRenderStopped();\r\n    }\r\n  }\r\n}\r\nfunction markRenderScheduled(lane) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === 'function') {\r\n      injectedProfilingHooks.markRenderScheduled(lane);\r\n    }\r\n  }\r\n}\r\nfunction markForceUpdateScheduled(fiber, lane) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === 'function') {\r\n      injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);\r\n    }\r\n  }\r\n}\r\nfunction markStateUpdateScheduled(fiber, lane) {\r\n  {\r\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === 'function') {\r\n      injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * inlined Object.is polyfill to avoid requiring consumers ship their own\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n */\r\nfunction is(x, y) {\r\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\r\n  ;\r\n}\r\n\r\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\r\n\r\nvar syncQueue = null;\r\nvar includesLegacySyncCallbacks = false;\r\nvar isFlushingSyncQueue = false;\r\nfunction scheduleSyncCallback(callback) {\r\n  // Push this callback into an internal queue. We'll flush these either in\r\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\r\n  if (syncQueue === null) {\r\n    syncQueue = [callback];\r\n  } else {\r\n    // Push onto existing queue. Don't need to schedule a callback because\r\n    // we already scheduled one when we created the queue.\r\n    syncQueue.push(callback);\r\n  }\r\n}\r\nfunction scheduleLegacySyncCallback(callback) {\r\n  includesLegacySyncCallbacks = true;\r\n  scheduleSyncCallback(callback);\r\n}\r\nfunction flushSyncCallbacksOnlyInLegacyMode() {\r\n  // Only flushes the queue if there's a legacy sync callback scheduled.\r\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\r\n  // it might make more sense for the queue to be a list of roots instead of a\r\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\r\n  // for concurrent roots. And this method would only flush the legacy ones.\r\n  if (includesLegacySyncCallbacks) {\r\n    flushSyncCallbacks();\r\n  }\r\n}\r\nfunction flushSyncCallbacks() {\r\n  if (!isFlushingSyncQueue && syncQueue !== null) {\r\n    // Prevent re-entrance.\r\n    isFlushingSyncQueue = true;\r\n    var i = 0;\r\n    var previousUpdatePriority = getCurrentUpdatePriority();\r\n\r\n    try {\r\n      var isSync = true;\r\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\r\n      // queue is in the render or commit phases.\r\n\r\n      setCurrentUpdatePriority(DiscreteEventPriority);\r\n\r\n      for (; i < queue.length; i++) {\r\n        var callback = queue[i];\r\n\r\n        do {\r\n          callback = callback(isSync);\r\n        } while (callback !== null);\r\n      }\r\n\r\n      syncQueue = null;\r\n      includesLegacySyncCallbacks = false;\r\n    } catch (error) {\r\n      // If something throws, leave the remaining callbacks on the queue.\r\n      if (syncQueue !== null) {\r\n        syncQueue = syncQueue.slice(i + 1);\r\n      } // Resume flushing in the next tick\r\n\r\n\r\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\r\n      throw error;\r\n    } finally {\r\n      setCurrentUpdatePriority(previousUpdatePriority);\r\n      isFlushingSyncQueue = false;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// This is imported by the event replaying implementation in React DOM. It's\r\n// in a separate file to break a circular dependency between the renderer and\r\n// the reconciler.\r\nfunction isRootDehydrated(root) {\r\n  var currentState = root.current.memoizedState;\r\n  return currentState.isDehydrated;\r\n}\r\n\r\n// TODO: Use the unified fiber stack module instead of this local one?\r\n// Intentionally not using it yet to derisk the initial implementation, because\r\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\r\n// rather the ids be wrong than crash the whole reconciler.\r\nvar forkStack = [];\r\nvar forkStackIndex = 0;\r\nvar treeForkProvider = null;\r\nvar treeForkCount = 0;\r\nvar idStack = [];\r\nvar idStackIndex = 0;\r\nvar treeContextProvider = null;\r\nvar treeContextId = 1;\r\nvar treeContextOverflow = '';\r\nfunction isForkedChild(workInProgress) {\r\n  warnIfNotHydrating();\r\n  return (workInProgress.flags & Forked) !== NoFlags;\r\n}\r\nfunction getForksAtLevel(workInProgress) {\r\n  warnIfNotHydrating();\r\n  return treeForkCount;\r\n}\r\nfunction getTreeId() {\r\n  var overflow = treeContextOverflow;\r\n  var idWithLeadingBit = treeContextId;\r\n  var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);\r\n  return id.toString(32) + overflow;\r\n}\r\nfunction pushTreeFork(workInProgress, totalChildren) {\r\n  // This is called right after we reconcile an array (or iterator) of child\r\n  // fibers, because that's the only place where we know how many children in\r\n  // the whole set without doing extra work later, or storing addtional\r\n  // information on the fiber.\r\n  //\r\n  // That's why this function is separate from pushTreeId — it's called during\r\n  // the render phase of the fork parent, not the child, which is where we push\r\n  // the other context values.\r\n  //\r\n  // In the Fizz implementation this is much simpler because the child is\r\n  // rendered in the same callstack as the parent.\r\n  //\r\n  // It might be better to just add a `forks` field to the Fiber type. It would\r\n  // make this module simpler.\r\n  warnIfNotHydrating();\r\n  forkStack[forkStackIndex++] = treeForkCount;\r\n  forkStack[forkStackIndex++] = treeForkProvider;\r\n  treeForkProvider = workInProgress;\r\n  treeForkCount = totalChildren;\r\n}\r\nfunction pushTreeId(workInProgress, totalChildren, index) {\r\n  warnIfNotHydrating();\r\n  idStack[idStackIndex++] = treeContextId;\r\n  idStack[idStackIndex++] = treeContextOverflow;\r\n  idStack[idStackIndex++] = treeContextProvider;\r\n  treeContextProvider = workInProgress;\r\n  var baseIdWithLeadingBit = treeContextId;\r\n  var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\r\n  // of the id; we use it to account for leading 0s.\r\n\r\n  var baseLength = getBitLength(baseIdWithLeadingBit) - 1;\r\n  var baseId = baseIdWithLeadingBit & ~(1 << baseLength);\r\n  var slot = index + 1;\r\n  var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into\r\n  // consideration the leading 1 we use to mark the end of the sequence.\r\n\r\n  if (length > 30) {\r\n    // We overflowed the bitwise-safe range. Fall back to slower algorithm.\r\n    // This branch assumes the length of the base id is greater than 5; it won't\r\n    // work for smaller ids, because you need 5 bits per character.\r\n    //\r\n    // We encode the id in multiple steps: first the base id, then the\r\n    // remaining digits.\r\n    //\r\n    // Each 5 bit sequence corresponds to a single base 32 character. So for\r\n    // example, if the current id is 23 bits long, we can convert 20 of those\r\n    // bits into a string of 4 characters, with 3 bits left over.\r\n    //\r\n    // First calculate how many bits in the base id represent a complete\r\n    // sequence of characters.\r\n    var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.\r\n\r\n    var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.\r\n\r\n    var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.\r\n\r\n    var restOfBaseId = baseId >> numberOfOverflowBits;\r\n    var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because\r\n    // we made more room, this time it won't overflow.\r\n\r\n    var restOfLength = getBitLength(totalChildren) + restOfBaseLength;\r\n    var restOfNewBits = slot << restOfBaseLength;\r\n    var id = restOfNewBits | restOfBaseId;\r\n    var overflow = newOverflow + baseOverflow;\r\n    treeContextId = 1 << restOfLength | id;\r\n    treeContextOverflow = overflow;\r\n  } else {\r\n    // Normal path\r\n    var newBits = slot << baseLength;\r\n\r\n    var _id = newBits | baseId;\r\n\r\n    var _overflow = baseOverflow;\r\n    treeContextId = 1 << length | _id;\r\n    treeContextOverflow = _overflow;\r\n  }\r\n}\r\nfunction pushMaterializedTreeId(workInProgress) {\r\n  warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear\r\n  // in its children.\r\n\r\n  var returnFiber = workInProgress.return;\r\n\r\n  if (returnFiber !== null) {\r\n    var numberOfForks = 1;\r\n    var slotIndex = 0;\r\n    pushTreeFork(workInProgress, numberOfForks);\r\n    pushTreeId(workInProgress, numberOfForks, slotIndex);\r\n  }\r\n}\r\n\r\nfunction getBitLength(number) {\r\n  return 32 - clz32(number);\r\n}\r\n\r\nfunction getLeadingBit(id) {\r\n  return 1 << getBitLength(id) - 1;\r\n}\r\n\r\nfunction popTreeContext(workInProgress) {\r\n  // Restore the previous values.\r\n  // This is a bit more complicated than other context-like modules in Fiber\r\n  // because the same Fiber may appear on the stack multiple times and for\r\n  // different reasons. We have to keep popping until the work-in-progress is\r\n  // no longer at the top of the stack.\r\n  while (workInProgress === treeForkProvider) {\r\n    treeForkProvider = forkStack[--forkStackIndex];\r\n    forkStack[forkStackIndex] = null;\r\n    treeForkCount = forkStack[--forkStackIndex];\r\n    forkStack[forkStackIndex] = null;\r\n  }\r\n\r\n  while (workInProgress === treeContextProvider) {\r\n    treeContextProvider = idStack[--idStackIndex];\r\n    idStack[idStackIndex] = null;\r\n    treeContextOverflow = idStack[--idStackIndex];\r\n    idStack[idStackIndex] = null;\r\n    treeContextId = idStack[--idStackIndex];\r\n    idStack[idStackIndex] = null;\r\n  }\r\n}\r\nfunction getSuspendedTreeContext() {\r\n  warnIfNotHydrating();\r\n\r\n  if (treeContextProvider !== null) {\r\n    return {\r\n      id: treeContextId,\r\n      overflow: treeContextOverflow\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\nfunction restoreSuspendedTreeContext(workInProgress, suspendedContext) {\r\n  warnIfNotHydrating();\r\n  idStack[idStackIndex++] = treeContextId;\r\n  idStack[idStackIndex++] = treeContextOverflow;\r\n  idStack[idStackIndex++] = treeContextProvider;\r\n  treeContextId = suspendedContext.id;\r\n  treeContextOverflow = suspendedContext.overflow;\r\n  treeContextProvider = workInProgress;\r\n}\r\n\r\nfunction warnIfNotHydrating() {\r\n  {\r\n    if (!getIsHydrating()) {\r\n      error('Expected to be hydrating. This is a bug in React. Please file ' + 'an issue.');\r\n    }\r\n  }\r\n}\r\n\r\n// This may have been an insertion or a hydration.\r\n\r\nvar hydrationParentFiber = null;\r\nvar nextHydratableInstance = null;\r\nvar isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches\r\n// due to earlier mismatches or a suspended fiber.\r\n\r\nvar didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary\r\n\r\nvar hydrationErrors = null;\r\n\r\nfunction warnIfHydrating() {\r\n  {\r\n    if (isHydrating) {\r\n      error('We should not be hydrating here. This is a bug in React. Please file a bug.');\r\n    }\r\n  }\r\n}\r\n\r\nfunction markDidThrowWhileHydratingDEV() {\r\n  {\r\n    didSuspendOrErrorDEV = true;\r\n  }\r\n}\r\nfunction didSuspendOrErrorWhileHydratingDEV() {\r\n  {\r\n    return didSuspendOrErrorDEV;\r\n  }\r\n}\r\n\r\nfunction enterHydrationState(fiber) {\r\n  if (!supportsHydration) {\r\n    return false;\r\n  }\r\n\r\n  var parentInstance = fiber.stateNode.containerInfo;\r\n  nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);\r\n  hydrationParentFiber = fiber;\r\n  isHydrating = true;\r\n  hydrationErrors = null;\r\n  didSuspendOrErrorDEV = false;\r\n  return true;\r\n}\r\n\r\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {\r\n  if (!supportsHydration) {\r\n    return false;\r\n  }\r\n\r\n  nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);\r\n  hydrationParentFiber = fiber;\r\n  isHydrating = true;\r\n  hydrationErrors = null;\r\n  didSuspendOrErrorDEV = false;\r\n\r\n  if (treeContext !== null) {\r\n    restoreSuspendedTreeContext(fiber, treeContext);\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction warnUnhydratedInstance(returnFiber, instance) {\r\n  {\r\n    switch (returnFiber.tag) {\r\n      case HostRoot:\r\n        {\r\n          didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);\r\n          break;\r\n        }\r\n\r\n      case HostComponent:\r\n        {\r\n          var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\r\n          didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, // TODO: Delete this argument when we remove the legacy root API.\r\n          isConcurrentMode);\r\n          break;\r\n        }\r\n\r\n      case SuspenseComponent:\r\n        {\r\n          var suspenseState = returnFiber.memoizedState;\r\n          if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);\r\n          break;\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteHydratableInstance(returnFiber, instance) {\r\n  warnUnhydratedInstance(returnFiber, instance);\r\n  var childToDelete = createFiberFromHostInstanceForDeletion();\r\n  childToDelete.stateNode = instance;\r\n  childToDelete.return = returnFiber;\r\n  var deletions = returnFiber.deletions;\r\n\r\n  if (deletions === null) {\r\n    returnFiber.deletions = [childToDelete];\r\n    returnFiber.flags |= ChildDeletion;\r\n  } else {\r\n    deletions.push(childToDelete);\r\n  }\r\n}\r\n\r\nfunction warnNonhydratedInstance(returnFiber, fiber) {\r\n  {\r\n    if (didSuspendOrErrorDEV) {\r\n      // Inside a boundary that already suspended. We're currently rendering the\r\n      // siblings of a suspended node. The mismatch may be due to the missing\r\n      // data, so it's probably a false positive.\r\n      return;\r\n    }\r\n\r\n    switch (returnFiber.tag) {\r\n      case HostRoot:\r\n        {\r\n          var parentContainer = returnFiber.stateNode.containerInfo;\r\n\r\n          switch (fiber.tag) {\r\n            case HostComponent:\r\n              var type = fiber.type;\r\n              var props = fiber.pendingProps;\r\n              didNotFindHydratableInstanceWithinContainer(parentContainer, type, props);\r\n              break;\r\n\r\n            case HostText:\r\n              var text = fiber.pendingProps;\r\n              didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);\r\n              break;\r\n\r\n            case SuspenseComponent:\r\n              didNotFindHydratableSuspenseInstanceWithinContainer(parentContainer);\r\n              break;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case HostComponent:\r\n        {\r\n          var parentType = returnFiber.type;\r\n          var parentProps = returnFiber.memoizedProps;\r\n          var parentInstance = returnFiber.stateNode;\r\n\r\n          switch (fiber.tag) {\r\n            case HostComponent:\r\n              {\r\n                var _type = fiber.type;\r\n                var _props = fiber.pendingProps;\r\n                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\r\n                didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, // TODO: Delete this argument when we remove the legacy root API.\r\n                isConcurrentMode);\r\n                break;\r\n              }\r\n\r\n            case HostText:\r\n              {\r\n                var _text = fiber.pendingProps;\r\n\r\n                var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\r\n\r\n                didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, // TODO: Delete this argument when we remove the legacy root API.\r\n                _isConcurrentMode);\r\n                break;\r\n              }\r\n\r\n            case SuspenseComponent:\r\n              {\r\n                didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);\r\n                break;\r\n              }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case SuspenseComponent:\r\n        {\r\n          var suspenseState = returnFiber.memoizedState;\r\n          var _parentInstance = suspenseState.dehydrated;\r\n          if (_parentInstance !== null) switch (fiber.tag) {\r\n            case HostComponent:\r\n              var _type2 = fiber.type;\r\n              var _props2 = fiber.pendingProps;\r\n              didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2, _props2);\r\n              break;\r\n\r\n            case HostText:\r\n              var _text2 = fiber.pendingProps;\r\n              didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);\r\n              break;\r\n\r\n            case SuspenseComponent:\r\n              didNotFindHydratableSuspenseInstanceWithinSuspenseInstance(_parentInstance);\r\n              break;\r\n          }\r\n          break;\r\n        }\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction insertNonHydratedInstance(returnFiber, fiber) {\r\n  fiber.flags = fiber.flags & ~Hydrating | Placement;\r\n  warnNonhydratedInstance(returnFiber, fiber);\r\n}\r\n\r\nfunction tryHydrate(fiber, nextInstance) {\r\n  switch (fiber.tag) {\r\n    case HostComponent:\r\n      {\r\n        var type = fiber.type;\r\n        var props = fiber.pendingProps;\r\n        var instance = canHydrateInstance(nextInstance, type, props);\r\n\r\n        if (instance !== null) {\r\n          fiber.stateNode = instance;\r\n          hydrationParentFiber = fiber;\r\n          nextHydratableInstance = getFirstHydratableChild(instance);\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n    case HostText:\r\n      {\r\n        var text = fiber.pendingProps;\r\n        var textInstance = canHydrateTextInstance(nextInstance, text);\r\n\r\n        if (textInstance !== null) {\r\n          fiber.stateNode = textInstance;\r\n          hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.\r\n\r\n          nextHydratableInstance = null;\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n    case SuspenseComponent:\r\n      {\r\n        var suspenseInstance = canHydrateSuspenseInstance(nextInstance);\r\n\r\n        if (suspenseInstance !== null) {\r\n          var suspenseState = {\r\n            dehydrated: suspenseInstance,\r\n            treeContext: getSuspendedTreeContext(),\r\n            retryLane: OffscreenLane\r\n          };\r\n          fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.\r\n          // This simplifies the code for getHostSibling and deleting nodes,\r\n          // since it doesn't have to consider all Suspense boundaries and\r\n          // check if they're dehydrated ones or not.\r\n\r\n          var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);\r\n          dehydratedFragment.return = fiber;\r\n          fiber.child = dehydratedFragment;\r\n          hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into\r\n          // it during the first pass. Instead, we'll reenter it later.\r\n\r\n          nextHydratableInstance = null;\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nfunction shouldClientRenderOnMismatch(fiber) {\r\n  return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;\r\n}\r\n\r\nfunction throwOnHydrationMismatch(fiber) {\r\n  throw new Error('Hydration failed because the initial UI does not match what was ' + 'rendered on the server.');\r\n}\r\n\r\nfunction tryToClaimNextHydratableInstance(fiber) {\r\n  if (!isHydrating) {\r\n    return;\r\n  }\r\n\r\n  var nextInstance = nextHydratableInstance;\r\n\r\n  if (!nextInstance) {\r\n    if (shouldClientRenderOnMismatch(fiber)) {\r\n      warnNonhydratedInstance(hydrationParentFiber, fiber);\r\n      throwOnHydrationMismatch();\r\n    } // Nothing to hydrate. Make it an insertion.\r\n\r\n\r\n    insertNonHydratedInstance(hydrationParentFiber, fiber);\r\n    isHydrating = false;\r\n    hydrationParentFiber = fiber;\r\n    return;\r\n  }\r\n\r\n  var firstAttemptedInstance = nextInstance;\r\n\r\n  if (!tryHydrate(fiber, nextInstance)) {\r\n    if (shouldClientRenderOnMismatch(fiber)) {\r\n      warnNonhydratedInstance(hydrationParentFiber, fiber);\r\n      throwOnHydrationMismatch();\r\n    } // If we can't hydrate this instance let's try the next one.\r\n    // We use this as a heuristic. It's based on intuition and not data so it\r\n    // might be flawed or unnecessary.\r\n\r\n\r\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\r\n    var prevHydrationParentFiber = hydrationParentFiber;\r\n\r\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\r\n      // Nothing to hydrate. Make it an insertion.\r\n      insertNonHydratedInstance(hydrationParentFiber, fiber);\r\n      isHydrating = false;\r\n      hydrationParentFiber = fiber;\r\n      return;\r\n    } // We matched the next one, we'll now assume that the first one was\r\n    // superfluous and we'll delete it. Since we can't eagerly delete it\r\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\r\n    // fiber associated with it.\r\n\r\n\r\n    deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);\r\n  }\r\n}\r\n\r\nfunction prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\r\n  if (!supportsHydration) {\r\n    throw new Error('Expected prepareToHydrateHostInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  var instance = fiber.stateNode;\r\n  var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;\r\n  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.\r\n\r\n  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\r\n  // is a new ref we mark this as an update.\r\n\r\n  if (updatePayload !== null) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction prepareToHydrateHostTextInstance(fiber) {\r\n  if (!supportsHydration) {\r\n    throw new Error('Expected prepareToHydrateHostTextInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  var textInstance = fiber.stateNode;\r\n  var textContent = fiber.memoizedProps;\r\n  var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;\r\n  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber, shouldWarnIfMismatchDev);\r\n\r\n  if (shouldUpdate) {\r\n    // We assume that prepareToHydrateHostTextInstance is called in a context where the\r\n    // hydration parent is the parent host component of this host text.\r\n    var returnFiber = hydrationParentFiber;\r\n\r\n    if (returnFiber !== null) {\r\n      switch (returnFiber.tag) {\r\n        case HostRoot:\r\n          {\r\n            var parentContainer = returnFiber.stateNode.containerInfo;\r\n            var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\r\n            didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.\r\n            isConcurrentMode);\r\n            break;\r\n          }\r\n\r\n        case HostComponent:\r\n          {\r\n            var parentType = returnFiber.type;\r\n            var parentProps = returnFiber.memoizedProps;\r\n            var parentInstance = returnFiber.stateNode;\r\n\r\n            var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;\r\n\r\n            didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.\r\n            _isConcurrentMode2);\r\n            break;\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  return shouldUpdate;\r\n}\r\n\r\nfunction prepareToHydrateHostSuspenseInstance(fiber) {\r\n  if (!supportsHydration) {\r\n    throw new Error('Expected prepareToHydrateHostSuspenseInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  var suspenseState = fiber.memoizedState;\r\n  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;\r\n\r\n  if (!suspenseInstance) {\r\n    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  hydrateSuspenseInstance(suspenseInstance, fiber);\r\n}\r\n\r\nfunction skipPastDehydratedSuspenseInstance(fiber) {\r\n  if (!supportsHydration) {\r\n    throw new Error('Expected skipPastDehydratedSuspenseInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  var suspenseState = fiber.memoizedState;\r\n  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;\r\n\r\n  if (!suspenseInstance) {\r\n    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\r\n}\r\n\r\nfunction popToNextHostParent(fiber) {\r\n  var parent = fiber.return;\r\n\r\n  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {\r\n    parent = parent.return;\r\n  }\r\n\r\n  hydrationParentFiber = parent;\r\n}\r\n\r\nfunction popHydrationState(fiber) {\r\n  if (!supportsHydration) {\r\n    return false;\r\n  }\r\n\r\n  if (fiber !== hydrationParentFiber) {\r\n    // We're deeper than the current hydration context, inside an inserted\r\n    // tree.\r\n    return false;\r\n  }\r\n\r\n  if (!isHydrating) {\r\n    // If we're not currently hydrating but we're in a hydration context, then\r\n    // we were an insertion and now need to pop up reenter hydration of our\r\n    // siblings.\r\n    popToNextHostParent(fiber);\r\n    isHydrating = true;\r\n    return false;\r\n  } // If we have any remaining hydratable nodes, we need to delete them now.\r\n  // We only do this deeper than head and body since they tend to have random\r\n  // other nodes in them. We also ignore components with pure text content in\r\n  // side of them. We also don't delete anything inside the root container.\r\n\r\n\r\n  if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {\r\n    var nextInstance = nextHydratableInstance;\r\n\r\n    if (nextInstance) {\r\n      if (shouldClientRenderOnMismatch(fiber)) {\r\n        warnIfUnhydratedTailNodes(fiber);\r\n        throwOnHydrationMismatch();\r\n      } else {\r\n        while (nextInstance) {\r\n          deleteHydratableInstance(fiber, nextInstance);\r\n          nextInstance = getNextHydratableSibling(nextInstance);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  popToNextHostParent(fiber);\r\n\r\n  if (fiber.tag === SuspenseComponent) {\r\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\r\n  } else {\r\n    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction hasUnhydratedTailNodes() {\r\n  return isHydrating && nextHydratableInstance !== null;\r\n}\r\n\r\nfunction warnIfUnhydratedTailNodes(fiber) {\r\n  var nextInstance = nextHydratableInstance;\r\n\r\n  while (nextInstance) {\r\n    warnUnhydratedInstance(fiber, nextInstance);\r\n    nextInstance = getNextHydratableSibling(nextInstance);\r\n  }\r\n}\r\n\r\nfunction resetHydrationState() {\r\n  if (!supportsHydration) {\r\n    return;\r\n  }\r\n\r\n  hydrationParentFiber = null;\r\n  nextHydratableInstance = null;\r\n  isHydrating = false;\r\n  didSuspendOrErrorDEV = false;\r\n}\r\n\r\nfunction upgradeHydrationErrorsToRecoverable() {\r\n  if (hydrationErrors !== null) {\r\n    // Successfully completed a forced client render. The errors that occurred\r\n    // during the hydration attempt are now recovered. We will log them in\r\n    // commit phase, once the entire tree has finished.\r\n    queueRecoverableErrors(hydrationErrors);\r\n    hydrationErrors = null;\r\n  }\r\n}\r\n\r\nfunction getIsHydrating() {\r\n  return isHydrating;\r\n}\r\n\r\nfunction queueHydrationError(error) {\r\n  if (hydrationErrors === null) {\r\n    hydrationErrors = [error];\r\n  } else {\r\n    hydrationErrors.push(error);\r\n  }\r\n}\r\n\r\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\r\nvar NoTransition = null;\r\nfunction requestCurrentTransition() {\r\n  return ReactCurrentBatchConfig.transition;\r\n}\r\n\r\n/**\r\n * Performs equality by iterating through keys on an object and returning false\r\n * when any key has values which are not strictly equal between the arguments.\r\n * Returns true when the values of all keys are strictly equal.\r\n */\r\n\r\nfunction shallowEqual(objA, objB) {\r\n  if (objectIs(objA, objB)) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\r\n    return false;\r\n  }\r\n\r\n  var keysA = Object.keys(objA);\r\n  var keysB = Object.keys(objB);\r\n\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  } // Test for A's keys different from B.\r\n\r\n\r\n  for (var i = 0; i < keysA.length; i++) {\r\n    var currentKey = keysA[i];\r\n\r\n    if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction describeFiber(fiber) {\r\n  var owner =  fiber._debugOwner ? fiber._debugOwner.type : null ;\r\n  var source =  fiber._debugSource ;\r\n\r\n  switch (fiber.tag) {\r\n    case HostComponent:\r\n      return describeBuiltInComponentFrame(fiber.type);\r\n\r\n    case LazyComponent:\r\n      return describeBuiltInComponentFrame('Lazy');\r\n\r\n    case SuspenseComponent:\r\n      return describeBuiltInComponentFrame('Suspense');\r\n\r\n    case SuspenseListComponent:\r\n      return describeBuiltInComponentFrame('SuspenseList');\r\n\r\n    case FunctionComponent:\r\n    case IndeterminateComponent:\r\n    case SimpleMemoComponent:\r\n      return describeFunctionComponentFrame(fiber.type);\r\n\r\n    case ForwardRef:\r\n      return describeFunctionComponentFrame(fiber.type.render);\r\n\r\n    case ClassComponent:\r\n      return describeClassComponentFrame(fiber.type);\r\n\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction getStackByFiberInDevAndProd(workInProgress) {\r\n  try {\r\n    var info = '';\r\n    var node = workInProgress;\r\n\r\n    do {\r\n      info += describeFiber(node);\r\n      node = node.return;\r\n    } while (node);\r\n\r\n    return info;\r\n  } catch (x) {\r\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\r\n  }\r\n}\r\n\r\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\r\nvar current = null;\r\nvar isRendering = false;\r\nfunction getCurrentFiberOwnerNameInDevOrNull() {\r\n  {\r\n    if (current === null) {\r\n      return null;\r\n    }\r\n\r\n    var owner = current._debugOwner;\r\n\r\n    if (owner !== null && typeof owner !== 'undefined') {\r\n      return getComponentNameFromFiber(owner);\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getCurrentFiberStackInDev() {\r\n  {\r\n    if (current === null) {\r\n      return '';\r\n    } // Safe because if current fiber exists, we are reconciling,\r\n    // and it is guaranteed to be the work-in-progress version.\r\n\r\n\r\n    return getStackByFiberInDevAndProd(current);\r\n  }\r\n}\r\n\r\nfunction resetCurrentFiber() {\r\n  {\r\n    ReactDebugCurrentFrame$1.getCurrentStack = null;\r\n    current = null;\r\n    isRendering = false;\r\n  }\r\n}\r\nfunction setCurrentFiber(fiber) {\r\n  {\r\n    ReactDebugCurrentFrame$1.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;\r\n    current = fiber;\r\n    isRendering = false;\r\n  }\r\n}\r\nfunction getCurrentFiber() {\r\n  {\r\n    return current;\r\n  }\r\n}\r\nfunction setIsRendering(rendering) {\r\n  {\r\n    isRendering = rendering;\r\n  }\r\n}\r\n\r\nvar ReactStrictModeWarnings = {\r\n  recordUnsafeLifecycleWarnings: function (fiber, instance) {},\r\n  flushPendingUnsafeLifecycleWarnings: function () {},\r\n  recordLegacyContextWarning: function (fiber, instance) {},\r\n  flushLegacyContextWarning: function () {},\r\n  discardPendingWarnings: function () {}\r\n};\r\n\r\n{\r\n  var findStrictRoot = function (fiber) {\r\n    var maybeStrictRoot = null;\r\n    var node = fiber;\r\n\r\n    while (node !== null) {\r\n      if (node.mode & StrictLegacyMode) {\r\n        maybeStrictRoot = node;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    return maybeStrictRoot;\r\n  };\r\n\r\n  var setToSortedString = function (set) {\r\n    var array = [];\r\n    set.forEach(function (value) {\r\n      array.push(value);\r\n    });\r\n    return array.sort().join(', ');\r\n  };\r\n\r\n  var pendingComponentWillMountWarnings = [];\r\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\r\n  var pendingComponentWillReceivePropsWarnings = [];\r\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n  var pendingComponentWillUpdateWarnings = [];\r\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\r\n\r\n  var didWarnAboutUnsafeLifecycles = new Set();\r\n\r\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\r\n    // Dedupe strategy: Warn once per component.\r\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.\r\n    instance.componentWillMount.__suppressDeprecationWarning !== true) {\r\n      pendingComponentWillMountWarnings.push(fiber);\r\n    }\r\n\r\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') {\r\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\r\n    }\r\n\r\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\r\n      pendingComponentWillReceivePropsWarnings.push(fiber);\r\n    }\r\n\r\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\r\n    }\r\n\r\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\r\n      pendingComponentWillUpdateWarnings.push(fiber);\r\n    }\r\n\r\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {\r\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\r\n    // We do an initial pass to gather component names\r\n    var componentWillMountUniqueNames = new Set();\r\n\r\n    if (pendingComponentWillMountWarnings.length > 0) {\r\n      pendingComponentWillMountWarnings.forEach(function (fiber) {\r\n        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingComponentWillMountWarnings = [];\r\n    }\r\n\r\n    var UNSAFE_componentWillMountUniqueNames = new Set();\r\n\r\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\r\n        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingUNSAFE_ComponentWillMountWarnings = [];\r\n    }\r\n\r\n    var componentWillReceivePropsUniqueNames = new Set();\r\n\r\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\r\n      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\r\n        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingComponentWillReceivePropsWarnings = [];\r\n    }\r\n\r\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\r\n\r\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\r\n        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n    }\r\n\r\n    var componentWillUpdateUniqueNames = new Set();\r\n\r\n    if (pendingComponentWillUpdateWarnings.length > 0) {\r\n      pendingComponentWillUpdateWarnings.forEach(function (fiber) {\r\n        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingComponentWillUpdateWarnings = [];\r\n    }\r\n\r\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\r\n\r\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\r\n        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\r\n    } // Finally, we flush all the warnings\r\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\r\n\r\n\r\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\r\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\r\n\r\n      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '\\nPlease update the following components: %s', sortedNames);\r\n    }\r\n\r\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\r\n      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\r\n\r\n      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, \" + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '\\nPlease update the following components: %s', _sortedNames);\r\n    }\r\n\r\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\r\n      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\r\n\r\n      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '\\nPlease update the following components: %s', _sortedNames2);\r\n    }\r\n\r\n    if (componentWillMountUniqueNames.size > 0) {\r\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\r\n\r\n      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames3);\r\n    }\r\n\r\n    if (componentWillReceivePropsUniqueNames.size > 0) {\r\n      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\r\n\r\n      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, refactor your \" + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames4);\r\n    }\r\n\r\n    if (componentWillUpdateUniqueNames.size > 0) {\r\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\r\n\r\n      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames5);\r\n    }\r\n  };\r\n\r\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\r\n\r\n  var didWarnAboutLegacyContext = new Set();\r\n\r\n  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\r\n    var strictRoot = findStrictRoot(fiber);\r\n\r\n    if (strictRoot === null) {\r\n      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n\r\n      return;\r\n    } // Dedup strategy: Warn once per component.\r\n\r\n\r\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\r\n\r\n    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\r\n      if (warningsForRoot === undefined) {\r\n        warningsForRoot = [];\r\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\r\n      }\r\n\r\n      warningsForRoot.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushLegacyContextWarning = function () {\r\n    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\r\n      if (fiberArray.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var firstFiber = fiberArray[0];\r\n      var uniqueNames = new Set();\r\n      fiberArray.forEach(function (fiber) {\r\n        uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\r\n        didWarnAboutLegacyContext.add(fiber.type);\r\n      });\r\n      var sortedNames = setToSortedString(uniqueNames);\r\n\r\n      try {\r\n        setCurrentFiber(firstFiber);\r\n\r\n        error('Legacy context API has been detected within a strict-mode tree.' + '\\n\\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);\r\n      } finally {\r\n        resetCurrentFiber();\r\n      }\r\n    });\r\n  };\r\n\r\n  ReactStrictModeWarnings.discardPendingWarnings = function () {\r\n    pendingComponentWillMountWarnings = [];\r\n    pendingUNSAFE_ComponentWillMountWarnings = [];\r\n    pendingComponentWillReceivePropsWarnings = [];\r\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n    pendingComponentWillUpdateWarnings = [];\r\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\r\n    pendingLegacyContextWarning = new Map();\r\n  };\r\n}\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value) {\r\n  {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\r\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\r\n    return type;\r\n  }\r\n} // $FlowFixMe only called in DEV, so void return is not possible.\r\n\r\n\r\nfunction willCoercionThrow(value) {\r\n  {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return '' + value;\r\n}\r\nfunction checkKeyStringCoercion(value) {\r\n  {\r\n    if (willCoercionThrow(value)) {\r\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\r\n\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\nfunction checkPropStringCoercion(value, propName) {\r\n  {\r\n    if (willCoercionThrow(value)) {\r\n      error('The provided `%s` prop is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));\r\n\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nvar didWarnAboutMaps;\r\nvar didWarnAboutGenerators;\r\nvar didWarnAboutStringRefs;\r\nvar ownerHasKeyUseWarning;\r\nvar ownerHasFunctionTypeWarning;\r\n\r\nvar warnForMissingKey = function (child, returnFiber) {};\r\n\r\n{\r\n  didWarnAboutMaps = false;\r\n  didWarnAboutGenerators = false;\r\n  didWarnAboutStringRefs = {};\r\n  /**\r\n   * Warn if there's no key explicitly set on dynamic arrays of children or\r\n   * object keys are not valid. This allows us to keep track of children between\r\n   * updates.\r\n   */\r\n\r\n  ownerHasKeyUseWarning = {};\r\n  ownerHasFunctionTypeWarning = {};\r\n\r\n  warnForMissingKey = function (child, returnFiber) {\r\n    if (child === null || typeof child !== 'object') {\r\n      return;\r\n    }\r\n\r\n    if (!child._store || child._store.validated || child.key != null) {\r\n      return;\r\n    }\r\n\r\n    if (typeof child._store !== 'object') {\r\n      throw new Error('React Component in warnForMissingKey should have a _store. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n    }\r\n\r\n    child._store.validated = true;\r\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\r\n\r\n    if (ownerHasKeyUseWarning[componentName]) {\r\n      return;\r\n    }\r\n\r\n    ownerHasKeyUseWarning[componentName] = true;\r\n\r\n    error('Each child in a list should have a unique ' + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');\r\n  };\r\n}\r\n\r\nfunction isReactClass(type) {\r\n  return type.prototype && type.prototype.isReactComponent;\r\n}\r\n\r\nfunction coerceRef(returnFiber, current, element) {\r\n  var mixedRef = element.ref;\r\n\r\n  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\r\n    {\r\n      // TODO: Clean this up once we turn on the string ref warning for\r\n      // everyone, because the strict mode case will no longer be relevant\r\n      if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\r\n      // because these cannot be automatically converted to an arrow function\r\n      // using a codemod. Therefore, we don't have to warn about string refs again.\r\n      !(element._owner && element._self && element._owner.stateNode !== element._self) && // Will already throw with \"Function components cannot have string refs\"\r\n      !(element._owner && element._owner.tag !== ClassComponent) && // Will already warn with \"Function components cannot be given refs\"\r\n      !(typeof element.type === 'function' && !isReactClass(element.type)) && // Will already throw with \"Element ref was specified as a string (someStringRef) but no owner was set\"\r\n      element._owner) {\r\n        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\r\n\r\n        if (!didWarnAboutStringRefs[componentName]) {\r\n          {\r\n            error('Component \"%s\" contains the string ref \"%s\". Support for string refs ' + 'will be removed in a future major release. We recommend using ' + 'useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, mixedRef);\r\n          }\r\n\r\n          didWarnAboutStringRefs[componentName] = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (element._owner) {\r\n      var owner = element._owner;\r\n      var inst;\r\n\r\n      if (owner) {\r\n        var ownerFiber = owner;\r\n\r\n        if (ownerFiber.tag !== ClassComponent) {\r\n          throw new Error('Function components cannot have string refs. ' + 'We recommend using useRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref');\r\n        }\r\n\r\n        inst = ownerFiber.stateNode;\r\n      }\r\n\r\n      if (!inst) {\r\n        throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + 'bug in React. Please file an issue.');\r\n      } // Assigning this to a const so Flow knows it won't change in the closure\r\n\r\n\r\n      var resolvedInst = inst;\r\n\r\n      {\r\n        checkPropStringCoercion(mixedRef, 'ref');\r\n      }\r\n\r\n      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref\r\n\r\n      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {\r\n        return current.ref;\r\n      }\r\n\r\n      var ref = function (value) {\r\n        var refs = resolvedInst.refs;\r\n\r\n        if (value === null) {\r\n          delete refs[stringRef];\r\n        } else {\r\n          refs[stringRef] = value;\r\n        }\r\n      };\r\n\r\n      ref._stringRef = stringRef;\r\n      return ref;\r\n    } else {\r\n      if (typeof mixedRef !== 'string') {\r\n        throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');\r\n      }\r\n\r\n      if (!element._owner) {\r\n        throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + ' the following reasons:\\n' + '1. You may be adding a ref to a function component\\n' + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + '3. You have multiple copies of React loaded\\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');\r\n      }\r\n    }\r\n  }\r\n\r\n  return mixedRef;\r\n}\r\n\r\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\r\n  var childString = Object.prototype.toString.call(newChild);\r\n  throw new Error(\"Objects are not valid as a React child (found: \" + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\r\n}\r\n\r\nfunction warnOnFunctionType(returnFiber) {\r\n  {\r\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\r\n\r\n    if (ownerHasFunctionTypeWarning[componentName]) {\r\n      return;\r\n    }\r\n\r\n    ownerHasFunctionTypeWarning[componentName] = true;\r\n\r\n    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\r\n  }\r\n}\r\n\r\nfunction resolveLazy(lazyType) {\r\n  var payload = lazyType._payload;\r\n  var init = lazyType._init;\r\n  return init(payload);\r\n} // This wrapper function exists because I expect to clone the code in each path\r\n// to be able to optimize each path individually by branching early. This needs\r\n// a compiler or we can do it manually. Helpers that don't need this branching\r\n// live outside of this function.\r\n\r\n\r\nfunction ChildReconciler(shouldTrackSideEffects) {\r\n  function deleteChild(returnFiber, childToDelete) {\r\n    if (!shouldTrackSideEffects) {\r\n      // Noop.\r\n      return;\r\n    }\r\n\r\n    var deletions = returnFiber.deletions;\r\n\r\n    if (deletions === null) {\r\n      returnFiber.deletions = [childToDelete];\r\n      returnFiber.flags |= ChildDeletion;\r\n    } else {\r\n      deletions.push(childToDelete);\r\n    }\r\n  }\r\n\r\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\r\n    if (!shouldTrackSideEffects) {\r\n      // Noop.\r\n      return null;\r\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\r\n    // assuming that after the first child we've already added everything.\r\n\r\n\r\n    var childToDelete = currentFirstChild;\r\n\r\n    while (childToDelete !== null) {\r\n      deleteChild(returnFiber, childToDelete);\r\n      childToDelete = childToDelete.sibling;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\r\n    // Add the remaining children to a temporary map so that we can find them by\r\n    // keys quickly. Implicit (null) keys get added to this set with their index\r\n    // instead.\r\n    var existingChildren = new Map();\r\n    var existingChild = currentFirstChild;\r\n\r\n    while (existingChild !== null) {\r\n      if (existingChild.key !== null) {\r\n        existingChildren.set(existingChild.key, existingChild);\r\n      } else {\r\n        existingChildren.set(existingChild.index, existingChild);\r\n      }\r\n\r\n      existingChild = existingChild.sibling;\r\n    }\r\n\r\n    return existingChildren;\r\n  }\r\n\r\n  function useFiber(fiber, pendingProps) {\r\n    // We currently set sibling to null and index to 0 here because it is easy\r\n    // to forget to do before returning it. E.g. for the single child case.\r\n    var clone = createWorkInProgress(fiber, pendingProps);\r\n    clone.index = 0;\r\n    clone.sibling = null;\r\n    return clone;\r\n  }\r\n\r\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\r\n    newFiber.index = newIndex;\r\n\r\n    if (!shouldTrackSideEffects) {\r\n      // During hydration, the useId algorithm needs to know which fibers are\r\n      // part of a list of children (arrays, iterators).\r\n      newFiber.flags |= Forked;\r\n      return lastPlacedIndex;\r\n    }\r\n\r\n    var current = newFiber.alternate;\r\n\r\n    if (current !== null) {\r\n      var oldIndex = current.index;\r\n\r\n      if (oldIndex < lastPlacedIndex) {\r\n        // This is a move.\r\n        newFiber.flags |= Placement;\r\n        return lastPlacedIndex;\r\n      } else {\r\n        // This item can stay in place.\r\n        return oldIndex;\r\n      }\r\n    } else {\r\n      // This is an insertion.\r\n      newFiber.flags |= Placement;\r\n      return lastPlacedIndex;\r\n    }\r\n  }\r\n\r\n  function placeSingleChild(newFiber) {\r\n    // This is simpler for the single child case. We only need to do a\r\n    // placement for inserting new children.\r\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\r\n      newFiber.flags |= Placement;\r\n    }\r\n\r\n    return newFiber;\r\n  }\r\n\r\n  function updateTextNode(returnFiber, current, textContent, lanes) {\r\n    if (current === null || current.tag !== HostText) {\r\n      // Insert\r\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current, textContent);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function updateElement(returnFiber, current, element, lanes) {\r\n    var elementType = element.type;\r\n\r\n    if (elementType === REACT_FRAGMENT_TYPE) {\r\n      return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\r\n    }\r\n\r\n    if (current !== null) {\r\n      if (current.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\r\n       isCompatibleFamilyForHotReloading(current, element) ) || // Lazy types should reconcile their resolved type.\r\n      // We need to do this after the Hot Reloading check above,\r\n      // because hot reloading has different semantics than prod because\r\n      // it doesn't resuspend. So we can't let the call below suspend.\r\n      typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {\r\n        // Move based on index\r\n        var existing = useFiber(current, element.props);\r\n        existing.ref = coerceRef(returnFiber, current, element);\r\n        existing.return = returnFiber;\r\n\r\n        {\r\n          existing._debugSource = element._source;\r\n          existing._debugOwner = element._owner;\r\n        }\r\n\r\n        return existing;\r\n      }\r\n    } // Insert\r\n\r\n\r\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\r\n    created.ref = coerceRef(returnFiber, current, element);\r\n    created.return = returnFiber;\r\n    return created;\r\n  }\r\n\r\n  function updatePortal(returnFiber, current, portal, lanes) {\r\n    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\r\n      // Insert\r\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current, portal.children || []);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\r\n    if (current === null || current.tag !== Fragment) {\r\n      // Insert\r\n      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current, fragment);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function createChild(returnFiber, newChild, lanes) {\r\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\r\n      // Text nodes don't have keys. If the previous node is implicitly keyed\r\n      // we can continue to replace it without aborting even if it is not a text\r\n      // node.\r\n      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);\r\n      created.return = returnFiber;\r\n      return created;\r\n    }\r\n\r\n    if (typeof newChild === 'object' && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          {\r\n            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\r\n\r\n            _created.ref = coerceRef(returnFiber, null, newChild);\r\n            _created.return = returnFiber;\r\n            return _created;\r\n          }\r\n\r\n        case REACT_PORTAL_TYPE:\r\n          {\r\n            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\r\n\r\n            _created2.return = returnFiber;\r\n            return _created2;\r\n          }\r\n\r\n        case REACT_LAZY_TYPE:\r\n          {\r\n            var payload = newChild._payload;\r\n            var init = newChild._init;\r\n            return createChild(returnFiber, init(payload), lanes);\r\n          }\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\r\n\r\n        _created3.return = returnFiber;\r\n        return _created3;\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\r\n    // Update the fiber if the keys match, otherwise return null.\r\n    var key = oldFiber !== null ? oldFiber.key : null;\r\n\r\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\r\n      // Text nodes don't have keys. If the previous node is implicitly keyed\r\n      // we can continue to replace it without aborting even if it is not a text\r\n      // node.\r\n      if (key !== null) {\r\n        return null;\r\n      }\r\n\r\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\r\n    }\r\n\r\n    if (typeof newChild === 'object' && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          {\r\n            if (newChild.key === key) {\r\n              return updateElement(returnFiber, oldFiber, newChild, lanes);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n\r\n        case REACT_PORTAL_TYPE:\r\n          {\r\n            if (newChild.key === key) {\r\n              return updatePortal(returnFiber, oldFiber, newChild, lanes);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n\r\n        case REACT_LAZY_TYPE:\r\n          {\r\n            var payload = newChild._payload;\r\n            var init = newChild._init;\r\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\r\n          }\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        if (key !== null) {\r\n          return null;\r\n        }\r\n\r\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\r\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\r\n      // Text nodes don't have keys, so we neither have to check the old nor\r\n      // new node for the key. If both are text nodes, they match.\r\n      var matchedFiber = existingChildren.get(newIdx) || null;\r\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\r\n    }\r\n\r\n    if (typeof newChild === 'object' && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          {\r\n            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\r\n\r\n            return updateElement(returnFiber, _matchedFiber, newChild, lanes);\r\n          }\r\n\r\n        case REACT_PORTAL_TYPE:\r\n          {\r\n            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\r\n\r\n            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\r\n          }\r\n\r\n        case REACT_LAZY_TYPE:\r\n          var payload = newChild._payload;\r\n          var init = newChild._init;\r\n          return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\r\n\r\n        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  /**\r\n   * Warns if there is a duplicate or missing key\r\n   */\r\n\r\n\r\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\r\n    {\r\n      if (typeof child !== 'object' || child === null) {\r\n        return knownKeys;\r\n      }\r\n\r\n      switch (child.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n        case REACT_PORTAL_TYPE:\r\n          warnForMissingKey(child, returnFiber);\r\n          var key = child.key;\r\n\r\n          if (typeof key !== 'string') {\r\n            break;\r\n          }\r\n\r\n          if (knownKeys === null) {\r\n            knownKeys = new Set();\r\n            knownKeys.add(key);\r\n            break;\r\n          }\r\n\r\n          if (!knownKeys.has(key)) {\r\n            knownKeys.add(key);\r\n            break;\r\n          }\r\n\r\n          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);\r\n\r\n          break;\r\n\r\n        case REACT_LAZY_TYPE:\r\n          var payload = child._payload;\r\n          var init = child._init;\r\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return knownKeys;\r\n  }\r\n\r\n  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\r\n    // This algorithm can't optimize by searching from both ends since we\r\n    // don't have backpointers on fibers. I'm trying to see how far we can get\r\n    // with that model. If it ends up not being worth the tradeoffs, we can\r\n    // add it later.\r\n    // Even with a two ended optimization, we'd want to optimize for the case\r\n    // where there are few changes and brute force the comparison instead of\r\n    // going for the Map. It'd like to explore hitting that path first in\r\n    // forward-only mode and only go for the Map once we notice that we need\r\n    // lots of look ahead. This doesn't handle reversal as well as two ended\r\n    // search but that's unusual. Besides, for the two ended optimization to\r\n    // work on Iterables, we'd need to copy the whole set.\r\n    // In this first iteration, we'll just live with hitting the bad case\r\n    // (adding everything to a Map) in for every insert/move.\r\n    // If you change this code, also update reconcileChildrenIterator() which\r\n    // uses the same algorithm.\r\n    {\r\n      // First, validate keys.\r\n      var knownKeys = null;\r\n\r\n      for (var i = 0; i < newChildren.length; i++) {\r\n        var child = newChildren[i];\r\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\r\n      }\r\n    }\r\n\r\n    var resultingFirstChild = null;\r\n    var previousNewFiber = null;\r\n    var oldFiber = currentFirstChild;\r\n    var lastPlacedIndex = 0;\r\n    var newIdx = 0;\r\n    var nextOldFiber = null;\r\n\r\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\r\n      if (oldFiber.index > newIdx) {\r\n        nextOldFiber = oldFiber;\r\n        oldFiber = null;\r\n      } else {\r\n        nextOldFiber = oldFiber.sibling;\r\n      }\r\n\r\n      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\r\n\r\n      if (newFiber === null) {\r\n        // TODO: This breaks on empty slots like null children. That's\r\n        // unfortunate because it triggers the slow path all the time. We need\r\n        // a better way to communicate whether this was a miss or null,\r\n        // boolean, undefined, etc.\r\n        if (oldFiber === null) {\r\n          oldFiber = nextOldFiber;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      if (shouldTrackSideEffects) {\r\n        if (oldFiber && newFiber.alternate === null) {\r\n          // We matched the slot, but we didn't reuse the existing fiber, so we\r\n          // need to delete the existing child.\r\n          deleteChild(returnFiber, oldFiber);\r\n        }\r\n      }\r\n\r\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\r\n\r\n      if (previousNewFiber === null) {\r\n        // TODO: Move out of the loop. This only happens for the first run.\r\n        resultingFirstChild = newFiber;\r\n      } else {\r\n        // TODO: Defer siblings if we're not at the right index for this slot.\r\n        // I.e. if we had null values before, then we want to defer this\r\n        // for each null value. However, we also don't want to call updateSlot\r\n        // with the previous one.\r\n        previousNewFiber.sibling = newFiber;\r\n      }\r\n\r\n      previousNewFiber = newFiber;\r\n      oldFiber = nextOldFiber;\r\n    }\r\n\r\n    if (newIdx === newChildren.length) {\r\n      // We've reached the end of the new children. We can delete the rest.\r\n      deleteRemainingChildren(returnFiber, oldFiber);\r\n\r\n      if (getIsHydrating()) {\r\n        var numberOfForks = newIdx;\r\n        pushTreeFork(returnFiber, numberOfForks);\r\n      }\r\n\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    if (oldFiber === null) {\r\n      // If we don't have any more existing children we can choose a fast path\r\n      // since the rest will all be insertions.\r\n      for (; newIdx < newChildren.length; newIdx++) {\r\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\r\n\r\n        if (_newFiber === null) {\r\n          continue;\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          // TODO: Move out of the loop. This only happens for the first run.\r\n          resultingFirstChild = _newFiber;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber;\r\n        }\r\n\r\n        previousNewFiber = _newFiber;\r\n      }\r\n\r\n      if (getIsHydrating()) {\r\n        var _numberOfForks = newIdx;\r\n        pushTreeFork(returnFiber, _numberOfForks);\r\n      }\r\n\r\n      return resultingFirstChild;\r\n    } // Add all children to a key map for quick lookups.\r\n\r\n\r\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\r\n\r\n    for (; newIdx < newChildren.length; newIdx++) {\r\n      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\r\n\r\n      if (_newFiber2 !== null) {\r\n        if (shouldTrackSideEffects) {\r\n          if (_newFiber2.alternate !== null) {\r\n            // The new fiber is a work in progress, but if there exists a\r\n            // current, that means that we reused the fiber. We need to delete\r\n            // it from the child list so that we don't add it to the deletion\r\n            // list.\r\n            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\r\n          }\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          resultingFirstChild = _newFiber2;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber2;\r\n        }\r\n\r\n        previousNewFiber = _newFiber2;\r\n      }\r\n    }\r\n\r\n    if (shouldTrackSideEffects) {\r\n      // Any existing children that weren't consumed above were deleted. We need\r\n      // to add them to the deletion list.\r\n      existingChildren.forEach(function (child) {\r\n        return deleteChild(returnFiber, child);\r\n      });\r\n    }\r\n\r\n    if (getIsHydrating()) {\r\n      var _numberOfForks2 = newIdx;\r\n      pushTreeFork(returnFiber, _numberOfForks2);\r\n    }\r\n\r\n    return resultingFirstChild;\r\n  }\r\n\r\n  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\r\n    // This is the same implementation as reconcileChildrenArray(),\r\n    // but using the iterator instead.\r\n    var iteratorFn = getIteratorFn(newChildrenIterable);\r\n\r\n    if (typeof iteratorFn !== 'function') {\r\n      throw new Error('An object is not an iterable. This error is likely caused by a bug in ' + 'React. Please file an issue.');\r\n    }\r\n\r\n    {\r\n      // We don't support rendering Generators because it's a mutation.\r\n      // See https://github.com/facebook/react/issues/12995\r\n      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag\r\n      newChildrenIterable[Symbol.toStringTag] === 'Generator') {\r\n        if (!didWarnAboutGenerators) {\r\n          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');\r\n        }\r\n\r\n        didWarnAboutGenerators = true;\r\n      } // Warn about using Maps as children\r\n\r\n\r\n      if (newChildrenIterable.entries === iteratorFn) {\r\n        if (!didWarnAboutMaps) {\r\n          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\r\n        }\r\n\r\n        didWarnAboutMaps = true;\r\n      } // First, validate keys.\r\n      // We'll get a different iterator later for the main pass.\r\n\r\n\r\n      var _newChildren = iteratorFn.call(newChildrenIterable);\r\n\r\n      if (_newChildren) {\r\n        var knownKeys = null;\r\n\r\n        var _step = _newChildren.next();\r\n\r\n        for (; !_step.done; _step = _newChildren.next()) {\r\n          var child = _step.value;\r\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\r\n        }\r\n      }\r\n    }\r\n\r\n    var newChildren = iteratorFn.call(newChildrenIterable);\r\n\r\n    if (newChildren == null) {\r\n      throw new Error('An iterable object provided no iterator.');\r\n    }\r\n\r\n    var resultingFirstChild = null;\r\n    var previousNewFiber = null;\r\n    var oldFiber = currentFirstChild;\r\n    var lastPlacedIndex = 0;\r\n    var newIdx = 0;\r\n    var nextOldFiber = null;\r\n    var step = newChildren.next();\r\n\r\n    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\r\n      if (oldFiber.index > newIdx) {\r\n        nextOldFiber = oldFiber;\r\n        oldFiber = null;\r\n      } else {\r\n        nextOldFiber = oldFiber.sibling;\r\n      }\r\n\r\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\r\n\r\n      if (newFiber === null) {\r\n        // TODO: This breaks on empty slots like null children. That's\r\n        // unfortunate because it triggers the slow path all the time. We need\r\n        // a better way to communicate whether this was a miss or null,\r\n        // boolean, undefined, etc.\r\n        if (oldFiber === null) {\r\n          oldFiber = nextOldFiber;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      if (shouldTrackSideEffects) {\r\n        if (oldFiber && newFiber.alternate === null) {\r\n          // We matched the slot, but we didn't reuse the existing fiber, so we\r\n          // need to delete the existing child.\r\n          deleteChild(returnFiber, oldFiber);\r\n        }\r\n      }\r\n\r\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\r\n\r\n      if (previousNewFiber === null) {\r\n        // TODO: Move out of the loop. This only happens for the first run.\r\n        resultingFirstChild = newFiber;\r\n      } else {\r\n        // TODO: Defer siblings if we're not at the right index for this slot.\r\n        // I.e. if we had null values before, then we want to defer this\r\n        // for each null value. However, we also don't want to call updateSlot\r\n        // with the previous one.\r\n        previousNewFiber.sibling = newFiber;\r\n      }\r\n\r\n      previousNewFiber = newFiber;\r\n      oldFiber = nextOldFiber;\r\n    }\r\n\r\n    if (step.done) {\r\n      // We've reached the end of the new children. We can delete the rest.\r\n      deleteRemainingChildren(returnFiber, oldFiber);\r\n\r\n      if (getIsHydrating()) {\r\n        var numberOfForks = newIdx;\r\n        pushTreeFork(returnFiber, numberOfForks);\r\n      }\r\n\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    if (oldFiber === null) {\r\n      // If we don't have any more existing children we can choose a fast path\r\n      // since the rest will all be insertions.\r\n      for (; !step.done; newIdx++, step = newChildren.next()) {\r\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\r\n\r\n        if (_newFiber3 === null) {\r\n          continue;\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          // TODO: Move out of the loop. This only happens for the first run.\r\n          resultingFirstChild = _newFiber3;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber3;\r\n        }\r\n\r\n        previousNewFiber = _newFiber3;\r\n      }\r\n\r\n      if (getIsHydrating()) {\r\n        var _numberOfForks3 = newIdx;\r\n        pushTreeFork(returnFiber, _numberOfForks3);\r\n      }\r\n\r\n      return resultingFirstChild;\r\n    } // Add all children to a key map for quick lookups.\r\n\r\n\r\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\r\n\r\n    for (; !step.done; newIdx++, step = newChildren.next()) {\r\n      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\r\n\r\n      if (_newFiber4 !== null) {\r\n        if (shouldTrackSideEffects) {\r\n          if (_newFiber4.alternate !== null) {\r\n            // The new fiber is a work in progress, but if there exists a\r\n            // current, that means that we reused the fiber. We need to delete\r\n            // it from the child list so that we don't add it to the deletion\r\n            // list.\r\n            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\r\n          }\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          resultingFirstChild = _newFiber4;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber4;\r\n        }\r\n\r\n        previousNewFiber = _newFiber4;\r\n      }\r\n    }\r\n\r\n    if (shouldTrackSideEffects) {\r\n      // Any existing children that weren't consumed above were deleted. We need\r\n      // to add them to the deletion list.\r\n      existingChildren.forEach(function (child) {\r\n        return deleteChild(returnFiber, child);\r\n      });\r\n    }\r\n\r\n    if (getIsHydrating()) {\r\n      var _numberOfForks4 = newIdx;\r\n      pushTreeFork(returnFiber, _numberOfForks4);\r\n    }\r\n\r\n    return resultingFirstChild;\r\n  }\r\n\r\n  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\r\n    // There's no need to check for keys on text nodes since we don't have a\r\n    // way to define them.\r\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\r\n      // We already have an existing node so let's just update it and delete\r\n      // the rest.\r\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\r\n      var existing = useFiber(currentFirstChild, textContent);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    } // The existing first child is not a text node so we need to create one\r\n    // and delete the existing ones.\r\n\r\n\r\n    deleteRemainingChildren(returnFiber, currentFirstChild);\r\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\r\n    created.return = returnFiber;\r\n    return created;\r\n  }\r\n\r\n  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\r\n    var key = element.key;\r\n    var child = currentFirstChild;\r\n\r\n    while (child !== null) {\r\n      // TODO: If key === null and child.key === null, then this only applies to\r\n      // the first item in the list.\r\n      if (child.key === key) {\r\n        var elementType = element.type;\r\n\r\n        if (elementType === REACT_FRAGMENT_TYPE) {\r\n          if (child.tag === Fragment) {\r\n            deleteRemainingChildren(returnFiber, child.sibling);\r\n            var existing = useFiber(child, element.props.children);\r\n            existing.return = returnFiber;\r\n\r\n            {\r\n              existing._debugSource = element._source;\r\n              existing._debugOwner = element._owner;\r\n            }\r\n\r\n            return existing;\r\n          }\r\n        } else {\r\n          if (child.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\r\n           isCompatibleFamilyForHotReloading(child, element) ) || // Lazy types should reconcile their resolved type.\r\n          // We need to do this after the Hot Reloading check above,\r\n          // because hot reloading has different semantics than prod because\r\n          // it doesn't resuspend. So we can't let the call below suspend.\r\n          typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {\r\n            deleteRemainingChildren(returnFiber, child.sibling);\r\n\r\n            var _existing = useFiber(child, element.props);\r\n\r\n            _existing.ref = coerceRef(returnFiber, child, element);\r\n            _existing.return = returnFiber;\r\n\r\n            {\r\n              _existing._debugSource = element._source;\r\n              _existing._debugOwner = element._owner;\r\n            }\r\n\r\n            return _existing;\r\n          }\r\n        } // Didn't match.\r\n\r\n\r\n        deleteRemainingChildren(returnFiber, child);\r\n        break;\r\n      } else {\r\n        deleteChild(returnFiber, child);\r\n      }\r\n\r\n      child = child.sibling;\r\n    }\r\n\r\n    if (element.type === REACT_FRAGMENT_TYPE) {\r\n      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\r\n\r\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\r\n      _created4.return = returnFiber;\r\n      return _created4;\r\n    }\r\n  }\r\n\r\n  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\r\n    var key = portal.key;\r\n    var child = currentFirstChild;\r\n\r\n    while (child !== null) {\r\n      // TODO: If key === null and child.key === null, then this only applies to\r\n      // the first item in the list.\r\n      if (child.key === key) {\r\n        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\r\n          deleteRemainingChildren(returnFiber, child.sibling);\r\n          var existing = useFiber(child, portal.children || []);\r\n          existing.return = returnFiber;\r\n          return existing;\r\n        } else {\r\n          deleteRemainingChildren(returnFiber, child);\r\n          break;\r\n        }\r\n      } else {\r\n        deleteChild(returnFiber, child);\r\n      }\r\n\r\n      child = child.sibling;\r\n    }\r\n\r\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\r\n    created.return = returnFiber;\r\n    return created;\r\n  } // This API will tag the children with the side-effect of the reconciliation\r\n  // itself. They will be added to the side-effect list as we pass through the\r\n  // children and the parent.\r\n\r\n\r\n  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\r\n    // This function is not recursive.\r\n    // If the top level item is an array, we treat it as a set of children,\r\n    // not as a fragment. Nested arrays on the other hand will be treated as\r\n    // fragment nodes. Recursion happens at the normal flow.\r\n    // Handle top level unkeyed fragments as if they were arrays.\r\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\r\n    // We treat the ambiguous cases above the same.\r\n    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\r\n\r\n    if (isUnkeyedTopLevelFragment) {\r\n      newChild = newChild.props.children;\r\n    } // Handle object types\r\n\r\n\r\n    if (typeof newChild === 'object' && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\r\n\r\n        case REACT_PORTAL_TYPE:\r\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\r\n\r\n        case REACT_LAZY_TYPE:\r\n          var payload = newChild._payload;\r\n          var init = newChild._init; // TODO: This function is supposed to be non-recursive.\r\n\r\n          return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\r\n      }\r\n\r\n      if (isArray(newChild)) {\r\n        return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\r\n      }\r\n\r\n      if (getIteratorFn(newChild)) {\r\n        return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\r\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    } // Remaining cases are all treated as empty.\r\n\r\n\r\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\r\n  }\r\n\r\n  return reconcileChildFibers;\r\n}\r\n\r\nvar reconcileChildFibers = ChildReconciler(true);\r\nvar mountChildFibers = ChildReconciler(false);\r\nfunction cloneChildFibers(current, workInProgress) {\r\n  if (current !== null && workInProgress.child !== current.child) {\r\n    throw new Error('Resuming work not yet implemented.');\r\n  }\r\n\r\n  if (workInProgress.child === null) {\r\n    return;\r\n  }\r\n\r\n  var currentChild = workInProgress.child;\r\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\r\n  workInProgress.child = newChild;\r\n  newChild.return = workInProgress;\r\n\r\n  while (currentChild.sibling !== null) {\r\n    currentChild = currentChild.sibling;\r\n    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\r\n    newChild.return = workInProgress;\r\n  }\r\n\r\n  newChild.sibling = null;\r\n} // Reset a workInProgress child set to prepare it for a second pass.\r\n\r\nfunction resetChildFibers(workInProgress, lanes) {\r\n  var child = workInProgress.child;\r\n\r\n  while (child !== null) {\r\n    resetWorkInProgress(child, lanes);\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nvar valueCursor = createCursor(null);\r\nvar rendererSigil;\r\n\r\n{\r\n  // Use this to detect multiple renderers using the same context\r\n  rendererSigil = {};\r\n}\r\n\r\nvar currentlyRenderingFiber = null;\r\nvar lastContextDependency = null;\r\nvar lastFullyObservedContext = null;\r\nvar isDisallowedContextReadInDEV = false;\r\nfunction resetContextDependencies() {\r\n  // This is called right before React yields execution, to ensure `readContext`\r\n  // cannot be called outside the render phase.\r\n  currentlyRenderingFiber = null;\r\n  lastContextDependency = null;\r\n  lastFullyObservedContext = null;\r\n\r\n  {\r\n    isDisallowedContextReadInDEV = false;\r\n  }\r\n}\r\nfunction enterDisallowedContextReadInDEV() {\r\n  {\r\n    isDisallowedContextReadInDEV = true;\r\n  }\r\n}\r\nfunction exitDisallowedContextReadInDEV() {\r\n  {\r\n    isDisallowedContextReadInDEV = false;\r\n  }\r\n}\r\nfunction pushProvider(providerFiber, context, nextValue) {\r\n  if (isPrimaryRenderer) {\r\n    push(valueCursor, context._currentValue, providerFiber);\r\n    context._currentValue = nextValue;\r\n\r\n    {\r\n      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {\r\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\r\n      }\r\n\r\n      context._currentRenderer = rendererSigil;\r\n    }\r\n  } else {\r\n    push(valueCursor, context._currentValue2, providerFiber);\r\n    context._currentValue2 = nextValue;\r\n\r\n    {\r\n      if (context._currentRenderer2 !== undefined && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {\r\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\r\n      }\r\n\r\n      context._currentRenderer2 = rendererSigil;\r\n    }\r\n  }\r\n}\r\nfunction popProvider(context, providerFiber) {\r\n  var currentValue = valueCursor.current;\r\n  pop(valueCursor, providerFiber);\r\n\r\n  if (isPrimaryRenderer) {\r\n    {\r\n      context._currentValue = currentValue;\r\n    }\r\n  } else {\r\n    {\r\n      context._currentValue2 = currentValue;\r\n    }\r\n  }\r\n}\r\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\r\n  // Update the child lanes of all the ancestors, including the alternates.\r\n  var node = parent;\r\n\r\n  while (node !== null) {\r\n    var alternate = node.alternate;\r\n\r\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\r\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\r\n\r\n      if (alternate !== null) {\r\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\r\n      }\r\n    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\r\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\r\n    }\r\n\r\n    if (node === propagationRoot) {\r\n      break;\r\n    }\r\n\r\n    node = node.return;\r\n  }\r\n\r\n  {\r\n    if (node !== propagationRoot) {\r\n      error('Expected to find the propagation root when scheduling context work. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n}\r\nfunction propagateContextChange(workInProgress, context, renderLanes) {\r\n  {\r\n    propagateContextChange_eager(workInProgress, context, renderLanes);\r\n  }\r\n}\r\n\r\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\r\n\r\n  var fiber = workInProgress.child;\r\n\r\n  if (fiber !== null) {\r\n    // Set the return pointer of the child to the work-in-progress fiber.\r\n    fiber.return = workInProgress;\r\n  }\r\n\r\n  while (fiber !== null) {\r\n    var nextFiber = void 0; // Visit this fiber.\r\n\r\n    var list = fiber.dependencies;\r\n\r\n    if (list !== null) {\r\n      nextFiber = fiber.child;\r\n      var dependency = list.firstContext;\r\n\r\n      while (dependency !== null) {\r\n        // Check if the context matches.\r\n        if (dependency.context === context) {\r\n          // Match! Schedule an update on this fiber.\r\n          if (fiber.tag === ClassComponent) {\r\n            // Schedule a force update on the work-in-progress.\r\n            var lane = pickArbitraryLane(renderLanes);\r\n            var update = createUpdate(NoTimestamp, lane);\r\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\r\n            // update to the current fiber, too, which means it will persist even if\r\n            // this render is thrown away. Since it's a race condition, not sure it's\r\n            // worth fixing.\r\n            // Inlined `enqueueUpdate` to remove interleaved update check\r\n\r\n            var updateQueue = fiber.updateQueue;\r\n\r\n            if (updateQueue === null) ; else {\r\n              var sharedQueue = updateQueue.shared;\r\n              var pending = sharedQueue.pending;\r\n\r\n              if (pending === null) {\r\n                // This is the first update. Create a circular list.\r\n                update.next = update;\r\n              } else {\r\n                update.next = pending.next;\r\n                pending.next = update;\r\n              }\r\n\r\n              sharedQueue.pending = update;\r\n            }\r\n          }\r\n\r\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\r\n          var alternate = fiber.alternate;\r\n\r\n          if (alternate !== null) {\r\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\r\n          }\r\n\r\n          scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.\r\n\r\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\r\n          // dependency list.\r\n\r\n          break;\r\n        }\r\n\r\n        dependency = dependency.next;\r\n      }\r\n    } else if (fiber.tag === ContextProvider) {\r\n      // Don't scan deeper if this is a matching provider\r\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\r\n    } else if (fiber.tag === DehydratedFragment) {\r\n      // If a dehydrated suspense boundary is in this subtree, we don't know\r\n      // if it will have any context consumers in it. The best we can do is\r\n      // mark it as having updates.\r\n      var parentSuspense = fiber.return;\r\n\r\n      if (parentSuspense === null) {\r\n        throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');\r\n      }\r\n\r\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\r\n      var _alternate = parentSuspense.alternate;\r\n\r\n      if (_alternate !== null) {\r\n        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\r\n      } // This is intentionally passing this fiber as the parent\r\n      // because we want to schedule this fiber as having work\r\n      // on its children. We'll use the childLanes on\r\n      // this fiber to indicate that a context has changed.\r\n\r\n\r\n      scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);\r\n      nextFiber = fiber.sibling;\r\n    } else {\r\n      // Traverse down.\r\n      nextFiber = fiber.child;\r\n    }\r\n\r\n    if (nextFiber !== null) {\r\n      // Set the return pointer of the child to the work-in-progress fiber.\r\n      nextFiber.return = fiber;\r\n    } else {\r\n      // No child. Traverse to next sibling.\r\n      nextFiber = fiber;\r\n\r\n      while (nextFiber !== null) {\r\n        if (nextFiber === workInProgress) {\r\n          // We're back to the root of this subtree. Exit.\r\n          nextFiber = null;\r\n          break;\r\n        }\r\n\r\n        var sibling = nextFiber.sibling;\r\n\r\n        if (sibling !== null) {\r\n          // Set the return pointer of the sibling to the work-in-progress fiber.\r\n          sibling.return = nextFiber.return;\r\n          nextFiber = sibling;\r\n          break;\r\n        } // No more siblings. Traverse up.\r\n\r\n\r\n        nextFiber = nextFiber.return;\r\n      }\r\n    }\r\n\r\n    fiber = nextFiber;\r\n  }\r\n}\r\nfunction prepareToReadContext(workInProgress, renderLanes) {\r\n  currentlyRenderingFiber = workInProgress;\r\n  lastContextDependency = null;\r\n  lastFullyObservedContext = null;\r\n  var dependencies = workInProgress.dependencies;\r\n\r\n  if (dependencies !== null) {\r\n    {\r\n      var firstContext = dependencies.firstContext;\r\n\r\n      if (firstContext !== null) {\r\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\r\n          // Context list has a pending update. Mark that this fiber performed work.\r\n          markWorkInProgressReceivedUpdate();\r\n        } // Reset the work-in-progress list\r\n\r\n\r\n        dependencies.firstContext = null;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction readContext(context) {\r\n  {\r\n    // This warning would fire if you read context inside a Hook like useMemo.\r\n    // Unlike the class check below, it's not enforced in production for perf.\r\n    if (isDisallowedContextReadInDEV) {\r\n      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\r\n    }\r\n  }\r\n\r\n  var value = isPrimaryRenderer ? context._currentValue : context._currentValue2;\r\n\r\n  if (lastFullyObservedContext === context) ; else {\r\n    var contextItem = {\r\n      context: context,\r\n      memoizedValue: value,\r\n      next: null\r\n    };\r\n\r\n    if (lastContextDependency === null) {\r\n      if (currentlyRenderingFiber === null) {\r\n        throw new Error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\r\n      } // This is the first dependency for this component. Create a new list.\r\n\r\n\r\n      lastContextDependency = contextItem;\r\n      currentlyRenderingFiber.dependencies = {\r\n        lanes: NoLanes,\r\n        firstContext: contextItem\r\n      };\r\n    } else {\r\n      // Append a new context item.\r\n      lastContextDependency = lastContextDependency.next = contextItem;\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n// render. When this render exits, either because it finishes or because it is\r\n// interrupted, the interleaved updates will be transferred onto the main part\r\n// of the queue.\r\n\r\nvar concurrentQueues = null;\r\nfunction pushConcurrentUpdateQueue(queue) {\r\n  if (concurrentQueues === null) {\r\n    concurrentQueues = [queue];\r\n  } else {\r\n    concurrentQueues.push(queue);\r\n  }\r\n}\r\nfunction finishQueueingConcurrentUpdates() {\r\n  // Transfer the interleaved updates onto the main queue. Each queue has a\r\n  // `pending` field and an `interleaved` field. When they are not null, they\r\n  // point to the last node in a circular linked list. We need to append the\r\n  // interleaved list to the end of the pending list by joining them into a\r\n  // single, circular list.\r\n  if (concurrentQueues !== null) {\r\n    for (var i = 0; i < concurrentQueues.length; i++) {\r\n      var queue = concurrentQueues[i];\r\n      var lastInterleavedUpdate = queue.interleaved;\r\n\r\n      if (lastInterleavedUpdate !== null) {\r\n        queue.interleaved = null;\r\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\r\n        var lastPendingUpdate = queue.pending;\r\n\r\n        if (lastPendingUpdate !== null) {\r\n          var firstPendingUpdate = lastPendingUpdate.next;\r\n          lastPendingUpdate.next = firstInterleavedUpdate;\r\n          lastInterleavedUpdate.next = firstPendingUpdate;\r\n        }\r\n\r\n        queue.pending = lastInterleavedUpdate;\r\n      }\r\n    }\r\n\r\n    concurrentQueues = null;\r\n  }\r\n}\r\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\r\n  var interleaved = queue.interleaved;\r\n\r\n  if (interleaved === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\r\n    // be transferred to the pending queue.\r\n\r\n    pushConcurrentUpdateQueue(queue);\r\n  } else {\r\n    update.next = interleaved.next;\r\n    interleaved.next = update;\r\n  }\r\n\r\n  queue.interleaved = update;\r\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\r\n}\r\nfunction enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {\r\n  var interleaved = queue.interleaved;\r\n\r\n  if (interleaved === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\r\n    // be transferred to the pending queue.\r\n\r\n    pushConcurrentUpdateQueue(queue);\r\n  } else {\r\n    update.next = interleaved.next;\r\n    interleaved.next = update;\r\n  }\r\n\r\n  queue.interleaved = update;\r\n}\r\nfunction enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\r\n  var interleaved = queue.interleaved;\r\n\r\n  if (interleaved === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\r\n    // be transferred to the pending queue.\r\n\r\n    pushConcurrentUpdateQueue(queue);\r\n  } else {\r\n    update.next = interleaved.next;\r\n    interleaved.next = update;\r\n  }\r\n\r\n  queue.interleaved = update;\r\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\r\n}\r\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\r\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\r\n} // Calling this function outside this module should only be done for backwards\r\n// compatibility and should always be accompanied by a warning.\r\n\r\nvar unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\r\n\r\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\r\n  // Update the source fiber's lanes\r\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\r\n  var alternate = sourceFiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\r\n  }\r\n\r\n  {\r\n    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\r\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\r\n    }\r\n  } // Walk the parent path to the root and update the child lanes.\r\n\r\n\r\n  var node = sourceFiber;\r\n  var parent = sourceFiber.return;\r\n\r\n  while (parent !== null) {\r\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\r\n    alternate = parent.alternate;\r\n\r\n    if (alternate !== null) {\r\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\r\n    } else {\r\n      {\r\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\r\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\r\n        }\r\n      }\r\n    }\r\n\r\n    node = parent;\r\n    parent = parent.return;\r\n  }\r\n\r\n  if (node.tag === HostRoot) {\r\n    var root = node.stateNode;\r\n    return root;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nvar UpdateState = 0;\r\nvar ReplaceState = 1;\r\nvar ForceUpdate = 2;\r\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\r\n// It should only be read right after calling `processUpdateQueue`, via\r\n// `checkHasForceUpdateAfterProcessing`.\r\n\r\nvar hasForceUpdate = false;\r\nvar didWarnUpdateInsideUpdate;\r\nvar currentlyProcessingQueue;\r\n\r\n{\r\n  didWarnUpdateInsideUpdate = false;\r\n  currentlyProcessingQueue = null;\r\n}\r\n\r\nfunction initializeUpdateQueue(fiber) {\r\n  var queue = {\r\n    baseState: fiber.memoizedState,\r\n    firstBaseUpdate: null,\r\n    lastBaseUpdate: null,\r\n    shared: {\r\n      pending: null,\r\n      interleaved: null,\r\n      lanes: NoLanes\r\n    },\r\n    effects: null\r\n  };\r\n  fiber.updateQueue = queue;\r\n}\r\nfunction cloneUpdateQueue(current, workInProgress) {\r\n  // Clone the update queue from current. Unless it's already a clone.\r\n  var queue = workInProgress.updateQueue;\r\n  var currentQueue = current.updateQueue;\r\n\r\n  if (queue === currentQueue) {\r\n    var clone = {\r\n      baseState: currentQueue.baseState,\r\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\r\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\r\n      shared: currentQueue.shared,\r\n      effects: currentQueue.effects\r\n    };\r\n    workInProgress.updateQueue = clone;\r\n  }\r\n}\r\nfunction createUpdate(eventTime, lane) {\r\n  var update = {\r\n    eventTime: eventTime,\r\n    lane: lane,\r\n    tag: UpdateState,\r\n    payload: null,\r\n    callback: null,\r\n    next: null\r\n  };\r\n  return update;\r\n}\r\nfunction enqueueUpdate(fiber, update, lane) {\r\n  var updateQueue = fiber.updateQueue;\r\n\r\n  if (updateQueue === null) {\r\n    // Only occurs if the fiber has been unmounted.\r\n    return null;\r\n  }\r\n\r\n  var sharedQueue = updateQueue.shared;\r\n\r\n  {\r\n    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\r\n      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');\r\n\r\n      didWarnUpdateInsideUpdate = true;\r\n    }\r\n  }\r\n\r\n  if (isUnsafeClassRenderPhaseUpdate()) {\r\n    // This is an unsafe render phase update. Add directly to the update\r\n    // queue so we can process it immediately during the current render.\r\n    var pending = sharedQueue.pending;\r\n\r\n    if (pending === null) {\r\n      // This is the first update. Create a circular list.\r\n      update.next = update;\r\n    } else {\r\n      update.next = pending.next;\r\n      pending.next = update;\r\n    }\r\n\r\n    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering\r\n    // this fiber. This is for backwards compatibility in the case where you\r\n    // update a different component during render phase than the one that is\r\n    // currently renderings (a pattern that is accompanied by a warning).\r\n\r\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\r\n  } else {\r\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\r\n  }\r\n}\r\nfunction entangleTransitions(root, fiber, lane) {\r\n  var updateQueue = fiber.updateQueue;\r\n\r\n  if (updateQueue === null) {\r\n    // Only occurs if the fiber has been unmounted.\r\n    return;\r\n  }\r\n\r\n  var sharedQueue = updateQueue.shared;\r\n\r\n  if (isTransitionLane(lane)) {\r\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\r\n    // have finished. We can remove them from the shared queue, which represents\r\n    // a superset of the actually pending lanes. In some cases we may entangle\r\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\r\n    // entangle when we should.\r\n\r\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\r\n\r\n    var newQueueLanes = mergeLanes(queueLanes, lane);\r\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\r\n    // the lane finished since the last time we entangled it. So we need to\r\n    // entangle it again, just to be sure.\r\n\r\n    markRootEntangled(root, newQueueLanes);\r\n  }\r\n}\r\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\r\n  // Captured updates are updates that are thrown by a child during the render\r\n  // phase. They should be discarded if the render is aborted. Therefore,\r\n  // we should only put them on the work-in-progress queue, not the current one.\r\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\r\n\r\n  var current = workInProgress.alternate;\r\n\r\n  if (current !== null) {\r\n    var currentQueue = current.updateQueue;\r\n\r\n    if (queue === currentQueue) {\r\n      // The work-in-progress queue is the same as current. This happens when\r\n      // we bail out on a parent fiber that then captures an error thrown by\r\n      // a child. Since we want to append the update only to the work-in\r\n      // -progress queue, we need to clone the updates. We usually clone during\r\n      // processUpdateQueue, but that didn't happen in this case because we\r\n      // skipped over the parent when we bailed out.\r\n      var newFirst = null;\r\n      var newLast = null;\r\n      var firstBaseUpdate = queue.firstBaseUpdate;\r\n\r\n      if (firstBaseUpdate !== null) {\r\n        // Loop through the updates and clone them.\r\n        var update = firstBaseUpdate;\r\n\r\n        do {\r\n          var clone = {\r\n            eventTime: update.eventTime,\r\n            lane: update.lane,\r\n            tag: update.tag,\r\n            payload: update.payload,\r\n            callback: update.callback,\r\n            next: null\r\n          };\r\n\r\n          if (newLast === null) {\r\n            newFirst = newLast = clone;\r\n          } else {\r\n            newLast.next = clone;\r\n            newLast = clone;\r\n          }\r\n\r\n          update = update.next;\r\n        } while (update !== null); // Append the captured update the end of the cloned list.\r\n\r\n\r\n        if (newLast === null) {\r\n          newFirst = newLast = capturedUpdate;\r\n        } else {\r\n          newLast.next = capturedUpdate;\r\n          newLast = capturedUpdate;\r\n        }\r\n      } else {\r\n        // There are no base updates.\r\n        newFirst = newLast = capturedUpdate;\r\n      }\r\n\r\n      queue = {\r\n        baseState: currentQueue.baseState,\r\n        firstBaseUpdate: newFirst,\r\n        lastBaseUpdate: newLast,\r\n        shared: currentQueue.shared,\r\n        effects: currentQueue.effects\r\n      };\r\n      workInProgress.updateQueue = queue;\r\n      return;\r\n    }\r\n  } // Append the update to the end of the list.\r\n\r\n\r\n  var lastBaseUpdate = queue.lastBaseUpdate;\r\n\r\n  if (lastBaseUpdate === null) {\r\n    queue.firstBaseUpdate = capturedUpdate;\r\n  } else {\r\n    lastBaseUpdate.next = capturedUpdate;\r\n  }\r\n\r\n  queue.lastBaseUpdate = capturedUpdate;\r\n}\r\n\r\nfunction getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\r\n  switch (update.tag) {\r\n    case ReplaceState:\r\n      {\r\n        var payload = update.payload;\r\n\r\n        if (typeof payload === 'function') {\r\n          // Updater function\r\n          {\r\n            enterDisallowedContextReadInDEV();\r\n          }\r\n\r\n          var nextState = payload.call(instance, prevState, nextProps);\r\n\r\n          {\r\n            if ( workInProgress.mode & StrictLegacyMode) {\r\n              setIsStrictModeForDevtools(true);\r\n\r\n              try {\r\n                payload.call(instance, prevState, nextProps);\r\n              } finally {\r\n                setIsStrictModeForDevtools(false);\r\n              }\r\n            }\r\n\r\n            exitDisallowedContextReadInDEV();\r\n          }\r\n\r\n          return nextState;\r\n        } // State object\r\n\r\n\r\n        return payload;\r\n      }\r\n\r\n    case CaptureUpdate:\r\n      {\r\n        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\r\n      }\r\n    // Intentional fallthrough\r\n\r\n    case UpdateState:\r\n      {\r\n        var _payload = update.payload;\r\n        var partialState;\r\n\r\n        if (typeof _payload === 'function') {\r\n          // Updater function\r\n          {\r\n            enterDisallowedContextReadInDEV();\r\n          }\r\n\r\n          partialState = _payload.call(instance, prevState, nextProps);\r\n\r\n          {\r\n            if ( workInProgress.mode & StrictLegacyMode) {\r\n              setIsStrictModeForDevtools(true);\r\n\r\n              try {\r\n                _payload.call(instance, prevState, nextProps);\r\n              } finally {\r\n                setIsStrictModeForDevtools(false);\r\n              }\r\n            }\r\n\r\n            exitDisallowedContextReadInDEV();\r\n          }\r\n        } else {\r\n          // Partial state object\r\n          partialState = _payload;\r\n        }\r\n\r\n        if (partialState === null || partialState === undefined) {\r\n          // Null and undefined are treated as no-ops.\r\n          return prevState;\r\n        } // Merge the partial state and the previous state.\r\n\r\n\r\n        return assign({}, prevState, partialState);\r\n      }\r\n\r\n    case ForceUpdate:\r\n      {\r\n        hasForceUpdate = true;\r\n        return prevState;\r\n      }\r\n  }\r\n\r\n  return prevState;\r\n}\r\n\r\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\r\n  // This is always non-null on a ClassComponent or HostRoot\r\n  var queue = workInProgress.updateQueue;\r\n  hasForceUpdate = false;\r\n\r\n  {\r\n    currentlyProcessingQueue = queue.shared;\r\n  }\r\n\r\n  var firstBaseUpdate = queue.firstBaseUpdate;\r\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\r\n\r\n  var pendingQueue = queue.shared.pending;\r\n\r\n  if (pendingQueue !== null) {\r\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\r\n    // and last so that it's non-circular.\r\n\r\n    var lastPendingUpdate = pendingQueue;\r\n    var firstPendingUpdate = lastPendingUpdate.next;\r\n    lastPendingUpdate.next = null; // Append pending updates to base queue\r\n\r\n    if (lastBaseUpdate === null) {\r\n      firstBaseUpdate = firstPendingUpdate;\r\n    } else {\r\n      lastBaseUpdate.next = firstPendingUpdate;\r\n    }\r\n\r\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\r\n    // we need to transfer the updates to that queue, too. Because the base\r\n    // queue is a singly-linked list with no cycles, we can append to both\r\n    // lists and take advantage of structural sharing.\r\n    // TODO: Pass `current` as argument\r\n\r\n    var current = workInProgress.alternate;\r\n\r\n    if (current !== null) {\r\n      // This is always non-null on a ClassComponent or HostRoot\r\n      var currentQueue = current.updateQueue;\r\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\r\n\r\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\r\n        if (currentLastBaseUpdate === null) {\r\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\r\n        } else {\r\n          currentLastBaseUpdate.next = firstPendingUpdate;\r\n        }\r\n\r\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\r\n      }\r\n    }\r\n  } // These values may change as we process the queue.\r\n\r\n\r\n  if (firstBaseUpdate !== null) {\r\n    // Iterate through the list of updates to compute the result.\r\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\r\n    // from the original lanes.\r\n\r\n    var newLanes = NoLanes;\r\n    var newBaseState = null;\r\n    var newFirstBaseUpdate = null;\r\n    var newLastBaseUpdate = null;\r\n    var update = firstBaseUpdate;\r\n\r\n    do {\r\n      var updateLane = update.lane;\r\n      var updateEventTime = update.eventTime;\r\n\r\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\r\n        // Priority is insufficient. Skip this update. If this is the first\r\n        // skipped update, the previous update/state is the new base\r\n        // update/state.\r\n        var clone = {\r\n          eventTime: updateEventTime,\r\n          lane: updateLane,\r\n          tag: update.tag,\r\n          payload: update.payload,\r\n          callback: update.callback,\r\n          next: null\r\n        };\r\n\r\n        if (newLastBaseUpdate === null) {\r\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\r\n          newBaseState = newState;\r\n        } else {\r\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\r\n        } // Update the remaining priority in the queue.\r\n\r\n\r\n        newLanes = mergeLanes(newLanes, updateLane);\r\n      } else {\r\n        // This update does have sufficient priority.\r\n        if (newLastBaseUpdate !== null) {\r\n          var _clone = {\r\n            eventTime: updateEventTime,\r\n            // This update is going to be committed so we never want uncommit\r\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\r\n            // this will never be skipped by the check above.\r\n            lane: NoLane,\r\n            tag: update.tag,\r\n            payload: update.payload,\r\n            callback: update.callback,\r\n            next: null\r\n          };\r\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\r\n        } // Process this update.\r\n\r\n\r\n        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\r\n        var callback = update.callback;\r\n\r\n        if (callback !== null && // If the update was already committed, we should not queue its\r\n        // callback again.\r\n        update.lane !== NoLane) {\r\n          workInProgress.flags |= Callback;\r\n          var effects = queue.effects;\r\n\r\n          if (effects === null) {\r\n            queue.effects = [update];\r\n          } else {\r\n            effects.push(update);\r\n          }\r\n        }\r\n      }\r\n\r\n      update = update.next;\r\n\r\n      if (update === null) {\r\n        pendingQueue = queue.shared.pending;\r\n\r\n        if (pendingQueue === null) {\r\n          break;\r\n        } else {\r\n          // An update was scheduled from inside a reducer. Add the new\r\n          // pending updates to the end of the list and keep processing.\r\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\r\n          // unravel them when transferring them to the base queue.\r\n\r\n          var _firstPendingUpdate = _lastPendingUpdate.next;\r\n          _lastPendingUpdate.next = null;\r\n          update = _firstPendingUpdate;\r\n          queue.lastBaseUpdate = _lastPendingUpdate;\r\n          queue.shared.pending = null;\r\n        }\r\n      }\r\n    } while (true);\r\n\r\n    if (newLastBaseUpdate === null) {\r\n      newBaseState = newState;\r\n    }\r\n\r\n    queue.baseState = newBaseState;\r\n    queue.firstBaseUpdate = newFirstBaseUpdate;\r\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\r\n    // process them during this render, but we do need to track which lanes\r\n    // are remaining.\r\n\r\n    var lastInterleaved = queue.shared.interleaved;\r\n\r\n    if (lastInterleaved !== null) {\r\n      var interleaved = lastInterleaved;\r\n\r\n      do {\r\n        newLanes = mergeLanes(newLanes, interleaved.lane);\r\n        interleaved = interleaved.next;\r\n      } while (interleaved !== lastInterleaved);\r\n    } else if (firstBaseUpdate === null) {\r\n      // `queue.lanes` is used for entangling transitions. We can set it back to\r\n      // zero once the queue is empty.\r\n      queue.shared.lanes = NoLanes;\r\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\r\n    // This should be fine because the only two other things that contribute to\r\n    // expiration time are props and context. We're already in the middle of the\r\n    // begin phase by the time we start processing the queue, so we've already\r\n    // dealt with the props. Context in components that specify\r\n    // shouldComponentUpdate is tricky; but we'll have to account for\r\n    // that regardless.\r\n\r\n\r\n    markSkippedUpdateLanes(newLanes);\r\n    workInProgress.lanes = newLanes;\r\n    workInProgress.memoizedState = newState;\r\n  }\r\n\r\n  {\r\n    currentlyProcessingQueue = null;\r\n  }\r\n}\r\n\r\nfunction callCallback(callback, context) {\r\n  if (typeof callback !== 'function') {\r\n    throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + (\"received: \" + callback));\r\n  }\r\n\r\n  callback.call(context);\r\n}\r\n\r\nfunction resetHasForceUpdateBeforeProcessing() {\r\n  hasForceUpdate = false;\r\n}\r\nfunction checkHasForceUpdateAfterProcessing() {\r\n  return hasForceUpdate;\r\n}\r\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\r\n  // Commit the effects\r\n  var effects = finishedQueue.effects;\r\n  finishedQueue.effects = null;\r\n\r\n  if (effects !== null) {\r\n    for (var i = 0; i < effects.length; i++) {\r\n      var effect = effects[i];\r\n      var callback = effect.callback;\r\n\r\n      if (callback !== null) {\r\n        effect.callback = null;\r\n        callCallback(callback, instance);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar NO_CONTEXT = {};\r\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\r\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\r\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\r\n\r\nfunction requiredContext(c) {\r\n  if (c === NO_CONTEXT) {\r\n    throw new Error('Expected host context to exist. This error is likely caused by a bug ' + 'in React. Please file an issue.');\r\n  }\r\n\r\n  return c;\r\n}\r\n\r\nfunction getRootHostContainer() {\r\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\r\n  return rootInstance;\r\n}\r\n\r\nfunction pushHostContainer(fiber, nextRootInstance) {\r\n  // Push current root instance onto the stack;\r\n  // This allows us to reset root when portals are popped.\r\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\r\n  // This enables us to pop only Fibers that provide unique contexts.\r\n\r\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\r\n  // However, we can't just call getRootHostContext() and push it because\r\n  // we'd have a different number of entries on the stack depending on\r\n  // whether getRootHostContext() throws somewhere in renderer code or not.\r\n  // So we push an empty value first. This lets us safely unwind on errors.\r\n\r\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\r\n  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.\r\n\r\n  pop(contextStackCursor$1, fiber);\r\n  push(contextStackCursor$1, nextRootContext, fiber);\r\n}\r\n\r\nfunction popHostContainer(fiber) {\r\n  pop(contextStackCursor$1, fiber);\r\n  pop(contextFiberStackCursor, fiber);\r\n  pop(rootInstanceStackCursor, fiber);\r\n}\r\n\r\nfunction getHostContext() {\r\n  var context = requiredContext(contextStackCursor$1.current);\r\n  return context;\r\n}\r\n\r\nfunction pushHostContext(fiber) {\r\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\r\n  var context = requiredContext(contextStackCursor$1.current);\r\n  var nextContext = getChildHostContext(context, fiber.type, rootInstance); // Don't push this Fiber's context unless it's unique.\r\n\r\n  if (context === nextContext) {\r\n    return;\r\n  } // Track the context and the Fiber that provided it.\r\n  // This enables us to pop only Fibers that provide unique contexts.\r\n\r\n\r\n  push(contextFiberStackCursor, fiber, fiber);\r\n  push(contextStackCursor$1, nextContext, fiber);\r\n}\r\n\r\nfunction popHostContext(fiber) {\r\n  // Do not pop unless this Fiber provided the current context.\r\n  // pushHostContext() only pushes Fibers that provide unique contexts.\r\n  if (contextFiberStackCursor.current !== fiber) {\r\n    return;\r\n  }\r\n\r\n  pop(contextStackCursor$1, fiber);\r\n  pop(contextFiberStackCursor, fiber);\r\n}\r\n\r\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\r\n// inherited deeply down the subtree. The upper bits only affect\r\n// this immediate suspense boundary and gets reset each new\r\n// boundary or suspense list.\r\n\r\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\r\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\r\n// boundaries is not currently showing visible main content.\r\n// Either because it is already showing a fallback or is not mounted at all.\r\n// We can use this to determine if it is desirable to trigger a fallback at\r\n// the parent. If not, then we might need to trigger undesirable boundaries\r\n// and/or suspend the commit to avoid hiding the parent content.\r\n\r\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\r\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\r\n// items into their fallback state during one of the render passes.\r\n\r\nvar ForceSuspenseFallback = 2;\r\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\r\nfunction hasSuspenseContext(parentContext, flag) {\r\n  return (parentContext & flag) !== 0;\r\n}\r\nfunction setDefaultShallowSuspenseContext(parentContext) {\r\n  return parentContext & SubtreeSuspenseContextMask;\r\n}\r\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\r\n  return parentContext & SubtreeSuspenseContextMask | shallowContext;\r\n}\r\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\r\n  return parentContext | subtreeContext;\r\n}\r\nfunction pushSuspenseContext(fiber, newContext) {\r\n  push(suspenseStackCursor, newContext, fiber);\r\n}\r\nfunction popSuspenseContext(fiber) {\r\n  pop(suspenseStackCursor, fiber);\r\n}\r\n\r\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\r\n  // If it was the primary children that just suspended, capture and render the\r\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\r\n  var nextState = workInProgress.memoizedState;\r\n\r\n  if (nextState !== null) {\r\n    if (nextState.dehydrated !== null) {\r\n      // A dehydrated boundary always captures.\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\r\n\r\n  {\r\n    return true;\r\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\r\n}\r\nfunction findFirstSuspended(row) {\r\n  var node = row;\r\n\r\n  while (node !== null) {\r\n    if (node.tag === SuspenseComponent) {\r\n      var state = node.memoizedState;\r\n\r\n      if (state !== null) {\r\n        var dehydrated = state.dehydrated;\r\n\r\n        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {\r\n          return node;\r\n        }\r\n      }\r\n    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\r\n    // keep track of whether it suspended or not.\r\n    node.memoizedProps.revealOrder !== undefined) {\r\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\r\n\r\n      if (didSuspend) {\r\n        return node;\r\n      }\r\n    } else if (node.child !== null) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n\r\n    if (node === row) {\r\n      return null;\r\n    }\r\n\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === row) {\r\n        return null;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar NoFlags$1 =\r\n/*   */\r\n0; // Represents whether effect should fire.\r\n\r\nvar HasEffect =\r\n/* */\r\n1; // Represents the phase in which the effect (not the clean-up) fires.\r\n\r\nvar Insertion =\r\n/*  */\r\n2;\r\nvar Layout =\r\n/*    */\r\n4;\r\nvar Passive$1 =\r\n/*   */\r\n8;\r\n\r\n// and should be reset before starting a new render.\r\n// This tracks which mutable sources need to be reset after a render.\r\n\r\nvar workInProgressSources = [];\r\nfunction resetWorkInProgressVersions() {\r\n  for (var i = 0; i < workInProgressSources.length; i++) {\r\n    var mutableSource = workInProgressSources[i];\r\n\r\n    if (isPrimaryRenderer) {\r\n      mutableSource._workInProgressVersionPrimary = null;\r\n    } else {\r\n      mutableSource._workInProgressVersionSecondary = null;\r\n    }\r\n  }\r\n\r\n  workInProgressSources.length = 0;\r\n}\r\n// This ensures that the version used for server rendering matches the one\r\n// that is eventually read during hydration.\r\n// If they don't match there's a potential tear and a full deopt render is required.\r\n\r\nfunction registerMutableSourceForHydration(root, mutableSource) {\r\n  var getVersion = mutableSource._getVersion;\r\n  var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.\r\n  // Retaining it forever may interfere with GC.\r\n\r\n  if (root.mutableSourceEagerHydrationData == null) {\r\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\r\n  } else {\r\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\r\n  }\r\n}\r\n\r\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\r\n    ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\r\nvar didWarnAboutMismatchedHooksForComponent;\r\nvar didWarnUncachedGetSnapshot;\r\n\r\n{\r\n  didWarnAboutMismatchedHooksForComponent = new Set();\r\n}\r\n\r\n// These are set right before calling the component.\r\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\r\n// the work-in-progress hook.\r\n\r\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\r\n// current hook list is the list that belongs to the current fiber. The\r\n// work-in-progress hook list is a new list that will be added to the\r\n// work-in-progress fiber.\r\n\r\nvar currentHook = null;\r\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\r\n// does not get reset if we do another render pass; only when we're completely\r\n// finished evaluating this component. This is an optimization so we know\r\n// whether we need to clear render phase updates after a throw.\r\n\r\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\r\n// gets reset after each attempt.\r\n// TODO: Maybe there's some way to consolidate this with\r\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\r\n\r\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\r\n\r\nvar localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during\r\n// hydration). This counter is global, so client ids are not stable across\r\n// render attempts.\r\n\r\nvar globalClientIdCounter = 0;\r\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\r\n\r\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\r\n// The list stores the order of hooks used during the initial render (mount).\r\n// Subsequent renders (updates) reference this list.\r\n\r\nvar hookTypesDev = null;\r\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\r\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\r\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\r\n\r\nvar ignorePreviousDependencies = false;\r\n\r\nfunction mountHookTypesDev() {\r\n  {\r\n    var hookName = currentHookNameInDev;\r\n\r\n    if (hookTypesDev === null) {\r\n      hookTypesDev = [hookName];\r\n    } else {\r\n      hookTypesDev.push(hookName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateHookTypesDev() {\r\n  {\r\n    var hookName = currentHookNameInDev;\r\n\r\n    if (hookTypesDev !== null) {\r\n      hookTypesUpdateIndexDev++;\r\n\r\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\r\n        warnOnHookMismatchInDev(hookName);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkDepsAreArrayDev(deps) {\r\n  {\r\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\r\n      // Verify deps, but only on mount to avoid extra checks.\r\n      // It's unlikely their type would change as usually you define them inline.\r\n      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);\r\n    }\r\n  }\r\n}\r\n\r\nfunction warnOnHookMismatchInDev(currentHookName) {\r\n  {\r\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\r\n\r\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\r\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\r\n\r\n      if (hookTypesDev !== null) {\r\n        var table = '';\r\n        var secondColumnStart = 30;\r\n\r\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\r\n          var oldHookName = hookTypesDev[i];\r\n          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\r\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\r\n          // lol @ IE not supporting String#repeat\r\n\r\n          while (row.length < secondColumnStart) {\r\n            row += ' ';\r\n          }\r\n\r\n          row += newHookName + '\\n';\r\n          table += row;\r\n        }\r\n\r\n        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' + '   Previous render            Next render\\n' + '   ------------------------------------------------------\\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n', componentName, table);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction throwInvalidHookError() {\r\n  throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\r\n}\r\n\r\nfunction areHookInputsEqual(nextDeps, prevDeps) {\r\n  {\r\n    if (ignorePreviousDependencies) {\r\n      // Only true when this component is being hot reloaded.\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (prevDeps === null) {\r\n    {\r\n      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  {\r\n    // Don't bother comparing lengths in prod because these arrays should be\r\n    // passed inline.\r\n    if (nextDeps.length !== prevDeps.length) {\r\n      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + prevDeps.join(', ') + \"]\", \"[\" + nextDeps.join(', ') + \"]\");\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\r\n    if (objectIs(nextDeps[i], prevDeps[i])) {\r\n      continue;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\r\n  renderLanes = nextRenderLanes;\r\n  currentlyRenderingFiber$1 = workInProgress;\r\n\r\n  {\r\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\r\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\r\n\r\n    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\r\n  }\r\n\r\n  workInProgress.memoizedState = null;\r\n  workInProgress.updateQueue = null;\r\n  workInProgress.lanes = NoLanes; // The following should have already been reset\r\n  // currentHook = null;\r\n  // workInProgressHook = null;\r\n  // didScheduleRenderPhaseUpdate = false;\r\n  // localIdCounter = 0;\r\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\r\n  // Currently we will identify the update render as a mount because memoizedState === null.\r\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\r\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\r\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\r\n  // so memoizedState would be null during updates and mounts.\r\n\r\n  {\r\n    if (current !== null && current.memoizedState !== null) {\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\r\n    } else if (hookTypesDev !== null) {\r\n      // This dispatcher handles an edge case where a component is updating,\r\n      // but no stateful hooks have been used.\r\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\r\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\r\n      // This dispatcher does that.\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\r\n    } else {\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\r\n    }\r\n  }\r\n\r\n  var children = Component(props, secondArg); // Check if there was a render phase update\r\n\r\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\r\n    // Keep rendering in a loop for as long as render phase updates continue to\r\n    // be scheduled. Use a counter to prevent infinite loops.\r\n    var numberOfReRenders = 0;\r\n\r\n    do {\r\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\r\n      localIdCounter = 0;\r\n\r\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\r\n        throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');\r\n      }\r\n\r\n      numberOfReRenders += 1;\r\n\r\n      {\r\n        // Even when hot reloading, allow dependencies to stabilize\r\n        // after first render to prevent infinite render phase updates.\r\n        ignorePreviousDependencies = false;\r\n      } // Start over from the beginning of the list\r\n\r\n\r\n      currentHook = null;\r\n      workInProgressHook = null;\r\n      workInProgress.updateQueue = null;\r\n\r\n      {\r\n        // Also validate hook order for cascading updates.\r\n        hookTypesUpdateIndexDev = -1;\r\n      }\r\n\r\n      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;\r\n      children = Component(props, secondArg);\r\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\r\n  } // We can assume the previous dispatcher is always this one, since we set it\r\n  // at the beginning of the render phase and there's no re-entrance.\r\n\r\n\r\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\r\n\r\n  {\r\n    workInProgress._debugHookTypes = hookTypesDev;\r\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\r\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\r\n\r\n\r\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\r\n  renderLanes = NoLanes;\r\n  currentlyRenderingFiber$1 = null;\r\n  currentHook = null;\r\n  workInProgressHook = null;\r\n\r\n  {\r\n    currentHookNameInDev = null;\r\n    hookTypesDev = null;\r\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\r\n    // render. If this fires, it suggests that we incorrectly reset the static\r\n    // flags in some other part of the codebase. This has happened before, for\r\n    // example, in the SuspenseList implementation.\r\n\r\n    if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\r\n    // and creates false positives. To make this work in legacy mode, we'd\r\n    // need to mark fibers that commit in an incomplete state, somehow. For\r\n    // now I'll disable the warning that most of the bugs that would trigger\r\n    // it are either exclusive to concurrent mode or exist in both.\r\n    (current.mode & ConcurrentMode) !== NoMode) {\r\n      error('Internal React error: Expected static flag was missing. Please ' + 'notify the React team.');\r\n    }\r\n  }\r\n\r\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\r\n  // localIdCounter = 0;\r\n\r\n  if (didRenderTooFewHooks) {\r\n    throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental ' + 'early return statement.');\r\n  }\r\n\r\n  return children;\r\n}\r\nfunction checkDidRenderIdHook() {\r\n  // This should be called immediately after every renderWithHooks call.\r\n  // Conceptually, it's part of the return value of renderWithHooks; it's only a\r\n  // separate function to avoid using an array tuple.\r\n  var didRenderIdHook = localIdCounter !== 0;\r\n  localIdCounter = 0;\r\n  return didRenderIdHook;\r\n}\r\nfunction bailoutHooks(current, workInProgress, lanes) {\r\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\r\n  // complete phase (bubbleProperties).\r\n\r\n  if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\r\n    workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);\r\n  } else {\r\n    workInProgress.flags &= ~(Passive | Update);\r\n  }\r\n\r\n  current.lanes = removeLanes(current.lanes, lanes);\r\n}\r\nfunction resetHooksAfterThrow() {\r\n  // We can assume the previous dispatcher is always this one, since we set it\r\n  // at the beginning of the render phase and there's no re-entrance.\r\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\r\n\r\n  if (didScheduleRenderPhaseUpdate) {\r\n    // There were render phase updates. These are only valid for this render\r\n    // phase, which we are now aborting. Remove the updates from the queues so\r\n    // they do not persist to the next render. Do not remove updates from hooks\r\n    // that weren't processed.\r\n    //\r\n    // Only reset the updates from the queue if it has a clone. If it does\r\n    // not have a clone, that means it wasn't processed, and the updates were\r\n    // scheduled before we entered the render phase.\r\n    var hook = currentlyRenderingFiber$1.memoizedState;\r\n\r\n    while (hook !== null) {\r\n      var queue = hook.queue;\r\n\r\n      if (queue !== null) {\r\n        queue.pending = null;\r\n      }\r\n\r\n      hook = hook.next;\r\n    }\r\n\r\n    didScheduleRenderPhaseUpdate = false;\r\n  }\r\n\r\n  renderLanes = NoLanes;\r\n  currentlyRenderingFiber$1 = null;\r\n  currentHook = null;\r\n  workInProgressHook = null;\r\n\r\n  {\r\n    hookTypesDev = null;\r\n    hookTypesUpdateIndexDev = -1;\r\n    currentHookNameInDev = null;\r\n    isUpdatingOpaqueValueInRenderPhase = false;\r\n  }\r\n\r\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\r\n  localIdCounter = 0;\r\n}\r\n\r\nfunction mountWorkInProgressHook() {\r\n  var hook = {\r\n    memoizedState: null,\r\n    baseState: null,\r\n    baseQueue: null,\r\n    queue: null,\r\n    next: null\r\n  };\r\n\r\n  if (workInProgressHook === null) {\r\n    // This is the first hook in the list\r\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\r\n  } else {\r\n    // Append to the end of the list\r\n    workInProgressHook = workInProgressHook.next = hook;\r\n  }\r\n\r\n  return workInProgressHook;\r\n}\r\n\r\nfunction updateWorkInProgressHook() {\r\n  // This function is used both for updates and for re-renders triggered by a\r\n  // render phase update. It assumes there is either a current hook we can\r\n  // clone, or a work-in-progress hook from a previous render pass that we can\r\n  // use as a base. When we reach the end of the base list, we must switch to\r\n  // the dispatcher used for mounts.\r\n  var nextCurrentHook;\r\n\r\n  if (currentHook === null) {\r\n    var current = currentlyRenderingFiber$1.alternate;\r\n\r\n    if (current !== null) {\r\n      nextCurrentHook = current.memoizedState;\r\n    } else {\r\n      nextCurrentHook = null;\r\n    }\r\n  } else {\r\n    nextCurrentHook = currentHook.next;\r\n  }\r\n\r\n  var nextWorkInProgressHook;\r\n\r\n  if (workInProgressHook === null) {\r\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\r\n  } else {\r\n    nextWorkInProgressHook = workInProgressHook.next;\r\n  }\r\n\r\n  if (nextWorkInProgressHook !== null) {\r\n    // There's already a work-in-progress. Reuse it.\r\n    workInProgressHook = nextWorkInProgressHook;\r\n    nextWorkInProgressHook = workInProgressHook.next;\r\n    currentHook = nextCurrentHook;\r\n  } else {\r\n    // Clone from the current hook.\r\n    if (nextCurrentHook === null) {\r\n      throw new Error('Rendered more hooks than during the previous render.');\r\n    }\r\n\r\n    currentHook = nextCurrentHook;\r\n    var newHook = {\r\n      memoizedState: currentHook.memoizedState,\r\n      baseState: currentHook.baseState,\r\n      baseQueue: currentHook.baseQueue,\r\n      queue: currentHook.queue,\r\n      next: null\r\n    };\r\n\r\n    if (workInProgressHook === null) {\r\n      // This is the first hook in the list.\r\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\r\n    } else {\r\n      // Append to the end of the list.\r\n      workInProgressHook = workInProgressHook.next = newHook;\r\n    }\r\n  }\r\n\r\n  return workInProgressHook;\r\n}\r\n\r\nfunction createFunctionComponentUpdateQueue() {\r\n  return {\r\n    lastEffect: null,\r\n    stores: null\r\n  };\r\n}\r\n\r\nfunction basicStateReducer(state, action) {\r\n  // $FlowFixMe: Flow doesn't like mixed types\r\n  return typeof action === 'function' ? action(state) : action;\r\n}\r\n\r\nfunction mountReducer(reducer, initialArg, init) {\r\n  var hook = mountWorkInProgressHook();\r\n  var initialState;\r\n\r\n  if (init !== undefined) {\r\n    initialState = init(initialArg);\r\n  } else {\r\n    initialState = initialArg;\r\n  }\r\n\r\n  hook.memoizedState = hook.baseState = initialState;\r\n  var queue = {\r\n    pending: null,\r\n    interleaved: null,\r\n    lanes: NoLanes,\r\n    dispatch: null,\r\n    lastRenderedReducer: reducer,\r\n    lastRenderedState: initialState\r\n  };\r\n  hook.queue = queue;\r\n  var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction updateReducer(reducer, initialArg, init) {\r\n  var hook = updateWorkInProgressHook();\r\n  var queue = hook.queue;\r\n\r\n  if (queue === null) {\r\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\r\n  }\r\n\r\n  queue.lastRenderedReducer = reducer;\r\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\r\n\r\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\r\n\r\n  var pendingQueue = queue.pending;\r\n\r\n  if (pendingQueue !== null) {\r\n    // We have new updates that haven't been processed yet.\r\n    // We'll add them to the base queue.\r\n    if (baseQueue !== null) {\r\n      // Merge the pending queue and the base queue.\r\n      var baseFirst = baseQueue.next;\r\n      var pendingFirst = pendingQueue.next;\r\n      baseQueue.next = pendingFirst;\r\n      pendingQueue.next = baseFirst;\r\n    }\r\n\r\n    {\r\n      if (current.baseQueue !== baseQueue) {\r\n        // Internal invariant that should never happen, but feasibly could in\r\n        // the future if we implement resuming, or some form of that.\r\n        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');\r\n      }\r\n    }\r\n\r\n    current.baseQueue = baseQueue = pendingQueue;\r\n    queue.pending = null;\r\n  }\r\n\r\n  if (baseQueue !== null) {\r\n    // We have a queue to process.\r\n    var first = baseQueue.next;\r\n    var newState = current.baseState;\r\n    var newBaseState = null;\r\n    var newBaseQueueFirst = null;\r\n    var newBaseQueueLast = null;\r\n    var update = first;\r\n\r\n    do {\r\n      var updateLane = update.lane;\r\n\r\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\r\n        // Priority is insufficient. Skip this update. If this is the first\r\n        // skipped update, the previous update/state is the new base\r\n        // update/state.\r\n        var clone = {\r\n          lane: updateLane,\r\n          action: update.action,\r\n          hasEagerState: update.hasEagerState,\r\n          eagerState: update.eagerState,\r\n          next: null\r\n        };\r\n\r\n        if (newBaseQueueLast === null) {\r\n          newBaseQueueFirst = newBaseQueueLast = clone;\r\n          newBaseState = newState;\r\n        } else {\r\n          newBaseQueueLast = newBaseQueueLast.next = clone;\r\n        } // Update the remaining priority in the queue.\r\n        // TODO: Don't need to accumulate this. Instead, we can remove\r\n        // renderLanes from the original lanes.\r\n\r\n\r\n        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\r\n        markSkippedUpdateLanes(updateLane);\r\n      } else {\r\n        // This update does have sufficient priority.\r\n        if (newBaseQueueLast !== null) {\r\n          var _clone = {\r\n            // This update is going to be committed so we never want uncommit\r\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\r\n            // this will never be skipped by the check above.\r\n            lane: NoLane,\r\n            action: update.action,\r\n            hasEagerState: update.hasEagerState,\r\n            eagerState: update.eagerState,\r\n            next: null\r\n          };\r\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\r\n        } // Process this update.\r\n\r\n\r\n        if (update.hasEagerState) {\r\n          // If this update is a state update (not a reducer) and was processed eagerly,\r\n          // we can use the eagerly computed state\r\n          newState = update.eagerState;\r\n        } else {\r\n          var action = update.action;\r\n          newState = reducer(newState, action);\r\n        }\r\n      }\r\n\r\n      update = update.next;\r\n    } while (update !== null && update !== first);\r\n\r\n    if (newBaseQueueLast === null) {\r\n      newBaseState = newState;\r\n    } else {\r\n      newBaseQueueLast.next = newBaseQueueFirst;\r\n    } // Mark that the fiber performed work, but only if the new state is\r\n    // different from the current state.\r\n\r\n\r\n    if (!objectIs(newState, hook.memoizedState)) {\r\n      markWorkInProgressReceivedUpdate();\r\n    }\r\n\r\n    hook.memoizedState = newState;\r\n    hook.baseState = newBaseState;\r\n    hook.baseQueue = newBaseQueueLast;\r\n    queue.lastRenderedState = newState;\r\n  } // Interleaved updates are stored on a separate queue. We aren't going to\r\n  // process them during this render, but we do need to track which lanes\r\n  // are remaining.\r\n\r\n\r\n  var lastInterleaved = queue.interleaved;\r\n\r\n  if (lastInterleaved !== null) {\r\n    var interleaved = lastInterleaved;\r\n\r\n    do {\r\n      var interleavedLane = interleaved.lane;\r\n      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\r\n      markSkippedUpdateLanes(interleavedLane);\r\n      interleaved = interleaved.next;\r\n    } while (interleaved !== lastInterleaved);\r\n  } else if (baseQueue === null) {\r\n    // `queue.lanes` is used for entangling transitions. We can set it back to\r\n    // zero once the queue is empty.\r\n    queue.lanes = NoLanes;\r\n  }\r\n\r\n  var dispatch = queue.dispatch;\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction rerenderReducer(reducer, initialArg, init) {\r\n  var hook = updateWorkInProgressHook();\r\n  var queue = hook.queue;\r\n\r\n  if (queue === null) {\r\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\r\n  }\r\n\r\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\r\n  // work-in-progress hook.\r\n\r\n  var dispatch = queue.dispatch;\r\n  var lastRenderPhaseUpdate = queue.pending;\r\n  var newState = hook.memoizedState;\r\n\r\n  if (lastRenderPhaseUpdate !== null) {\r\n    // The queue doesn't persist past this render pass.\r\n    queue.pending = null;\r\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\r\n    var update = firstRenderPhaseUpdate;\r\n\r\n    do {\r\n      // Process this render phase update. We don't have to check the\r\n      // priority because it will always be the same as the current\r\n      // render's.\r\n      var action = update.action;\r\n      newState = reducer(newState, action);\r\n      update = update.next;\r\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\r\n    // different from the current state.\r\n\r\n\r\n    if (!objectIs(newState, hook.memoizedState)) {\r\n      markWorkInProgressReceivedUpdate();\r\n    }\r\n\r\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\r\n    // the base state unless the queue is empty.\r\n    // TODO: Not sure if this is the desired semantics, but it's what we\r\n    // do for gDSFP. I can't remember why.\r\n\r\n    if (hook.baseQueue === null) {\r\n      hook.baseState = newState;\r\n    }\r\n\r\n    queue.lastRenderedState = newState;\r\n  }\r\n\r\n  return [newState, dispatch];\r\n}\r\n\r\nfunction mountMutableSource(source, getSnapshot, subscribe) {\r\n  {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nfunction updateMutableSource(source, getSnapshot, subscribe) {\r\n  {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\r\n  var fiber = currentlyRenderingFiber$1;\r\n  var hook = mountWorkInProgressHook();\r\n  var nextSnapshot;\r\n  var isHydrating = getIsHydrating();\r\n\r\n  if (isHydrating) {\r\n    if (getServerSnapshot === undefined) {\r\n      throw new Error('Missing getServerSnapshot, which is required for ' + 'server-rendered content. Will revert to client rendering.');\r\n    }\r\n\r\n    nextSnapshot = getServerSnapshot();\r\n\r\n    {\r\n      if (!didWarnUncachedGetSnapshot) {\r\n        if (nextSnapshot !== getServerSnapshot()) {\r\n          error('The result of getServerSnapshot should be cached to avoid an infinite loop');\r\n\r\n          didWarnUncachedGetSnapshot = true;\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    nextSnapshot = getSnapshot();\r\n\r\n    {\r\n      if (!didWarnUncachedGetSnapshot) {\r\n        var cachedSnapshot = getSnapshot();\r\n\r\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\r\n          error('The result of getSnapshot should be cached to avoid an infinite loop');\r\n\r\n          didWarnUncachedGetSnapshot = true;\r\n        }\r\n      }\r\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\r\n    // Right before committing, we will walk the tree and check if any of the\r\n    // stores were mutated.\r\n    //\r\n    // We won't do this if we're hydrating server-rendered content, because if\r\n    // the content is stale, it's already visible anyway. Instead we'll patch\r\n    // it up in a passive effect.\r\n\r\n\r\n    var root = getWorkInProgressRoot();\r\n\r\n    if (root === null) {\r\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\r\n    }\r\n\r\n    if (!includesBlockingLane(root, renderLanes)) {\r\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\r\n    }\r\n  } // Read the current snapshot from the store on every render. This breaks the\r\n  // normal rules of React, and only works because store updates are\r\n  // always synchronous.\r\n\r\n\r\n  hook.memoizedState = nextSnapshot;\r\n  var inst = {\r\n    value: nextSnapshot,\r\n    getSnapshot: getSnapshot\r\n  };\r\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\r\n\r\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\r\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\r\n  // clean-up function, and we track the deps correctly, we can call pushEffect\r\n  // directly, without storing any additional state. For the same reason, we\r\n  // don't need to set a static flag, either.\r\n  // TODO: We can move this to the passive phase once we add a pre-commit\r\n  // consistency check. See the next comment.\r\n\r\n  fiber.flags |= Passive;\r\n  pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\r\n  return nextSnapshot;\r\n}\r\n\r\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\r\n  var fiber = currentlyRenderingFiber$1;\r\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\r\n  // normal rules of React, and only works because store updates are\r\n  // always synchronous.\r\n\r\n  var nextSnapshot = getSnapshot();\r\n\r\n  {\r\n    if (!didWarnUncachedGetSnapshot) {\r\n      var cachedSnapshot = getSnapshot();\r\n\r\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\r\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\r\n\r\n        didWarnUncachedGetSnapshot = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  var prevSnapshot = hook.memoizedState;\r\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\r\n\r\n  if (snapshotChanged) {\r\n    hook.memoizedState = nextSnapshot;\r\n    markWorkInProgressReceivedUpdate();\r\n  }\r\n\r\n  var inst = hook.queue;\r\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Whenever getSnapshot or subscribe changes, we need to check in the\r\n  // commit phase if there was an interleaved mutation. In concurrent mode\r\n  // this can happen all the time, but even in synchronous mode, an earlier\r\n  // effect may have mutated the store.\r\n\r\n  if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\r\n  // checking whether we scheduled a subscription effect above.\r\n  workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\r\n    fiber.flags |= Passive;\r\n    pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.\r\n    // Right before committing, we will walk the tree and check if any of the\r\n    // stores were mutated.\r\n\r\n    var root = getWorkInProgressRoot();\r\n\r\n    if (root === null) {\r\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\r\n    }\r\n\r\n    if (!includesBlockingLane(root, renderLanes)) {\r\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\r\n    }\r\n  }\r\n\r\n  return nextSnapshot;\r\n}\r\n\r\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\r\n  fiber.flags |= StoreConsistency;\r\n  var check = {\r\n    getSnapshot: getSnapshot,\r\n    value: renderedSnapshot\r\n  };\r\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\r\n\r\n  if (componentUpdateQueue === null) {\r\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\r\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\r\n    componentUpdateQueue.stores = [check];\r\n  } else {\r\n    var stores = componentUpdateQueue.stores;\r\n\r\n    if (stores === null) {\r\n      componentUpdateQueue.stores = [check];\r\n    } else {\r\n      stores.push(check);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\r\n  // These are updated in the passive phase\r\n  inst.value = nextSnapshot;\r\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\r\n  // have been in an event that fired before the passive effects, or it could\r\n  // have been in a layout effect. In that case, we would have used the old\r\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\r\n\r\n  if (checkIfSnapshotChanged(inst)) {\r\n    // Force a re-render.\r\n    forceStoreRerender(fiber);\r\n  }\r\n}\r\n\r\nfunction subscribeToStore(fiber, inst, subscribe) {\r\n  var handleStoreChange = function () {\r\n    // The store changed. Check if the snapshot changed since the last time we\r\n    // read from the store.\r\n    if (checkIfSnapshotChanged(inst)) {\r\n      // Force a re-render.\r\n      forceStoreRerender(fiber);\r\n    }\r\n  }; // Subscribe to the store and return a clean-up function.\r\n\r\n\r\n  return subscribe(handleStoreChange);\r\n}\r\n\r\nfunction checkIfSnapshotChanged(inst) {\r\n  var latestGetSnapshot = inst.getSnapshot;\r\n  var prevValue = inst.value;\r\n\r\n  try {\r\n    var nextValue = latestGetSnapshot();\r\n    return !objectIs(prevValue, nextValue);\r\n  } catch (error) {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction forceStoreRerender(fiber) {\r\n  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n  if (root !== null) {\r\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n  }\r\n}\r\n\r\nfunction mountState(initialState) {\r\n  var hook = mountWorkInProgressHook();\r\n\r\n  if (typeof initialState === 'function') {\r\n    // $FlowFixMe: Flow doesn't like mixed types\r\n    initialState = initialState();\r\n  }\r\n\r\n  hook.memoizedState = hook.baseState = initialState;\r\n  var queue = {\r\n    pending: null,\r\n    interleaved: null,\r\n    lanes: NoLanes,\r\n    dispatch: null,\r\n    lastRenderedReducer: basicStateReducer,\r\n    lastRenderedState: initialState\r\n  };\r\n  hook.queue = queue;\r\n  var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction updateState(initialState) {\r\n  return updateReducer(basicStateReducer);\r\n}\r\n\r\nfunction rerenderState(initialState) {\r\n  return rerenderReducer(basicStateReducer);\r\n}\r\n\r\nfunction pushEffect(tag, create, destroy, deps) {\r\n  var effect = {\r\n    tag: tag,\r\n    create: create,\r\n    destroy: destroy,\r\n    deps: deps,\r\n    // Circular\r\n    next: null\r\n  };\r\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\r\n\r\n  if (componentUpdateQueue === null) {\r\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\r\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\r\n    componentUpdateQueue.lastEffect = effect.next = effect;\r\n  } else {\r\n    var lastEffect = componentUpdateQueue.lastEffect;\r\n\r\n    if (lastEffect === null) {\r\n      componentUpdateQueue.lastEffect = effect.next = effect;\r\n    } else {\r\n      var firstEffect = lastEffect.next;\r\n      lastEffect.next = effect;\r\n      effect.next = firstEffect;\r\n      componentUpdateQueue.lastEffect = effect;\r\n    }\r\n  }\r\n\r\n  return effect;\r\n}\r\n\r\nfunction mountRef(initialValue) {\r\n  var hook = mountWorkInProgressHook();\r\n\r\n  {\r\n    var _ref2 = {\r\n      current: initialValue\r\n    };\r\n    hook.memoizedState = _ref2;\r\n    return _ref2;\r\n  }\r\n}\r\n\r\nfunction updateRef(initialValue) {\r\n  var hook = updateWorkInProgressHook();\r\n  return hook.memoizedState;\r\n}\r\n\r\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  currentlyRenderingFiber$1.flags |= fiberFlags;\r\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\r\n}\r\n\r\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var destroy = undefined;\r\n\r\n  if (currentHook !== null) {\r\n    var prevEffect = currentHook.memoizedState;\r\n    destroy = prevEffect.destroy;\r\n\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevEffect.deps;\r\n\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  currentlyRenderingFiber$1.flags |= fiberFlags;\r\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\r\n}\r\n\r\nfunction mountEffect(create, deps) {\r\n  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {\r\n    return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);\r\n  } else {\r\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\r\n  }\r\n}\r\n\r\nfunction updateEffect(create, deps) {\r\n  return updateEffectImpl(Passive, Passive$1, create, deps);\r\n}\r\n\r\nfunction mountInsertionEffect(create, deps) {\r\n  return mountEffectImpl(Update, Insertion, create, deps);\r\n}\r\n\r\nfunction updateInsertionEffect(create, deps) {\r\n  return updateEffectImpl(Update, Insertion, create, deps);\r\n}\r\n\r\nfunction mountLayoutEffect(create, deps) {\r\n  var fiberFlags = Update;\r\n\r\n  {\r\n    fiberFlags |= LayoutStatic;\r\n  }\r\n\r\n  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {\r\n    fiberFlags |= MountLayoutDev;\r\n  }\r\n\r\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\r\n}\r\n\r\nfunction updateLayoutEffect(create, deps) {\r\n  return updateEffectImpl(Update, Layout, create, deps);\r\n}\r\n\r\nfunction imperativeHandleEffect(create, ref) {\r\n  if (typeof ref === 'function') {\r\n    var refCallback = ref;\r\n\r\n    var _inst = create();\r\n\r\n    refCallback(_inst);\r\n    return function () {\r\n      refCallback(null);\r\n    };\r\n  } else if (ref !== null && ref !== undefined) {\r\n    var refObject = ref;\r\n\r\n    {\r\n      if (!refObject.hasOwnProperty('current')) {\r\n        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');\r\n      }\r\n    }\r\n\r\n    var _inst2 = create();\r\n\r\n    refObject.current = _inst2;\r\n    return function () {\r\n      refObject.current = null;\r\n    };\r\n  }\r\n}\r\n\r\nfunction mountImperativeHandle(ref, create, deps) {\r\n  {\r\n    if (typeof create !== 'function') {\r\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\r\n    }\r\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\r\n\r\n\r\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\r\n  var fiberFlags = Update;\r\n\r\n  {\r\n    fiberFlags |= LayoutStatic;\r\n  }\r\n\r\n  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {\r\n    fiberFlags |= MountLayoutDev;\r\n  }\r\n\r\n  return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\r\n}\r\n\r\nfunction updateImperativeHandle(ref, create, deps) {\r\n  {\r\n    if (typeof create !== 'function') {\r\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\r\n    }\r\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\r\n\r\n\r\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\r\n  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\r\n}\r\n\r\nfunction mountDebugValue(value, formatterFn) {// This hook is normally a no-op.\r\n  // The react-debug-hooks package injects its own implementation\r\n  // so that e.g. DevTools can display custom hook values.\r\n}\r\n\r\nvar updateDebugValue = mountDebugValue;\r\n\r\nfunction mountCallback(callback, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  hook.memoizedState = [callback, nextDeps];\r\n  return callback;\r\n}\r\n\r\nfunction updateCallback(callback, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var prevState = hook.memoizedState;\r\n\r\n  if (prevState !== null) {\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevState[1];\r\n\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        return prevState[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  hook.memoizedState = [callback, nextDeps];\r\n  return callback;\r\n}\r\n\r\nfunction mountMemo(nextCreate, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var nextValue = nextCreate();\r\n  hook.memoizedState = [nextValue, nextDeps];\r\n  return nextValue;\r\n}\r\n\r\nfunction updateMemo(nextCreate, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var prevState = hook.memoizedState;\r\n\r\n  if (prevState !== null) {\r\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevState[1];\r\n\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        return prevState[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  var nextValue = nextCreate();\r\n  hook.memoizedState = [nextValue, nextDeps];\r\n  return nextValue;\r\n}\r\n\r\nfunction mountDeferredValue(value) {\r\n  var hook = mountWorkInProgressHook();\r\n  hook.memoizedState = value;\r\n  return value;\r\n}\r\n\r\nfunction updateDeferredValue(value) {\r\n  var hook = updateWorkInProgressHook();\r\n  var resolvedCurrentHook = currentHook;\r\n  var prevValue = resolvedCurrentHook.memoizedState;\r\n  return updateDeferredValueImpl(hook, prevValue, value);\r\n}\r\n\r\nfunction rerenderDeferredValue(value) {\r\n  var hook = updateWorkInProgressHook();\r\n\r\n  if (currentHook === null) {\r\n    // This is a rerender during a mount.\r\n    hook.memoizedState = value;\r\n    return value;\r\n  } else {\r\n    // This is a rerender during an update.\r\n    var prevValue = currentHook.memoizedState;\r\n    return updateDeferredValueImpl(hook, prevValue, value);\r\n  }\r\n}\r\n\r\nfunction updateDeferredValueImpl(hook, prevValue, value) {\r\n  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\r\n\r\n  if (shouldDeferValue) {\r\n    // This is an urgent update. If the value has changed, keep using the\r\n    // previous value and spawn a deferred render to update it later.\r\n    if (!objectIs(value, prevValue)) {\r\n      // Schedule a deferred render\r\n      var deferredLane = claimNextTransitionLane();\r\n      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);\r\n      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent\r\n      // from the latest value. The name \"baseState\" doesn't really match how we\r\n      // use it because we're reusing a state hook field instead of creating a\r\n      // new one.\r\n\r\n      hook.baseState = true;\r\n    } // Reuse the previous value\r\n\r\n\r\n    return prevValue;\r\n  } else {\r\n    // This is not an urgent update, so we can use the latest value regardless\r\n    // of what it is. No need to defer it.\r\n    // However, if we're currently inside a spawned render, then we need to mark\r\n    // this as an update to prevent the fiber from bailing out.\r\n    //\r\n    // `baseState` is true when the current value is different from the rendered\r\n    // value. The name doesn't really match how we use it because we're reusing\r\n    // a state hook field instead of creating a new one.\r\n    if (hook.baseState) {\r\n      // Flip this back to false.\r\n      hook.baseState = false;\r\n      markWorkInProgressReceivedUpdate();\r\n    }\r\n\r\n    hook.memoizedState = value;\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction startTransition(setPending, callback, options) {\r\n  var previousPriority = getCurrentUpdatePriority();\r\n  setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\r\n  setPending(true);\r\n  var prevTransition = ReactCurrentBatchConfig$1.transition;\r\n  ReactCurrentBatchConfig$1.transition = {};\r\n  var currentTransition = ReactCurrentBatchConfig$1.transition;\r\n\r\n  {\r\n    ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  try {\r\n    setPending(false);\r\n    callback();\r\n  } finally {\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$1.transition = prevTransition;\r\n\r\n    {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        var updatedFibersCount = currentTransition._updatedFibers.size;\r\n\r\n        if (updatedFibersCount > 10) {\r\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\r\n        }\r\n\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction mountTransition() {\r\n  var _mountState = mountState(false),\r\n      isPending = _mountState[0],\r\n      setPending = _mountState[1]; // The `start` method never changes.\r\n\r\n\r\n  var start = startTransition.bind(null, setPending);\r\n  var hook = mountWorkInProgressHook();\r\n  hook.memoizedState = start;\r\n  return [isPending, start];\r\n}\r\n\r\nfunction updateTransition() {\r\n  var _updateState = updateState(),\r\n      isPending = _updateState[0];\r\n\r\n  var hook = updateWorkInProgressHook();\r\n  var start = hook.memoizedState;\r\n  return [isPending, start];\r\n}\r\n\r\nfunction rerenderTransition() {\r\n  var _rerenderState = rerenderState(),\r\n      isPending = _rerenderState[0];\r\n\r\n  var hook = updateWorkInProgressHook();\r\n  var start = hook.memoizedState;\r\n  return [isPending, start];\r\n}\r\n\r\nvar isUpdatingOpaqueValueInRenderPhase = false;\r\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\r\n  {\r\n    return isUpdatingOpaqueValueInRenderPhase;\r\n  }\r\n}\r\n\r\nfunction mountId() {\r\n  var hook = mountWorkInProgressHook();\r\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\r\n  // should do this in Fiber, too? Deferring this decision for now because\r\n  // there's no other place to store the prefix except for an internal field on\r\n  // the public createRoot object, which the fiber tree does not currently have\r\n  // a reference to.\r\n\r\n  var identifierPrefix = root.identifierPrefix;\r\n  var id;\r\n\r\n  if (getIsHydrating()) {\r\n    var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.\r\n\r\n    id = ':' + identifierPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end\r\n    // that represents the position of this useId hook among all the useId\r\n    // hooks for this fiber.\r\n\r\n    var localId = localIdCounter++;\r\n\r\n    if (localId > 0) {\r\n      id += 'H' + localId.toString(32);\r\n    }\r\n\r\n    id += ':';\r\n  } else {\r\n    // Use a lowercase r prefix for client-generated ids.\r\n    var globalClientId = globalClientIdCounter++;\r\n    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';\r\n  }\r\n\r\n  hook.memoizedState = id;\r\n  return id;\r\n}\r\n\r\nfunction updateId() {\r\n  var hook = updateWorkInProgressHook();\r\n  var id = hook.memoizedState;\r\n  return id;\r\n}\r\n\r\nfunction dispatchReducerAction(fiber, queue, action) {\r\n  {\r\n    if (typeof arguments[3] === 'function') {\r\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\r\n    }\r\n  }\r\n\r\n  var lane = requestUpdateLane(fiber);\r\n  var update = {\r\n    lane: lane,\r\n    action: action,\r\n    hasEagerState: false,\r\n    eagerState: null,\r\n    next: null\r\n  };\r\n\r\n  if (isRenderPhaseUpdate(fiber)) {\r\n    enqueueRenderPhaseUpdate(queue, update);\r\n  } else {\r\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\r\n\r\n    if (root !== null) {\r\n      var eventTime = requestEventTime();\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitionUpdate(root, queue, lane);\r\n    }\r\n  }\r\n\r\n  markUpdateInDevTools(fiber, lane);\r\n}\r\n\r\nfunction dispatchSetState(fiber, queue, action) {\r\n  {\r\n    if (typeof arguments[3] === 'function') {\r\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\r\n    }\r\n  }\r\n\r\n  var lane = requestUpdateLane(fiber);\r\n  var update = {\r\n    lane: lane,\r\n    action: action,\r\n    hasEagerState: false,\r\n    eagerState: null,\r\n    next: null\r\n  };\r\n\r\n  if (isRenderPhaseUpdate(fiber)) {\r\n    enqueueRenderPhaseUpdate(queue, update);\r\n  } else {\r\n    var alternate = fiber.alternate;\r\n\r\n    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\r\n      // The queue is currently empty, which means we can eagerly compute the\r\n      // next state before entering the render phase. If the new state is the\r\n      // same as the current state, we may be able to bail out entirely.\r\n      var lastRenderedReducer = queue.lastRenderedReducer;\r\n\r\n      if (lastRenderedReducer !== null) {\r\n        var prevDispatcher;\r\n\r\n        {\r\n          prevDispatcher = ReactCurrentDispatcher$1.current;\r\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        }\r\n\r\n        try {\r\n          var currentState = queue.lastRenderedState;\r\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\r\n          // it, on the update object. If the reducer hasn't changed by the\r\n          // time we enter the render phase, then the eager state can be used\r\n          // without calling the reducer again.\r\n\r\n          update.hasEagerState = true;\r\n          update.eagerState = eagerState;\r\n\r\n          if (objectIs(eagerState, currentState)) {\r\n            // Fast path. We can bail out without scheduling React to re-render.\r\n            // It's still possible that we'll need to rebase this update later,\r\n            // if the component re-renders for a different reason and by that\r\n            // time the reducer has changed.\r\n            // TODO: Do we still need to entangle transitions in this case?\r\n            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);\r\n            return;\r\n          }\r\n        } catch (error) {// Suppress the error. It will throw again in the render phase.\r\n        } finally {\r\n          {\r\n            ReactCurrentDispatcher$1.current = prevDispatcher;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\r\n\r\n    if (root !== null) {\r\n      var eventTime = requestEventTime();\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitionUpdate(root, queue, lane);\r\n    }\r\n  }\r\n\r\n  markUpdateInDevTools(fiber, lane);\r\n}\r\n\r\nfunction isRenderPhaseUpdate(fiber) {\r\n  var alternate = fiber.alternate;\r\n  return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\r\n}\r\n\r\nfunction enqueueRenderPhaseUpdate(queue, update) {\r\n  // This is a render phase update. Stash it in a lazily-created map of\r\n  // queue -> linked list of updates. After this render pass, we'll restart\r\n  // and apply the stashed updates on top of the work-in-progress hook.\r\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\r\n  var pending = queue.pending;\r\n\r\n  if (pending === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update;\r\n  } else {\r\n    update.next = pending.next;\r\n    pending.next = update;\r\n  }\r\n\r\n  queue.pending = update;\r\n} // TODO: Move to ReactFiberConcurrentUpdates?\r\n\r\n\r\nfunction entangleTransitionUpdate(root, queue, lane) {\r\n  if (isTransitionLane(lane)) {\r\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\r\n    // must have finished. We can remove them from the shared queue, which\r\n    // represents a superset of the actually pending lanes. In some cases we\r\n    // may entangle more than we need to, but that's OK. In fact it's worse if\r\n    // we *don't* entangle when we should.\r\n\r\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\r\n\r\n    var newQueueLanes = mergeLanes(queueLanes, lane);\r\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\r\n    // the lane finished since the last time we entangled it. So we need to\r\n    // entangle it again, just to be sure.\r\n\r\n    markRootEntangled(root, newQueueLanes);\r\n  }\r\n}\r\n\r\nfunction markUpdateInDevTools(fiber, lane, action) {\r\n\r\n  {\r\n    markStateUpdateScheduled(fiber, lane);\r\n  }\r\n}\r\n\r\nvar ContextOnlyDispatcher = {\r\n  readContext: readContext,\r\n  useCallback: throwInvalidHookError,\r\n  useContext: throwInvalidHookError,\r\n  useEffect: throwInvalidHookError,\r\n  useImperativeHandle: throwInvalidHookError,\r\n  useInsertionEffect: throwInvalidHookError,\r\n  useLayoutEffect: throwInvalidHookError,\r\n  useMemo: throwInvalidHookError,\r\n  useReducer: throwInvalidHookError,\r\n  useRef: throwInvalidHookError,\r\n  useState: throwInvalidHookError,\r\n  useDebugValue: throwInvalidHookError,\r\n  useDeferredValue: throwInvalidHookError,\r\n  useTransition: throwInvalidHookError,\r\n  useMutableSource: throwInvalidHookError,\r\n  useSyncExternalStore: throwInvalidHookError,\r\n  useId: throwInvalidHookError,\r\n  unstable_isNewReconciler: enableNewReconciler\r\n};\r\n\r\nvar HooksDispatcherOnMountInDEV = null;\r\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\r\nvar HooksDispatcherOnUpdateInDEV = null;\r\nvar HooksDispatcherOnRerenderInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\r\n\r\n{\r\n  var warnInvalidContextAccess = function () {\r\n    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\r\n  };\r\n\r\n  var warnInvalidHookAccess = function () {\r\n    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');\r\n  };\r\n\r\n  HooksDispatcherOnMountInDEV = {\r\n    readContext: function (context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function (context) {\r\n      currentHookNameInDev = 'useContext';\r\n      mountHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useInsertionEffect';\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      mountHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      mountHookTypesDev();\r\n      return mountDebugValue();\r\n    },\r\n    useDeferredValue: function (value) {\r\n      currentHookNameInDev = 'useDeferredValue';\r\n      mountHookTypesDev();\r\n      return mountDeferredValue(value);\r\n    },\r\n    useTransition: function () {\r\n      currentHookNameInDev = 'useTransition';\r\n      mountHookTypesDev();\r\n      return mountTransition();\r\n    },\r\n    useMutableSource: function (source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = 'useMutableSource';\r\n      mountHookTypesDev();\r\n      return mountMutableSource();\r\n    },\r\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = 'useSyncExternalStore';\r\n      mountHookTypesDev();\r\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\r\n    },\r\n    useId: function () {\r\n      currentHookNameInDev = 'useId';\r\n      mountHookTypesDev();\r\n      return mountId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  HooksDispatcherOnMountWithHookTypesInDEV = {\r\n    readContext: function (context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      updateHookTypesDev();\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function (context) {\r\n      currentHookNameInDev = 'useContext';\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      updateHookTypesDev();\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      updateHookTypesDev();\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useInsertionEffect';\r\n      updateHookTypesDev();\r\n      return mountInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      updateHookTypesDev();\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      updateHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      updateHookTypesDev();\r\n      return mountDebugValue();\r\n    },\r\n    useDeferredValue: function (value) {\r\n      currentHookNameInDev = 'useDeferredValue';\r\n      updateHookTypesDev();\r\n      return mountDeferredValue(value);\r\n    },\r\n    useTransition: function () {\r\n      currentHookNameInDev = 'useTransition';\r\n      updateHookTypesDev();\r\n      return mountTransition();\r\n    },\r\n    useMutableSource: function (source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = 'useMutableSource';\r\n      updateHookTypesDev();\r\n      return mountMutableSource();\r\n    },\r\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = 'useSyncExternalStore';\r\n      updateHookTypesDev();\r\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\r\n    },\r\n    useId: function () {\r\n      currentHookNameInDev = 'useId';\r\n      updateHookTypesDev();\r\n      return mountId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  HooksDispatcherOnUpdateInDEV = {\r\n    readContext: function (context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function (context) {\r\n      currentHookNameInDev = 'useContext';\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useInsertionEffect';\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function (value) {\r\n      currentHookNameInDev = 'useDeferredValue';\r\n      updateHookTypesDev();\r\n      return updateDeferredValue(value);\r\n    },\r\n    useTransition: function () {\r\n      currentHookNameInDev = 'useTransition';\r\n      updateHookTypesDev();\r\n      return updateTransition();\r\n    },\r\n    useMutableSource: function (source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = 'useMutableSource';\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = 'useSyncExternalStore';\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function () {\r\n      currentHookNameInDev = 'useId';\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  HooksDispatcherOnRerenderInDEV = {\r\n    readContext: function (context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function (context) {\r\n      currentHookNameInDev = 'useContext';\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useInsertionEffect';\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n\r\n      try {\r\n        return rerenderReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n\r\n      try {\r\n        return rerenderState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function (value) {\r\n      currentHookNameInDev = 'useDeferredValue';\r\n      updateHookTypesDev();\r\n      return rerenderDeferredValue(value);\r\n    },\r\n    useTransition: function () {\r\n      currentHookNameInDev = 'useTransition';\r\n      updateHookTypesDev();\r\n      return rerenderTransition();\r\n    },\r\n    useMutableSource: function (source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = 'useMutableSource';\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = 'useSyncExternalStore';\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function () {\r\n      currentHookNameInDev = 'useId';\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnMountInDEV = {\r\n    readContext: function (context) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function (context) {\r\n      currentHookNameInDev = 'useContext';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useInsertionEffect';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountDebugValue();\r\n    },\r\n    useDeferredValue: function (value) {\r\n      currentHookNameInDev = 'useDeferredValue';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountDeferredValue(value);\r\n    },\r\n    useTransition: function () {\r\n      currentHookNameInDev = 'useTransition';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountTransition();\r\n    },\r\n    useMutableSource: function (source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = 'useMutableSource';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountMutableSource();\r\n    },\r\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = 'useSyncExternalStore';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\r\n    },\r\n    useId: function () {\r\n      currentHookNameInDev = 'useId';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\r\n    readContext: function (context) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function (context) {\r\n      currentHookNameInDev = 'useContext';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useInsertionEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function (value) {\r\n      currentHookNameInDev = 'useDeferredValue';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateDeferredValue(value);\r\n    },\r\n    useTransition: function () {\r\n      currentHookNameInDev = 'useTransition';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateTransition();\r\n    },\r\n    useMutableSource: function (source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = 'useMutableSource';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = 'useSyncExternalStore';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function () {\r\n      currentHookNameInDev = 'useId';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\r\n    readContext: function (context) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function (context) {\r\n      currentHookNameInDev = 'useContext';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useInsertionEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return rerenderReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return rerenderState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function (value) {\r\n      currentHookNameInDev = 'useDeferredValue';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return rerenderDeferredValue(value);\r\n    },\r\n    useTransition: function () {\r\n      currentHookNameInDev = 'useTransition';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return rerenderTransition();\r\n    },\r\n    useMutableSource: function (source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = 'useMutableSource';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = 'useSyncExternalStore';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function () {\r\n      currentHookNameInDev = 'useId';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n}\r\n\r\nvar now$1 = Scheduler.unstable_now;\r\nvar commitTime = 0;\r\nvar layoutEffectStartTime = -1;\r\nvar profilerStartTime = -1;\r\nvar passiveEffectStartTime = -1;\r\n/**\r\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\r\n *\r\n * The overall sequence is:\r\n *   1. render\r\n *   2. commit (and call `onRender`, `onCommit`)\r\n *   3. check for nested updates\r\n *   4. flush passive effects (and call `onPostCommit`)\r\n *\r\n * Nested updates are identified in step 3 above,\r\n * but step 4 still applies to the work that was just committed.\r\n * We use two flags to track nested updates then:\r\n * one tracks whether the upcoming update is a nested update,\r\n * and the other tracks whether the current update was a nested update.\r\n * The first value gets synced to the second at the start of the render phase.\r\n */\r\n\r\nvar currentUpdateIsNested = false;\r\nvar nestedUpdateScheduled = false;\r\n\r\nfunction isCurrentUpdateNested() {\r\n  return currentUpdateIsNested;\r\n}\r\n\r\nfunction markNestedUpdateScheduled() {\r\n  {\r\n    nestedUpdateScheduled = true;\r\n  }\r\n}\r\n\r\nfunction resetNestedUpdateFlag() {\r\n  {\r\n    currentUpdateIsNested = false;\r\n    nestedUpdateScheduled = false;\r\n  }\r\n}\r\n\r\nfunction syncNestedUpdateFlag() {\r\n  {\r\n    currentUpdateIsNested = nestedUpdateScheduled;\r\n    nestedUpdateScheduled = false;\r\n  }\r\n}\r\n\r\nfunction getCommitTime() {\r\n  return commitTime;\r\n}\r\n\r\nfunction recordCommitTime() {\r\n\r\n  commitTime = now$1();\r\n}\r\n\r\nfunction startProfilerTimer(fiber) {\r\n\r\n  profilerStartTime = now$1();\r\n\r\n  if (fiber.actualStartTime < 0) {\r\n    fiber.actualStartTime = now$1();\r\n  }\r\n}\r\n\r\nfunction stopProfilerTimerIfRunning(fiber) {\r\n\r\n  profilerStartTime = -1;\r\n}\r\n\r\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\r\n\r\n  if (profilerStartTime >= 0) {\r\n    var elapsedTime = now$1() - profilerStartTime;\r\n    fiber.actualDuration += elapsedTime;\r\n\r\n    if (overrideBaseTime) {\r\n      fiber.selfBaseDuration = elapsedTime;\r\n    }\r\n\r\n    profilerStartTime = -1;\r\n  }\r\n}\r\n\r\nfunction recordLayoutEffectDuration(fiber) {\r\n\r\n  if (layoutEffectStartTime >= 0) {\r\n    var elapsedTime = now$1() - layoutEffectStartTime;\r\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\r\n    // Or the root (for the DevTools Profiler to read)\r\n\r\n    var parentFiber = fiber.return;\r\n\r\n    while (parentFiber !== null) {\r\n      switch (parentFiber.tag) {\r\n        case HostRoot:\r\n          var root = parentFiber.stateNode;\r\n          root.effectDuration += elapsedTime;\r\n          return;\r\n\r\n        case Profiler:\r\n          var parentStateNode = parentFiber.stateNode;\r\n          parentStateNode.effectDuration += elapsedTime;\r\n          return;\r\n      }\r\n\r\n      parentFiber = parentFiber.return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction recordPassiveEffectDuration(fiber) {\r\n\r\n  if (passiveEffectStartTime >= 0) {\r\n    var elapsedTime = now$1() - passiveEffectStartTime;\r\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\r\n    // Or the root (for the DevTools Profiler to read)\r\n\r\n    var parentFiber = fiber.return;\r\n\r\n    while (parentFiber !== null) {\r\n      switch (parentFiber.tag) {\r\n        case HostRoot:\r\n          var root = parentFiber.stateNode;\r\n\r\n          if (root !== null) {\r\n            root.passiveEffectDuration += elapsedTime;\r\n          }\r\n\r\n          return;\r\n\r\n        case Profiler:\r\n          var parentStateNode = parentFiber.stateNode;\r\n\r\n          if (parentStateNode !== null) {\r\n            // Detached fibers have their state node cleared out.\r\n            // In this case, the return pointer is also cleared out,\r\n            // so we won't be able to report the time spent in this Profiler's subtree.\r\n            parentStateNode.passiveEffectDuration += elapsedTime;\r\n          }\r\n\r\n          return;\r\n      }\r\n\r\n      parentFiber = parentFiber.return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction startLayoutEffectTimer() {\r\n\r\n  layoutEffectStartTime = now$1();\r\n}\r\n\r\nfunction startPassiveEffectTimer() {\r\n\r\n  passiveEffectStartTime = now$1();\r\n}\r\n\r\nfunction transferActualDuration(fiber) {\r\n  // Transfer time spent rendering these children so we don't lose it\r\n  // after we rerender. This is used as a helper in special cases\r\n  // where we should count the work of multiple passes.\r\n  var child = fiber.child;\r\n\r\n  while (child) {\r\n    fiber.actualDuration += child.actualDuration;\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nfunction resolveDefaultProps(Component, baseProps) {\r\n  if (Component && Component.defaultProps) {\r\n    // Resolve default props. Taken from ReactElement\r\n    var props = assign({}, baseProps);\r\n    var defaultProps = Component.defaultProps;\r\n\r\n    for (var propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n\r\n    return props;\r\n  }\r\n\r\n  return baseProps;\r\n}\r\n\r\nvar fakeInternalInstance = {};\r\nvar didWarnAboutStateAssignmentForComponent;\r\nvar didWarnAboutUninitializedState;\r\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\r\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\r\nvar didWarnAboutUndefinedDerivedState;\r\nvar warnOnUndefinedDerivedState;\r\nvar warnOnInvalidCallback;\r\nvar didWarnAboutDirectlyAssigningPropsToState;\r\nvar didWarnAboutContextTypeAndContextTypes;\r\nvar didWarnAboutInvalidateContextType;\r\nvar didWarnAboutLegacyContext$1;\r\n\r\n{\r\n  didWarnAboutStateAssignmentForComponent = new Set();\r\n  didWarnAboutUninitializedState = new Set();\r\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\r\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\r\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\r\n  didWarnAboutUndefinedDerivedState = new Set();\r\n  didWarnAboutContextTypeAndContextTypes = new Set();\r\n  didWarnAboutInvalidateContextType = new Set();\r\n  didWarnAboutLegacyContext$1 = new Set();\r\n  var didWarnOnInvalidCallback = new Set();\r\n\r\n  warnOnInvalidCallback = function (callback, callerName) {\r\n    if (callback === null || typeof callback === 'function') {\r\n      return;\r\n    }\r\n\r\n    var key = callerName + '_' + callback;\r\n\r\n    if (!didWarnOnInvalidCallback.has(key)) {\r\n      didWarnOnInvalidCallback.add(key);\r\n\r\n      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\r\n    }\r\n  };\r\n\r\n  warnOnUndefinedDerivedState = function (type, partialState) {\r\n    if (partialState === undefined) {\r\n      var componentName = getComponentNameFromType(type) || 'Component';\r\n\r\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\r\n        didWarnAboutUndefinedDerivedState.add(componentName);\r\n\r\n        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\r\n      }\r\n    }\r\n  }; // This is so gross but it's at least non-critical and can be removed if\r\n  // it causes problems. This is meant to give a nicer error message for\r\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\r\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\r\n  // exception.\r\n\r\n\r\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\r\n    enumerable: false,\r\n    value: function () {\r\n      throw new Error('_processChildContext is not available in React 16+. This likely ' + 'means you have multiple copies of React and are attempting to nest ' + 'a React 15 tree inside a React 16 tree using ' + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + 'to make sure you have only one copy of React (and ideally, switch ' + 'to ReactDOM.createPortal).');\r\n    }\r\n  });\r\n  Object.freeze(fakeInternalInstance);\r\n}\r\n\r\nfunction applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\r\n  var prevState = workInProgress.memoizedState;\r\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\r\n\r\n  {\r\n    if ( workInProgress.mode & StrictLegacyMode) {\r\n      setIsStrictModeForDevtools(true);\r\n\r\n      try {\r\n        // Invoke the function an extra time to help detect side-effects.\r\n        partialState = getDerivedStateFromProps(nextProps, prevState);\r\n      } finally {\r\n        setIsStrictModeForDevtools(false);\r\n      }\r\n    }\r\n\r\n    warnOnUndefinedDerivedState(ctor, partialState);\r\n  } // Merge the partial state and the previous state.\r\n\r\n\r\n  var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\r\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\r\n  // base state.\r\n\r\n  if (workInProgress.lanes === NoLanes) {\r\n    // Queue is always non-null for classes\r\n    var updateQueue = workInProgress.updateQueue;\r\n    updateQueue.baseState = memoizedState;\r\n  }\r\n}\r\n\r\nvar classComponentUpdater = {\r\n  isMounted: isMounted,\r\n  enqueueSetState: function (inst, payload, callback) {\r\n    var fiber = get(inst);\r\n    var eventTime = requestEventTime();\r\n    var lane = requestUpdateLane(fiber);\r\n    var update = createUpdate(eventTime, lane);\r\n    update.payload = payload;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback(callback, 'setState');\r\n      }\r\n\r\n      update.callback = callback;\r\n    }\r\n\r\n    var root = enqueueUpdate(fiber, update, lane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitions(root, fiber, lane);\r\n    }\r\n\r\n    {\r\n      markStateUpdateScheduled(fiber, lane);\r\n    }\r\n  },\r\n  enqueueReplaceState: function (inst, payload, callback) {\r\n    var fiber = get(inst);\r\n    var eventTime = requestEventTime();\r\n    var lane = requestUpdateLane(fiber);\r\n    var update = createUpdate(eventTime, lane);\r\n    update.tag = ReplaceState;\r\n    update.payload = payload;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback(callback, 'replaceState');\r\n      }\r\n\r\n      update.callback = callback;\r\n    }\r\n\r\n    var root = enqueueUpdate(fiber, update, lane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitions(root, fiber, lane);\r\n    }\r\n\r\n    {\r\n      markStateUpdateScheduled(fiber, lane);\r\n    }\r\n  },\r\n  enqueueForceUpdate: function (inst, callback) {\r\n    var fiber = get(inst);\r\n    var eventTime = requestEventTime();\r\n    var lane = requestUpdateLane(fiber);\r\n    var update = createUpdate(eventTime, lane);\r\n    update.tag = ForceUpdate;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback(callback, 'forceUpdate');\r\n      }\r\n\r\n      update.callback = callback;\r\n    }\r\n\r\n    var root = enqueueUpdate(fiber, update, lane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitions(root, fiber, lane);\r\n    }\r\n\r\n    {\r\n      markForceUpdateScheduled(fiber, lane);\r\n    }\r\n  }\r\n};\r\n\r\nfunction checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\r\n  var instance = workInProgress.stateNode;\r\n\r\n  if (typeof instance.shouldComponentUpdate === 'function') {\r\n    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\r\n\r\n    {\r\n      if ( workInProgress.mode & StrictLegacyMode) {\r\n        setIsStrictModeForDevtools(true);\r\n\r\n        try {\r\n          // Invoke the function an extra time to help detect side-effects.\r\n          shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\r\n        } finally {\r\n          setIsStrictModeForDevtools(false);\r\n        }\r\n      }\r\n\r\n      if (shouldUpdate === undefined) {\r\n        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentNameFromType(ctor) || 'Component');\r\n      }\r\n    }\r\n\r\n    return shouldUpdate;\r\n  }\r\n\r\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\r\n    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction checkClassInstance(workInProgress, ctor, newProps) {\r\n  var instance = workInProgress.stateNode;\r\n\r\n  {\r\n    var name = getComponentNameFromType(ctor) || 'Component';\r\n    var renderPresent = instance.render;\r\n\r\n    if (!renderPresent) {\r\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\r\n        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\r\n      } else {\r\n        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\r\n      }\r\n    }\r\n\r\n    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\r\n      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);\r\n    }\r\n\r\n    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\r\n      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);\r\n    }\r\n\r\n    if (instance.propTypes) {\r\n      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);\r\n    }\r\n\r\n    if (instance.contextType) {\r\n      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);\r\n    }\r\n\r\n    {\r\n      if (ctor.childContextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip\r\n      // this one.\r\n      (workInProgress.mode & StrictLegacyMode) === NoMode) {\r\n        didWarnAboutLegacyContext$1.add(ctor);\r\n\r\n        error('%s uses the legacy childContextTypes API which is no longer ' + 'supported and will be removed in the next major release. Use ' + 'React.createContext() instead\\n\\n.' + 'Learn more about this warning here: https://reactjs.org/link/legacy-context', name);\r\n      }\r\n\r\n      if (ctor.contextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip\r\n      // this one.\r\n      (workInProgress.mode & StrictLegacyMode) === NoMode) {\r\n        didWarnAboutLegacyContext$1.add(ctor);\r\n\r\n        error('%s uses the legacy contextTypes API which is no longer supported ' + 'and will be removed in the next major release. Use ' + 'React.createContext() with static contextType instead.\\n\\n' + 'Learn more about this warning here: https://reactjs.org/link/legacy-context', name);\r\n      }\r\n\r\n      if (instance.contextTypes) {\r\n        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);\r\n      }\r\n\r\n      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\r\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\r\n\r\n        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\r\n      }\r\n    }\r\n\r\n    if (typeof instance.componentShouldUpdate === 'function') {\r\n      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);\r\n    }\r\n\r\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\r\n      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');\r\n    }\r\n\r\n    if (typeof instance.componentDidUnmount === 'function') {\r\n      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);\r\n    }\r\n\r\n    if (typeof instance.componentDidReceiveProps === 'function') {\r\n      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);\r\n    }\r\n\r\n    if (typeof instance.componentWillRecieveProps === 'function') {\r\n      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);\r\n    }\r\n\r\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\r\n      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);\r\n    }\r\n\r\n    var hasMutatedProps = instance.props !== newProps;\r\n\r\n    if (instance.props !== undefined && hasMutatedProps) {\r\n      error('%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name);\r\n    }\r\n\r\n    if (instance.defaultProps) {\r\n      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);\r\n    }\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\r\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\r\n\r\n      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));\r\n    }\r\n\r\n    if (typeof instance.getDerivedStateFromProps === 'function') {\r\n      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\r\n    }\r\n\r\n    if (typeof instance.getDerivedStateFromError === 'function') {\r\n      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\r\n    }\r\n\r\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\r\n      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);\r\n    }\r\n\r\n    var _state = instance.state;\r\n\r\n    if (_state && (typeof _state !== 'object' || isArray(_state))) {\r\n      error('%s.state: must be set to an object or null', name);\r\n    }\r\n\r\n    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {\r\n      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);\r\n    }\r\n  }\r\n}\r\n\r\nfunction adoptClassInstance(workInProgress, instance) {\r\n  instance.updater = classComponentUpdater;\r\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\r\n\r\n  set(instance, workInProgress);\r\n\r\n  {\r\n    instance._reactInternalInstance = fakeInternalInstance;\r\n  }\r\n}\r\n\r\nfunction constructClassInstance(workInProgress, ctor, props) {\r\n  var isLegacyContextConsumer = false;\r\n  var unmaskedContext = emptyContextObject;\r\n  var context = emptyContextObject;\r\n  var contextType = ctor.contextType;\r\n\r\n  {\r\n    if ('contextType' in ctor) {\r\n      var isValid = // Allow null for conditional declaration\r\n      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>\r\n\r\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\r\n        didWarnAboutInvalidateContextType.add(ctor);\r\n        var addendum = '';\r\n\r\n        if (contextType === undefined) {\r\n          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';\r\n        } else if (typeof contextType !== 'object') {\r\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\r\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\r\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\r\n        } else if (contextType._context !== undefined) {\r\n          // <Context.Consumer>\r\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\r\n        } else {\r\n          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';\r\n        }\r\n\r\n        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    context = readContext(contextType);\r\n  } else {\r\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    var contextTypes = ctor.contextTypes;\r\n    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\r\n    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\r\n  }\r\n\r\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\r\n\r\n  {\r\n    if ( workInProgress.mode & StrictLegacyMode) {\r\n      setIsStrictModeForDevtools(true);\r\n\r\n      try {\r\n        instance = new ctor(props, context); // eslint-disable-line no-new\r\n      } finally {\r\n        setIsStrictModeForDevtools(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\r\n  adoptClassInstance(workInProgress, instance);\r\n\r\n  {\r\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\r\n      var componentName = getComponentNameFromType(ctor) || 'Component';\r\n\r\n      if (!didWarnAboutUninitializedState.has(componentName)) {\r\n        didWarnAboutUninitializedState.add(componentName);\r\n\r\n        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\r\n      }\r\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\r\n    // Warn about these lifecycles if they are present.\r\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\r\n\r\n\r\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      var foundWillMountName = null;\r\n      var foundWillReceivePropsName = null;\r\n      var foundWillUpdateName = null;\r\n\r\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\r\n        foundWillMountName = 'componentWillMount';\r\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\r\n        foundWillMountName = 'UNSAFE_componentWillMount';\r\n      }\r\n\r\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\r\n        foundWillReceivePropsName = 'componentWillReceiveProps';\r\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\r\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\r\n      }\r\n\r\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\r\n        foundWillUpdateName = 'componentWillUpdate';\r\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\r\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\r\n      }\r\n\r\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\r\n        var _componentName = getComponentNameFromType(ctor) || 'Component';\r\n\r\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\r\n\r\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\r\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\r\n\r\n          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : '', foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : '', foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : '');\r\n        }\r\n      }\r\n    }\r\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\r\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\r\n\r\n\r\n  if (isLegacyContextConsumer) {\r\n    cacheContext(workInProgress, unmaskedContext, context);\r\n  }\r\n\r\n  return instance;\r\n}\r\n\r\nfunction callComponentWillMount(workInProgress, instance) {\r\n  var oldState = instance.state;\r\n\r\n  if (typeof instance.componentWillMount === 'function') {\r\n    instance.componentWillMount();\r\n  }\r\n\r\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\r\n    instance.UNSAFE_componentWillMount();\r\n  }\r\n\r\n  if (oldState !== instance.state) {\r\n    {\r\n      error('%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentNameFromFiber(workInProgress) || 'Component');\r\n    }\r\n\r\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\r\n  }\r\n}\r\n\r\nfunction callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\r\n  var oldState = instance.state;\r\n\r\n  if (typeof instance.componentWillReceiveProps === 'function') {\r\n    instance.componentWillReceiveProps(newProps, nextContext);\r\n  }\r\n\r\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\r\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\r\n  }\r\n\r\n  if (instance.state !== oldState) {\r\n    {\r\n      var componentName = getComponentNameFromFiber(workInProgress) || 'Component';\r\n\r\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\r\n        didWarnAboutStateAssignmentForComponent.add(componentName);\r\n\r\n        error('%s.componentWillReceiveProps(): Assigning directly to ' + \"this.state is deprecated (except inside a component's \" + 'constructor). Use setState instead.', componentName);\r\n      }\r\n    }\r\n\r\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\r\n  }\r\n} // Invokes the mount life-cycles on a previously never rendered instance.\r\n\r\n\r\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\r\n  {\r\n    checkClassInstance(workInProgress, ctor, newProps);\r\n  }\r\n\r\n  var instance = workInProgress.stateNode;\r\n  instance.props = newProps;\r\n  instance.state = workInProgress.memoizedState;\r\n  instance.refs = {};\r\n  initializeUpdateQueue(workInProgress);\r\n  var contextType = ctor.contextType;\r\n\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    instance.context = readContext(contextType);\r\n  } else {\r\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\r\n  }\r\n\r\n  {\r\n    if (instance.state === newProps) {\r\n      var componentName = getComponentNameFromType(ctor) || 'Component';\r\n\r\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\r\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\r\n\r\n        error('%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\r\n      }\r\n    }\r\n\r\n    if (workInProgress.mode & StrictLegacyMode) {\r\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\r\n    }\r\n\r\n    {\r\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\r\n    }\r\n  }\r\n\r\n  instance.state = workInProgress.memoizedState;\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n\r\n  if (typeof getDerivedStateFromProps === 'function') {\r\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\r\n    instance.state = workInProgress.memoizedState;\r\n  } // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n\r\n\r\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\r\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\r\n    // process them now.\r\n\r\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\r\n    instance.state = workInProgress.memoizedState;\r\n  }\r\n\r\n  if (typeof instance.componentDidMount === 'function') {\r\n    var fiberFlags = Update;\r\n\r\n    {\r\n      fiberFlags |= LayoutStatic;\r\n    }\r\n\r\n    if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\r\n      fiberFlags |= MountLayoutDev;\r\n    }\r\n\r\n    workInProgress.flags |= fiberFlags;\r\n  }\r\n}\r\n\r\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\r\n  var instance = workInProgress.stateNode;\r\n  var oldProps = workInProgress.memoizedProps;\r\n  instance.props = oldProps;\r\n  var oldContext = instance.context;\r\n  var contextType = ctor.contextType;\r\n  var nextContext = emptyContextObject;\r\n\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    nextContext = readContext(contextType);\r\n  } else {\r\n    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\r\n  }\r\n\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\r\n  // ever the previously attempted to render - not the \"current\". However,\r\n  // during componentDidUpdate we pass the \"current\" props.\r\n  // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n\r\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\r\n    if (oldProps !== newProps || oldContext !== nextContext) {\r\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\r\n    }\r\n  }\r\n\r\n  resetHasForceUpdateBeforeProcessing();\r\n  var oldState = workInProgress.memoizedState;\r\n  var newState = instance.state = oldState;\r\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\r\n  newState = workInProgress.memoizedState;\r\n\r\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidMount === 'function') {\r\n      var fiberFlags = Update;\r\n\r\n      {\r\n        fiberFlags |= LayoutStatic;\r\n      }\r\n\r\n      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\r\n        fiberFlags |= MountLayoutDev;\r\n      }\r\n\r\n      workInProgress.flags |= fiberFlags;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  if (typeof getDerivedStateFromProps === 'function') {\r\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n\r\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\r\n\r\n  if (shouldUpdate) {\r\n    // In order to support react-lifecycles-compat polyfilled components,\r\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\r\n      if (typeof instance.componentWillMount === 'function') {\r\n        instance.componentWillMount();\r\n      }\r\n\r\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\r\n        instance.UNSAFE_componentWillMount();\r\n      }\r\n    }\r\n\r\n    if (typeof instance.componentDidMount === 'function') {\r\n      var _fiberFlags = Update;\r\n\r\n      {\r\n        _fiberFlags |= LayoutStatic;\r\n      }\r\n\r\n      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\r\n        _fiberFlags |= MountLayoutDev;\r\n      }\r\n\r\n      workInProgress.flags |= _fiberFlags;\r\n    }\r\n  } else {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidMount === 'function') {\r\n      var _fiberFlags2 = Update;\r\n\r\n      {\r\n        _fiberFlags2 |= LayoutStatic;\r\n      }\r\n\r\n      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\r\n        _fiberFlags2 |= MountLayoutDev;\r\n      }\r\n\r\n      workInProgress.flags |= _fiberFlags2;\r\n    } // If shouldComponentUpdate returned false, we should still update the\r\n    // memoized state to indicate that this work can be reused.\r\n\r\n\r\n    workInProgress.memoizedProps = newProps;\r\n    workInProgress.memoizedState = newState;\r\n  } // Update the existing instance's state, props, and context pointers even\r\n  // if shouldComponentUpdate returns false.\r\n\r\n\r\n  instance.props = newProps;\r\n  instance.state = newState;\r\n  instance.context = nextContext;\r\n  return shouldUpdate;\r\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\r\n\r\n\r\nfunction updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\r\n  var instance = workInProgress.stateNode;\r\n  cloneUpdateQueue(current, workInProgress);\r\n  var unresolvedOldProps = workInProgress.memoizedProps;\r\n  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\r\n  instance.props = oldProps;\r\n  var unresolvedNewProps = workInProgress.pendingProps;\r\n  var oldContext = instance.context;\r\n  var contextType = ctor.contextType;\r\n  var nextContext = emptyContextObject;\r\n\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    nextContext = readContext(contextType);\r\n  } else {\r\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\r\n  }\r\n\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\r\n  // ever the previously attempted to render - not the \"current\". However,\r\n  // during componentDidUpdate we pass the \"current\" props.\r\n  // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n\r\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\r\n    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\r\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\r\n    }\r\n  }\r\n\r\n  resetHasForceUpdateBeforeProcessing();\r\n  var oldState = workInProgress.memoizedState;\r\n  var newState = instance.state = oldState;\r\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\r\n  newState = workInProgress.memoizedState;\r\n\r\n  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !(enableLazyContextPropagation   )) {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidUpdate === 'function') {\r\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.flags |= Update;\r\n      }\r\n    }\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.flags |= Snapshot;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  if (typeof getDerivedStateFromProps === 'function') {\r\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n\r\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,\r\n  // both before and after `shouldComponentUpdate` has been called. Not ideal,\r\n  // but I'm loath to refactor this function. This only happens for memoized\r\n  // components so it's not that common.\r\n  enableLazyContextPropagation   ;\r\n\r\n  if (shouldUpdate) {\r\n    // In order to support react-lifecycles-compat polyfilled components,\r\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\r\n      if (typeof instance.componentWillUpdate === 'function') {\r\n        instance.componentWillUpdate(newProps, newState, nextContext);\r\n      }\r\n\r\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\r\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\r\n      }\r\n    }\r\n\r\n    if (typeof instance.componentDidUpdate === 'function') {\r\n      workInProgress.flags |= Update;\r\n    }\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      workInProgress.flags |= Snapshot;\r\n    }\r\n  } else {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidUpdate === 'function') {\r\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.flags |= Update;\r\n      }\r\n    }\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.flags |= Snapshot;\r\n      }\r\n    } // If shouldComponentUpdate returned false, we should still update the\r\n    // memoized props/state to indicate that this work can be reused.\r\n\r\n\r\n    workInProgress.memoizedProps = newProps;\r\n    workInProgress.memoizedState = newState;\r\n  } // Update the existing instance's state, props, and context pointers even\r\n  // if shouldComponentUpdate returns false.\r\n\r\n\r\n  instance.props = newProps;\r\n  instance.state = newState;\r\n  instance.context = nextContext;\r\n  return shouldUpdate;\r\n}\r\n\r\nfunction createCapturedValueAtFiber(value, source) {\r\n  // If the value is an error, call this function immediately after it is thrown\r\n  // so the stack is accurate.\r\n  return {\r\n    value: value,\r\n    source: source,\r\n    stack: getStackByFiberInDevAndProd(source),\r\n    digest: null\r\n  };\r\n}\r\nfunction createCapturedValue(value, digest, stack) {\r\n  return {\r\n    value: value,\r\n    source: null,\r\n    stack: stack != null ? stack : null,\r\n    digest: digest != null ? digest : null\r\n  };\r\n}\r\n\r\n// This module is forked in different environments.\r\n// By default, return `true` to log errors to the console.\r\n// Forks can return `false` if this isn't desirable.\r\nfunction showErrorDialog(boundary, errorInfo) {\r\n  return true;\r\n}\r\n\r\nfunction logCapturedError(boundary, errorInfo) {\r\n  try {\r\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\r\n    // This enables renderers like ReactNative to better manage redbox behavior.\r\n\r\n    if (logError === false) {\r\n      return;\r\n    }\r\n\r\n    var error = errorInfo.value;\r\n\r\n    if (true) {\r\n      var source = errorInfo.source;\r\n      var stack = errorInfo.stack;\r\n      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling\r\n      // `preventDefault()` in window `error` handler.\r\n      // We record this information as an expando on the error.\r\n\r\n      if (error != null && error._suppressLogging) {\r\n        if (boundary.tag === ClassComponent) {\r\n          // The error is recoverable and was silenced.\r\n          // Ignore it and don't print the stack addendum.\r\n          // This is handy for testing error boundaries without noise.\r\n          return;\r\n        } // The error is fatal. Since the silencing might have\r\n        // been accidental, we'll surface it anyway.\r\n        // However, the browser would have silenced the original error\r\n        // so we'll print it first, and then print the stack addendum.\r\n\r\n\r\n        console['error'](error); // Don't transform to our wrapper\r\n        // For a more detailed description of this block, see:\r\n        // https://github.com/facebook/react/pull/13384\r\n      }\r\n\r\n      var componentName = source ? getComponentNameFromFiber(source) : null;\r\n      var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : 'The above error occurred in one of your React components:';\r\n      var errorBoundaryMessage;\r\n\r\n      if (boundary.tag === HostRoot) {\r\n        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\r\n      } else {\r\n        var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';\r\n        errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\r\n      }\r\n\r\n      var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\r\n      // We don't include the original error message and JS stack because the browser\r\n      // has already printed it. Even if the application swallows the error, it is still\r\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\r\n\r\n      console['error'](combinedMessage); // Don't transform to our wrapper\r\n    } else {\r\n      // In production, we print the error directly.\r\n      // This will include the message, the JS stack, and anything the browser wants to show.\r\n      // We pass the error object instead of custom message so that the browser displays the error natively.\r\n      console['error'](error); // Don't transform to our wrapper\r\n    }\r\n  } catch (e) {\r\n    // This method must not throw, or React internal state will get messed up.\r\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\r\n    // we want to report this error outside of the normal stack as a last resort.\r\n    // https://github.com/facebook/react/issues/13188\r\n    setTimeout(function () {\r\n      throw e;\r\n    });\r\n  }\r\n}\r\n\r\nvar PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;\r\n\r\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\r\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\r\n\r\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\r\n  // being called \"element\".\r\n\r\n  update.payload = {\r\n    element: null\r\n  };\r\n  var error = errorInfo.value;\r\n\r\n  update.callback = function () {\r\n    onUncaughtError(error);\r\n    logCapturedError(fiber, errorInfo);\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\r\n  var update = createUpdate(NoTimestamp, lane);\r\n  update.tag = CaptureUpdate;\r\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\r\n\r\n  if (typeof getDerivedStateFromError === 'function') {\r\n    var error$1 = errorInfo.value;\r\n\r\n    update.payload = function () {\r\n      return getDerivedStateFromError(error$1);\r\n    };\r\n\r\n    update.callback = function () {\r\n      {\r\n        markFailedErrorBoundaryForHotReloading(fiber);\r\n      }\r\n\r\n      logCapturedError(fiber, errorInfo);\r\n    };\r\n  }\r\n\r\n  var inst = fiber.stateNode;\r\n\r\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\r\n    update.callback = function callback() {\r\n      {\r\n        markFailedErrorBoundaryForHotReloading(fiber);\r\n      }\r\n\r\n      logCapturedError(fiber, errorInfo);\r\n\r\n      if (typeof getDerivedStateFromError !== 'function') {\r\n        // To preserve the preexisting retry behavior of error boundaries,\r\n        // we keep track of which ones already failed during this batch.\r\n        // This gets reset before we yield back to the browser.\r\n        // TODO: Warn in strict mode if getDerivedStateFromError is\r\n        // not defined.\r\n        markLegacyErrorBoundaryAsFailed(this);\r\n      }\r\n\r\n      var error$1 = errorInfo.value;\r\n      var stack = errorInfo.stack;\r\n      this.componentDidCatch(error$1, {\r\n        componentStack: stack !== null ? stack : ''\r\n      });\r\n\r\n      {\r\n        if (typeof getDerivedStateFromError !== 'function') {\r\n          // If componentDidCatch is the only error boundary method defined,\r\n          // then it needs to call setState to recover from errors.\r\n          // If no state update is scheduled then the boundary will swallow the error.\r\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\r\n            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentNameFromFiber(fiber) || 'Unknown');\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return update;\r\n}\r\n\r\nfunction attachPingListener(root, wakeable, lanes) {\r\n  // Attach a ping listener\r\n  //\r\n  // The data might resolve before we have a chance to commit the fallback. Or,\r\n  // in the case of a refresh, we'll never commit a fallback. So we need to\r\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\r\n  // try rendering the tree again.\r\n  //\r\n  // Only attach a listener if one does not already exist for the lanes\r\n  // we're currently rendering (which acts like a \"thread ID\" here).\r\n  //\r\n  // We only need to do this in concurrent mode. Legacy Suspense always\r\n  // commits fallbacks synchronously, so there are no pings.\r\n  var pingCache = root.pingCache;\r\n  var threadIDs;\r\n\r\n  if (pingCache === null) {\r\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\r\n    threadIDs = new Set();\r\n    pingCache.set(wakeable, threadIDs);\r\n  } else {\r\n    threadIDs = pingCache.get(wakeable);\r\n\r\n    if (threadIDs === undefined) {\r\n      threadIDs = new Set();\r\n      pingCache.set(wakeable, threadIDs);\r\n    }\r\n  }\r\n\r\n  if (!threadIDs.has(lanes)) {\r\n    // Memoize using the thread ID to prevent redundant listeners.\r\n    threadIDs.add(lanes);\r\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\r\n\r\n    {\r\n      if (isDevToolsPresent) {\r\n        // If we have pending work still, restore the original updaters\r\n        restorePendingUpdaters(root, lanes);\r\n      }\r\n    }\r\n\r\n    wakeable.then(ping, ping);\r\n  }\r\n}\r\n\r\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\r\n  // Retry listener\r\n  //\r\n  // If the fallback does commit, we need to attach a different type of\r\n  // listener. This one schedules an update on the Suspense boundary to turn\r\n  // the fallback state off.\r\n  //\r\n  // Stash the wakeable on the boundary fiber so we can access it in the\r\n  // commit phase.\r\n  //\r\n  // When the wakeable resolves, we'll attempt to render the boundary\r\n  // again (\"retry\").\r\n  var wakeables = suspenseBoundary.updateQueue;\r\n\r\n  if (wakeables === null) {\r\n    var updateQueue = new Set();\r\n    updateQueue.add(wakeable);\r\n    suspenseBoundary.updateQueue = updateQueue;\r\n  } else {\r\n    wakeables.add(wakeable);\r\n  }\r\n}\r\n\r\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\r\n  // A legacy mode Suspense quirk, only relevant to hook components.\r\n\r\n\r\n  var tag = sourceFiber.tag;\r\n\r\n  if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\r\n    var currentSource = sourceFiber.alternate;\r\n\r\n    if (currentSource) {\r\n      sourceFiber.updateQueue = currentSource.updateQueue;\r\n      sourceFiber.memoizedState = currentSource.memoizedState;\r\n      sourceFiber.lanes = currentSource.lanes;\r\n    } else {\r\n      sourceFiber.updateQueue = null;\r\n      sourceFiber.memoizedState = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\r\n  var node = returnFiber;\r\n\r\n  do {\r\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\r\n      return node;\r\n    } // This boundary already captured during this render. Continue to the next\r\n    // boundary.\r\n\r\n\r\n    node = node.return;\r\n  } while (node !== null);\r\n\r\n  return null;\r\n}\r\n\r\nfunction markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\r\n  // This marks a Suspense boundary so that when we're unwinding the stack,\r\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\r\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\r\n    // Legacy Mode Suspense\r\n    //\r\n    // If the boundary is in legacy mode, we should *not*\r\n    // suspend the commit. Pretend as if the suspended component rendered\r\n    // null and keep rendering. When the Suspense boundary completes,\r\n    // we'll do a second pass to render the fallback.\r\n    if (suspenseBoundary === returnFiber) {\r\n      // Special case where we suspended while reconciling the children of\r\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\r\n      // when a React.lazy component is a direct child of a\r\n      // Suspense boundary.\r\n      //\r\n      // Suspense boundaries are implemented as multiple fibers, but they\r\n      // are a single conceptual unit. The legacy mode behavior where we\r\n      // pretend the suspended fiber committed as `null` won't work,\r\n      // because in this case the \"suspended\" fiber is the inner\r\n      // Offscreen wrapper.\r\n      //\r\n      // Because the contents of the boundary haven't started rendering\r\n      // yet (i.e. nothing in the tree has partially rendered) we can\r\n      // switch to the regular, concurrent mode behavior: mark the\r\n      // boundary with ShouldCapture and enter the unwind phase.\r\n      suspenseBoundary.flags |= ShouldCapture;\r\n    } else {\r\n      suspenseBoundary.flags |= DidCapture;\r\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\r\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\r\n      // all lifecycle effect tags.\r\n\r\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\r\n\r\n      if (sourceFiber.tag === ClassComponent) {\r\n        var currentSourceFiber = sourceFiber.alternate;\r\n\r\n        if (currentSourceFiber === null) {\r\n          // This is a new mount. Change the tag so it's not mistaken for a\r\n          // completed class component. For example, we should not call\r\n          // componentWillUnmount if it is deleted.\r\n          sourceFiber.tag = IncompleteClassComponent;\r\n        } else {\r\n          // When we try rendering again, we should not reuse the current fiber,\r\n          // since it's known to be in an inconsistent state. Use a force update to\r\n          // prevent a bail out.\r\n          var update = createUpdate(NoTimestamp, SyncLane);\r\n          update.tag = ForceUpdate;\r\n          enqueueUpdate(sourceFiber, update, SyncLane);\r\n        }\r\n      } // The source fiber did not complete. Mark it with Sync priority to\r\n      // indicate that it still has pending work.\r\n\r\n\r\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\r\n    }\r\n\r\n    return suspenseBoundary;\r\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\r\n  // with the normal suspend path.\r\n  //\r\n  // After this we'll use a set of heuristics to determine whether this\r\n  // render pass will run to completion or restart or \"suspend\" the commit.\r\n  // The actual logic for this is spread out in different places.\r\n  //\r\n  // This first principle is that if we're going to suspend when we complete\r\n  // a root, then we should also restart if we get an update or ping that\r\n  // might unsuspend it, and vice versa. The only reason to suspend is\r\n  // because you think you might want to restart before committing. However,\r\n  // it doesn't make sense to restart only while in the period we're suspended.\r\n  //\r\n  // Restarting too aggressively is also not good because it starves out any\r\n  // intermediate loading state. So we use heuristics to determine when.\r\n  // Suspense Heuristics\r\n  //\r\n  // If nothing threw a Promise or all the same fallbacks are already showing,\r\n  // then don't suspend/restart.\r\n  //\r\n  // If this is an initial render of a new tree of Suspense boundaries and\r\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\r\n  // that we can show the initial loading state as quickly as possible.\r\n  //\r\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\r\n  // a fallback, then we should always suspend/restart. Transitions apply\r\n  // to this case. If none is defined, JND is used instead.\r\n  //\r\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\r\n  // another level, but there's still an inner boundary that would show a fallback,\r\n  // then we suspend/restart for 500ms since the last time we showed a fallback\r\n  // anywhere in the tree. This effectively throttles progressive loading into a\r\n  // consistent train of commits. This also gives us an opportunity to restart to\r\n  // get to the completed state slightly earlier.\r\n  //\r\n  // If there's ambiguity due to batching it's resolved in preference of:\r\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\r\n  //\r\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\r\n  // ensure that new initial loading states can commit as soon as possible.\r\n\r\n\r\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\r\n  // the begin phase to prevent an early bailout.\r\n\r\n  suspenseBoundary.lanes = rootRenderLanes;\r\n  return suspenseBoundary;\r\n}\r\n\r\nfunction throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\r\n  // The source fiber did not complete.\r\n  sourceFiber.flags |= Incomplete;\r\n\r\n  {\r\n    if (isDevToolsPresent) {\r\n      // If we have pending work still, restore the original updaters\r\n      restorePendingUpdaters(root, rootRenderLanes);\r\n    }\r\n  }\r\n\r\n  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\r\n    // This is a wakeable. The component suspended.\r\n    var wakeable = value;\r\n    resetSuspendedComponent(sourceFiber);\r\n\r\n    {\r\n      if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\r\n        markDidThrowWhileHydratingDEV();\r\n      }\r\n    }\r\n\r\n\r\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\r\n\r\n    if (suspenseBoundary !== null) {\r\n      suspenseBoundary.flags &= ~ForceClientRender;\r\n      markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always\r\n      // commits fallbacks synchronously, so there are no pings.\r\n\r\n      if (suspenseBoundary.mode & ConcurrentMode) {\r\n        attachPingListener(root, wakeable, rootRenderLanes);\r\n      }\r\n\r\n      attachRetryListener(suspenseBoundary, root, wakeable);\r\n      return;\r\n    } else {\r\n      // No boundary was found. Unless this is a sync update, this is OK.\r\n      // We can suspend and wait for more data to arrive.\r\n      if (!includesSyncLane(rootRenderLanes)) {\r\n        // This is not a sync update. Suspend. Since we're not activating a\r\n        // Suspense boundary, this will unwind all the way to the root without\r\n        // performing a second pass to render a fallback. (This is arguably how\r\n        // refresh transitions should work, too, since we're not going to commit\r\n        // the fallbacks anyway.)\r\n        //\r\n        // This case also applies to initial hydration.\r\n        attachPingListener(root, wakeable, rootRenderLanes);\r\n        renderDidSuspendDelayIfPossible();\r\n        return;\r\n      } // This is a sync/discrete update. We treat this case like an error\r\n      // because discrete renders are expected to produce a complete tree\r\n      // synchronously to maintain consistency with external state.\r\n\r\n\r\n      var uncaughtSuspenseError = new Error('A component suspended while responding to synchronous input. This ' + 'will cause the UI to be replaced with a loading indicator. To ' + 'fix, updates that suspend should be wrapped ' + 'with startTransition.'); // If we're outside a transition, fall through to the regular error path.\r\n      // The error will be caught by the nearest suspense boundary.\r\n\r\n      value = uncaughtSuspenseError;\r\n    }\r\n  } else {\r\n    // This is a regular error, not a Suspense wakeable.\r\n    if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\r\n      markDidThrowWhileHydratingDEV();\r\n\r\n      var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by\r\n      // discarding the dehydrated content and switching to a client render.\r\n      // Instead of surfacing the error, find the nearest Suspense boundary\r\n      // and render it again without hydration.\r\n\r\n\r\n      if (_suspenseBoundary !== null) {\r\n        if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {\r\n          // Set a flag to indicate that we should try rendering the normal\r\n          // children again, not the fallback.\r\n          _suspenseBoundary.flags |= ForceClientRender;\r\n        }\r\n\r\n        markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should\r\n        // still log it so it can be fixed.\r\n\r\n        queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  value = createCapturedValueAtFiber(value, sourceFiber);\r\n  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start\r\n  // over and traverse parent path again, this time treating the exception\r\n  // as an error.\r\n\r\n  var workInProgress = returnFiber;\r\n\r\n  do {\r\n    switch (workInProgress.tag) {\r\n      case HostRoot:\r\n        {\r\n          var _errorInfo = value;\r\n          workInProgress.flags |= ShouldCapture;\r\n          var lane = pickArbitraryLane(rootRenderLanes);\r\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\r\n          var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\r\n          enqueueCapturedUpdate(workInProgress, update);\r\n          return;\r\n        }\r\n\r\n      case ClassComponent:\r\n        // Capture and retry\r\n        var errorInfo = value;\r\n        var ctor = workInProgress.type;\r\n        var instance = workInProgress.stateNode;\r\n\r\n        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\r\n          workInProgress.flags |= ShouldCapture;\r\n\r\n          var _lane = pickArbitraryLane(rootRenderLanes);\r\n\r\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\r\n\r\n          var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\r\n\r\n          enqueueCapturedUpdate(workInProgress, _update);\r\n          return;\r\n        }\r\n\r\n        break;\r\n    }\r\n\r\n    workInProgress = workInProgress.return;\r\n  } while (workInProgress !== null);\r\n}\r\n\r\nfunction getSuspendedCache() {\r\n  {\r\n    return null;\r\n  } // This function is called when a Suspense boundary suspends. It returns the\r\n}\r\n\r\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\r\nvar didReceiveUpdate = false;\r\nvar didWarnAboutBadClass;\r\nvar didWarnAboutModulePatternComponent;\r\nvar didWarnAboutContextTypeOnFunctionComponent;\r\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\r\nvar didWarnAboutFunctionRefs;\r\nvar didWarnAboutReassigningProps;\r\nvar didWarnAboutRevealOrder;\r\nvar didWarnAboutTailOptions;\r\nvar didWarnAboutDefaultPropsOnFunctionComponent;\r\n\r\n{\r\n  didWarnAboutBadClass = {};\r\n  didWarnAboutModulePatternComponent = {};\r\n  didWarnAboutContextTypeOnFunctionComponent = {};\r\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\r\n  didWarnAboutFunctionRefs = {};\r\n  didWarnAboutReassigningProps = false;\r\n  didWarnAboutRevealOrder = {};\r\n  didWarnAboutTailOptions = {};\r\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\r\n}\r\n\r\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\r\n  if (current === null) {\r\n    // If this is a fresh new component that hasn't been rendered yet, we\r\n    // won't update its child set by applying minimal side-effects. Instead,\r\n    // we will add them all to the child before it gets rendered. That means\r\n    // we can optimize this reconciliation pass by not tracking side-effects.\r\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\r\n  } else {\r\n    // If the current child is the same as the work in progress, it means that\r\n    // we haven't yet started any work on these children. Therefore, we use\r\n    // the clone algorithm to create a copy of all the current children.\r\n    // If we had any progressed work already, that is invalid at this point so\r\n    // let's throw it out.\r\n    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\r\n  }\r\n}\r\n\r\nfunction forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\r\n  // This function is fork of reconcileChildren. It's used in cases where we\r\n  // want to reconcile without matching against the existing set. This has the\r\n  // effect of all current children being unmounted; even if the type and key\r\n  // are the same, the old child is unmounted and a new child is created.\r\n  //\r\n  // To do this, we're going to go through the reconcile algorithm twice. In\r\n  // the first pass, we schedule a deletion for all the current children by\r\n  // passing null.\r\n  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we\r\n  // pass null in place of where we usually pass the current child set. This has\r\n  // the effect of remounting all children regardless of whether their\r\n  // identities match.\r\n\r\n  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\r\n}\r\n\r\nfunction updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\r\n  // TODO: current can be non-null here even if the component\r\n  // hasn't yet mounted. This happens after the first render suspends.\r\n  // We'll need to figure out if this is fine or can cause issues.\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentNameFromType(Component));\r\n      }\r\n    }\r\n  }\r\n\r\n  var render = Component.render;\r\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\r\n\r\n  var nextChildren;\r\n  var hasId;\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n\r\n  {\r\n    markComponentRenderStarted(workInProgress);\r\n  }\r\n\r\n  {\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    setIsRendering(true);\r\n    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\r\n    hasId = checkDidRenderIdHook();\r\n\r\n    if ( workInProgress.mode & StrictLegacyMode) {\r\n      setIsStrictModeForDevtools(true);\r\n\r\n      try {\r\n        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\r\n        hasId = checkDidRenderIdHook();\r\n      } finally {\r\n        setIsStrictModeForDevtools(false);\r\n      }\r\n    }\r\n\r\n    setIsRendering(false);\r\n  }\r\n\r\n  {\r\n    markComponentRenderStopped();\r\n  }\r\n\r\n  if (current !== null && !didReceiveUpdate) {\r\n    bailoutHooks(current, workInProgress, renderLanes);\r\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n  }\r\n\r\n  if (getIsHydrating() && hasId) {\r\n    pushMaterializedTreeId(workInProgress);\r\n  } // React DevTools reads this flag.\r\n\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\r\n  if (current === null) {\r\n    var type = Component.type;\r\n\r\n    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\r\n    Component.defaultProps === undefined) {\r\n      var resolvedType = type;\r\n\r\n      {\r\n        resolvedType = resolveFunctionForHotReloading(type);\r\n      } // If this is a plain function component without default props,\r\n      // and with only the default shallow comparison, we upgrade it\r\n      // to a SimpleMemoComponent to allow fast path updates.\r\n\r\n\r\n      workInProgress.tag = SimpleMemoComponent;\r\n      workInProgress.type = resolvedType;\r\n\r\n      {\r\n        validateFunctionComponentInDev(workInProgress, type);\r\n      }\r\n\r\n      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\r\n    }\r\n\r\n    {\r\n      var innerPropTypes = type.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        // Inner memo component props aren't currently validated in createElement.\r\n        // We could move it there, but we'd still need this for lazy code path.\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentNameFromType(type));\r\n      }\r\n\r\n      if ( Component.defaultProps !== undefined) {\r\n        var componentName = getComponentNameFromType(type) || 'Unknown';\r\n\r\n        if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\r\n          error('%s: Support for defaultProps will be removed from memo components ' + 'in a future major release. Use JavaScript default parameters instead.', componentName);\r\n\r\n          didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\r\n    child.ref = workInProgress.ref;\r\n    child.return = workInProgress;\r\n    workInProgress.child = child;\r\n    return child;\r\n  }\r\n\r\n  {\r\n    var _type = Component.type;\r\n    var _innerPropTypes = _type.propTypes;\r\n\r\n    if (_innerPropTypes) {\r\n      // Inner memo component props aren't currently validated in createElement.\r\n      // We could move it there, but we'd still need this for lazy code path.\r\n      checkPropTypes(_innerPropTypes, nextProps, // Resolved props\r\n      'prop', getComponentNameFromType(_type));\r\n    }\r\n  }\r\n\r\n  var currentChild = current.child; // This is always exactly one child\r\n\r\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\r\n\r\n  if (!hasScheduledUpdateOrContext) {\r\n    // This will be the props with resolved defaultProps,\r\n    // unlike current.memoizedProps which will be the unresolved ones.\r\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\r\n\r\n    var compare = Component.compare;\r\n    compare = compare !== null ? compare : shallowEqual;\r\n\r\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\r\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n    }\r\n  } // React DevTools reads this flag.\r\n\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  var newChild = createWorkInProgress(currentChild, nextProps);\r\n  newChild.ref = workInProgress.ref;\r\n  newChild.return = workInProgress;\r\n  workInProgress.child = newChild;\r\n  return newChild;\r\n}\r\n\r\nfunction updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\r\n  // TODO: current can be non-null here even if the component\r\n  // hasn't yet mounted. This happens when the inner render suspends.\r\n  // We'll need to figure out if this is fine or can cause issues.\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var outerMemoType = workInProgress.elementType;\r\n\r\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\r\n        // We warn when you define propTypes on lazy()\r\n        // so let's just skip over it to find memo() outer wrapper.\r\n        // Inner props for memo are validated later.\r\n        var lazyComponent = outerMemoType;\r\n        var payload = lazyComponent._payload;\r\n        var init = lazyComponent._init;\r\n\r\n        try {\r\n          outerMemoType = init(payload);\r\n        } catch (x) {\r\n          outerMemoType = null;\r\n        } // Inner propTypes will be validated in the function component path.\r\n\r\n\r\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\r\n\r\n        if (outerPropTypes) {\r\n          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\r\n          'prop', getComponentNameFromType(outerMemoType));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (current !== null) {\r\n    var prevProps = current.memoizedProps;\r\n\r\n    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.\r\n     workInProgress.type === current.type )) {\r\n      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we\r\n      // would during a normal fiber bailout.\r\n      //\r\n      // We don't have strong guarantees that the props object is referentially\r\n      // equal during updates where we can't bail out anyway — like if the props\r\n      // are shallowly equal, but there's a local state or context update in the\r\n      // same batch.\r\n      //\r\n      // However, as a principle, we should aim to make the behavior consistent\r\n      // across different ways of memoizing a component. For example, React.memo\r\n      // has a different internal Fiber layout if you pass a normal function\r\n      // component (SimpleMemoComponent) versus if you pass a different type\r\n      // like forwardRef (MemoComponent). But this is an implementation detail.\r\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\r\n      // affect whether the props object is reused during a bailout.\r\n\r\n      workInProgress.pendingProps = nextProps = prevProps;\r\n\r\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\r\n        // The pending lanes were cleared at the beginning of beginWork. We're\r\n        // about to bail out, but there might be other lanes that weren't\r\n        // included in the current render. Usually, the priority level of the\r\n        // remaining updates is accumulated during the evaluation of the\r\n        // component (i.e. when processing the update queue). But since since\r\n        // we're bailing out early *without* evaluating the component, we need\r\n        // to account for it here, too. Reset to the value of the current fiber.\r\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\r\n        // because a MemoComponent fiber does not have hooks or an update queue;\r\n        // rather, it wraps around an inner component, which may or may not\r\n        // contains hooks.\r\n        // TODO: Move the reset at in beginWork out of the common path so that\r\n        // this is no longer necessary.\r\n        workInProgress.lanes = current.lanes;\r\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\r\n        // This is a special case that only exists for legacy mode.\r\n        // See https://github.com/facebook/react/pull/19216.\r\n        didReceiveUpdate = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\r\n}\r\n\r\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\r\n  var nextProps = workInProgress.pendingProps;\r\n  var nextChildren = nextProps.children;\r\n  var prevState = current !== null ? current.memoizedState : null;\r\n\r\n  if (nextProps.mode === 'hidden' || enableLegacyHidden ) {\r\n    // Rendering a hidden tree.\r\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n      // In legacy sync mode, don't defer the subtree. Render it now.\r\n      // TODO: Consider how Offscreen should work with transitions in the future\r\n      var nextState = {\r\n        baseLanes: NoLanes,\r\n        cachePool: null,\r\n        transitions: null\r\n      };\r\n      workInProgress.memoizedState = nextState;\r\n\r\n      pushRenderLanes(workInProgress, renderLanes);\r\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\r\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\r\n      // and resume this tree later.\r\n\r\n      var nextBaseLanes;\r\n\r\n      if (prevState !== null) {\r\n        var prevBaseLanes = prevState.baseLanes;\r\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\r\n      } else {\r\n        nextBaseLanes = renderLanes;\r\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\r\n\r\n\r\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\r\n      var _nextState = {\r\n        baseLanes: nextBaseLanes,\r\n        cachePool: spawnedCachePool,\r\n        transitions: null\r\n      };\r\n      workInProgress.memoizedState = _nextState;\r\n      workInProgress.updateQueue = null;\r\n      // to avoid a push/pop misalignment.\r\n\r\n\r\n      pushRenderLanes(workInProgress, nextBaseLanes);\r\n\r\n      return null;\r\n    } else {\r\n      // This is the second render. The surrounding visible content has already\r\n      // committed. Now we resume rendering the hidden tree.\r\n      // Rendering at offscreen, so we can clear the base lanes.\r\n      var _nextState2 = {\r\n        baseLanes: NoLanes,\r\n        cachePool: null,\r\n        transitions: null\r\n      };\r\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\r\n\r\n      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\r\n\r\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\r\n    }\r\n  } else {\r\n    // Rendering a visible tree.\r\n    var _subtreeRenderLanes;\r\n\r\n    if (prevState !== null) {\r\n      // We're going from hidden -> visible.\r\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\r\n\r\n      workInProgress.memoizedState = null;\r\n    } else {\r\n      // We weren't previously hidden, and we still aren't, so there's nothing\r\n      // special to do. Need to push to the stack regardless, though, to avoid\r\n      // a push/pop misalignment.\r\n      _subtreeRenderLanes = renderLanes;\r\n    }\r\n\r\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\r\n  }\r\n\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\r\n\r\nfunction updateFragment(current, workInProgress, renderLanes) {\r\n  var nextChildren = workInProgress.pendingProps;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateMode(current, workInProgress, renderLanes) {\r\n  var nextChildren = workInProgress.pendingProps.children;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateProfiler(current, workInProgress, renderLanes) {\r\n  {\r\n    workInProgress.flags |= Update;\r\n\r\n    {\r\n      // Reset effect durations for the next eventual effect phase.\r\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\r\n      var stateNode = workInProgress.stateNode;\r\n      stateNode.effectDuration = 0;\r\n      stateNode.passiveEffectDuration = 0;\r\n    }\r\n  }\r\n\r\n  var nextProps = workInProgress.pendingProps;\r\n  var nextChildren = nextProps.children;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction markRef(current, workInProgress) {\r\n  var ref = workInProgress.ref;\r\n\r\n  if (current === null && ref !== null || current !== null && current.ref !== ref) {\r\n    // Schedule a Ref effect\r\n    workInProgress.flags |= Ref;\r\n\r\n    {\r\n      workInProgress.flags |= RefStatic;\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentNameFromType(Component));\r\n      }\r\n    }\r\n  }\r\n\r\n  var context;\r\n\r\n  {\r\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\r\n    context = getMaskedContext(workInProgress, unmaskedContext);\r\n  }\r\n\r\n  var nextChildren;\r\n  var hasId;\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n\r\n  {\r\n    markComponentRenderStarted(workInProgress);\r\n  }\r\n\r\n  {\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    setIsRendering(true);\r\n    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\r\n    hasId = checkDidRenderIdHook();\r\n\r\n    if ( workInProgress.mode & StrictLegacyMode) {\r\n      setIsStrictModeForDevtools(true);\r\n\r\n      try {\r\n        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\r\n        hasId = checkDidRenderIdHook();\r\n      } finally {\r\n        setIsStrictModeForDevtools(false);\r\n      }\r\n    }\r\n\r\n    setIsRendering(false);\r\n  }\r\n\r\n  {\r\n    markComponentRenderStopped();\r\n  }\r\n\r\n  if (current !== null && !didReceiveUpdate) {\r\n    bailoutHooks(current, workInProgress, renderLanes);\r\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n  }\r\n\r\n  if (getIsHydrating() && hasId) {\r\n    pushMaterializedTreeId(workInProgress);\r\n  } // React DevTools reads this flag.\r\n\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\r\n  {\r\n    // This is used by DevTools to force a boundary to error.\r\n    switch (shouldError(workInProgress)) {\r\n      case false:\r\n        {\r\n          var _instance = workInProgress.stateNode;\r\n          var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\r\n          // Is there a better way to do this?\r\n\r\n          var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\r\n          var state = tempInstance.state;\r\n\r\n          _instance.updater.enqueueSetState(_instance, state, null);\r\n\r\n          break;\r\n        }\r\n\r\n      case true:\r\n        {\r\n          workInProgress.flags |= DidCapture;\r\n          workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\r\n\r\n          var error$1 = new Error('Simulated error coming from DevTools');\r\n          var lane = pickArbitraryLane(renderLanes);\r\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\r\n\r\n          var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);\r\n          enqueueCapturedUpdate(workInProgress, update);\r\n          break;\r\n        }\r\n    }\r\n\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentNameFromType(Component));\r\n      }\r\n    }\r\n  } // Push context providers early to prevent context stack mismatches.\r\n  // During mounting we don't know the child context yet as the instance doesn't exist.\r\n  // We will invalidate the child context in finishClassComponent() right after rendering.\r\n\r\n\r\n  var hasContext;\r\n\r\n  if (isContextProvider(Component)) {\r\n    hasContext = true;\r\n    pushContextProvider(workInProgress);\r\n  } else {\r\n    hasContext = false;\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  var instance = workInProgress.stateNode;\r\n  var shouldUpdate;\r\n\r\n  if (instance === null) {\r\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.\r\n\r\n    constructClassInstance(workInProgress, Component, nextProps);\r\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\r\n    shouldUpdate = true;\r\n  } else if (current === null) {\r\n    // In a resume, we'll already have an instance we can reuse.\r\n    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\r\n  } else {\r\n    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\r\n  }\r\n\r\n  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\r\n\r\n  {\r\n    var inst = workInProgress.stateNode;\r\n\r\n    if (shouldUpdate && inst.props !== nextProps) {\r\n      if (!didWarnAboutReassigningProps) {\r\n        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromFiber(workInProgress) || 'a component');\r\n      }\r\n\r\n      didWarnAboutReassigningProps = true;\r\n    }\r\n  }\r\n\r\n  return nextUnitOfWork;\r\n}\r\n\r\nfunction finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\r\n  // Refs should update even if shouldComponentUpdate returns false\r\n  markRef(current, workInProgress);\r\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\r\n\r\n  if (!shouldUpdate && !didCaptureError) {\r\n    // Context providers should defer to sCU for rendering\r\n    if (hasContext) {\r\n      invalidateContextProvider(workInProgress, Component, false);\r\n    }\r\n\r\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n  }\r\n\r\n  var instance = workInProgress.stateNode; // Rerender\r\n\r\n  ReactCurrentOwner$1.current = workInProgress;\r\n  var nextChildren;\r\n\r\n  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\r\n    // If we captured an error, but getDerivedStateFromError is not defined,\r\n    // unmount all the children. componentDidCatch will schedule an update to\r\n    // re-render a fallback. This is temporary until we migrate everyone to\r\n    // the new API.\r\n    // TODO: Warn in a future release.\r\n    nextChildren = null;\r\n\r\n    {\r\n      stopProfilerTimerIfRunning();\r\n    }\r\n  } else {\r\n    {\r\n      markComponentRenderStarted(workInProgress);\r\n    }\r\n\r\n    {\r\n      setIsRendering(true);\r\n      nextChildren = instance.render();\r\n\r\n      if ( workInProgress.mode & StrictLegacyMode) {\r\n        setIsStrictModeForDevtools(true);\r\n\r\n        try {\r\n          instance.render();\r\n        } finally {\r\n          setIsStrictModeForDevtools(false);\r\n        }\r\n      }\r\n\r\n      setIsRendering(false);\r\n    }\r\n\r\n    {\r\n      markComponentRenderStopped();\r\n    }\r\n  } // React DevTools reads this flag.\r\n\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n\r\n  if (current !== null && didCaptureError) {\r\n    // If we're recovering from an error, reconcile without reusing any of\r\n    // the existing children. Conceptually, the normal children and the children\r\n    // that are shown on error are two different sets, so we shouldn't reuse\r\n    // normal children even if their identities match.\r\n    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\r\n  } else {\r\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  } // Memoize state using the values we just used to render.\r\n  // TODO: Restructure so we never read values from the instance.\r\n\r\n\r\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\r\n\r\n  if (hasContext) {\r\n    invalidateContextProvider(workInProgress, Component, true);\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction pushHostRootContext(workInProgress) {\r\n  var root = workInProgress.stateNode;\r\n\r\n  if (root.pendingContext) {\r\n    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\r\n  } else if (root.context) {\r\n    // Should always be set\r\n    pushTopLevelContextObject(workInProgress, root.context, false);\r\n  }\r\n\r\n  pushHostContainer(workInProgress, root.containerInfo);\r\n}\r\n\r\nfunction updateHostRoot(current, workInProgress, renderLanes) {\r\n  pushHostRootContext(workInProgress);\r\n\r\n  if (current === null) {\r\n    throw new Error('Should have a current fiber. This is a bug in React.');\r\n  }\r\n\r\n  var nextProps = workInProgress.pendingProps;\r\n  var prevState = workInProgress.memoizedState;\r\n  var prevChildren = prevState.element;\r\n  cloneUpdateQueue(current, workInProgress);\r\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\r\n  var nextState = workInProgress.memoizedState;\r\n  var root = workInProgress.stateNode;\r\n  // being called \"element\".\r\n\r\n\r\n  var nextChildren = nextState.element;\r\n\r\n  if (supportsHydration && prevState.isDehydrated) {\r\n    // This is a hydration root whose shell has not yet hydrated. We should\r\n    // attempt to hydrate.\r\n    // Flip isDehydrated to false to indicate that when this render\r\n    // finishes, the root will no longer be dehydrated.\r\n    var overrideState = {\r\n      element: nextChildren,\r\n      isDehydrated: false,\r\n      cache: nextState.cache,\r\n      pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,\r\n      transitions: nextState.transitions\r\n    };\r\n    var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't\r\n    // have reducer functions so it doesn't need rebasing.\r\n\r\n    updateQueue.baseState = overrideState;\r\n    workInProgress.memoizedState = overrideState;\r\n\r\n    if (workInProgress.flags & ForceClientRender) {\r\n      // Something errored during a previous attempt to hydrate the shell, so we\r\n      // forced a client render.\r\n      var recoverableError = createCapturedValueAtFiber(new Error('There was an error while hydrating. Because the error happened outside ' + 'of a Suspense boundary, the entire root will switch to ' + 'client rendering.'), workInProgress);\r\n      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);\r\n    } else if (nextChildren !== prevChildren) {\r\n      var _recoverableError = createCapturedValueAtFiber(new Error('This root received an early update, before anything was able ' + 'hydrate. Switched the entire root to client rendering.'), workInProgress);\r\n\r\n      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);\r\n    } else {\r\n      // The outermost shell has not hydrated yet. Start hydrating.\r\n      enterHydrationState(workInProgress);\r\n\r\n      var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\r\n      workInProgress.child = child;\r\n      var node = child;\r\n\r\n      while (node) {\r\n        // Mark each child as hydrating. This is a fast path to know whether this\r\n        // tree is part of a hydrating tree. This is used to determine if a child\r\n        // node has fully mounted yet, and for scheduling event replaying.\r\n        // Conceptually this is similar to Placement in that a new subtree is\r\n        // inserted into the React tree here. It just happens to not need DOM\r\n        // mutations because it already exists.\r\n        node.flags = node.flags & ~Placement | Hydrating;\r\n        node = node.sibling;\r\n      }\r\n    }\r\n  } else {\r\n    // Root is not dehydrated. Either this is a client-only root, or it\r\n    // already hydrated.\r\n    resetHydrationState();\r\n\r\n    if (nextChildren === prevChildren) {\r\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n    }\r\n\r\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {\r\n  // Revert to client rendering.\r\n  resetHydrationState();\r\n  queueHydrationError(recoverableError);\r\n  workInProgress.flags |= ForceClientRender;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateHostComponent(current, workInProgress, renderLanes) {\r\n  pushHostContext(workInProgress);\r\n\r\n  if (current === null) {\r\n    tryToClaimNextHydratableInstance(workInProgress);\r\n  }\r\n\r\n  var type = workInProgress.type;\r\n  var nextProps = workInProgress.pendingProps;\r\n  var prevProps = current !== null ? current.memoizedProps : null;\r\n  var nextChildren = nextProps.children;\r\n  var isDirectTextChild = shouldSetTextContent(type, nextProps);\r\n\r\n  if (isDirectTextChild) {\r\n    // We special case a direct text child of a host node. This is a common\r\n    // case. We won't handle it as a reified child. We will instead handle\r\n    // this in the host environment that also has access to this prop. That\r\n    // avoids allocating another HostText fiber and traversing it.\r\n    nextChildren = null;\r\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\r\n    // If we're switching from a direct text child to a normal child, or to\r\n    // empty, we need to schedule the text content to be reset.\r\n    workInProgress.flags |= ContentReset;\r\n  }\r\n\r\n  markRef(current, workInProgress);\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateHostText(current, workInProgress) {\r\n  if (current === null) {\r\n    tryToClaimNextHydratableInstance(workInProgress);\r\n  } // Nothing to do here. This is terminal. We'll do the completion step\r\n  // immediately after.\r\n\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\r\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\r\n  var props = workInProgress.pendingProps;\r\n  var lazyComponent = elementType;\r\n  var payload = lazyComponent._payload;\r\n  var init = lazyComponent._init;\r\n  var Component = init(payload); // Store the unwrapped component in the type.\r\n\r\n  workInProgress.type = Component;\r\n  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\r\n  var resolvedProps = resolveDefaultProps(Component, props);\r\n  var child;\r\n\r\n  switch (resolvedTag) {\r\n    case FunctionComponent:\r\n      {\r\n        {\r\n          validateFunctionComponentInDev(workInProgress, Component);\r\n          workInProgress.type = Component = resolveFunctionForHotReloading(Component);\r\n        }\r\n\r\n        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\r\n        return child;\r\n      }\r\n\r\n    case ClassComponent:\r\n      {\r\n        {\r\n          workInProgress.type = Component = resolveClassForHotReloading(Component);\r\n        }\r\n\r\n        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\r\n        return child;\r\n      }\r\n\r\n    case ForwardRef:\r\n      {\r\n        {\r\n          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\r\n        }\r\n\r\n        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\r\n        return child;\r\n      }\r\n\r\n    case MemoComponent:\r\n      {\r\n        {\r\n          if (workInProgress.type !== workInProgress.elementType) {\r\n            var outerPropTypes = Component.propTypes;\r\n\r\n            if (outerPropTypes) {\r\n              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only\r\n              'prop', getComponentNameFromType(Component));\r\n            }\r\n          }\r\n        }\r\n\r\n        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\r\n        renderLanes);\r\n        return child;\r\n      }\r\n  }\r\n\r\n  var hint = '';\r\n\r\n  {\r\n    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {\r\n      hint = ' Did you wrap a component in React.lazy() more than once?';\r\n    }\r\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\r\n  // because the fact that it's a separate type of work is an\r\n  // implementation detail.\r\n\r\n\r\n  throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\r\n}\r\n\r\nfunction mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\r\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.\r\n\r\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\r\n  // Push context providers early to prevent context stack mismatches.\r\n  // During mounting we don't know the child context yet as the instance doesn't exist.\r\n  // We will invalidate the child context in finishClassComponent() right after rendering.\r\n\r\n  var hasContext;\r\n\r\n  if (isContextProvider(Component)) {\r\n    hasContext = true;\r\n    pushContextProvider(workInProgress);\r\n  } else {\r\n    hasContext = false;\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  constructClassInstance(workInProgress, Component, nextProps);\r\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\r\n  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\r\n}\r\n\r\nfunction mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\r\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\r\n  var props = workInProgress.pendingProps;\r\n  var context;\r\n\r\n  {\r\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\r\n    context = getMaskedContext(workInProgress, unmaskedContext);\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  var value;\r\n  var hasId;\r\n\r\n  {\r\n    markComponentRenderStarted(workInProgress);\r\n  }\r\n\r\n  {\r\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\r\n      var componentName = getComponentNameFromType(Component) || 'Unknown';\r\n\r\n      if (!didWarnAboutBadClass[componentName]) {\r\n        error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\r\n\r\n        didWarnAboutBadClass[componentName] = true;\r\n      }\r\n    }\r\n\r\n    if (workInProgress.mode & StrictLegacyMode) {\r\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\r\n    }\r\n\r\n    setIsRendering(true);\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\r\n    hasId = checkDidRenderIdHook();\r\n    setIsRendering(false);\r\n  }\r\n\r\n  {\r\n    markComponentRenderStopped();\r\n  } // React DevTools reads this flag.\r\n\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n\r\n  {\r\n    // Support for module components is deprecated and is removed behind a flag.\r\n    // Whether or not it would crash later, we want to show a good message in DEV first.\r\n    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\r\n      var _componentName = getComponentNameFromType(Component) || 'Unknown';\r\n\r\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\r\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);\r\n\r\n        didWarnAboutModulePatternComponent[_componentName] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  if ( // Run these checks in production only if the flag is off.\r\n  // Eventually we'll delete this branch altogether.\r\n   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\r\n    {\r\n      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';\r\n\r\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\r\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);\r\n\r\n        didWarnAboutModulePatternComponent[_componentName2] = true;\r\n      }\r\n    } // Proceed under the assumption that this is a class instance\r\n\r\n\r\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\r\n\r\n    workInProgress.memoizedState = null;\r\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\r\n    // During mounting we don't know the child context yet as the instance doesn't exist.\r\n    // We will invalidate the child context in finishClassComponent() right after rendering.\r\n\r\n    var hasContext = false;\r\n\r\n    if (isContextProvider(Component)) {\r\n      hasContext = true;\r\n      pushContextProvider(workInProgress);\r\n    } else {\r\n      hasContext = false;\r\n    }\r\n\r\n    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\r\n    initializeUpdateQueue(workInProgress);\r\n    adoptClassInstance(workInProgress, value);\r\n    mountClassInstance(workInProgress, Component, props, renderLanes);\r\n    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\r\n  } else {\r\n    // Proceed under the assumption that this is a function component\r\n    workInProgress.tag = FunctionComponent;\r\n\r\n    {\r\n\r\n      if ( workInProgress.mode & StrictLegacyMode) {\r\n        setIsStrictModeForDevtools(true);\r\n\r\n        try {\r\n          value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\r\n          hasId = checkDidRenderIdHook();\r\n        } finally {\r\n          setIsStrictModeForDevtools(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (getIsHydrating() && hasId) {\r\n      pushMaterializedTreeId(workInProgress);\r\n    }\r\n\r\n    reconcileChildren(null, workInProgress, value, renderLanes);\r\n\r\n    {\r\n      validateFunctionComponentInDev(workInProgress, Component);\r\n    }\r\n\r\n    return workInProgress.child;\r\n  }\r\n}\r\n\r\nfunction validateFunctionComponentInDev(workInProgress, Component) {\r\n  {\r\n    if (Component) {\r\n      if (Component.childContextTypes) {\r\n        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');\r\n      }\r\n    }\r\n\r\n    if (workInProgress.ref !== null) {\r\n      var info = '';\r\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\r\n\r\n      if (ownerName) {\r\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\r\n      }\r\n\r\n      var warningKey = ownerName || '';\r\n      var debugSource = workInProgress._debugSource;\r\n\r\n      if (debugSource) {\r\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\r\n      }\r\n\r\n      if (!didWarnAboutFunctionRefs[warningKey]) {\r\n        didWarnAboutFunctionRefs[warningKey] = true;\r\n\r\n        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);\r\n      }\r\n    }\r\n\r\n    if ( Component.defaultProps !== undefined) {\r\n      var componentName = getComponentNameFromType(Component) || 'Unknown';\r\n\r\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\r\n        error('%s: Support for defaultProps will be removed from function components ' + 'in a future major release. Use JavaScript default parameters instead.', componentName);\r\n\r\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof Component.getDerivedStateFromProps === 'function') {\r\n      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';\r\n\r\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\r\n        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);\r\n\r\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof Component.contextType === 'object' && Component.contextType !== null) {\r\n      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';\r\n\r\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\r\n        error('%s: Function components do not support contextType.', _componentName4);\r\n\r\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar SUSPENDED_MARKER = {\r\n  dehydrated: null,\r\n  treeContext: null,\r\n  retryLane: NoLane\r\n};\r\n\r\nfunction mountSuspenseOffscreenState(renderLanes) {\r\n  return {\r\n    baseLanes: renderLanes,\r\n    cachePool: getSuspendedCache(),\r\n    transitions: null\r\n  };\r\n}\r\n\r\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\r\n  var cachePool = null;\r\n\r\n  return {\r\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\r\n    cachePool: cachePool,\r\n    transitions: prevOffscreenState.transitions\r\n  };\r\n} // TODO: Probably should inline this back\r\n\r\n\r\nfunction shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\r\n  // If we're already showing a fallback, there are cases where we need to\r\n  // remain on that fallback regardless of whether the content has resolved.\r\n  // For example, SuspenseList coordinates when nested content appears.\r\n  if (current !== null) {\r\n    var suspenseState = current.memoizedState;\r\n\r\n    if (suspenseState === null) {\r\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\r\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\r\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\r\n      // no fallback to remain on.\r\n      return false;\r\n    }\r\n  } // Not currently showing content. Consult the Suspense context.\r\n\r\n\r\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\r\n}\r\n\r\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\r\n  // TODO: Should not remove render lanes that were pinged during this render\r\n  return removeLanes(current.childLanes, renderLanes);\r\n}\r\n\r\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\r\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\r\n\r\n  {\r\n    if (shouldSuspend(workInProgress)) {\r\n      workInProgress.flags |= DidCapture;\r\n    }\r\n  }\r\n\r\n  var suspenseContext = suspenseStackCursor.current;\r\n  var showFallback = false;\r\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\r\n\r\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\r\n    // Something in this boundary's subtree already suspended. Switch to\r\n    // rendering the fallback children.\r\n    showFallback = true;\r\n    workInProgress.flags &= ~DidCapture;\r\n  } else {\r\n    // Attempting the main content\r\n    if (current === null || current.memoizedState !== null) {\r\n      // This is a new mount or this boundary is already showing a fallback state.\r\n      // Mark this subtree context as having at least one invisible parent that could\r\n      // handle the fallback state.\r\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\r\n      {\r\n        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\r\n      }\r\n    }\r\n  }\r\n\r\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\r\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\r\n  // boundary's children. This involves some custom reconciliation logic. Two\r\n  // main reasons this is so complicated.\r\n  //\r\n  // First, Legacy Mode has different semantics for backwards compatibility. The\r\n  // primary tree will commit in an inconsistent state, so when we do the\r\n  // second pass to render the fallback, we do some exceedingly, uh, clever\r\n  // hacks to make that not totally break. Like transferring effects and\r\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\r\n  // because we bailout on the primary tree completely and leave it in its old\r\n  // state, no effects. Same as what we do for Offscreen (except that\r\n  // Offscreen doesn't have the first render pass).\r\n  //\r\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\r\n  // different layout, where the child points to a dehydrated fragment, which\r\n  // contains the DOM rendered by the server.\r\n  //\r\n  // Third, even if you set all that aside, Suspense is like error boundaries in\r\n  // that we first we try to render one tree, and if that fails, we render again\r\n  // and switch to a different tree. Like a try/catch block. So we have to track\r\n  // which branch we're currently rendering. Ideally we would model this using\r\n  // a stack.\r\n\r\n  if (current === null) {\r\n    // Initial mount\r\n    // Special path for hydration\r\n    // If we're currently hydrating, try to hydrate this boundary.\r\n    tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.\r\n\r\n    var suspenseState = workInProgress.memoizedState;\r\n\r\n    if (suspenseState !== null) {\r\n      var dehydrated = suspenseState.dehydrated;\r\n\r\n      if (dehydrated !== null) {\r\n        return mountDehydratedSuspenseComponent(workInProgress, dehydrated);\r\n      }\r\n    }\r\n\r\n    var nextPrimaryChildren = nextProps.children;\r\n    var nextFallbackChildren = nextProps.fallback;\r\n\r\n    if (showFallback) {\r\n      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\r\n      var primaryChildFragment = workInProgress.child;\r\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\r\n      workInProgress.memoizedState = SUSPENDED_MARKER;\r\n\r\n      return fallbackFragment;\r\n    } else {\r\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\r\n    }\r\n  } else {\r\n    // This is an update.\r\n    // Special path for hydration\r\n    var prevState = current.memoizedState;\r\n\r\n    if (prevState !== null) {\r\n      var _dehydrated = prevState.dehydrated;\r\n\r\n      if (_dehydrated !== null) {\r\n        return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);\r\n      }\r\n    }\r\n\r\n    if (showFallback) {\r\n      var _nextFallbackChildren = nextProps.fallback;\r\n      var _nextPrimaryChildren = nextProps.children;\r\n      var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);\r\n      var _primaryChildFragment2 = workInProgress.child;\r\n      var prevOffscreenState = current.child.memoizedState;\r\n      _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\r\n\r\n      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\r\n      workInProgress.memoizedState = SUSPENDED_MARKER;\r\n      return fallbackChildFragment;\r\n    } else {\r\n      var _nextPrimaryChildren2 = nextProps.children;\r\n\r\n      var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);\r\n\r\n      workInProgress.memoizedState = null;\r\n      return _primaryChildFragment3;\r\n    }\r\n  }\r\n}\r\n\r\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\r\n  var mode = workInProgress.mode;\r\n  var primaryChildProps = {\r\n    mode: 'visible',\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\r\n  primaryChildFragment.return = workInProgress;\r\n  workInProgress.child = primaryChildFragment;\r\n  return primaryChildFragment;\r\n}\r\n\r\nfunction mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\r\n  var mode = workInProgress.mode;\r\n  var progressedPrimaryFragment = workInProgress.child;\r\n  var primaryChildProps = {\r\n    mode: 'hidden',\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment;\r\n  var fallbackChildFragment;\r\n\r\n  if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\r\n    // In legacy mode, we commit the primary tree as if it successfully\r\n    // completed, even though it's in an inconsistent state.\r\n    primaryChildFragment = progressedPrimaryFragment;\r\n    primaryChildFragment.childLanes = NoLanes;\r\n    primaryChildFragment.pendingProps = primaryChildProps;\r\n\r\n    if ( workInProgress.mode & ProfileMode) {\r\n      // Reset the durations from the first pass so they aren't included in the\r\n      // final amounts. This seems counterintuitive, since we're intentionally\r\n      // not measuring part of the render phase, but this makes it match what we\r\n      // do in Concurrent Mode.\r\n      primaryChildFragment.actualDuration = 0;\r\n      primaryChildFragment.actualStartTime = -1;\r\n      primaryChildFragment.selfBaseDuration = 0;\r\n      primaryChildFragment.treeBaseDuration = 0;\r\n    }\r\n\r\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\r\n  } else {\r\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\r\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\r\n  }\r\n\r\n  primaryChildFragment.return = workInProgress;\r\n  fallbackChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = fallbackChildFragment;\r\n  workInProgress.child = primaryChildFragment;\r\n  return fallbackChildFragment;\r\n}\r\n\r\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\r\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\r\n  // this wrapper function to constrain it.\r\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\r\n}\r\n\r\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\r\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\r\n  // wrapper function to constrain it.\r\n  return createWorkInProgress(current, offscreenProps);\r\n}\r\n\r\nfunction updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\r\n  var currentPrimaryChildFragment = current.child;\r\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\r\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\r\n    mode: 'visible',\r\n    children: primaryChildren\r\n  });\r\n\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    primaryChildFragment.lanes = renderLanes;\r\n  }\r\n\r\n  primaryChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = null;\r\n\r\n  if (currentFallbackChildFragment !== null) {\r\n    // Delete the fallback child fragment\r\n    var deletions = workInProgress.deletions;\r\n\r\n    if (deletions === null) {\r\n      workInProgress.deletions = [currentFallbackChildFragment];\r\n      workInProgress.flags |= ChildDeletion;\r\n    } else {\r\n      deletions.push(currentFallbackChildFragment);\r\n    }\r\n  }\r\n\r\n  workInProgress.child = primaryChildFragment;\r\n  return primaryChildFragment;\r\n}\r\n\r\nfunction updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\r\n  var mode = workInProgress.mode;\r\n  var currentPrimaryChildFragment = current.child;\r\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\r\n  var primaryChildProps = {\r\n    mode: 'hidden',\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment;\r\n\r\n  if ( // In legacy mode, we commit the primary tree as if it successfully\r\n  // completed, even though it's in an inconsistent state.\r\n  (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\r\n  // already cloned. In legacy mode, the only case where this isn't true is\r\n  // when DevTools forces us to display a fallback; we skip the first render\r\n  // pass entirely and go straight to rendering the fallback. (In Concurrent\r\n  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\r\n  // only codepath.)\r\n  workInProgress.child !== currentPrimaryChildFragment) {\r\n    var progressedPrimaryFragment = workInProgress.child;\r\n    primaryChildFragment = progressedPrimaryFragment;\r\n    primaryChildFragment.childLanes = NoLanes;\r\n    primaryChildFragment.pendingProps = primaryChildProps;\r\n\r\n    if ( workInProgress.mode & ProfileMode) {\r\n      // Reset the durations from the first pass so they aren't included in the\r\n      // final amounts. This seems counterintuitive, since we're intentionally\r\n      // not measuring part of the render phase, but this makes it match what we\r\n      // do in Concurrent Mode.\r\n      primaryChildFragment.actualDuration = 0;\r\n      primaryChildFragment.actualStartTime = -1;\r\n      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\r\n      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\r\n    } // The fallback fiber was added as a deletion during the first pass.\r\n    // However, since we're going to remain on the fallback, we no longer want\r\n    // to delete it.\r\n\r\n\r\n    workInProgress.deletions = null;\r\n  } else {\r\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.\r\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\r\n    // the current tree; see previous branch.)\r\n\r\n    primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\r\n  }\r\n\r\n  var fallbackChildFragment;\r\n\r\n  if (currentFallbackChildFragment !== null) {\r\n    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\r\n  } else {\r\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already\r\n    // mounted but this is a new fiber.\r\n\r\n    fallbackChildFragment.flags |= Placement;\r\n  }\r\n\r\n  fallbackChildFragment.return = workInProgress;\r\n  primaryChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = fallbackChildFragment;\r\n  workInProgress.child = primaryChildFragment;\r\n  return fallbackChildFragment;\r\n}\r\n\r\nfunction retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {\r\n  // Falling back to client rendering. Because this has performance\r\n  // implications, it's considered a recoverable error, even though the user\r\n  // likely won't observe anything wrong with the UI.\r\n  //\r\n  // The error is passed in as an argument to enforce that every caller provide\r\n  // a custom message, or explicitly opt out (currently the only path that opts\r\n  // out is legacy mode; every concurrent path provides an error).\r\n  if (recoverableError !== null) {\r\n    queueHydrationError(recoverableError);\r\n  } // This will add the old fiber to the deletion list\r\n\r\n\r\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.\r\n\r\n  var nextProps = workInProgress.pendingProps;\r\n  var primaryChildren = nextProps.children;\r\n  var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already\r\n  // mounted but this is a new fiber.\r\n\r\n  primaryChildFragment.flags |= Placement;\r\n  workInProgress.memoizedState = null;\r\n  return primaryChildFragment;\r\n}\r\n\r\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\r\n  var fiberMode = workInProgress.mode;\r\n  var primaryChildProps = {\r\n    mode: 'visible',\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);\r\n  var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense\r\n  // boundary) already mounted but this is a new fiber.\r\n\r\n  fallbackChildFragment.flags |= Placement;\r\n  primaryChildFragment.return = workInProgress;\r\n  fallbackChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = fallbackChildFragment;\r\n  workInProgress.child = primaryChildFragment;\r\n\r\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\r\n    // We will have dropped the effect list which contains the\r\n    // deletion. We need to reconcile to delete the current child.\r\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\r\n  }\r\n\r\n  return fallbackChildFragment;\r\n}\r\n\r\nfunction mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {\r\n  // During the first pass, we'll bail out and not drill into the children.\r\n  // Instead, we'll leave the content in place and try to hydrate it later.\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    {\r\n      error('Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOMClient.hydrateRoot(container, <App />)' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');\r\n    }\r\n\r\n    workInProgress.lanes = laneToLanes(SyncLane);\r\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\r\n    // This is a client-only boundary. Since we won't get any content from the server\r\n    // for this, we need to schedule that at a higher priority based on when it would\r\n    // have timed out. In theory we could render it in this pass but it would have the\r\n    // wrong priority associated with it and will prevent hydration of parent path.\r\n    // Instead, we'll leave work left on it to render it in a separate commit.\r\n    // TODO This time should be the time at which the server rendered response that is\r\n    // a parent to this boundary was displayed. However, since we currently don't have\r\n    // a protocol to transfer that time, we'll just estimate it by using the current\r\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\r\n    // they should be.\r\n    // Schedule a normal pri update to render this content.\r\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\r\n  } else {\r\n    // We'll continue hydrating the rest at offscreen priority since we'll already\r\n    // be showing the right content coming from the server, it is no rush.\r\n    workInProgress.lanes = laneToLanes(OffscreenLane);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {\r\n  if (!didSuspend) {\r\n    // This is the first render pass. Attempt to hydrate.\r\n    // We should never be hydrating at this point because it is the first pass,\r\n    // but after we've already committed once.\r\n    warnIfHydrating();\r\n\r\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // TODO: When we delete legacy mode, we should make this error argument\r\n      // required — every concurrent mode path that causes hydration to\r\n      // de-opt to client rendering should have an error message.\r\n      null);\r\n    }\r\n\r\n    if (isSuspenseInstanceFallback(suspenseInstance)) {\r\n      // This boundary is in a permanent fallback state. In this case, we'll never\r\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\r\n      // client side render instead.\r\n      var digest, message, stack;\r\n\r\n      {\r\n        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);\r\n\r\n        digest = _getSuspenseInstanceF.digest;\r\n        message = _getSuspenseInstanceF.message;\r\n        stack = _getSuspenseInstanceF.stack;\r\n      }\r\n\r\n      var error;\r\n\r\n      if (message) {\r\n        // eslint-disable-next-line react-internal/prod-error-codes\r\n        error = new Error(message);\r\n      } else {\r\n        error = new Error('The server could not finish this Suspense boundary, likely ' + 'due to an error during server rendering. Switched to ' + 'client rendering.');\r\n      }\r\n\r\n      var capturedValue = createCapturedValue(error, digest, stack);\r\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);\r\n    }\r\n    // any context has changed, we need to treat is as if the input might have changed.\r\n\r\n\r\n    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\r\n\r\n    if (didReceiveUpdate || hasContextChanged) {\r\n      // This boundary has changed since the first render. This means that we are now unable to\r\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\r\n      var root = getWorkInProgressRoot();\r\n\r\n      if (root !== null) {\r\n        var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);\r\n\r\n        if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {\r\n          // Intentionally mutating since this render will get interrupted. This\r\n          // is one of the very rare times where we mutate the current tree\r\n          // during the render phase.\r\n          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render\r\n\r\n          var eventTime = NoTimestamp;\r\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\r\n          scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);\r\n        }\r\n      } // If we have scheduled higher pri work above, this will probably just abort the render\r\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\r\n      // render something, if we time out. Even if that requires us to delete everything and\r\n      // skip hydration.\r\n      // Delay having to do this as long as the suspense timeout allows us.\r\n\r\n\r\n      renderDidSuspendDelayIfPossible();\r\n\r\n      var _capturedValue = createCapturedValue(new Error('This Suspense boundary received an update before it finished ' + 'hydrating. This caused the boundary to switch to client rendering. ' + 'The usual way to fix this is to wrap the original update ' + 'in startTransition.'));\r\n\r\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);\r\n    } else if (isSuspenseInstancePending(suspenseInstance)) {\r\n      // This component is still pending more data from the server, so we can't hydrate its\r\n      // content. We treat it as if this component suspended itself. It might seem as if\r\n      // we could just try to render it client-side instead. However, this will perform a\r\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\r\n      // on missing data anyway. Additionally, the server might be able to render more\r\n      // than we can on the client yet. In that case we'd end up with more fallback states\r\n      // on the client than if we just leave it alone. If the server times out or errors\r\n      // these should update this boundary to the permanent Fallback state instead.\r\n      // Mark it as having captured (i.e. suspended).\r\n      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.\r\n\r\n      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.\r\n\r\n      var retry = retryDehydratedSuspenseBoundary.bind(null, current);\r\n      registerSuspenseInstanceRetry(suspenseInstance, retry);\r\n      return null;\r\n    } else {\r\n      // This is the first attempt.\r\n      reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);\r\n      var primaryChildren = nextProps.children;\r\n      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this\r\n      // tree is part of a hydrating tree. This is used to determine if a child\r\n      // node has fully mounted yet, and for scheduling event replaying.\r\n      // Conceptually this is similar to Placement in that a new subtree is\r\n      // inserted into the React tree here. It just happens to not need DOM\r\n      // mutations because it already exists.\r\n\r\n      primaryChildFragment.flags |= Hydrating;\r\n      return primaryChildFragment;\r\n    }\r\n  } else {\r\n    // This is the second render pass. We already attempted to hydrated, but\r\n    // something either suspended or errored.\r\n    if (workInProgress.flags & ForceClientRender) {\r\n      // Something errored during hydration. Try again without hydrating.\r\n      workInProgress.flags &= ~ForceClientRender;\r\n\r\n      var _capturedValue2 = createCapturedValue(new Error('There was an error while hydrating this Suspense boundary. ' + 'Switched to client rendering.'));\r\n\r\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);\r\n    } else if (workInProgress.memoizedState !== null) {\r\n      // Something suspended and we should still be in dehydrated mode.\r\n      // Leave the existing child in place.\r\n      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there\r\n      // but the normal suspense pass doesn't.\r\n\r\n      workInProgress.flags |= DidCapture;\r\n      return null;\r\n    } else {\r\n      // Suspended but we should no longer be in dehydrated mode.\r\n      // Therefore we now have to render the fallback.\r\n      var nextPrimaryChildren = nextProps.children;\r\n      var nextFallbackChildren = nextProps.fallback;\r\n      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\r\n      var _primaryChildFragment4 = workInProgress.child;\r\n      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);\r\n      workInProgress.memoizedState = SUSPENDED_MARKER;\r\n      return fallbackChildFragment;\r\n    }\r\n  }\r\n}\r\n\r\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\r\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\r\n  var alternate = fiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\r\n  }\r\n\r\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\r\n}\r\n\r\nfunction propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\r\n  // Mark any Suspense boundaries with fallbacks as having work to do.\r\n  // If they were previously forced into fallbacks, they may now be able\r\n  // to unblock.\r\n  var node = firstChild;\r\n\r\n  while (node !== null) {\r\n    if (node.tag === SuspenseComponent) {\r\n      var state = node.memoizedState;\r\n\r\n      if (state !== null) {\r\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\r\n      }\r\n    } else if (node.tag === SuspenseListComponent) {\r\n      // If the tail is hidden there might not be an Suspense boundaries\r\n      // to schedule work on. In this case we have to schedule it on the\r\n      // list itself.\r\n      // We don't have to traverse to the children of the list since\r\n      // the list will propagate the change when it rerenders.\r\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\r\n    } else if (node.child !== null) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n\r\n    if (node === workInProgress) {\r\n      return;\r\n    }\r\n\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === workInProgress) {\r\n        return;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n}\r\n\r\nfunction findLastContentRow(firstChild) {\r\n  // This is going to find the last row among these children that is already\r\n  // showing content on the screen, as opposed to being in fallback state or\r\n  // new. If a row has multiple Suspense boundaries, any of them being in the\r\n  // fallback state, counts as the whole row being in a fallback state.\r\n  // Note that the \"rows\" will be workInProgress, but any nested children\r\n  // will still be current since we haven't rendered them yet. The mounted\r\n  // order may not be the same as the new order. We use the new order.\r\n  var row = firstChild;\r\n  var lastContentRow = null;\r\n\r\n  while (row !== null) {\r\n    var currentRow = row.alternate; // New rows can't be content rows.\r\n\r\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\r\n      lastContentRow = row;\r\n    }\r\n\r\n    row = row.sibling;\r\n  }\r\n\r\n  return lastContentRow;\r\n}\r\n\r\nfunction validateRevealOrder(revealOrder) {\r\n  {\r\n    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {\r\n      didWarnAboutRevealOrder[revealOrder] = true;\r\n\r\n      if (typeof revealOrder === 'string') {\r\n        switch (revealOrder.toLowerCase()) {\r\n          case 'together':\r\n          case 'forwards':\r\n          case 'backwards':\r\n            {\r\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\r\n\r\n              break;\r\n            }\r\n\r\n          case 'forward':\r\n          case 'backward':\r\n            {\r\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\r\n\r\n              break;\r\n            }\r\n\r\n          default:\r\n            error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\r\n\r\n            break;\r\n        }\r\n      } else {\r\n        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction validateTailOptions(tailMode, revealOrder) {\r\n  {\r\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\r\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\r\n        didWarnAboutTailOptions[tailMode] = true;\r\n\r\n        error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\r\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\r\n        didWarnAboutTailOptions[tailMode] = true;\r\n\r\n        error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction validateSuspenseListNestedChild(childSlot, index) {\r\n  {\r\n    var isAnArray = isArray(childSlot);\r\n    var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';\r\n\r\n    if (isAnArray || isIterable) {\r\n      var type = isAnArray ? 'array' : 'iterable';\r\n\r\n      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validateSuspenseListChildren(children, revealOrder) {\r\n  {\r\n    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {\r\n      if (isArray(children)) {\r\n        for (var i = 0; i < children.length; i++) {\r\n          if (!validateSuspenseListNestedChild(children[i], i)) {\r\n            return;\r\n          }\r\n        }\r\n      } else {\r\n        var iteratorFn = getIteratorFn(children);\r\n\r\n        if (typeof iteratorFn === 'function') {\r\n          var childrenIterator = iteratorFn.call(children);\r\n\r\n          if (childrenIterator) {\r\n            var step = childrenIterator.next();\r\n            var _i = 0;\r\n\r\n            for (; !step.done; step = childrenIterator.next()) {\r\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\r\n                return;\r\n              }\r\n\r\n              _i++;\r\n            }\r\n          }\r\n        } else {\r\n          error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\r\n  var renderState = workInProgress.memoizedState;\r\n\r\n  if (renderState === null) {\r\n    workInProgress.memoizedState = {\r\n      isBackwards: isBackwards,\r\n      rendering: null,\r\n      renderingStartTime: 0,\r\n      last: lastContentRow,\r\n      tail: tail,\r\n      tailMode: tailMode\r\n    };\r\n  } else {\r\n    // We can reuse the existing object from previous renders.\r\n    renderState.isBackwards = isBackwards;\r\n    renderState.rendering = null;\r\n    renderState.renderingStartTime = 0;\r\n    renderState.last = lastContentRow;\r\n    renderState.tail = tail;\r\n    renderState.tailMode = tailMode;\r\n  }\r\n} // This can end up rendering this component multiple passes.\r\n// The first pass splits the children fibers into two sets. A head and tail.\r\n// We first render the head. If anything is in fallback state, we do another\r\n// pass through beginWork to rerender all children (including the tail) with\r\n// the force suspend context. If the first render didn't have anything in\r\n// in fallback state. Then we render each row in the tail one-by-one.\r\n// That happens in the completeWork phase without going back to beginWork.\r\n\r\n\r\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\r\n  var nextProps = workInProgress.pendingProps;\r\n  var revealOrder = nextProps.revealOrder;\r\n  var tailMode = nextProps.tail;\r\n  var newChildren = nextProps.children;\r\n  validateRevealOrder(revealOrder);\r\n  validateTailOptions(tailMode, revealOrder);\r\n  validateSuspenseListChildren(newChildren, revealOrder);\r\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\r\n  var suspenseContext = suspenseStackCursor.current;\r\n  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\r\n\r\n  if (shouldForceFallback) {\r\n    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\r\n    workInProgress.flags |= DidCapture;\r\n  } else {\r\n    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\r\n\r\n    if (didSuspendBefore) {\r\n      // If we previously forced a fallback, we need to schedule work\r\n      // on any nested boundaries to let them know to try to render\r\n      // again. This is the same as context updating.\r\n      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\r\n    }\r\n\r\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\r\n  }\r\n\r\n  pushSuspenseContext(workInProgress, suspenseContext);\r\n\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    // In legacy mode, SuspenseList doesn't work so we just\r\n    // use make it a noop by treating it as the default revealOrder.\r\n    workInProgress.memoizedState = null;\r\n  } else {\r\n    switch (revealOrder) {\r\n      case 'forwards':\r\n        {\r\n          var lastContentRow = findLastContentRow(workInProgress.child);\r\n          var tail;\r\n\r\n          if (lastContentRow === null) {\r\n            // The whole list is part of the tail.\r\n            // TODO: We could fast path by just rendering the tail now.\r\n            tail = workInProgress.child;\r\n            workInProgress.child = null;\r\n          } else {\r\n            // Disconnect the tail rows after the content row.\r\n            // We're going to render them separately later.\r\n            tail = lastContentRow.sibling;\r\n            lastContentRow.sibling = null;\r\n          }\r\n\r\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\r\n          tail, lastContentRow, tailMode);\r\n          break;\r\n        }\r\n\r\n      case 'backwards':\r\n        {\r\n          // We're going to find the first row that has existing content.\r\n          // At the same time we're going to reverse the list of everything\r\n          // we pass in the meantime. That's going to be our tail in reverse\r\n          // order.\r\n          var _tail = null;\r\n          var row = workInProgress.child;\r\n          workInProgress.child = null;\r\n\r\n          while (row !== null) {\r\n            var currentRow = row.alternate; // New rows can't be content rows.\r\n\r\n            if (currentRow !== null && findFirstSuspended(currentRow) === null) {\r\n              // This is the beginning of the main content.\r\n              workInProgress.child = row;\r\n              break;\r\n            }\r\n\r\n            var nextRow = row.sibling;\r\n            row.sibling = _tail;\r\n            _tail = row;\r\n            row = nextRow;\r\n          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\r\n\r\n\r\n          initSuspenseListRenderState(workInProgress, true, // isBackwards\r\n          _tail, null, // last\r\n          tailMode);\r\n          break;\r\n        }\r\n\r\n      case 'together':\r\n        {\r\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\r\n          null, // tail\r\n          null, // last\r\n          undefined);\r\n          break;\r\n        }\r\n\r\n      default:\r\n        {\r\n          // The default reveal order is the same as not having\r\n          // a boundary.\r\n          workInProgress.memoizedState = null;\r\n        }\r\n    }\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\r\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\r\n  var nextChildren = workInProgress.pendingProps;\r\n\r\n  if (current === null) {\r\n    // Portals are special because we don't append the children during mount\r\n    // but at commit. Therefore we need to track insertions which the normal\r\n    // flow doesn't do during mount. This doesn't happen at the root because\r\n    // the root always starts with a \"current\" with a null child.\r\n    // TODO: Consider unifying this with how the root works.\r\n    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\r\n  } else {\r\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\r\n\r\nfunction updateContextProvider(current, workInProgress, renderLanes) {\r\n  var providerType = workInProgress.type;\r\n  var context = providerType._context;\r\n  var newProps = workInProgress.pendingProps;\r\n  var oldProps = workInProgress.memoizedProps;\r\n  var newValue = newProps.value;\r\n\r\n  {\r\n    if (!('value' in newProps)) {\r\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\r\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\r\n\r\n        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');\r\n      }\r\n    }\r\n\r\n    var providerPropTypes = workInProgress.type.propTypes;\r\n\r\n    if (providerPropTypes) {\r\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\r\n    }\r\n  }\r\n\r\n  pushProvider(workInProgress, context, newValue);\r\n\r\n  {\r\n    if (oldProps !== null) {\r\n      var oldValue = oldProps.value;\r\n\r\n      if (objectIs(oldValue, newValue)) {\r\n        // No change. Bailout early if children are the same.\r\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\r\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n        }\r\n      } else {\r\n        // The context value changed. Search for matching consumers and schedule\r\n        // them to update.\r\n        propagateContextChange(workInProgress, context, renderLanes);\r\n      }\r\n    }\r\n  }\r\n\r\n  var newChildren = newProps.children;\r\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nvar hasWarnedAboutUsingContextAsConsumer = false;\r\n\r\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\r\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\r\n  // DEV mode, we create a separate object for Context.Consumer that acts\r\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\r\n  // so we use the old behaviour (Context.Consumer references Context) to\r\n  // reduce size and overhead. The separate object references context via\r\n  // a property called \"_context\", which also gives us the ability to check\r\n  // in DEV mode if this property exists or not and warn if it does not.\r\n\r\n  {\r\n    if (context._context === undefined) {\r\n      // This may be because it's a Context (rather than a Consumer).\r\n      // Or it may be because it's older React where they're the same thing.\r\n      // We only want to warn if we're sure it's a new React.\r\n      if (context !== context.Consumer) {\r\n        if (!hasWarnedAboutUsingContextAsConsumer) {\r\n          hasWarnedAboutUsingContextAsConsumer = true;\r\n\r\n          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\r\n        }\r\n      }\r\n    } else {\r\n      context = context._context;\r\n    }\r\n  }\r\n\r\n  var newProps = workInProgress.pendingProps;\r\n  var render = newProps.children;\r\n\r\n  {\r\n    if (typeof render !== 'function') {\r\n      error('A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');\r\n    }\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  var newValue = readContext(context);\r\n\r\n  {\r\n    markComponentRenderStarted(workInProgress);\r\n  }\r\n\r\n  var newChildren;\r\n\r\n  {\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    setIsRendering(true);\r\n    newChildren = render(newValue);\r\n    setIsRendering(false);\r\n  }\r\n\r\n  {\r\n    markComponentRenderStopped();\r\n  } // React DevTools reads this flag.\r\n\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction markWorkInProgressReceivedUpdate() {\r\n  didReceiveUpdate = true;\r\n}\r\n\r\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    if (current !== null) {\r\n      // A lazy component only mounts if it suspended inside a non-\r\n      // concurrent tree, in an inconsistent state. We want to treat it like\r\n      // a new mount, even though an empty version of it already committed.\r\n      // Disconnect the alternate pointers.\r\n      current.alternate = null;\r\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\r\n\r\n      workInProgress.flags |= Placement;\r\n    }\r\n  }\r\n}\r\n\r\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\r\n  if (current !== null) {\r\n    // Reuse previous dependencies\r\n    workInProgress.dependencies = current.dependencies;\r\n  }\r\n\r\n  {\r\n    // Don't update \"base\" render times for bailouts.\r\n    stopProfilerTimerIfRunning();\r\n  }\r\n\r\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\r\n\r\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\r\n    // The children don't have any work either. We can skip them.\r\n    // TODO: Once we add back resuming, we should check if the children are\r\n    // a work-in-progress set. If so, we need to transfer their effects.\r\n    {\r\n      return null;\r\n    }\r\n  } // This fiber doesn't have work, but its subtree does. Clone the child\r\n  // fibers and continue.\r\n\r\n\r\n  cloneChildFibers(current, workInProgress);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\r\n  {\r\n    var returnFiber = oldWorkInProgress.return;\r\n\r\n    if (returnFiber === null) {\r\n      // eslint-disable-next-line react-internal/prod-error-codes\r\n      throw new Error('Cannot swap the root fiber.');\r\n    } // Disconnect from the old current.\r\n    // It will get deleted.\r\n\r\n\r\n    current.alternate = null;\r\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\r\n\r\n    newWorkInProgress.index = oldWorkInProgress.index;\r\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\r\n    newWorkInProgress.return = oldWorkInProgress.return;\r\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\r\n\r\n    if (oldWorkInProgress === returnFiber.child) {\r\n      returnFiber.child = newWorkInProgress;\r\n    } else {\r\n      var prevSibling = returnFiber.child;\r\n\r\n      if (prevSibling === null) {\r\n        // eslint-disable-next-line react-internal/prod-error-codes\r\n        throw new Error('Expected parent to have a child.');\r\n      }\r\n\r\n      while (prevSibling.sibling !== oldWorkInProgress) {\r\n        prevSibling = prevSibling.sibling;\r\n\r\n        if (prevSibling === null) {\r\n          // eslint-disable-next-line react-internal/prod-error-codes\r\n          throw new Error('Expected to find the previous sibling.');\r\n        }\r\n      }\r\n\r\n      prevSibling.sibling = newWorkInProgress;\r\n    } // Delete the old fiber and place the new one.\r\n    // Since the old fiber is disconnected, we have to schedule it manually.\r\n\r\n\r\n    var deletions = returnFiber.deletions;\r\n\r\n    if (deletions === null) {\r\n      returnFiber.deletions = [current];\r\n      returnFiber.flags |= ChildDeletion;\r\n    } else {\r\n      deletions.push(current);\r\n    }\r\n\r\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\r\n\r\n    return newWorkInProgress;\r\n  }\r\n}\r\n\r\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\r\n  // Before performing an early bailout, we must check if there are pending\r\n  // updates or context.\r\n  var updateLanes = current.lanes;\r\n\r\n  if (includesSomeLane(updateLanes, renderLanes)) {\r\n    return true;\r\n  } // No pending update, but because context is propagated lazily, we need\r\n\r\n  return false;\r\n}\r\n\r\nfunction attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\r\n  // This fiber does not have any pending work. Bailout without entering\r\n  // the begin phase. There's still some bookkeeping we that needs to be done\r\n  // in this optimized path, mostly pushing stuff onto the stack.\r\n  switch (workInProgress.tag) {\r\n    case HostRoot:\r\n      pushHostRootContext(workInProgress);\r\n      var root = workInProgress.stateNode;\r\n\r\n      resetHydrationState();\r\n      break;\r\n\r\n    case HostComponent:\r\n      pushHostContext(workInProgress);\r\n      break;\r\n\r\n    case ClassComponent:\r\n      {\r\n        var Component = workInProgress.type;\r\n\r\n        if (isContextProvider(Component)) {\r\n          pushContextProvider(workInProgress);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    case HostPortal:\r\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\r\n      break;\r\n\r\n    case ContextProvider:\r\n      {\r\n        var newValue = workInProgress.memoizedProps.value;\r\n        var context = workInProgress.type._context;\r\n        pushProvider(workInProgress, context, newValue);\r\n        break;\r\n      }\r\n\r\n    case Profiler:\r\n      {\r\n        // Profiler should only call onRender when one of its descendants actually rendered.\r\n        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\r\n\r\n        if (hasChildWork) {\r\n          workInProgress.flags |= Update;\r\n        }\r\n\r\n        {\r\n          // Reset effect durations for the next eventual effect phase.\r\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\r\n          var stateNode = workInProgress.stateNode;\r\n          stateNode.effectDuration = 0;\r\n          stateNode.passiveEffectDuration = 0;\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    case SuspenseComponent:\r\n      {\r\n        var state = workInProgress.memoizedState;\r\n\r\n        if (state !== null) {\r\n          if (state.dehydrated !== null) {\r\n            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has\r\n            // been unsuspended it has committed as a resolved Suspense component.\r\n            // If it needs to be retried, it should have work scheduled on it.\r\n\r\n            workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we\r\n            // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\r\n\r\n            return null;\r\n          } // If this boundary is currently timed out, we need to decide\r\n          // whether to retry the primary children, or to skip over it and\r\n          // go straight to the fallback. Check the priority of the primary\r\n          // child fragment.\r\n\r\n\r\n          var primaryChildFragment = workInProgress.child;\r\n          var primaryChildLanes = primaryChildFragment.childLanes;\r\n\r\n          if (includesSomeLane(renderLanes, primaryChildLanes)) {\r\n            // The primary children have pending work. Use the normal path\r\n            // to attempt to render the primary children again.\r\n            return updateSuspenseComponent(current, workInProgress, renderLanes);\r\n          } else {\r\n            // The primary child fragment does not have pending work marked\r\n            // on it\r\n            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient\r\n            // priority. Bailout.\r\n\r\n            var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n\r\n            if (child !== null) {\r\n              // The fallback children have pending work. Skip over the\r\n              // primary children and work on the fallback.\r\n              return child.sibling;\r\n            } else {\r\n              // Note: We can return `null` here because we already checked\r\n              // whether there were nested context consumers, via the call to\r\n              // `bailoutOnAlreadyFinishedWork` above.\r\n              return null;\r\n            }\r\n          }\r\n        } else {\r\n          pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    case SuspenseListComponent:\r\n      {\r\n        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\r\n\r\n        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\r\n\r\n        if (didSuspendBefore) {\r\n          if (_hasChildWork) {\r\n            // If something was in fallback state last time, and we have all the\r\n            // same children then we're still in progressive loading state.\r\n            // Something might get unblocked by state updates or retries in the\r\n            // tree which will affect the tail. So we need to use the normal\r\n            // path to compute the correct tail.\r\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\r\n          } // If none of the children had any work, that means that none of\r\n          // them got retried so they'll still be blocked in the same way\r\n          // as before. We can fast bail out.\r\n\r\n\r\n          workInProgress.flags |= DidCapture;\r\n        } // If nothing suspended before and we're rendering the same children,\r\n        // then the tail doesn't matter. Anything new that suspends will work\r\n        // in the \"together\" mode, so we can continue from the state we had.\r\n\r\n\r\n        var renderState = workInProgress.memoizedState;\r\n\r\n        if (renderState !== null) {\r\n          // Reset to the \"together\" mode in case we've started a different\r\n          // update in the past but didn't complete it.\r\n          renderState.rendering = null;\r\n          renderState.tail = null;\r\n          renderState.lastEffect = null;\r\n        }\r\n\r\n        pushSuspenseContext(workInProgress, suspenseStackCursor.current);\r\n\r\n        if (_hasChildWork) {\r\n          break;\r\n        } else {\r\n          // If none of the children had any work, that means that none of\r\n          // them got retried so they'll still be blocked in the same way\r\n          // as before. We can fast bail out.\r\n          return null;\r\n        }\r\n      }\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent:\r\n      {\r\n        // Need to check if the tree still needs to be deferred. This is\r\n        // almost identical to the logic used in the normal update path,\r\n        // so we'll just enter that. The only difference is we'll bail out\r\n        // at the next level instead of this one, because the child props\r\n        // have not changed. Which is fine.\r\n        // TODO: Probably should refactor `beginWork` to split the bailout\r\n        // path from the normal path. I'm tempted to do a labeled break here\r\n        // but I won't :)\r\n        workInProgress.lanes = NoLanes;\r\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\r\n      }\r\n  }\r\n\r\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n}\r\n\r\nfunction beginWork(current, workInProgress, renderLanes) {\r\n  {\r\n    if (workInProgress._debugNeedsRemount && current !== null) {\r\n      // This will restart the begin phase with a new fiber.\r\n      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\r\n    }\r\n  }\r\n\r\n  if (current !== null) {\r\n    var oldProps = current.memoizedProps;\r\n    var newProps = workInProgress.pendingProps;\r\n\r\n    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:\r\n     workInProgress.type !== current.type )) {\r\n      // If props or context changed, mark the fiber as having performed work.\r\n      // This may be unset if the props are determined to be equal later (memo).\r\n      didReceiveUpdate = true;\r\n    } else {\r\n      // Neither props nor legacy context changes. Check if there's a pending\r\n      // update or context change.\r\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\r\n\r\n      if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\r\n      // may not be work scheduled on `current`, so we check for this flag.\r\n      (workInProgress.flags & DidCapture) === NoFlags) {\r\n        // No pending updates or context. Bail out now.\r\n        didReceiveUpdate = false;\r\n        return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\r\n      }\r\n\r\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\r\n        // This is a special case that only exists for legacy mode.\r\n        // See https://github.com/facebook/react/pull/19216.\r\n        didReceiveUpdate = true;\r\n      } else {\r\n        // An update was scheduled on this fiber, but there are no new props\r\n        // nor legacy context. Set this to false. If an update queue or context\r\n        // consumer produces a changed value, it will set this to true. Otherwise,\r\n        // the component will assume the children have not changed and bail out.\r\n        didReceiveUpdate = false;\r\n      }\r\n    }\r\n  } else {\r\n    didReceiveUpdate = false;\r\n\r\n    if (getIsHydrating() && isForkedChild(workInProgress)) {\r\n      // Check if this child belongs to a list of muliple children in\r\n      // its parent.\r\n      //\r\n      // In a true multi-threaded implementation, we would render children on\r\n      // parallel threads. This would represent the beginning of a new render\r\n      // thread for this subtree.\r\n      //\r\n      // We only use this for id generation during hydration, which is why the\r\n      // logic is located in this special branch.\r\n      var slotIndex = workInProgress.index;\r\n      var numberOfForks = getForksAtLevel();\r\n      pushTreeId(workInProgress, numberOfForks, slotIndex);\r\n    }\r\n  } // Before entering the begin phase, clear pending update priority.\r\n  // TODO: This assumes that we're about to evaluate the component and process\r\n  // the update queue. However, there's an exception: SimpleMemoComponent\r\n  // sometimes bails out later in the begin phase. This indicates that we should\r\n  // move this assignment out of the common path and into each branch.\r\n\r\n\r\n  workInProgress.lanes = NoLanes;\r\n\r\n  switch (workInProgress.tag) {\r\n    case IndeterminateComponent:\r\n      {\r\n        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\r\n      }\r\n\r\n    case LazyComponent:\r\n      {\r\n        var elementType = workInProgress.elementType;\r\n        return mountLazyComponent(current, workInProgress, elementType, renderLanes);\r\n      }\r\n\r\n    case FunctionComponent:\r\n      {\r\n        var Component = workInProgress.type;\r\n        var unresolvedProps = workInProgress.pendingProps;\r\n        var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\r\n        return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\r\n      }\r\n\r\n    case ClassComponent:\r\n      {\r\n        var _Component = workInProgress.type;\r\n        var _unresolvedProps = workInProgress.pendingProps;\r\n\r\n        var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\r\n\r\n        return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\r\n      }\r\n\r\n    case HostRoot:\r\n      return updateHostRoot(current, workInProgress, renderLanes);\r\n\r\n    case HostComponent:\r\n      return updateHostComponent(current, workInProgress, renderLanes);\r\n\r\n    case HostText:\r\n      return updateHostText(current, workInProgress);\r\n\r\n    case SuspenseComponent:\r\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\r\n\r\n    case HostPortal:\r\n      return updatePortalComponent(current, workInProgress, renderLanes);\r\n\r\n    case ForwardRef:\r\n      {\r\n        var type = workInProgress.type;\r\n        var _unresolvedProps2 = workInProgress.pendingProps;\r\n\r\n        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\r\n\r\n        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\r\n      }\r\n\r\n    case Fragment:\r\n      return updateFragment(current, workInProgress, renderLanes);\r\n\r\n    case Mode:\r\n      return updateMode(current, workInProgress, renderLanes);\r\n\r\n    case Profiler:\r\n      return updateProfiler(current, workInProgress, renderLanes);\r\n\r\n    case ContextProvider:\r\n      return updateContextProvider(current, workInProgress, renderLanes);\r\n\r\n    case ContextConsumer:\r\n      return updateContextConsumer(current, workInProgress, renderLanes);\r\n\r\n    case MemoComponent:\r\n      {\r\n        var _type2 = workInProgress.type;\r\n        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\r\n\r\n        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\r\n\r\n        {\r\n          if (workInProgress.type !== workInProgress.elementType) {\r\n            var outerPropTypes = _type2.propTypes;\r\n\r\n            if (outerPropTypes) {\r\n              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\r\n              'prop', getComponentNameFromType(_type2));\r\n            }\r\n          }\r\n        }\r\n\r\n        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\r\n        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\r\n      }\r\n\r\n    case SimpleMemoComponent:\r\n      {\r\n        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\r\n      }\r\n\r\n    case IncompleteClassComponent:\r\n      {\r\n        var _Component2 = workInProgress.type;\r\n        var _unresolvedProps4 = workInProgress.pendingProps;\r\n\r\n        var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\r\n\r\n        return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\r\n      }\r\n\r\n    case SuspenseListComponent:\r\n      {\r\n        return updateSuspenseListComponent(current, workInProgress, renderLanes);\r\n      }\r\n\r\n    case ScopeComponent:\r\n      {\r\n\r\n        break;\r\n      }\r\n\r\n    case OffscreenComponent:\r\n      {\r\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\r\n      }\r\n  }\r\n\r\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\r\n}\r\n\r\nfunction markUpdate(workInProgress) {\r\n  // Tag the fiber with an update effect. This turns a Placement into\r\n  // a PlacementAndUpdate.\r\n  workInProgress.flags |= Update;\r\n}\r\n\r\nfunction markRef$1(workInProgress) {\r\n  workInProgress.flags |= Ref;\r\n\r\n  {\r\n    workInProgress.flags |= RefStatic;\r\n  }\r\n}\r\n\r\nfunction hadNoMutationsEffects(current, completedWork) {\r\n  var didBailout = current !== null && current.child === completedWork.child;\r\n\r\n  if (didBailout) {\r\n    return true;\r\n  }\r\n\r\n  if ((completedWork.flags & ChildDeletion) !== NoFlags) {\r\n    return false;\r\n  } // TODO: If we move the `hadNoMutationsEffects` call after `bubbleProperties`\r\n  // then we only have to check the `completedWork.subtreeFlags`.\r\n\r\n\r\n  var child = completedWork.child;\r\n\r\n  while (child !== null) {\r\n    if ((child.flags & MutationMask) !== NoFlags || (child.subtreeFlags & MutationMask) !== NoFlags) {\r\n      return false;\r\n    }\r\n\r\n    child = child.sibling;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nvar appendAllChildren;\r\nvar updateHostContainer;\r\nvar updateHostComponent$1;\r\nvar updateHostText$1;\r\n\r\nif (supportsMutation) {\r\n  // Mutation mode\r\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\r\n    // We only have the top Fiber that was created but we need recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = workInProgress.child;\r\n\r\n    while (node !== null) {\r\n      if (node.tag === HostComponent || node.tag === HostText) {\r\n        appendInitialChild(parent, node.stateNode);\r\n      } else if (node.tag === HostPortal) ; else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n\r\n      if (node === workInProgress) {\r\n        return;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === workInProgress) {\r\n          return;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  };\r\n\r\n  updateHostContainer = function (current, workInProgress) {// Noop\r\n  };\r\n\r\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\r\n    // If we have an alternate, that means this is an update and we need to\r\n    // schedule a side-effect to do the updates.\r\n    var oldProps = current.memoizedProps;\r\n\r\n    if (oldProps === newProps) {\r\n      // In mutation mode, this is sufficient for a bailout because\r\n      // we won't touch this node even if children changed.\r\n      return;\r\n    } // If we get updated because one of our children updated, we don't\r\n    // have newProps so we'll have to reuse them.\r\n    // TODO: Split the update API as separate for the props vs. children.\r\n    // Even better would be if children weren't special cased at all tho.\r\n\r\n\r\n    var instance = workInProgress.stateNode;\r\n    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\r\n    // component is hitting the resume path. Figure out why. Possibly\r\n    // related to `hidden`.\r\n\r\n    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.\r\n\r\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\r\n    // is a new ref we mark this as an update. All the work is done in commitWork.\r\n\r\n    if (updatePayload) {\r\n      markUpdate(workInProgress);\r\n    }\r\n  };\r\n\r\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\r\n    // If the text differs, mark it as an update. All the work in done in commitWork.\r\n    if (oldText !== newText) {\r\n      markUpdate(workInProgress);\r\n    }\r\n  };\r\n} else if (supportsPersistence) {\r\n  // Persistent host tree mode\r\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\r\n    // We only have the top Fiber that was created but we need recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = workInProgress.child;\r\n\r\n    while (node !== null) {\r\n      // eslint-disable-next-line no-labels\r\n       if (node.tag === HostComponent) {\r\n        var instance = node.stateNode;\r\n\r\n        if (needsVisibilityToggle && isHidden) {\r\n          // This child is inside a timed out tree. Hide it.\r\n          var props = node.memoizedProps;\r\n          var type = node.type;\r\n          instance = cloneHiddenInstance(instance, type, props, node);\r\n        }\r\n\r\n        appendInitialChild(parent, instance);\r\n      } else if (node.tag === HostText) {\r\n        var _instance = node.stateNode;\r\n\r\n        if (needsVisibilityToggle && isHidden) {\r\n          // This child is inside a timed out tree. Hide it.\r\n          var text = node.memoizedProps;\r\n          _instance = cloneHiddenTextInstance(_instance, text, node);\r\n        }\r\n\r\n        appendInitialChild(parent, _instance);\r\n      } else if (node.tag === HostPortal) ; else if (node.tag === OffscreenComponent && node.memoizedState !== null) {\r\n        // The children in this boundary are hidden. Toggle their visibility\r\n        // before appending.\r\n        var child = node.child;\r\n\r\n        if (child !== null) {\r\n          child.return = node;\r\n        }\r\n\r\n        appendAllChildren(parent, node, true, true);\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      } // $FlowFixMe This is correct but Flow is confused by the labeled break.\r\n\r\n\r\n      node = node;\r\n\r\n      if (node === workInProgress) {\r\n        return;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === workInProgress) {\r\n          return;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  }; // An unfortunate fork of appendAllChildren because we have two different parent types.\r\n\r\n\r\n  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {\r\n    // We only have the top Fiber that was created but we need recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = workInProgress.child;\r\n\r\n    while (node !== null) {\r\n      // eslint-disable-next-line no-labels\r\n       if (node.tag === HostComponent) {\r\n        var instance = node.stateNode;\r\n\r\n        if (needsVisibilityToggle && isHidden) {\r\n          // This child is inside a timed out tree. Hide it.\r\n          var props = node.memoizedProps;\r\n          var type = node.type;\r\n          instance = cloneHiddenInstance(instance, type, props, node);\r\n        }\r\n\r\n        appendChildToContainerChildSet(containerChildSet, instance);\r\n      } else if (node.tag === HostText) {\r\n        var _instance2 = node.stateNode;\r\n\r\n        if (needsVisibilityToggle && isHidden) {\r\n          // This child is inside a timed out tree. Hide it.\r\n          var text = node.memoizedProps;\r\n          _instance2 = cloneHiddenTextInstance(_instance2, text, node);\r\n        }\r\n\r\n        appendChildToContainerChildSet(containerChildSet, _instance2);\r\n      } else if (node.tag === HostPortal) ; else if (node.tag === OffscreenComponent && node.memoizedState !== null) {\r\n        // The children in this boundary are hidden. Toggle their visibility\r\n        // before appending.\r\n        var child = node.child;\r\n\r\n        if (child !== null) {\r\n          child.return = node;\r\n        }\r\n\r\n        appendAllChildrenToContainer(containerChildSet, node, true, true);\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      } // $FlowFixMe This is correct but Flow is confused by the labeled break.\r\n\r\n\r\n      node = node;\r\n\r\n      if (node === workInProgress) {\r\n        return;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === workInProgress) {\r\n          return;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  };\r\n\r\n  updateHostContainer = function (current, workInProgress) {\r\n    var portalOrRoot = workInProgress.stateNode;\r\n    var childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\r\n\r\n    if (childrenUnchanged) ; else {\r\n      var container = portalOrRoot.containerInfo;\r\n      var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.\r\n\r\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\r\n      portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.\r\n\r\n      markUpdate(workInProgress);\r\n      finalizeContainerChildren(container, newChildSet);\r\n    }\r\n  };\r\n\r\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\r\n    var currentInstance = current.stateNode;\r\n    var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.\r\n    // This guarantees that we can reuse all of them.\r\n\r\n    var childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\r\n\r\n    if (childrenUnchanged && oldProps === newProps) {\r\n      // No changes, just reuse the existing instance.\r\n      // Note that this might release a previous clone.\r\n      workInProgress.stateNode = currentInstance;\r\n      return;\r\n    }\r\n\r\n    var recyclableInstance = workInProgress.stateNode;\r\n    var currentHostContext = getHostContext();\r\n    var updatePayload = null;\r\n\r\n    if (oldProps !== newProps) {\r\n      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);\r\n    }\r\n\r\n    if (childrenUnchanged && updatePayload === null) {\r\n      // No changes, just reuse the existing instance.\r\n      // Note that this might release a previous clone.\r\n      workInProgress.stateNode = currentInstance;\r\n      return;\r\n    }\r\n\r\n    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);\r\n\r\n    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {\r\n      markUpdate(workInProgress);\r\n    }\r\n\r\n    workInProgress.stateNode = newInstance;\r\n\r\n    if (childrenUnchanged) {\r\n      // If there are no other effects in this tree, we need to flag this node as having one.\r\n      // Even though we're not going to use it for anything.\r\n      // Otherwise parents won't know that there are new children to propagate upwards.\r\n      markUpdate(workInProgress);\r\n    } else {\r\n      // If children might have changed, we have to add them all to the set.\r\n      appendAllChildren(newInstance, workInProgress, false, false);\r\n    }\r\n  };\r\n\r\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\r\n    if (oldText !== newText) {\r\n      // If the text content differs, we'll create a new text instance for it.\r\n      var rootContainerInstance = getRootHostContainer();\r\n      var currentHostContext = getHostContext();\r\n      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress); // We'll have to mark it as having an effect, even though we won't use the effect for anything.\r\n      // This lets the parents know that at least one of their children has changed.\r\n\r\n      markUpdate(workInProgress);\r\n    } else {\r\n      workInProgress.stateNode = current.stateNode;\r\n    }\r\n  };\r\n} else {\r\n  // No host operations\r\n  updateHostContainer = function (current, workInProgress) {// Noop\r\n  };\r\n\r\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {// Noop\r\n  };\r\n\r\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {// Noop\r\n  };\r\n}\r\n\r\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\r\n  if (getIsHydrating()) {\r\n    // If we're hydrating, we should consume as many items as we can\r\n    // so we don't leave any behind.\r\n    return;\r\n  }\r\n\r\n  switch (renderState.tailMode) {\r\n    case 'hidden':\r\n      {\r\n        // Any insertions at the end of the tail list after this point\r\n        // should be invisible. If there are already mounted boundaries\r\n        // anything before them are not considered for collapsing.\r\n        // Therefore we need to go through the whole tail to find if\r\n        // there are any.\r\n        var tailNode = renderState.tail;\r\n        var lastTailNode = null;\r\n\r\n        while (tailNode !== null) {\r\n          if (tailNode.alternate !== null) {\r\n            lastTailNode = tailNode;\r\n          }\r\n\r\n          tailNode = tailNode.sibling;\r\n        } // Next we're simply going to delete all insertions after the\r\n        // last rendered item.\r\n\r\n\r\n        if (lastTailNode === null) {\r\n          // All remaining items in the tail are insertions.\r\n          renderState.tail = null;\r\n        } else {\r\n          // Detach the insertion after the last node that was already\r\n          // inserted.\r\n          lastTailNode.sibling = null;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    case 'collapsed':\r\n      {\r\n        // Any insertions at the end of the tail list after this point\r\n        // should be invisible. If there are already mounted boundaries\r\n        // anything before them are not considered for collapsing.\r\n        // Therefore we need to go through the whole tail to find if\r\n        // there are any.\r\n        var _tailNode = renderState.tail;\r\n        var _lastTailNode = null;\r\n\r\n        while (_tailNode !== null) {\r\n          if (_tailNode.alternate !== null) {\r\n            _lastTailNode = _tailNode;\r\n          }\r\n\r\n          _tailNode = _tailNode.sibling;\r\n        } // Next we're simply going to delete all insertions after the\r\n        // last rendered item.\r\n\r\n\r\n        if (_lastTailNode === null) {\r\n          // All remaining items in the tail are insertions.\r\n          if (!hasRenderedATailFallback && renderState.tail !== null) {\r\n            // We suspended during the head. We want to show at least one\r\n            // row at the tail. So we'll keep on and cut off the rest.\r\n            renderState.tail.sibling = null;\r\n          } else {\r\n            renderState.tail = null;\r\n          }\r\n        } else {\r\n          // Detach the insertion after the last node that was already\r\n          // inserted.\r\n          _lastTailNode.sibling = null;\r\n        }\r\n\r\n        break;\r\n      }\r\n  }\r\n}\r\n\r\nfunction bubbleProperties(completedWork) {\r\n  var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\r\n  var newChildLanes = NoLanes;\r\n  var subtreeFlags = NoFlags;\r\n\r\n  if (!didBailout) {\r\n    // Bubble up the earliest expiration time.\r\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\r\n      // In profiling mode, resetChildExpirationTime is also used to reset\r\n      // profiler durations.\r\n      var actualDuration = completedWork.actualDuration;\r\n      var treeBaseDuration = completedWork.selfBaseDuration;\r\n      var child = completedWork.child;\r\n\r\n      while (child !== null) {\r\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\r\n        subtreeFlags |= child.subtreeFlags;\r\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\r\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\r\n        // When work is done, it should bubble to the parent's actualDuration. If\r\n        // the fiber has not been cloned though, (meaning no work was done), then\r\n        // this value will reflect the amount of time spent working on a previous\r\n        // render. In that case it should not bubble. We determine whether it was\r\n        // cloned by comparing the child pointer.\r\n\r\n        actualDuration += child.actualDuration;\r\n        treeBaseDuration += child.treeBaseDuration;\r\n        child = child.sibling;\r\n      }\r\n\r\n      completedWork.actualDuration = actualDuration;\r\n      completedWork.treeBaseDuration = treeBaseDuration;\r\n    } else {\r\n      var _child = completedWork.child;\r\n\r\n      while (_child !== null) {\r\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\r\n        subtreeFlags |= _child.subtreeFlags;\r\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\r\n        // smell because it assumes the commit phase is never concurrent with\r\n        // the render phase. Will address during refactor to alternate model.\r\n\r\n        _child.return = completedWork;\r\n        _child = _child.sibling;\r\n      }\r\n    }\r\n\r\n    completedWork.subtreeFlags |= subtreeFlags;\r\n  } else {\r\n    // Bubble up the earliest expiration time.\r\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\r\n      // In profiling mode, resetChildExpirationTime is also used to reset\r\n      // profiler durations.\r\n      var _treeBaseDuration = completedWork.selfBaseDuration;\r\n      var _child2 = completedWork.child;\r\n\r\n      while (_child2 !== null) {\r\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\r\n        // so we should bubble those up even during a bailout. All the other\r\n        // flags have a lifetime only of a single render + commit, so we should\r\n        // ignore them.\r\n\r\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\r\n        subtreeFlags |= _child2.flags & StaticMask;\r\n        _treeBaseDuration += _child2.treeBaseDuration;\r\n        _child2 = _child2.sibling;\r\n      }\r\n\r\n      completedWork.treeBaseDuration = _treeBaseDuration;\r\n    } else {\r\n      var _child3 = completedWork.child;\r\n\r\n      while (_child3 !== null) {\r\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\r\n        // so we should bubble those up even during a bailout. All the other\r\n        // flags have a lifetime only of a single render + commit, so we should\r\n        // ignore them.\r\n\r\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\r\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\r\n        // smell because it assumes the commit phase is never concurrent with\r\n        // the render phase. Will address during refactor to alternate model.\r\n\r\n        _child3.return = completedWork;\r\n        _child3 = _child3.sibling;\r\n      }\r\n    }\r\n\r\n    completedWork.subtreeFlags |= subtreeFlags;\r\n  }\r\n\r\n  completedWork.childLanes = newChildLanes;\r\n  return didBailout;\r\n}\r\n\r\nfunction completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {\r\n  if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {\r\n    warnIfUnhydratedTailNodes(workInProgress);\r\n    resetHydrationState();\r\n    workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;\r\n    return false;\r\n  }\r\n\r\n  var wasHydrated = popHydrationState(workInProgress);\r\n\r\n  if (nextState !== null && nextState.dehydrated !== null) {\r\n    // We might be inside a hydration state the first time we're picking up this\r\n    // Suspense boundary, and also after we've reentered it for further hydration.\r\n    if (current === null) {\r\n      if (!wasHydrated) {\r\n        throw new Error('A dehydrated suspense component was completed without a hydrated node. ' + 'This is probably a bug in React.');\r\n      }\r\n\r\n      prepareToHydrateHostSuspenseInstance(workInProgress);\r\n      bubbleProperties(workInProgress);\r\n\r\n      {\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          var isTimedOutSuspense = nextState !== null;\r\n\r\n          if (isTimedOutSuspense) {\r\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\r\n            var primaryChildFragment = workInProgress.child;\r\n\r\n            if (primaryChildFragment !== null) {\r\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\r\n              workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    } else {\r\n      // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration\r\n      // state since we're now exiting out of it. popHydrationState doesn't do that for us.\r\n      resetHydrationState();\r\n\r\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\r\n        // This boundary did not suspend so it's now hydrated and unsuspended.\r\n        workInProgress.memoizedState = null;\r\n      } // If nothing suspended, we need to schedule an effect to mark this boundary\r\n      // as having hydrated so events know that they're free to be invoked.\r\n      // It's also a signal to replay events and the suspense callback.\r\n      // If something suspended, schedule an effect to attach retry listeners.\r\n      // So we might as well always mark this.\r\n\r\n\r\n      workInProgress.flags |= Update;\r\n      bubbleProperties(workInProgress);\r\n\r\n      {\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          var _isTimedOutSuspense = nextState !== null;\r\n\r\n          if (_isTimedOutSuspense) {\r\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\r\n            var _primaryChildFragment = workInProgress.child;\r\n\r\n            if (_primaryChildFragment !== null) {\r\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\r\n              workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  } else {\r\n    // Successfully completed this tree. If this was a forced client render,\r\n    // there may have been recoverable errors during first hydration\r\n    // attempt. If so, add them to a queue so we can log them in the\r\n    // commit phase.\r\n    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction completeWork(current, workInProgress, renderLanes) {\r\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\r\n  // to the current tree provider fiber is just as fast and less error-prone.\r\n  // Ideally we would have a special version of the work loop only\r\n  // for hydration.\r\n\r\n  popTreeContext(workInProgress);\r\n\r\n  switch (workInProgress.tag) {\r\n    case IndeterminateComponent:\r\n    case LazyComponent:\r\n    case SimpleMemoComponent:\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case Fragment:\r\n    case Mode:\r\n    case Profiler:\r\n    case ContextConsumer:\r\n    case MemoComponent:\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n\r\n    case ClassComponent:\r\n      {\r\n        var Component = workInProgress.type;\r\n\r\n        if (isContextProvider(Component)) {\r\n          popContext(workInProgress);\r\n        }\r\n\r\n        bubbleProperties(workInProgress);\r\n        return null;\r\n      }\r\n\r\n    case HostRoot:\r\n      {\r\n        var fiberRoot = workInProgress.stateNode;\r\n        popHostContainer(workInProgress);\r\n        popTopLevelContextObject(workInProgress);\r\n        resetWorkInProgressVersions();\r\n\r\n        if (fiberRoot.pendingContext) {\r\n          fiberRoot.context = fiberRoot.pendingContext;\r\n          fiberRoot.pendingContext = null;\r\n        }\r\n\r\n        if (current === null || current.child === null) {\r\n          // If we hydrated, pop so that we can delete any remaining children\r\n          // that weren't hydrated.\r\n          var wasHydrated = popHydrationState(workInProgress);\r\n\r\n          if (wasHydrated) {\r\n            // If we hydrated, then we'll need to schedule an update for\r\n            // the commit side-effects on the root.\r\n            markUpdate(workInProgress);\r\n          } else {\r\n            if (current !== null) {\r\n              var prevState = current.memoizedState;\r\n\r\n              if ( // Check if this is a client root\r\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\r\n              (workInProgress.flags & ForceClientRender) !== NoFlags) {\r\n                // Schedule an effect to clear this container at the start of the\r\n                // next commit. This handles the case of React rendering into a\r\n                // container with previous children. It's also safe to do for\r\n                // updates too, because current.child would only be null if the\r\n                // previous render was null (so the container would already\r\n                // be empty).\r\n                workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\r\n                // recoverable errors during first hydration attempt. If so, add\r\n                // them to a queue so we can log them in the commit phase.\r\n\r\n                upgradeHydrationErrorsToRecoverable();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        updateHostContainer(current, workInProgress);\r\n        bubbleProperties(workInProgress);\r\n\r\n        return null;\r\n      }\r\n\r\n    case HostComponent:\r\n      {\r\n        popHostContext(workInProgress);\r\n        var rootContainerInstance = getRootHostContainer();\r\n        var type = workInProgress.type;\r\n\r\n        if (current !== null && workInProgress.stateNode != null) {\r\n          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\r\n\r\n          if (current.ref !== workInProgress.ref) {\r\n            markRef$1(workInProgress);\r\n          }\r\n        } else {\r\n          if (!newProps) {\r\n            if (workInProgress.stateNode === null) {\r\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\r\n            } // This can happen when we abort work.\r\n\r\n\r\n            bubbleProperties(workInProgress);\r\n            return null;\r\n          }\r\n\r\n          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\r\n          // \"stack\" as the parent. Then append children as we go in beginWork\r\n          // or completeWork depending on whether we want to add them top->down or\r\n          // bottom->up. Top->down is faster in IE11.\r\n\r\n          var _wasHydrated = popHydrationState(workInProgress);\r\n\r\n          if (_wasHydrated) {\r\n            // TODO: Move this and createInstance step into the beginPhase\r\n            // to consolidate.\r\n            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {\r\n              // If changes to the hydrated node need to be applied at the\r\n              // commit-phase we mark this as such.\r\n              markUpdate(workInProgress);\r\n            }\r\n          } else {\r\n            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\r\n            appendAllChildren(instance, workInProgress, false, false);\r\n            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\r\n            // (eg DOM renderer supports auto-focus for certain elements).\r\n            // Make sure such renderers get scheduled for later work.\r\n\r\n            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {\r\n              markUpdate(workInProgress);\r\n            }\r\n          }\r\n\r\n          if (workInProgress.ref !== null) {\r\n            // If there is a ref on a host node we need to schedule a callback\r\n            markRef$1(workInProgress);\r\n          }\r\n        }\r\n\r\n        bubbleProperties(workInProgress);\r\n        return null;\r\n      }\r\n\r\n    case HostText:\r\n      {\r\n        var newText = newProps;\r\n\r\n        if (current && workInProgress.stateNode != null) {\r\n          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\r\n          // to schedule a side-effect to do the updates.\r\n\r\n          updateHostText$1(current, workInProgress, oldText, newText);\r\n        } else {\r\n          if (typeof newText !== 'string') {\r\n            if (workInProgress.stateNode === null) {\r\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\r\n            } // This can happen when we abort work.\r\n\r\n          }\r\n\r\n          var _rootContainerInstance = getRootHostContainer();\r\n\r\n          var _currentHostContext = getHostContext();\r\n\r\n          var _wasHydrated2 = popHydrationState(workInProgress);\r\n\r\n          if (_wasHydrated2) {\r\n            if (prepareToHydrateHostTextInstance(workInProgress)) {\r\n              markUpdate(workInProgress);\r\n            }\r\n          } else {\r\n            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\r\n          }\r\n        }\r\n\r\n        bubbleProperties(workInProgress);\r\n        return null;\r\n      }\r\n\r\n    case SuspenseComponent:\r\n      {\r\n        popSuspenseContext(workInProgress);\r\n        var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this\r\n        // to its own fiber type so that we can add other kinds of hydration\r\n        // boundaries that aren't associated with a Suspense tree. In anticipation\r\n        // of such a refactor, all the hydration logic is contained in\r\n        // this branch.\r\n\r\n        if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {\r\n          var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);\r\n\r\n          if (!fallthroughToNormalSuspensePath) {\r\n            if (workInProgress.flags & ShouldCapture) {\r\n              // Special case. There were remaining unhydrated nodes. We treat\r\n              // this as a mismatch. Revert to client rendering.\r\n              return workInProgress;\r\n            } else {\r\n              // Did not finish hydrating, either because this is the initial\r\n              // render or because something suspended.\r\n              return null;\r\n            }\r\n          } // Continue with the normal Suspense path.\r\n\r\n        }\r\n\r\n        if ((workInProgress.flags & DidCapture) !== NoFlags) {\r\n          // Something suspended. Re-render with the fallback children.\r\n          workInProgress.lanes = renderLanes; // Do not reset the effect list.\r\n\r\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\r\n            transferActualDuration(workInProgress);\r\n          } // Don't bubble properties in this case.\r\n\r\n\r\n          return workInProgress;\r\n        }\r\n\r\n        var nextDidTimeout = nextState !== null;\r\n        var prevDidTimeout = current !== null && current.memoizedState !== null;\r\n        // a passive effect, which is when we process the transitions\r\n\r\n\r\n        if (nextDidTimeout !== prevDidTimeout) {\r\n          // an effect to toggle the subtree's visibility. When we switch from\r\n          // fallback -> primary, the inner Offscreen fiber schedules this effect\r\n          // as part of its normal complete phase. But when we switch from\r\n          // primary -> fallback, the inner Offscreen fiber does not have a complete\r\n          // phase. So we need to schedule its effect here.\r\n          //\r\n          // We also use this flag to connect/disconnect the effects, but the same\r\n          // logic applies: when re-connecting, the Offscreen fiber's complete\r\n          // phase will handle scheduling the effect. It's only when the fallback\r\n          // is active that we have to do anything special.\r\n\r\n\r\n          if (nextDidTimeout) {\r\n            var _offscreenFiber2 = workInProgress.child;\r\n            _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\r\n            // in the concurrent tree already suspended during this render.\r\n            // This is a known bug.\r\n\r\n            if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\r\n              // TODO: Move this back to throwException because this is too late\r\n              // if this is a large tree which is common for initial loads. We\r\n              // don't know if we should restart a render or not until we get\r\n              // this marker, and this is too late.\r\n              // If this render already had a ping or lower pri updates,\r\n              // and this is the first time we know we're going to suspend we\r\n              // should be able to immediately restart from within throwException.\r\n              var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\r\n\r\n              if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\r\n                // If this was in an invisible tree or a new render, then showing\r\n                // this boundary is ok.\r\n                renderDidSuspend();\r\n              } else {\r\n                // Otherwise, we're going to have to hide content so we should\r\n                // suspend for longer if possible.\r\n                renderDidSuspendDelayIfPossible();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        var wakeables = workInProgress.updateQueue;\r\n\r\n        if (wakeables !== null) {\r\n          // Schedule an effect to attach a retry listener to the promise.\r\n          // TODO: Move to passive phase\r\n          workInProgress.flags |= Update;\r\n        }\r\n\r\n        bubbleProperties(workInProgress);\r\n\r\n        {\r\n          if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n            if (nextDidTimeout) {\r\n              // Don't count time spent in a timed out Suspense subtree as part of the base duration.\r\n              var primaryChildFragment = workInProgress.child;\r\n\r\n              if (primaryChildFragment !== null) {\r\n                // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\r\n                workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return null;\r\n      }\r\n\r\n    case HostPortal:\r\n      popHostContainer(workInProgress);\r\n      updateHostContainer(current, workInProgress);\r\n\r\n      if (current === null) {\r\n        preparePortalMount(workInProgress.stateNode.containerInfo);\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n\r\n    case ContextProvider:\r\n      // Pop provider fiber\r\n      var context = workInProgress.type._context;\r\n      popProvider(context, workInProgress);\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n\r\n    case IncompleteClassComponent:\r\n      {\r\n        // Same as class component case. I put it down here so that the tags are\r\n        // sequential to ensure this switch is compiled to a jump table.\r\n        var _Component = workInProgress.type;\r\n\r\n        if (isContextProvider(_Component)) {\r\n          popContext(workInProgress);\r\n        }\r\n\r\n        bubbleProperties(workInProgress);\r\n        return null;\r\n      }\r\n\r\n    case SuspenseListComponent:\r\n      {\r\n        popSuspenseContext(workInProgress);\r\n        var renderState = workInProgress.memoizedState;\r\n\r\n        if (renderState === null) {\r\n          // We're running in the default, \"independent\" mode.\r\n          // We don't do anything in this mode.\r\n          bubbleProperties(workInProgress);\r\n          return null;\r\n        }\r\n\r\n        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\r\n        var renderedTail = renderState.rendering;\r\n\r\n        if (renderedTail === null) {\r\n          // We just rendered the head.\r\n          if (!didSuspendAlready) {\r\n            // This is the first pass. We need to figure out if anything is still\r\n            // suspended in the rendered set.\r\n            // If new content unsuspended, but there's still some content that\r\n            // didn't. Then we need to do a second pass that forces everything\r\n            // to keep showing their fallbacks.\r\n            // We might be suspended if something in this render pass suspended, or\r\n            // something in the previous committed pass suspended. Otherwise,\r\n            // there's no chance so we can skip the expensive call to\r\n            // findFirstSuspended.\r\n            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\r\n\r\n            if (!cannotBeSuspended) {\r\n              var row = workInProgress.child;\r\n\r\n              while (row !== null) {\r\n                var suspended = findFirstSuspended(row);\r\n\r\n                if (suspended !== null) {\r\n                  didSuspendAlready = true;\r\n                  workInProgress.flags |= DidCapture;\r\n                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\r\n                  // part of the second pass. In that case nothing will subscribe to\r\n                  // its thenables. Instead, we'll transfer its thenables to the\r\n                  // SuspenseList so that it can retry if they resolve.\r\n                  // There might be multiple of these in the list but since we're\r\n                  // going to wait for all of them anyway, it doesn't really matter\r\n                  // which ones gets to ping. In theory we could get clever and keep\r\n                  // track of how many dependencies remain but it gets tricky because\r\n                  // in the meantime, we can add/remove/change items and dependencies.\r\n                  // We might bail out of the loop before finding any but that\r\n                  // doesn't matter since that means that the other boundaries that\r\n                  // we did find already has their listeners attached.\r\n\r\n                  var newThenables = suspended.updateQueue;\r\n\r\n                  if (newThenables !== null) {\r\n                    workInProgress.updateQueue = newThenables;\r\n                    workInProgress.flags |= Update;\r\n                  } // Rerender the whole list, but this time, we'll force fallbacks\r\n                  // to stay in place.\r\n                  // Reset the effect flags before doing the second pass since that's now invalid.\r\n                  // Reset the child fibers to their original state.\r\n\r\n\r\n                  workInProgress.subtreeFlags = NoFlags;\r\n                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\r\n                  // rerender the children.\r\n\r\n                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.\r\n\r\n                  return workInProgress.child;\r\n                }\r\n\r\n                row = row.sibling;\r\n              }\r\n            }\r\n\r\n            if (renderState.tail !== null && now() > getRenderTargetTime()) {\r\n              // We have already passed our CPU deadline but we still have rows\r\n              // left in the tail. We'll just give up further attempts to render\r\n              // the main content and only render fallbacks.\r\n              workInProgress.flags |= DidCapture;\r\n              didSuspendAlready = true;\r\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\r\n              // to get it started back up to attempt the next item. While in terms\r\n              // of priority this work has the same priority as this current render,\r\n              // it's not part of the same transition once the transition has\r\n              // committed. If it's sync, we still want to yield so that it can be\r\n              // painted. Conceptually, this is really the same as pinging.\r\n              // We can use any RetryLane even if it's the one currently rendering\r\n              // since we're leaving it behind on this node.\r\n\r\n              workInProgress.lanes = SomeRetryLane;\r\n            }\r\n          } else {\r\n            cutOffTailIfNeeded(renderState, false);\r\n          } // Next we're going to render the tail.\r\n\r\n        } else {\r\n          // Append the rendered row to the child list.\r\n          if (!didSuspendAlready) {\r\n            var _suspended = findFirstSuspended(renderedTail);\r\n\r\n            if (_suspended !== null) {\r\n              workInProgress.flags |= DidCapture;\r\n              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\r\n              // get lost if this row ends up dropped during a second pass.\r\n\r\n              var _newThenables = _suspended.updateQueue;\r\n\r\n              if (_newThenables !== null) {\r\n                workInProgress.updateQueue = _newThenables;\r\n                workInProgress.flags |= Update;\r\n              }\r\n\r\n              cutOffTailIfNeeded(renderState, true); // This might have been modified.\r\n\r\n              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.\r\n              ) {\r\n                  // We're done.\r\n                  bubbleProperties(workInProgress);\r\n                  return null;\r\n                }\r\n            } else if ( // The time it took to render last row is greater than the remaining\r\n            // time we have to render. So rendering one more row would likely\r\n            // exceed it.\r\n            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\r\n              // We have now passed our CPU deadline and we'll just give up further\r\n              // attempts to render the main content and only render fallbacks.\r\n              // The assumption is that this is usually faster.\r\n              workInProgress.flags |= DidCapture;\r\n              didSuspendAlready = true;\r\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\r\n              // to get it started back up to attempt the next item. While in terms\r\n              // of priority this work has the same priority as this current render,\r\n              // it's not part of the same transition once the transition has\r\n              // committed. If it's sync, we still want to yield so that it can be\r\n              // painted. Conceptually, this is really the same as pinging.\r\n              // We can use any RetryLane even if it's the one currently rendering\r\n              // since we're leaving it behind on this node.\r\n\r\n              workInProgress.lanes = SomeRetryLane;\r\n            }\r\n          }\r\n\r\n          if (renderState.isBackwards) {\r\n            // The effect list of the backwards tail will have been added\r\n            // to the end. This breaks the guarantee that life-cycles fire in\r\n            // sibling order but that isn't a strong guarantee promised by React.\r\n            // Especially since these might also just pop in during future commits.\r\n            // Append to the beginning of the list.\r\n            renderedTail.sibling = workInProgress.child;\r\n            workInProgress.child = renderedTail;\r\n          } else {\r\n            var previousSibling = renderState.last;\r\n\r\n            if (previousSibling !== null) {\r\n              previousSibling.sibling = renderedTail;\r\n            } else {\r\n              workInProgress.child = renderedTail;\r\n            }\r\n\r\n            renderState.last = renderedTail;\r\n          }\r\n        }\r\n\r\n        if (renderState.tail !== null) {\r\n          // We still have tail rows to render.\r\n          // Pop a row.\r\n          var next = renderState.tail;\r\n          renderState.rendering = next;\r\n          renderState.tail = next.sibling;\r\n          renderState.renderingStartTime = now();\r\n          next.sibling = null; // Restore the context.\r\n          // TODO: We can probably just avoid popping it instead and only\r\n          // setting it the first time we go from not suspended to suspended.\r\n\r\n          var suspenseContext = suspenseStackCursor.current;\r\n\r\n          if (didSuspendAlready) {\r\n            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\r\n          } else {\r\n            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\r\n          }\r\n\r\n          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\r\n          // Don't bubble properties in this case.\r\n\r\n          return next;\r\n        }\r\n\r\n        bubbleProperties(workInProgress);\r\n        return null;\r\n      }\r\n\r\n    case ScopeComponent:\r\n      {\r\n\r\n        break;\r\n      }\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent:\r\n      {\r\n        popRenderLanes(workInProgress);\r\n        var _nextState = workInProgress.memoizedState;\r\n        var nextIsHidden = _nextState !== null;\r\n\r\n        if (current !== null) {\r\n          var _prevState = current.memoizedState;\r\n          var prevIsHidden = _prevState !== null;\r\n\r\n          if (prevIsHidden !== nextIsHidden && ( // LegacyHidden doesn't do any hiding — it only pre-renders.\r\n          !enableLegacyHidden )) {\r\n            workInProgress.flags |= Visibility;\r\n          }\r\n        }\r\n\r\n        if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\r\n          bubbleProperties(workInProgress);\r\n        } else {\r\n          // Don't bubble properties for hidden children unless we're rendering\r\n          // at offscreen priority.\r\n          if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\r\n            bubbleProperties(workInProgress);\r\n\r\n            if (supportsMutation) {\r\n              // Check if there was an insertion or update in the hidden subtree.\r\n              // If so, we need to hide those nodes in the commit phase, so\r\n              // schedule a visibility effect.\r\n              if ( workInProgress.subtreeFlags & (Placement | Update)) {\r\n                workInProgress.flags |= Visibility;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n\r\n    case CacheComponent:\r\n      {\r\n\r\n        return null;\r\n      }\r\n\r\n    case TracingMarkerComponent:\r\n      {\r\n\r\n        return null;\r\n      }\r\n  }\r\n\r\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\r\n}\r\n\r\nfunction unwindWork(current, workInProgress, renderLanes) {\r\n  // Note: This intentionally doesn't check if we're hydrating because comparing\r\n  // to the current tree provider fiber is just as fast and less error-prone.\r\n  // Ideally we would have a special version of the work loop only\r\n  // for hydration.\r\n  popTreeContext(workInProgress);\r\n\r\n  switch (workInProgress.tag) {\r\n    case ClassComponent:\r\n      {\r\n        var Component = workInProgress.type;\r\n\r\n        if (isContextProvider(Component)) {\r\n          popContext(workInProgress);\r\n        }\r\n\r\n        var flags = workInProgress.flags;\r\n\r\n        if (flags & ShouldCapture) {\r\n          workInProgress.flags = flags & ~ShouldCapture | DidCapture;\r\n\r\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\r\n            transferActualDuration(workInProgress);\r\n          }\r\n\r\n          return workInProgress;\r\n        }\r\n\r\n        return null;\r\n      }\r\n\r\n    case HostRoot:\r\n      {\r\n        var root = workInProgress.stateNode;\r\n        popHostContainer(workInProgress);\r\n        popTopLevelContextObject(workInProgress);\r\n        resetWorkInProgressVersions();\r\n        var _flags = workInProgress.flags;\r\n\r\n        if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\r\n          // There was an error during render that wasn't captured by a suspense\r\n          // boundary. Do a second pass on the root to unmount the children.\r\n          workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\r\n          return workInProgress;\r\n        } // We unwound to the root without completing it. Exit.\r\n\r\n\r\n        return null;\r\n      }\r\n\r\n    case HostComponent:\r\n      {\r\n        // TODO: popHydrationState\r\n        popHostContext(workInProgress);\r\n        return null;\r\n      }\r\n\r\n    case SuspenseComponent:\r\n      {\r\n        popSuspenseContext(workInProgress);\r\n        var suspenseState = workInProgress.memoizedState;\r\n\r\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\r\n          if (workInProgress.alternate === null) {\r\n            throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in ' + 'React. Please file an issue.');\r\n          }\r\n\r\n          resetHydrationState();\r\n        }\r\n\r\n        var _flags2 = workInProgress.flags;\r\n\r\n        if (_flags2 & ShouldCapture) {\r\n          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.\r\n\r\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\r\n            transferActualDuration(workInProgress);\r\n          }\r\n\r\n          return workInProgress;\r\n        }\r\n\r\n        return null;\r\n      }\r\n\r\n    case SuspenseListComponent:\r\n      {\r\n        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\r\n        // caught by a nested boundary. If not, it should bubble through.\r\n\r\n        return null;\r\n      }\r\n\r\n    case HostPortal:\r\n      popHostContainer(workInProgress);\r\n      return null;\r\n\r\n    case ContextProvider:\r\n      var context = workInProgress.type._context;\r\n      popProvider(context, workInProgress);\r\n      return null;\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent:\r\n      popRenderLanes(workInProgress);\r\n      return null;\r\n\r\n    case CacheComponent:\r\n\r\n      return null;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\r\n  // Note: This intentionally doesn't check if we're hydrating because comparing\r\n  // to the current tree provider fiber is just as fast and less error-prone.\r\n  // Ideally we would have a special version of the work loop only\r\n  // for hydration.\r\n  popTreeContext(interruptedWork);\r\n\r\n  switch (interruptedWork.tag) {\r\n    case ClassComponent:\r\n      {\r\n        var childContextTypes = interruptedWork.type.childContextTypes;\r\n\r\n        if (childContextTypes !== null && childContextTypes !== undefined) {\r\n          popContext(interruptedWork);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    case HostRoot:\r\n      {\r\n        var root = interruptedWork.stateNode;\r\n        popHostContainer(interruptedWork);\r\n        popTopLevelContextObject(interruptedWork);\r\n        resetWorkInProgressVersions();\r\n        break;\r\n      }\r\n\r\n    case HostComponent:\r\n      {\r\n        popHostContext(interruptedWork);\r\n        break;\r\n      }\r\n\r\n    case HostPortal:\r\n      popHostContainer(interruptedWork);\r\n      break;\r\n\r\n    case SuspenseComponent:\r\n      popSuspenseContext(interruptedWork);\r\n      break;\r\n\r\n    case SuspenseListComponent:\r\n      popSuspenseContext(interruptedWork);\r\n      break;\r\n\r\n    case ContextProvider:\r\n      var context = interruptedWork.type._context;\r\n      popProvider(context, interruptedWork);\r\n      break;\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent:\r\n      popRenderLanes(interruptedWork);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\r\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\r\n\r\n  try {\r\n    func.apply(context, funcArgs);\r\n  } catch (error) {\r\n    this.onError(error);\r\n  }\r\n}\r\n\r\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\r\n\r\n{\r\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\r\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\r\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\r\n  // functions in invokeGuardedCallback, and the production version of\r\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\r\n  // like caught exceptions, and the DevTools won't pause unless the developer\r\n  // takes the extra step of enabling pause on caught exceptions. This is\r\n  // unintuitive, though, because even though React has caught the error, from\r\n  // the developer's perspective, the error is uncaught.\r\n  //\r\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\r\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\r\n  // DOM node, and call the user-provided callback from inside an event handler\r\n  // for that fake event. If the callback throws, the error is \"captured\" using\r\n  // a global event handler. But because the error happens in a different\r\n  // event loop context, it does not interrupt the normal program flow.\r\n  // Effectively, this gives us try-catch behavior without actually using\r\n  // try-catch. Neat!\r\n  // Check that the browser supports the APIs we need to implement our special\r\n  // DEV version of invokeGuardedCallback\r\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\r\n    var fakeNode = document.createElement('react');\r\n\r\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\r\n      // If document doesn't exist we know for sure we will crash in this method\r\n      // when we call document.createEvent(). However this can cause confusing\r\n      // errors: https://github.com/facebook/create-react-app/issues/3482\r\n      // So we preemptively throw with a better message instead.\r\n      if (typeof document === 'undefined' || document === null) {\r\n        throw new Error('The `document` global was defined when React was initialized, but is not ' + 'defined anymore. This can happen in a test environment if a component ' + 'schedules an update from an asynchronous callback, but the test has already ' + 'finished running. To solve this, you can either unmount the component at ' + 'the end of your test (and ensure that any asynchronous operations get ' + 'canceled in `componentWillUnmount`), or you can change the test itself ' + 'to be asynchronous.');\r\n      }\r\n\r\n      var evt = document.createEvent('Event');\r\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\r\n      // set this to true at the beginning, then set it to false right after\r\n      // calling the function. If the function errors, `didError` will never be\r\n      // set to false. This strategy works even if the browser is flaky and\r\n      // fails to call our global error handler, because it doesn't rely on\r\n      // the error event at all.\r\n\r\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\r\n      // during the callback to let user code access window.event in the\r\n      // browsers that support it.\r\n\r\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\r\n      // dispatching: https://github.com/facebook/react/issues/13688\r\n\r\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');\r\n\r\n      function restoreAfterDispatch() {\r\n        // We immediately remove the callback from event listeners so that\r\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\r\n        // nested call would trigger the fake event handlers of any call higher\r\n        // in the stack.\r\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\r\n        // window.event assignment in both IE <= 10 as they throw an error\r\n        // \"Member not found\" in strict mode, and in Firefox which does not\r\n        // support window.event.\r\n\r\n        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\r\n          window.event = windowEvent;\r\n        }\r\n      } // Create an event handler for our fake event. We will synchronously\r\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\r\n      // call the user-provided callback.\r\n\r\n\r\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\r\n\r\n      function callCallback() {\r\n        didCall = true;\r\n        restoreAfterDispatch();\r\n        func.apply(context, funcArgs);\r\n        didError = false;\r\n      } // Create a global error event handler. We use this to capture the value\r\n      // that was thrown. It's possible that this error handler will fire more\r\n      // than once; for example, if non-React code also calls `dispatchEvent`\r\n      // and a handler for that event throws. We should be resilient to most of\r\n      // those cases. Even if our error event handler fires more than once, the\r\n      // last error event is always used. If the callback actually does error,\r\n      // we know that the last error event is the correct one, because it's not\r\n      // possible for anything else to have happened in between our callback\r\n      // erroring and the code that follows the `dispatchEvent` call below. If\r\n      // the callback doesn't error, but the error event was fired, we know to\r\n      // ignore it because `didError` will be false, as described above.\r\n\r\n\r\n      var error; // Use this to track whether the error event is ever called.\r\n\r\n      var didSetError = false;\r\n      var isCrossOriginError = false;\r\n\r\n      function handleWindowError(event) {\r\n        error = event.error;\r\n        didSetError = true;\r\n\r\n        if (error === null && event.colno === 0 && event.lineno === 0) {\r\n          isCrossOriginError = true;\r\n        }\r\n\r\n        if (event.defaultPrevented) {\r\n          // Some other error handler has prevented default.\r\n          // Browsers silence the error report if this happens.\r\n          // We'll remember this to later decide whether to log it or not.\r\n          if (error != null && typeof error === 'object') {\r\n            try {\r\n              error._suppressLogging = true;\r\n            } catch (inner) {// Ignore.\r\n            }\r\n          }\r\n        }\r\n      } // Create a fake event type.\r\n\r\n\r\n      var evtType = \"react-\" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers\r\n\r\n      window.addEventListener('error', handleWindowError);\r\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\r\n      // errors, it will trigger our global error handler.\r\n\r\n      evt.initEvent(evtType, false, false);\r\n      fakeNode.dispatchEvent(evt);\r\n\r\n      if (windowEventDescriptor) {\r\n        Object.defineProperty(window, 'event', windowEventDescriptor);\r\n      }\r\n\r\n      if (didCall && didError) {\r\n        if (!didSetError) {\r\n          // The callback errored, but the error event never fired.\r\n          // eslint-disable-next-line react-internal/prod-error-codes\r\n          error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\r\n        } else if (isCrossOriginError) {\r\n          // eslint-disable-next-line react-internal/prod-error-codes\r\n          error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');\r\n        }\r\n\r\n        this.onError(error);\r\n      } // Remove our event listeners\r\n\r\n\r\n      window.removeEventListener('error', handleWindowError);\r\n\r\n      if (!didCall) {\r\n        // Something went really wrong, and our event was not dispatched.\r\n        // https://github.com/facebook/react/issues/16734\r\n        // https://github.com/facebook/react/issues/16585\r\n        // Fall back to the production implementation.\r\n        restoreAfterDispatch();\r\n        return invokeGuardedCallbackProd.apply(this, arguments);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\r\n\r\nvar hasError = false;\r\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\r\nvar reporter = {\r\n  onError: function (error) {\r\n    hasError = true;\r\n    caughtError = error;\r\n  }\r\n};\r\n/**\r\n * Call a function while guarding against errors that happens within it.\r\n * Returns an error if it throws, otherwise null.\r\n *\r\n * In production, this is implemented using a try-catch. The reason we don't\r\n * use a try-catch directly is so that we can swap out a different\r\n * implementation in DEV mode.\r\n *\r\n * @param {String} name of the guard to use for logging or debugging\r\n * @param {Function} func The function to invoke\r\n * @param {*} context The context to use when calling the function\r\n * @param {...*} args Arguments for function\r\n */\r\n\r\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\r\n  hasError = false;\r\n  caughtError = null;\r\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\r\n}\r\nfunction hasCaughtError() {\r\n  return hasError;\r\n}\r\nfunction clearCaughtError() {\r\n  if (hasError) {\r\n    var error = caughtError;\r\n    hasError = false;\r\n    caughtError = null;\r\n    return error;\r\n  } else {\r\n    throw new Error('clearCaughtError was called but no error was captured. This error ' + 'is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n}\r\n\r\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\r\n\r\n{\r\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\r\n} // Used during the commit phase to track the state of the Offscreen component stack.\r\n// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.\r\n// Only used when enableSuspenseLayoutEffectSemantics is enabled.\r\n\r\n\r\nvar offscreenSubtreeIsHidden = false;\r\nvar offscreenSubtreeWasHidden = false;\r\nvar PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\r\nvar nextEffect = null; // Used for Profiling builds to track updaters.\r\n\r\nvar inProgressLanes = null;\r\nvar inProgressRoot = null;\r\nfunction reportUncaughtErrorInDEV(error) {\r\n  // Wrapping each small part of the commit phase into a guarded\r\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\r\n  // But we rely on it to surface errors to DEV tools like overlays\r\n  // (https://github.com/facebook/react/issues/21712).\r\n  // As a compromise, rethrow only caught errors in a guard.\r\n  {\r\n    invokeGuardedCallback(null, function () {\r\n      throw error;\r\n    });\r\n    clearCaughtError();\r\n  }\r\n}\r\n\r\nvar callComponentWillUnmountWithTimer = function (current, instance) {\r\n  instance.props = current.memoizedProps;\r\n  instance.state = current.memoizedState;\r\n\r\n  if ( current.mode & ProfileMode) {\r\n    try {\r\n      startLayoutEffectTimer();\r\n      instance.componentWillUnmount();\r\n    } finally {\r\n      recordLayoutEffectDuration(current);\r\n    }\r\n  } else {\r\n    instance.componentWillUnmount();\r\n  }\r\n}; // Capture errors so they don't interrupt mounting.\r\n\r\n\r\nfunction safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {\r\n  try {\r\n    commitHookEffectListMount(Layout, current);\r\n  } catch (error) {\r\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n  }\r\n} // Capture errors so they don't interrupt unmounting.\r\n\r\n\r\nfunction safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\r\n  try {\r\n    callComponentWillUnmountWithTimer(current, instance);\r\n  } catch (error) {\r\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n  }\r\n} // Capture errors so they don't interrupt mounting.\r\n\r\n\r\nfunction safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {\r\n  try {\r\n    instance.componentDidMount();\r\n  } catch (error) {\r\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n  }\r\n} // Capture errors so they don't interrupt mounting.\r\n\r\n\r\nfunction safelyAttachRef(current, nearestMountedAncestor) {\r\n  try {\r\n    commitAttachRef(current);\r\n  } catch (error) {\r\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n  }\r\n}\r\n\r\nfunction safelyDetachRef(current, nearestMountedAncestor) {\r\n  var ref = current.ref;\r\n\r\n  if (ref !== null) {\r\n    if (typeof ref === 'function') {\r\n      var retVal;\r\n\r\n      try {\r\n        if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\r\n          try {\r\n            startLayoutEffectTimer();\r\n            retVal = ref(null);\r\n          } finally {\r\n            recordLayoutEffectDuration(current);\r\n          }\r\n        } else {\r\n          retVal = ref(null);\r\n        }\r\n      } catch (error) {\r\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n      }\r\n\r\n      {\r\n        if (typeof retVal === 'function') {\r\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(current));\r\n        }\r\n      }\r\n    } else {\r\n      ref.current = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\r\n  try {\r\n    destroy();\r\n  } catch (error) {\r\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n  }\r\n}\r\n\r\nvar focusedInstanceHandle = null;\r\nvar shouldFireAfterActiveInstanceBlur = false;\r\nfunction commitBeforeMutationEffects(root, firstChild) {\r\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\r\n  nextEffect = firstChild;\r\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\r\n\r\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\r\n  shouldFireAfterActiveInstanceBlur = false;\r\n  focusedInstanceHandle = null;\r\n  return shouldFire;\r\n}\r\n\r\nfunction commitBeforeMutationEffects_begin() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\r\n\r\n    var child = fiber.child;\r\n\r\n    if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\r\n      child.return = fiber;\r\n      nextEffect = child;\r\n    } else {\r\n      commitBeforeMutationEffects_complete();\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitBeforeMutationEffects_complete() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    setCurrentFiber(fiber);\r\n\r\n    try {\r\n      commitBeforeMutationEffectsOnFiber(fiber);\r\n    } catch (error) {\r\n      captureCommitPhaseError(fiber, fiber.return, error);\r\n    }\r\n\r\n    resetCurrentFiber();\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\r\n  var current = finishedWork.alternate;\r\n  var flags = finishedWork.flags;\r\n\r\n  if ((flags & Snapshot) !== NoFlags) {\r\n    setCurrentFiber(finishedWork);\r\n\r\n    switch (finishedWork.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent:\r\n        {\r\n          break;\r\n        }\r\n\r\n      case ClassComponent:\r\n        {\r\n          if (current !== null) {\r\n            var prevProps = current.memoizedProps;\r\n            var prevState = current.memoizedState;\r\n            var instance = finishedWork.stateNode; // We could update instance props and state here,\r\n            // but instead we rely on them being set during last render.\r\n            // TODO: revisit this when we implement resuming.\r\n\r\n            {\r\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n                if (instance.props !== finishedWork.memoizedProps) {\r\n                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                }\r\n\r\n                if (instance.state !== finishedWork.memoizedState) {\r\n                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                }\r\n              }\r\n            }\r\n\r\n            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\r\n\r\n            {\r\n              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\r\n\r\n              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\r\n                didWarnSet.add(finishedWork.type);\r\n\r\n                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentNameFromFiber(finishedWork));\r\n              }\r\n            }\r\n\r\n            instance.__reactInternalSnapshotBeforeUpdate = snapshot;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case HostRoot:\r\n        {\r\n          if (supportsMutation) {\r\n            var root = finishedWork.stateNode;\r\n            clearContainer(root.containerInfo);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case HostComponent:\r\n      case HostText:\r\n      case HostPortal:\r\n      case IncompleteClassComponent:\r\n        // Nothing to do for these component types\r\n        break;\r\n\r\n      default:\r\n        {\r\n          throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\r\n        }\r\n    }\r\n\r\n    resetCurrentFiber();\r\n  }\r\n}\r\n\r\nfunction commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\r\n  var updateQueue = finishedWork.updateQueue;\r\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\r\n\r\n  if (lastEffect !== null) {\r\n    var firstEffect = lastEffect.next;\r\n    var effect = firstEffect;\r\n\r\n    do {\r\n      if ((effect.tag & flags) === flags) {\r\n        // Unmount\r\n        var destroy = effect.destroy;\r\n        effect.destroy = undefined;\r\n\r\n        if (destroy !== undefined) {\r\n          {\r\n            if ((flags & Passive$1) !== NoFlags$1) {\r\n              markComponentPassiveEffectUnmountStarted(finishedWork);\r\n            } else if ((flags & Layout) !== NoFlags$1) {\r\n              markComponentLayoutEffectUnmountStarted(finishedWork);\r\n            }\r\n          }\r\n\r\n          {\r\n            if ((flags & Insertion) !== NoFlags$1) {\r\n              setIsRunningInsertionEffect(true);\r\n            }\r\n          }\r\n\r\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\r\n\r\n          {\r\n            if ((flags & Insertion) !== NoFlags$1) {\r\n              setIsRunningInsertionEffect(false);\r\n            }\r\n          }\r\n\r\n          {\r\n            if ((flags & Passive$1) !== NoFlags$1) {\r\n              markComponentPassiveEffectUnmountStopped();\r\n            } else if ((flags & Layout) !== NoFlags$1) {\r\n              markComponentLayoutEffectUnmountStopped();\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      effect = effect.next;\r\n    } while (effect !== firstEffect);\r\n  }\r\n}\r\n\r\nfunction commitHookEffectListMount(flags, finishedWork) {\r\n  var updateQueue = finishedWork.updateQueue;\r\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\r\n\r\n  if (lastEffect !== null) {\r\n    var firstEffect = lastEffect.next;\r\n    var effect = firstEffect;\r\n\r\n    do {\r\n      if ((effect.tag & flags) === flags) {\r\n        {\r\n          if ((flags & Passive$1) !== NoFlags$1) {\r\n            markComponentPassiveEffectMountStarted(finishedWork);\r\n          } else if ((flags & Layout) !== NoFlags$1) {\r\n            markComponentLayoutEffectMountStarted(finishedWork);\r\n          }\r\n        } // Mount\r\n\r\n\r\n        var create = effect.create;\r\n\r\n        {\r\n          if ((flags & Insertion) !== NoFlags$1) {\r\n            setIsRunningInsertionEffect(true);\r\n          }\r\n        }\r\n\r\n        effect.destroy = create();\r\n\r\n        {\r\n          if ((flags & Insertion) !== NoFlags$1) {\r\n            setIsRunningInsertionEffect(false);\r\n          }\r\n        }\r\n\r\n        {\r\n          if ((flags & Passive$1) !== NoFlags$1) {\r\n            markComponentPassiveEffectMountStopped();\r\n          } else if ((flags & Layout) !== NoFlags$1) {\r\n            markComponentLayoutEffectMountStopped();\r\n          }\r\n        }\r\n\r\n        {\r\n          var destroy = effect.destroy;\r\n\r\n          if (destroy !== undefined && typeof destroy !== 'function') {\r\n            var hookName = void 0;\r\n\r\n            if ((effect.tag & Layout) !== NoFlags) {\r\n              hookName = 'useLayoutEffect';\r\n            } else if ((effect.tag & Insertion) !== NoFlags) {\r\n              hookName = 'useInsertionEffect';\r\n            } else {\r\n              hookName = 'useEffect';\r\n            }\r\n\r\n            var addendum = void 0;\r\n\r\n            if (destroy === null) {\r\n              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';\r\n            } else if (typeof destroy.then === 'function') {\r\n              addendum = '\\n\\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\\n\\n' + hookName + '(() => {\\n' + '  async function fetchData() {\\n' + '    // You can await here\\n' + '    const response = await MyAPI.getData(someId);\\n' + '    // ...\\n' + '  }\\n' + '  fetchData();\\n' + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\r\n            } else {\r\n              addendum = ' You returned: ' + destroy;\r\n            }\r\n\r\n            error('%s must not return anything besides a function, ' + 'which is used for clean-up.%s', hookName, addendum);\r\n          }\r\n        }\r\n      }\r\n\r\n      effect = effect.next;\r\n    } while (effect !== firstEffect);\r\n  }\r\n}\r\n\r\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\r\n  {\r\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\r\n    if ((finishedWork.flags & Update) !== NoFlags) {\r\n      switch (finishedWork.tag) {\r\n        case Profiler:\r\n          {\r\n            var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\r\n            var _finishedWork$memoize = finishedWork.memoizedProps,\r\n                id = _finishedWork$memoize.id,\r\n                onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\r\n            // It does not get reset until the start of the next commit phase.\r\n\r\n            var commitTime = getCommitTime();\r\n            var phase = finishedWork.alternate === null ? 'mount' : 'update';\r\n\r\n            {\r\n              if (isCurrentUpdateNested()) {\r\n                phase = 'nested-update';\r\n              }\r\n            }\r\n\r\n            if (typeof onPostCommit === 'function') {\r\n              onPostCommit(id, phase, passiveEffectDuration, commitTime);\r\n            } // Bubble times to the next nearest ancestor Profiler.\r\n            // After we process that Profiler, we'll bubble further up.\r\n\r\n\r\n            var parentFiber = finishedWork.return;\r\n\r\n            outer: while (parentFiber !== null) {\r\n              switch (parentFiber.tag) {\r\n                case HostRoot:\r\n                  var root = parentFiber.stateNode;\r\n                  root.passiveEffectDuration += passiveEffectDuration;\r\n                  break outer;\r\n\r\n                case Profiler:\r\n                  var parentStateNode = parentFiber.stateNode;\r\n                  parentStateNode.passiveEffectDuration += passiveEffectDuration;\r\n                  break outer;\r\n              }\r\n\r\n              parentFiber = parentFiber.return;\r\n            }\r\n\r\n            break;\r\n          }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\r\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\r\n    switch (finishedWork.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent:\r\n        {\r\n          if ( !offscreenSubtreeWasHidden) {\r\n            // At this point layout effects have already been destroyed (during mutation phase).\r\n            // This is done to prevent sibling component effects from interfering with each other,\r\n            // e.g. a destroy function in one component should never override a ref set\r\n            // by a create function in another component during the same commit.\r\n            if ( finishedWork.mode & ProfileMode) {\r\n              try {\r\n                startLayoutEffectTimer();\r\n                commitHookEffectListMount(Layout | HasEffect, finishedWork);\r\n              } finally {\r\n                recordLayoutEffectDuration(finishedWork);\r\n              }\r\n            } else {\r\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case ClassComponent:\r\n        {\r\n          var instance = finishedWork.stateNode;\r\n\r\n          if (finishedWork.flags & Update) {\r\n            if (!offscreenSubtreeWasHidden) {\r\n              if (current === null) {\r\n                // We could update instance props and state here,\r\n                // but instead we rely on them being set during last render.\r\n                // TODO: revisit this when we implement resuming.\r\n                {\r\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n                    if (instance.props !== finishedWork.memoizedProps) {\r\n                      error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                    }\r\n\r\n                    if (instance.state !== finishedWork.memoizedState) {\r\n                      error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                    }\r\n                  }\r\n                }\r\n\r\n                if ( finishedWork.mode & ProfileMode) {\r\n                  try {\r\n                    startLayoutEffectTimer();\r\n                    instance.componentDidMount();\r\n                  } finally {\r\n                    recordLayoutEffectDuration(finishedWork);\r\n                  }\r\n                } else {\r\n                  instance.componentDidMount();\r\n                }\r\n              } else {\r\n                var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\r\n                var prevState = current.memoizedState; // We could update instance props and state here,\r\n                // but instead we rely on them being set during last render.\r\n                // TODO: revisit this when we implement resuming.\r\n\r\n                {\r\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n                    if (instance.props !== finishedWork.memoizedProps) {\r\n                      error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                    }\r\n\r\n                    if (instance.state !== finishedWork.memoizedState) {\r\n                      error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                    }\r\n                  }\r\n                }\r\n\r\n                if ( finishedWork.mode & ProfileMode) {\r\n                  try {\r\n                    startLayoutEffectTimer();\r\n                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\r\n                  } finally {\r\n                    recordLayoutEffectDuration(finishedWork);\r\n                  }\r\n                } else {\r\n                  instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\r\n                }\r\n              }\r\n            }\r\n          } // TODO: I think this is now always non-null by the time it reaches the\r\n          // commit phase. Consider removing the type check.\r\n\r\n\r\n          var updateQueue = finishedWork.updateQueue;\r\n\r\n          if (updateQueue !== null) {\r\n            {\r\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n                if (instance.props !== finishedWork.memoizedProps) {\r\n                  error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                }\r\n\r\n                if (instance.state !== finishedWork.memoizedState) {\r\n                  error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\r\n                }\r\n              }\r\n            } // We could update instance props and state here,\r\n            // but instead we rely on them being set during last render.\r\n            // TODO: revisit this when we implement resuming.\r\n\r\n\r\n            commitUpdateQueue(finishedWork, updateQueue, instance);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case HostRoot:\r\n        {\r\n          // TODO: I think this is now always non-null by the time it reaches the\r\n          // commit phase. Consider removing the type check.\r\n          var _updateQueue = finishedWork.updateQueue;\r\n\r\n          if (_updateQueue !== null) {\r\n            var _instance = null;\r\n\r\n            if (finishedWork.child !== null) {\r\n              switch (finishedWork.child.tag) {\r\n                case HostComponent:\r\n                  _instance = getPublicInstance(finishedWork.child.stateNode);\r\n                  break;\r\n\r\n                case ClassComponent:\r\n                  _instance = finishedWork.child.stateNode;\r\n                  break;\r\n              }\r\n            }\r\n\r\n            commitUpdateQueue(finishedWork, _updateQueue, _instance);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case HostComponent:\r\n        {\r\n          var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\r\n          // (eg DOM renderer may schedule auto-focus for inputs and form controls).\r\n          // These effects should only be committed when components are first mounted,\r\n          // aka when there is no current/alternate.\r\n\r\n          if (current === null && finishedWork.flags & Update) {\r\n            var type = finishedWork.type;\r\n            var props = finishedWork.memoizedProps;\r\n            commitMount(_instance2, type, props, finishedWork);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case HostText:\r\n        {\r\n          // We have no life-cycles associated with text.\r\n          break;\r\n        }\r\n\r\n      case HostPortal:\r\n        {\r\n          // We have no life-cycles associated with portals.\r\n          break;\r\n        }\r\n\r\n      case Profiler:\r\n        {\r\n          {\r\n            var _finishedWork$memoize2 = finishedWork.memoizedProps,\r\n                onCommit = _finishedWork$memoize2.onCommit,\r\n                onRender = _finishedWork$memoize2.onRender;\r\n            var effectDuration = finishedWork.stateNode.effectDuration;\r\n            var commitTime = getCommitTime();\r\n            var phase = current === null ? 'mount' : 'update';\r\n\r\n            {\r\n              if (isCurrentUpdateNested()) {\r\n                phase = 'nested-update';\r\n              }\r\n            }\r\n\r\n            if (typeof onRender === 'function') {\r\n              onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\r\n            }\r\n\r\n            {\r\n              if (typeof onCommit === 'function') {\r\n                onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\r\n              } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\r\n              // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\r\n              // because the effect is also where times bubble to parent Profilers.\r\n\r\n\r\n              enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\r\n              // Do not reset these values until the next render so DevTools has a chance to read them first.\r\n\r\n              var parentFiber = finishedWork.return;\r\n\r\n              outer: while (parentFiber !== null) {\r\n                switch (parentFiber.tag) {\r\n                  case HostRoot:\r\n                    var root = parentFiber.stateNode;\r\n                    root.effectDuration += effectDuration;\r\n                    break outer;\r\n\r\n                  case Profiler:\r\n                    var parentStateNode = parentFiber.stateNode;\r\n                    parentStateNode.effectDuration += effectDuration;\r\n                    break outer;\r\n                }\r\n\r\n                parentFiber = parentFiber.return;\r\n              }\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case SuspenseComponent:\r\n        {\r\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\r\n          break;\r\n        }\r\n\r\n      case SuspenseListComponent:\r\n      case IncompleteClassComponent:\r\n      case ScopeComponent:\r\n      case OffscreenComponent:\r\n      case LegacyHiddenComponent:\r\n      case TracingMarkerComponent:\r\n        {\r\n          break;\r\n        }\r\n\r\n      default:\r\n        throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n\r\n  if ( !offscreenSubtreeWasHidden) {\r\n    {\r\n      if (finishedWork.flags & Ref) {\r\n        commitAttachRef(finishedWork);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction reappearLayoutEffectsOnFiber(node) {\r\n  // Turn on layout effects in a tree that previously disappeared.\r\n  // TODO (Offscreen) Check: flags & LayoutStatic\r\n  switch (node.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent:\r\n      {\r\n        if ( node.mode & ProfileMode) {\r\n          try {\r\n            startLayoutEffectTimer();\r\n            safelyCallCommitHookLayoutEffectListMount(node, node.return);\r\n          } finally {\r\n            recordLayoutEffectDuration(node);\r\n          }\r\n        } else {\r\n          safelyCallCommitHookLayoutEffectListMount(node, node.return);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    case ClassComponent:\r\n      {\r\n        var instance = node.stateNode;\r\n\r\n        if (typeof instance.componentDidMount === 'function') {\r\n          safelyCallComponentDidMount(node, node.return, instance);\r\n        }\r\n\r\n        safelyAttachRef(node, node.return);\r\n        break;\r\n      }\r\n\r\n    case HostComponent:\r\n      {\r\n        safelyAttachRef(node, node.return);\r\n        break;\r\n      }\r\n  }\r\n}\r\n\r\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\r\n  // Only hide or unhide the top-most host nodes.\r\n  var hostSubtreeRoot = null;\r\n\r\n  if (supportsMutation) {\r\n    // We only have the top Fiber that was inserted but we need to recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = finishedWork;\r\n\r\n    while (true) {\r\n      if (node.tag === HostComponent) {\r\n        if (hostSubtreeRoot === null) {\r\n          hostSubtreeRoot = node;\r\n\r\n          try {\r\n            var instance = node.stateNode;\r\n\r\n            if (isHidden) {\r\n              hideInstance(instance);\r\n            } else {\r\n              unhideInstance(node.stateNode, node.memoizedProps);\r\n            }\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      } else if (node.tag === HostText) {\r\n        if (hostSubtreeRoot === null) {\r\n          try {\r\n            var _instance3 = node.stateNode;\r\n\r\n            if (isHidden) {\r\n              hideTextInstance(_instance3);\r\n            } else {\r\n              unhideTextInstance(_instance3, node.memoizedProps);\r\n            }\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n\r\n      if (node === finishedWork) {\r\n        return;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === finishedWork) {\r\n          return;\r\n        }\r\n\r\n        if (hostSubtreeRoot === node) {\r\n          hostSubtreeRoot = null;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      if (hostSubtreeRoot === node) {\r\n        hostSubtreeRoot = null;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitAttachRef(finishedWork) {\r\n  var ref = finishedWork.ref;\r\n\r\n  if (ref !== null) {\r\n    var instance = finishedWork.stateNode;\r\n    var instanceToUse;\r\n\r\n    switch (finishedWork.tag) {\r\n      case HostComponent:\r\n        instanceToUse = getPublicInstance(instance);\r\n        break;\r\n\r\n      default:\r\n        instanceToUse = instance;\r\n    } // Moved outside to ensure DCE works with this flag\r\n\r\n    if (typeof ref === 'function') {\r\n      var retVal;\r\n\r\n      if ( finishedWork.mode & ProfileMode) {\r\n        try {\r\n          startLayoutEffectTimer();\r\n          retVal = ref(instanceToUse);\r\n        } finally {\r\n          recordLayoutEffectDuration(finishedWork);\r\n        }\r\n      } else {\r\n        retVal = ref(instanceToUse);\r\n      }\r\n\r\n      {\r\n        if (typeof retVal === 'function') {\r\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(finishedWork));\r\n        }\r\n      }\r\n    } else {\r\n      {\r\n        if (!ref.hasOwnProperty('current')) {\r\n          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentNameFromFiber(finishedWork));\r\n        }\r\n      }\r\n\r\n      ref.current = instanceToUse;\r\n    }\r\n  }\r\n}\r\n\r\nfunction detachFiberMutation(fiber) {\r\n  // Cut off the return pointer to disconnect it from the tree.\r\n  // This enables us to detect and warn against state updates on an unmounted component.\r\n  // It also prevents events from bubbling from within disconnected components.\r\n  //\r\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\r\n  // get GC:ed but we don't know which for sure which parent is the current\r\n  // one so we'll settle for GC:ing the subtree of this child.\r\n  // This child itself will be GC:ed when the parent updates the next time.\r\n  //\r\n  // Note that we can't clear child or sibling pointers yet.\r\n  // They're needed for passive effects and for findDOMNode.\r\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\r\n  //\r\n  // Don't reset the alternate yet, either. We need that so we can detach the\r\n  // alternate's fields in the passive phase. Clearing the return pointer is\r\n  // sufficient for findDOMNode semantics.\r\n  var alternate = fiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    alternate.return = null;\r\n  }\r\n\r\n  fiber.return = null;\r\n}\r\n\r\nfunction detachFiberAfterEffects(fiber) {\r\n  var alternate = fiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    fiber.alternate = null;\r\n    detachFiberAfterEffects(alternate);\r\n  } // Note: Defensively using negation instead of < in case\r\n  // `deletedTreeCleanUpLevel` is undefined.\r\n\r\n\r\n  {\r\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\r\n    // approximate the planned Fiber refactor. In that world, `setState` will be\r\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\r\n    // object will not have any of these fields. It will only be connected to\r\n    // the fiber tree via a single link at the root. So if this level alone is\r\n    // sufficient to fix memory issues, that bodes well for our plans.\r\n    fiber.child = null;\r\n    fiber.deletions = null;\r\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\r\n    // tree, which has its own pointers to children, parents, and siblings.\r\n    // The other host nodes also point back to fibers, so we should detach that\r\n    // one, too.\r\n\r\n    if (fiber.tag === HostComponent) {\r\n      var hostInstance = fiber.stateNode;\r\n\r\n      if (hostInstance !== null) {\r\n        detachDeletedInstance(hostInstance);\r\n      }\r\n    }\r\n\r\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\r\n    // already disconnect the `return` pointer at the root of the deleted\r\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\r\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\r\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\r\n\r\n    {\r\n      fiber._debugOwner = null;\r\n    }\r\n\r\n    {\r\n      // Theoretically, nothing in here should be necessary, because we already\r\n      // disconnected the fiber from the tree. So even if something leaks this\r\n      // particular fiber, it won't leak anything else\r\n      //\r\n      // The purpose of this branch is to be super aggressive so we can measure\r\n      // if there's any difference in memory impact. If there is, that could\r\n      // indicate a React leak we don't know about.\r\n      fiber.return = null;\r\n      fiber.dependencies = null;\r\n      fiber.memoizedProps = null;\r\n      fiber.memoizedState = null;\r\n      fiber.pendingProps = null;\r\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\r\n\r\n      fiber.updateQueue = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction emptyPortalContainer(current) {\r\n  if (!supportsPersistence) {\r\n    return;\r\n  }\r\n\r\n  var portal = current.stateNode;\r\n  var containerInfo = portal.containerInfo;\r\n  var emptyChildSet = createContainerChildSet(containerInfo);\r\n  replaceContainerChildren(containerInfo, emptyChildSet);\r\n}\r\n\r\nfunction getHostParentFiber(fiber) {\r\n  var parent = fiber.return;\r\n\r\n  while (parent !== null) {\r\n    if (isHostParent(parent)) {\r\n      return parent;\r\n    }\r\n\r\n    parent = parent.return;\r\n  }\r\n\r\n  throw new Error('Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');\r\n}\r\n\r\nfunction isHostParent(fiber) {\r\n  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\r\n}\r\n\r\nfunction getHostSibling(fiber) {\r\n  // We're going to search forward into the tree until we find a sibling host\r\n  // node. Unfortunately, if multiple insertions are done in a row we have to\r\n  // search past them. This leads to exponential search for the next sibling.\r\n  // TODO: Find a more efficient way to do this.\r\n  var node = fiber;\r\n\r\n  siblings: while (true) {\r\n    // If we didn't find anything, let's try the next sibling.\r\n    while (node.sibling === null) {\r\n      if (node.return === null || isHostParent(node.return)) {\r\n        // If we pop out of the root or hit the parent the fiber we are the\r\n        // last sibling.\r\n        return null;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n\r\n    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\r\n      // If it is not host node and, we might have a host node inside it.\r\n      // Try to search down until we find one.\r\n      if (node.flags & Placement) {\r\n        // If we don't have a child, try the siblings instead.\r\n        continue siblings;\r\n      } // If we don't have a child, try the siblings instead.\r\n      // We also skip portals because they are not part of this host tree.\r\n\r\n\r\n      if (node.child === null || node.tag === HostPortal) {\r\n        continue siblings;\r\n      } else {\r\n        node.child.return = node;\r\n        node = node.child;\r\n      }\r\n    } // Check if this host node is stable or about to be placed.\r\n\r\n\r\n    if (!(node.flags & Placement)) {\r\n      // Found it!\r\n      return node.stateNode;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPlacement(finishedWork) {\r\n  if (!supportsMutation) {\r\n    return;\r\n  } // Recursively insert all host nodes into the parent.\r\n\r\n\r\n  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\r\n\r\n  switch (parentFiber.tag) {\r\n    case HostComponent:\r\n      {\r\n        var parent = parentFiber.stateNode;\r\n\r\n        if (parentFiber.flags & ContentReset) {\r\n          // Reset the text content of the parent before doing any insertions\r\n          resetTextContent(parent); // Clear ContentReset from the effect tag\r\n\r\n          parentFiber.flags &= ~ContentReset;\r\n        }\r\n\r\n        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\r\n        // children to find all the terminal nodes.\r\n\r\n        insertOrAppendPlacementNode(finishedWork, before, parent);\r\n        break;\r\n      }\r\n\r\n    case HostRoot:\r\n    case HostPortal:\r\n      {\r\n        var _parent = parentFiber.stateNode.containerInfo;\r\n\r\n        var _before = getHostSibling(finishedWork);\r\n\r\n        insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\r\n        break;\r\n      }\r\n    // eslint-disable-next-line-no-fallthrough\r\n\r\n    default:\r\n      throw new Error('Invalid host parent fiber. This error is likely caused by a bug ' + 'in React. Please file an issue.');\r\n  }\r\n}\r\n\r\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\r\n  var tag = node.tag;\r\n  var isHost = tag === HostComponent || tag === HostText;\r\n\r\n  if (isHost) {\r\n    var stateNode = node.stateNode;\r\n\r\n    if (before) {\r\n      insertInContainerBefore(parent, stateNode, before);\r\n    } else {\r\n      appendChildToContainer(parent, stateNode);\r\n    }\r\n  } else if (tag === HostPortal) ; else {\r\n    var child = node.child;\r\n\r\n    if (child !== null) {\r\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\r\n      var sibling = child.sibling;\r\n\r\n      while (sibling !== null) {\r\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\r\n        sibling = sibling.sibling;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction insertOrAppendPlacementNode(node, before, parent) {\r\n  var tag = node.tag;\r\n  var isHost = tag === HostComponent || tag === HostText;\r\n\r\n  if (isHost) {\r\n    var stateNode = node.stateNode;\r\n\r\n    if (before) {\r\n      insertBefore(parent, stateNode, before);\r\n    } else {\r\n      appendChild(parent, stateNode);\r\n    }\r\n  } else if (tag === HostPortal) ; else {\r\n    var child = node.child;\r\n\r\n    if (child !== null) {\r\n      insertOrAppendPlacementNode(child, before, parent);\r\n      var sibling = child.sibling;\r\n\r\n      while (sibling !== null) {\r\n        insertOrAppendPlacementNode(sibling, before, parent);\r\n        sibling = sibling.sibling;\r\n      }\r\n    }\r\n  }\r\n} // These are tracked on the stack as we recursively traverse a\r\n// deleted subtree.\r\n// TODO: Update these during the whole mutation phase, not just during\r\n// a deletion.\r\n\r\n\r\nvar hostParent = null;\r\nvar hostParentIsContainer = false;\r\n\r\nfunction commitDeletionEffects(root, returnFiber, deletedFiber) {\r\n  if (supportsMutation) {\r\n    // We only have the top Fiber that was deleted but we need to recurse down its\r\n    // children to find all the terminal nodes.\r\n    // Recursively delete all host nodes from the parent, detach refs, clean\r\n    // up mounted layout effects, and call componentWillUnmount.\r\n    // We only need to remove the topmost host child in each branch. But then we\r\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\r\n    // could split this into two separate traversals functions, where the second\r\n    // one doesn't include any removeChild logic. This is maybe the same\r\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\r\n    // the layout phase is refactored to use recursion).\r\n    // Before starting, find the nearest host parent on the stack so we know\r\n    // which instance/container to remove the children from.\r\n    // TODO: Instead of searching up the fiber return path on every deletion, we\r\n    // can track the nearest host component on the JS stack as we traverse the\r\n    // tree during the commit phase. This would make insertions faster, too.\r\n    var parent = returnFiber;\r\n\r\n    findParent: while (parent !== null) {\r\n      switch (parent.tag) {\r\n        case HostComponent:\r\n          {\r\n            hostParent = parent.stateNode;\r\n            hostParentIsContainer = false;\r\n            break findParent;\r\n          }\r\n\r\n        case HostRoot:\r\n          {\r\n            hostParent = parent.stateNode.containerInfo;\r\n            hostParentIsContainer = true;\r\n            break findParent;\r\n          }\r\n\r\n        case HostPortal:\r\n          {\r\n            hostParent = parent.stateNode.containerInfo;\r\n            hostParentIsContainer = true;\r\n            break findParent;\r\n          }\r\n      }\r\n\r\n      parent = parent.return;\r\n    }\r\n\r\n    if (hostParent === null) {\r\n      throw new Error('Expected to find a host parent. This error is likely caused by ' + 'a bug in React. Please file an issue.');\r\n    }\r\n\r\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\r\n    hostParent = null;\r\n    hostParentIsContainer = false;\r\n  } else {\r\n    // Detach refs and call componentWillUnmount() on the whole subtree.\r\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\r\n  }\r\n\r\n  detachFiberMutation(deletedFiber);\r\n}\r\n\r\nfunction recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {\r\n  // TODO: Use a static flag to skip trees that don't have unmount effects\r\n  var child = parent.child;\r\n\r\n  while (child !== null) {\r\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nfunction commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {\r\n  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse\r\n  // into their subtree. There are simpler cases in the inner switch\r\n  // that don't modify the stack.\r\n\r\n  switch (deletedFiber.tag) {\r\n    case HostComponent:\r\n      {\r\n        if (!offscreenSubtreeWasHidden) {\r\n          safelyDetachRef(deletedFiber, nearestMountedAncestor);\r\n        } // Intentional fallthrough to next branch\r\n\r\n      }\r\n    // eslint-disable-next-line-no-fallthrough\r\n\r\n    case HostText:\r\n      {\r\n        // We only need to remove the nearest host child. Set the host parent\r\n        // to `null` on the stack to indicate that nested children don't\r\n        // need to be removed.\r\n        if (supportsMutation) {\r\n          var prevHostParent = hostParent;\r\n          var prevHostParentIsContainer = hostParentIsContainer;\r\n          hostParent = null;\r\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n          hostParent = prevHostParent;\r\n          hostParentIsContainer = prevHostParentIsContainer;\r\n\r\n          if (hostParent !== null) {\r\n            // Now that all the child effects have unmounted, we can remove the\r\n            // node from the tree.\r\n            if (hostParentIsContainer) {\r\n              removeChildFromContainer(hostParent, deletedFiber.stateNode);\r\n            } else {\r\n              removeChild(hostParent, deletedFiber.stateNode);\r\n            }\r\n          }\r\n        } else {\r\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case DehydratedFragment:\r\n      {\r\n        // Delete the dehydrated suspense boundary and all of its content.\r\n\r\n\r\n        if (supportsMutation) {\r\n          if (hostParent !== null) {\r\n            if (hostParentIsContainer) {\r\n              clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);\r\n            } else {\r\n              clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\r\n            }\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case HostPortal:\r\n      {\r\n        if (supportsMutation) {\r\n          // When we go into a portal, it becomes the parent to remove from.\r\n          var _prevHostParent = hostParent;\r\n          var _prevHostParentIsContainer = hostParentIsContainer;\r\n          hostParent = deletedFiber.stateNode.containerInfo;\r\n          hostParentIsContainer = true;\r\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n          hostParent = _prevHostParent;\r\n          hostParentIsContainer = _prevHostParentIsContainer;\r\n        } else {\r\n          emptyPortalContainer(deletedFiber);\r\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent:\r\n      {\r\n        if (!offscreenSubtreeWasHidden) {\r\n          var updateQueue = deletedFiber.updateQueue;\r\n\r\n          if (updateQueue !== null) {\r\n            var lastEffect = updateQueue.lastEffect;\r\n\r\n            if (lastEffect !== null) {\r\n              var firstEffect = lastEffect.next;\r\n              var effect = firstEffect;\r\n\r\n              do {\r\n                var _effect = effect,\r\n                    destroy = _effect.destroy,\r\n                    tag = _effect.tag;\r\n\r\n                if (destroy !== undefined) {\r\n                  if ((tag & Insertion) !== NoFlags$1) {\r\n                    safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\r\n                  } else if ((tag & Layout) !== NoFlags$1) {\r\n                    {\r\n                      markComponentLayoutEffectUnmountStarted(deletedFiber);\r\n                    }\r\n\r\n                    if ( deletedFiber.mode & ProfileMode) {\r\n                      startLayoutEffectTimer();\r\n                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\r\n                      recordLayoutEffectDuration(deletedFiber);\r\n                    } else {\r\n                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\r\n                    }\r\n\r\n                    {\r\n                      markComponentLayoutEffectUnmountStopped();\r\n                    }\r\n                  }\r\n                }\r\n\r\n                effect = effect.next;\r\n              } while (effect !== firstEffect);\r\n            }\r\n          }\r\n        }\r\n\r\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n        return;\r\n      }\r\n\r\n    case ClassComponent:\r\n      {\r\n        if (!offscreenSubtreeWasHidden) {\r\n          safelyDetachRef(deletedFiber, nearestMountedAncestor);\r\n          var instance = deletedFiber.stateNode;\r\n\r\n          if (typeof instance.componentWillUnmount === 'function') {\r\n            safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);\r\n          }\r\n        }\r\n\r\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n        return;\r\n      }\r\n\r\n    case ScopeComponent:\r\n      {\r\n\r\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n        return;\r\n      }\r\n\r\n    case OffscreenComponent:\r\n      {\r\n        if ( // TODO: Remove this dead flag\r\n         deletedFiber.mode & ConcurrentMode) {\r\n          // If this offscreen component is hidden, we already unmounted it. Before\r\n          // deleting the children, track that it's already unmounted so that we\r\n          // don't attempt to unmount the effects again.\r\n          // TODO: If the tree is hidden, in most cases we should be able to skip\r\n          // over the nested children entirely. An exception is we haven't yet found\r\n          // the topmost host node to delete, which we already track on the stack.\r\n          // But the other case is portals, which need to be detached no matter how\r\n          // deeply they are nested. We should use a subtree flag to track whether a\r\n          // subtree includes a nested portal.\r\n          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\r\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;\r\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\r\n        } else {\r\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    default:\r\n      {\r\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\r\n        return;\r\n      }\r\n  }\r\n}\r\n\r\nfunction commitSuspenseCallback(finishedWork) {\r\n  // TODO: Move this to passive phase\r\n  var newState = finishedWork.memoizedState;\r\n}\r\n\r\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\r\n  if (!supportsHydration) {\r\n    return;\r\n  }\r\n\r\n  var newState = finishedWork.memoizedState;\r\n\r\n  if (newState === null) {\r\n    var current = finishedWork.alternate;\r\n\r\n    if (current !== null) {\r\n      var prevState = current.memoizedState;\r\n\r\n      if (prevState !== null) {\r\n        var suspenseInstance = prevState.dehydrated;\r\n\r\n        if (suspenseInstance !== null) {\r\n          commitHydratedSuspenseInstance(suspenseInstance);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction attachSuspenseRetryListeners(finishedWork) {\r\n  // If this boundary just timed out, then it will have a set of wakeables.\r\n  // For each wakeable, attach a listener so that when it resolves, React\r\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\r\n  var wakeables = finishedWork.updateQueue;\r\n\r\n  if (wakeables !== null) {\r\n    finishedWork.updateQueue = null;\r\n    var retryCache = finishedWork.stateNode;\r\n\r\n    if (retryCache === null) {\r\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\r\n    }\r\n\r\n    wakeables.forEach(function (wakeable) {\r\n      // Memoize using the boundary fiber to prevent redundant listeners.\r\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\r\n\r\n      if (!retryCache.has(wakeable)) {\r\n        retryCache.add(wakeable);\r\n\r\n        {\r\n          if (isDevToolsPresent) {\r\n            if (inProgressLanes !== null && inProgressRoot !== null) {\r\n              // If we have pending work still, associate the original updaters with it.\r\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\r\n            } else {\r\n              throw Error('Expected finished root and lanes to be set. This is a bug in React.');\r\n            }\r\n          }\r\n        }\r\n\r\n        wakeable.then(retry, retry);\r\n      }\r\n    });\r\n  }\r\n} // This function detects when a Suspense boundary goes from visible to hidden.\r\nfunction commitMutationEffects(root, finishedWork, committedLanes) {\r\n  inProgressLanes = committedLanes;\r\n  inProgressRoot = root;\r\n  setCurrentFiber(finishedWork);\r\n  commitMutationEffectsOnFiber(finishedWork, root);\r\n  setCurrentFiber(finishedWork);\r\n  inProgressLanes = null;\r\n  inProgressRoot = null;\r\n}\r\n\r\nfunction recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\r\n  // Deletions effects can be scheduled on any fiber type. They need to happen\r\n  // before the children effects hae fired.\r\n  var deletions = parentFiber.deletions;\r\n\r\n  if (deletions !== null) {\r\n    for (var i = 0; i < deletions.length; i++) {\r\n      var childToDelete = deletions[i];\r\n\r\n      try {\r\n        commitDeletionEffects(root, parentFiber, childToDelete);\r\n      } catch (error) {\r\n        captureCommitPhaseError(childToDelete, parentFiber, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  var prevDebugFiber = getCurrentFiber();\r\n\r\n  if (parentFiber.subtreeFlags & MutationMask) {\r\n    var child = parentFiber.child;\r\n\r\n    while (child !== null) {\r\n      setCurrentFiber(child);\r\n      commitMutationEffectsOnFiber(child, root);\r\n      child = child.sibling;\r\n    }\r\n  }\r\n\r\n  setCurrentFiber(prevDebugFiber);\r\n}\r\n\r\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\r\n  var current = finishedWork.alternate;\r\n  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,\r\n  // because the fiber tag is more specific. An exception is any flag related\r\n  // to reconcilation, because those can be set on all fiber types.\r\n\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Update) {\r\n          try {\r\n            commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\r\n            commitHookEffectListMount(Insertion | HasEffect, finishedWork);\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          } // Layout effects are destroyed during the mutation phase so that all\r\n          // destroy functions for all fibers are called before any create functions.\r\n          // This prevents sibling component effects from interfering with each other,\r\n          // e.g. a destroy function in one component should never override a ref set\r\n          // by a create function in another component during the same commit.\r\n\r\n\r\n          if ( finishedWork.mode & ProfileMode) {\r\n            try {\r\n              startLayoutEffectTimer();\r\n              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n\r\n            recordLayoutEffectDuration(finishedWork);\r\n          } else {\r\n            try {\r\n              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case ClassComponent:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Ref) {\r\n          if (current !== null) {\r\n            safelyDetachRef(current, current.return);\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case HostComponent:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Ref) {\r\n          if (current !== null) {\r\n            safelyDetachRef(current, current.return);\r\n          }\r\n        }\r\n\r\n        if (supportsMutation) {\r\n          // TODO: ContentReset gets cleared by the children during the commit\r\n          // phase. This is a refactor hazard because it means we must read\r\n          // flags the flags after `commitReconciliationEffects` has already run;\r\n          // the order matters. We should refactor so that ContentReset does not\r\n          // rely on mutating the flag during commit. Like by setting a flag\r\n          // during the render phase instead.\r\n          if (finishedWork.flags & ContentReset) {\r\n            var instance = finishedWork.stateNode;\r\n\r\n            try {\r\n              resetTextContent(instance);\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n\r\n          if (flags & Update) {\r\n            var _instance4 = finishedWork.stateNode;\r\n\r\n            if (_instance4 != null) {\r\n              // Commit the work prepared earlier.\r\n              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\r\n              // as the newProps. The updatePayload will contain the real change in\r\n              // this case.\r\n\r\n              var oldProps = current !== null ? current.memoizedProps : newProps;\r\n              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\r\n\r\n              var updatePayload = finishedWork.updateQueue;\r\n              finishedWork.updateQueue = null;\r\n\r\n              if (updatePayload !== null) {\r\n                try {\r\n                  commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);\r\n                } catch (error) {\r\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case HostText:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Update) {\r\n          if (supportsMutation) {\r\n            if (finishedWork.stateNode === null) {\r\n              throw new Error('This should have a text node initialized. This error is likely ' + 'caused by a bug in React. Please file an issue.');\r\n            }\r\n\r\n            var textInstance = finishedWork.stateNode;\r\n            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\r\n            // as the newProps. The updatePayload will contain the real change in\r\n            // this case.\r\n\r\n            var oldText = current !== null ? current.memoizedProps : newText;\r\n\r\n            try {\r\n              commitTextUpdate(textInstance, oldText, newText);\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case HostRoot:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Update) {\r\n          if (supportsMutation && supportsHydration) {\r\n            if (current !== null) {\r\n              var prevRootState = current.memoizedState;\r\n\r\n              if (prevRootState.isDehydrated) {\r\n                try {\r\n                  commitHydratedContainer(root.containerInfo);\r\n                } catch (error) {\r\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (supportsPersistence) {\r\n            var containerInfo = root.containerInfo;\r\n            var pendingChildren = root.pendingChildren;\r\n\r\n            try {\r\n              replaceContainerChildren(containerInfo, pendingChildren);\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case HostPortal:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Update) {\r\n          if (supportsPersistence) {\r\n            var portal = finishedWork.stateNode;\r\n            var _containerInfo = portal.containerInfo;\r\n            var _pendingChildren = portal.pendingChildren;\r\n\r\n            try {\r\n              replaceContainerChildren(_containerInfo, _pendingChildren);\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case SuspenseComponent:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n        var offscreenFiber = finishedWork.child;\r\n\r\n        if (offscreenFiber.flags & Visibility) {\r\n          var offscreenInstance = offscreenFiber.stateNode;\r\n          var newState = offscreenFiber.memoizedState;\r\n          var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can\r\n          // read it during an event\r\n\r\n          offscreenInstance.isHidden = isHidden;\r\n\r\n          if (isHidden) {\r\n            var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;\r\n\r\n            if (!wasHidden) {\r\n              // TODO: Move to passive phase\r\n              markCommitTimeOfFallback();\r\n            }\r\n          }\r\n        }\r\n\r\n        if (flags & Update) {\r\n          try {\r\n            commitSuspenseCallback(finishedWork);\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n\r\n          attachSuspenseRetryListeners(finishedWork);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case OffscreenComponent:\r\n      {\r\n        var _wasHidden = current !== null && current.memoizedState !== null;\r\n\r\n        if ( // TODO: Remove this dead flag\r\n         finishedWork.mode & ConcurrentMode) {\r\n          // Before committing the children, track on the stack whether this\r\n          // offscreen subtree was already hidden, so that we don't unmount the\r\n          // effects again.\r\n          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\r\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\r\n        } else {\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n        }\r\n\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Visibility) {\r\n          var _offscreenInstance = finishedWork.stateNode;\r\n          var _newState = finishedWork.memoizedState;\r\n\r\n          var _isHidden = _newState !== null;\r\n\r\n          var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can\r\n          // read it during an event\r\n\r\n          _offscreenInstance.isHidden = _isHidden;\r\n\r\n          {\r\n            if (_isHidden) {\r\n              if (!_wasHidden) {\r\n                if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {\r\n                  nextEffect = offscreenBoundary;\r\n                  var offscreenChild = offscreenBoundary.child;\r\n\r\n                  while (offscreenChild !== null) {\r\n                    nextEffect = offscreenChild;\r\n                    disappearLayoutEffects_begin(offscreenChild);\r\n                    offscreenChild = offscreenChild.sibling;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (supportsMutation) {\r\n            // TODO: This needs to run whenever there's an insertion or update\r\n            // inside a hidden Offscreen tree.\r\n            hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case SuspenseListComponent:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n\r\n        if (flags & Update) {\r\n          attachSuspenseRetryListeners(finishedWork);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    case ScopeComponent:\r\n      {\r\n\r\n        return;\r\n      }\r\n\r\n    default:\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n        commitReconciliationEffects(finishedWork);\r\n        return;\r\n      }\r\n  }\r\n}\r\n\r\nfunction commitReconciliationEffects(finishedWork) {\r\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\r\n  // type. They needs to happen after the children effects have fired, but\r\n  // before the effects on this fiber have fired.\r\n  var flags = finishedWork.flags;\r\n\r\n  if (flags & Placement) {\r\n    try {\r\n      commitPlacement(finishedWork);\r\n    } catch (error) {\r\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n    } // Clear the \"placement\" from effect tag so that we know that this is\r\n    // inserted, before any life-cycles like componentDidMount gets called.\r\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\r\n    // and isMounted is deprecated anyway so we should be able to kill this.\r\n\r\n\r\n    finishedWork.flags &= ~Placement;\r\n  }\r\n\r\n  if (flags & Hydrating) {\r\n    finishedWork.flags &= ~Hydrating;\r\n  }\r\n}\r\n\r\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\r\n  inProgressLanes = committedLanes;\r\n  inProgressRoot = root;\r\n  nextEffect = finishedWork;\r\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\r\n  inProgressLanes = null;\r\n  inProgressRoot = null;\r\n}\r\n\r\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\r\n  // Suspense layout effects semantics don't change for legacy roots.\r\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\r\n\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var firstChild = fiber.child;\r\n\r\n    if ( fiber.tag === OffscreenComponent && isModernRoot) {\r\n      // Keep track of the current Offscreen stack's state.\r\n      var isHidden = fiber.memoizedState !== null;\r\n      var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;\r\n\r\n      if (newOffscreenSubtreeIsHidden) {\r\n        // The Offscreen tree is hidden. Skip over its layout effects.\r\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\r\n        continue;\r\n      } else {\r\n        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask\r\n        var current = fiber.alternate;\r\n        var wasHidden = current !== null && current.memoizedState !== null;\r\n        var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;\r\n        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;\r\n        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.\r\n\r\n        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;\r\n        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;\r\n\r\n        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {\r\n          // This is the root of a reappearing boundary. Turn its layout effects\r\n          // back on.\r\n          nextEffect = fiber;\r\n          reappearLayoutEffects_begin(fiber);\r\n        }\r\n\r\n        var child = firstChild;\r\n\r\n        while (child !== null) {\r\n          nextEffect = child;\r\n          commitLayoutEffects_begin(child, // New root; bubble back up to here and stop.\r\n          root, committedLanes);\r\n          child = child.sibling;\r\n        } // Restore Offscreen state and resume in our-progress traversal.\r\n\r\n\r\n        nextEffect = fiber;\r\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\r\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\r\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\r\n      firstChild.return = fiber;\r\n      nextEffect = firstChild;\r\n    } else {\r\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n\r\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\r\n      var current = fiber.alternate;\r\n      setCurrentFiber(fiber);\r\n\r\n      try {\r\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\r\n      } catch (error) {\r\n        captureCommitPhaseError(fiber, fiber.return, error);\r\n      }\r\n\r\n      resetCurrentFiber();\r\n    }\r\n\r\n    if (fiber === subtreeRoot) {\r\n      nextEffect = null;\r\n      return;\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction disappearLayoutEffects_begin(subtreeRoot) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)\r\n\r\n    switch (fiber.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case MemoComponent:\r\n      case SimpleMemoComponent:\r\n        {\r\n          if ( fiber.mode & ProfileMode) {\r\n            try {\r\n              startLayoutEffectTimer();\r\n              commitHookEffectListUnmount(Layout, fiber, fiber.return);\r\n            } finally {\r\n              recordLayoutEffectDuration(fiber);\r\n            }\r\n          } else {\r\n            commitHookEffectListUnmount(Layout, fiber, fiber.return);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case ClassComponent:\r\n        {\r\n          // TODO (Offscreen) Check: flags & RefStatic\r\n          safelyDetachRef(fiber, fiber.return);\r\n          var instance = fiber.stateNode;\r\n\r\n          if (typeof instance.componentWillUnmount === 'function') {\r\n            safelyCallComponentWillUnmount(fiber, fiber.return, instance);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case HostComponent:\r\n        {\r\n          safelyDetachRef(fiber, fiber.return);\r\n          break;\r\n        }\r\n\r\n      case OffscreenComponent:\r\n        {\r\n          // Check if this is a\r\n          var isHidden = fiber.memoizedState !== null;\r\n\r\n          if (isHidden) {\r\n            // Nested Offscreen tree is already hidden. Don't disappear\r\n            // its effects.\r\n            disappearLayoutEffects_complete(subtreeRoot);\r\n            continue;\r\n          }\r\n\r\n          break;\r\n        }\r\n    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\r\n\r\n\r\n    if (firstChild !== null) {\r\n      firstChild.return = fiber;\r\n      nextEffect = firstChild;\r\n    } else {\r\n      disappearLayoutEffects_complete(subtreeRoot);\r\n    }\r\n  }\r\n}\r\n\r\nfunction disappearLayoutEffects_complete(subtreeRoot) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n\r\n    if (fiber === subtreeRoot) {\r\n      nextEffect = null;\r\n      return;\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction reappearLayoutEffects_begin(subtreeRoot) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var firstChild = fiber.child;\r\n\r\n    if (fiber.tag === OffscreenComponent) {\r\n      var isHidden = fiber.memoizedState !== null;\r\n\r\n      if (isHidden) {\r\n        // Nested Offscreen tree is still hidden. Don't re-appear its effects.\r\n        reappearLayoutEffects_complete(subtreeRoot);\r\n        continue;\r\n      }\r\n    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\r\n\r\n\r\n    if (firstChild !== null) {\r\n      // This node may have been reused from a previous render, so we can't\r\n      // assume its return pointer is correct.\r\n      firstChild.return = fiber;\r\n      nextEffect = firstChild;\r\n    } else {\r\n      reappearLayoutEffects_complete(subtreeRoot);\r\n    }\r\n  }\r\n}\r\n\r\nfunction reappearLayoutEffects_complete(subtreeRoot) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic\r\n\r\n    setCurrentFiber(fiber);\r\n\r\n    try {\r\n      reappearLayoutEffectsOnFiber(fiber);\r\n    } catch (error) {\r\n      captureCommitPhaseError(fiber, fiber.return, error);\r\n    }\r\n\r\n    resetCurrentFiber();\r\n\r\n    if (fiber === subtreeRoot) {\r\n      nextEffect = null;\r\n      return;\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      // This node may have been reused from a previous render, so we can't\r\n      // assume its return pointer is correct.\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {\r\n  nextEffect = finishedWork;\r\n  commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);\r\n}\r\n\r\nfunction commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var firstChild = fiber.child;\r\n\r\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\r\n      firstChild.return = fiber;\r\n      nextEffect = firstChild;\r\n    } else {\r\n      commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n\r\n    if ((fiber.flags & Passive) !== NoFlags) {\r\n      setCurrentFiber(fiber);\r\n\r\n      try {\r\n        commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);\r\n      } catch (error) {\r\n        captureCommitPhaseError(fiber, fiber.return, error);\r\n      }\r\n\r\n      resetCurrentFiber();\r\n    }\r\n\r\n    if (fiber === subtreeRoot) {\r\n      nextEffect = null;\r\n      return;\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent:\r\n      {\r\n        if ( finishedWork.mode & ProfileMode) {\r\n          startPassiveEffectTimer();\r\n\r\n          try {\r\n            commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\r\n          } finally {\r\n            recordPassiveEffectDuration(finishedWork);\r\n          }\r\n        } else {\r\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\r\n        }\r\n\r\n        break;\r\n      }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffects(firstChild) {\r\n  nextEffect = firstChild;\r\n  commitPassiveUnmountEffects_begin();\r\n}\r\n\r\nfunction commitPassiveUnmountEffects_begin() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var child = fiber.child;\r\n\r\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\r\n      var deletions = fiber.deletions;\r\n\r\n      if (deletions !== null) {\r\n        for (var i = 0; i < deletions.length; i++) {\r\n          var fiberToDelete = deletions[i];\r\n          nextEffect = fiberToDelete;\r\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\r\n        }\r\n\r\n        {\r\n          // A fiber was deleted from this parent fiber, but it's still part of\r\n          // the previous (alternate) parent fiber's list of children. Because\r\n          // children are a linked list, an earlier sibling that's still alive\r\n          // will be connected to the deleted fiber via its `alternate`:\r\n          //\r\n          //   live fiber\r\n          //   --alternate--> previous live fiber\r\n          //   --sibling--> deleted fiber\r\n          //\r\n          // We can't disconnect `alternate` on nodes that haven't been deleted\r\n          // yet, but we can disconnect the `sibling` and `child` pointers.\r\n          var previousFiber = fiber.alternate;\r\n\r\n          if (previousFiber !== null) {\r\n            var detachedChild = previousFiber.child;\r\n\r\n            if (detachedChild !== null) {\r\n              previousFiber.child = null;\r\n\r\n              do {\r\n                var detachedSibling = detachedChild.sibling;\r\n                detachedChild.sibling = null;\r\n                detachedChild = detachedSibling;\r\n              } while (detachedChild !== null);\r\n            }\r\n          }\r\n        }\r\n\r\n        nextEffect = fiber;\r\n      }\r\n    }\r\n\r\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\r\n      child.return = fiber;\r\n      nextEffect = child;\r\n    } else {\r\n      commitPassiveUnmountEffects_complete();\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffects_complete() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n\r\n    if ((fiber.flags & Passive) !== NoFlags) {\r\n      setCurrentFiber(fiber);\r\n      commitPassiveUnmountOnFiber(fiber);\r\n      resetCurrentFiber();\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountOnFiber(finishedWork) {\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent:\r\n      {\r\n        if ( finishedWork.mode & ProfileMode) {\r\n          startPassiveEffectTimer();\r\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\r\n          recordPassiveEffectDuration(finishedWork);\r\n        } else {\r\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\r\n        }\r\n\r\n        break;\r\n      }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\r\n    // TODO: Check if fiber has a PassiveStatic flag\r\n\r\n    setCurrentFiber(fiber);\r\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\r\n    resetCurrentFiber();\r\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\r\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\r\n\r\n    if (child !== null) {\r\n      child.return = fiber;\r\n      nextEffect = child;\r\n    } else {\r\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var sibling = fiber.sibling;\r\n    var returnFiber = fiber.return;\r\n\r\n    {\r\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\r\n      // This is more aggressive than ideal, and the long term goal is to only\r\n      // have to detach the deleted tree at the root.\r\n      detachFiberAfterEffects(fiber);\r\n\r\n      if (fiber === deletedSubtreeRoot) {\r\n        nextEffect = null;\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = returnFiber;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = returnFiber;\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\r\n  switch (current.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent:\r\n      {\r\n        if ( current.mode & ProfileMode) {\r\n          startPassiveEffectTimer();\r\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\r\n          recordPassiveEffectDuration(current);\r\n        } else {\r\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\r\n        }\r\n\r\n        break;\r\n      }\r\n  }\r\n} // TODO: Reuse reappearLayoutEffects traversal here?\r\n\r\n\r\nfunction invokeLayoutEffectMountInDEV(fiber) {\r\n  {\r\n    // We don't need to re-check StrictEffectsMode here.\r\n    // This function is only called if that check has already passed.\r\n    switch (fiber.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent:\r\n        {\r\n          try {\r\n            commitHookEffectListMount(Layout | HasEffect, fiber);\r\n          } catch (error) {\r\n            captureCommitPhaseError(fiber, fiber.return, error);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case ClassComponent:\r\n        {\r\n          var instance = fiber.stateNode;\r\n\r\n          try {\r\n            instance.componentDidMount();\r\n          } catch (error) {\r\n            captureCommitPhaseError(fiber, fiber.return, error);\r\n          }\r\n\r\n          break;\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nfunction invokePassiveEffectMountInDEV(fiber) {\r\n  {\r\n    // We don't need to re-check StrictEffectsMode here.\r\n    // This function is only called if that check has already passed.\r\n    switch (fiber.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent:\r\n        {\r\n          try {\r\n            commitHookEffectListMount(Passive$1 | HasEffect, fiber);\r\n          } catch (error) {\r\n            captureCommitPhaseError(fiber, fiber.return, error);\r\n          }\r\n\r\n          break;\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nfunction invokeLayoutEffectUnmountInDEV(fiber) {\r\n  {\r\n    // We don't need to re-check StrictEffectsMode here.\r\n    // This function is only called if that check has already passed.\r\n    switch (fiber.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent:\r\n        {\r\n          try {\r\n            commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);\r\n          } catch (error) {\r\n            captureCommitPhaseError(fiber, fiber.return, error);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case ClassComponent:\r\n        {\r\n          var instance = fiber.stateNode;\r\n\r\n          if (typeof instance.componentWillUnmount === 'function') {\r\n            safelyCallComponentWillUnmount(fiber, fiber.return, instance);\r\n          }\r\n\r\n          break;\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nfunction invokePassiveEffectUnmountInDEV(fiber) {\r\n  {\r\n    // We don't need to re-check StrictEffectsMode here.\r\n    // This function is only called if that check has already passed.\r\n    switch (fiber.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent:\r\n        {\r\n          try {\r\n            commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);\r\n          } catch (error) {\r\n            captureCommitPhaseError(fiber, fiber.return, error);\r\n          }\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nvar COMPONENT_TYPE = 0;\r\nvar HAS_PSEUDO_CLASS_TYPE = 1;\r\nvar ROLE_TYPE = 2;\r\nvar TEST_NAME_TYPE = 3;\r\nvar TEXT_TYPE = 4;\r\n\r\nif (typeof Symbol === 'function' && Symbol.for) {\r\n  var symbolFor = Symbol.for;\r\n  COMPONENT_TYPE = symbolFor('selector.component');\r\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\r\n  ROLE_TYPE = symbolFor('selector.role');\r\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\r\n  TEXT_TYPE = symbolFor('selector.text');\r\n}\r\n\r\nfunction createComponentSelector(component) {\r\n  return {\r\n    $$typeof: COMPONENT_TYPE,\r\n    value: component\r\n  };\r\n}\r\nfunction createHasPseudoClassSelector(selectors) {\r\n  return {\r\n    $$typeof: HAS_PSEUDO_CLASS_TYPE,\r\n    value: selectors\r\n  };\r\n}\r\nfunction createRoleSelector(role) {\r\n  return {\r\n    $$typeof: ROLE_TYPE,\r\n    value: role\r\n  };\r\n}\r\nfunction createTextSelector(text) {\r\n  return {\r\n    $$typeof: TEXT_TYPE,\r\n    value: text\r\n  };\r\n}\r\nfunction createTestNameSelector(id) {\r\n  return {\r\n    $$typeof: TEST_NAME_TYPE,\r\n    value: id\r\n  };\r\n}\r\n\r\nfunction findFiberRootForHostRoot(hostRoot) {\r\n  var maybeFiber = getInstanceFromNode(hostRoot);\r\n\r\n  if (maybeFiber != null) {\r\n    if (typeof maybeFiber.memoizedProps['data-testname'] !== 'string') {\r\n      throw new Error('Invalid host root specified. Should be either a React container or a node with a testname attribute.');\r\n    }\r\n\r\n    return maybeFiber;\r\n  } else {\r\n    var fiberRoot = findFiberRoot(hostRoot);\r\n\r\n    if (fiberRoot === null) {\r\n      throw new Error('Could not find React container within specified host subtree.');\r\n    } // The Flow type for FiberRoot is a little funky.\r\n    // createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\r\n\r\n\r\n    return fiberRoot.stateNode.current;\r\n  }\r\n}\r\n\r\nfunction matchSelector(fiber, selector) {\r\n  switch (selector.$$typeof) {\r\n    case COMPONENT_TYPE:\r\n      if (fiber.type === selector.value) {\r\n        return true;\r\n      }\r\n\r\n      break;\r\n\r\n    case HAS_PSEUDO_CLASS_TYPE:\r\n      return hasMatchingPaths(fiber, selector.value);\r\n\r\n    case ROLE_TYPE:\r\n      if (fiber.tag === HostComponent) {\r\n        var node = fiber.stateNode;\r\n\r\n        if (matchAccessibilityRole(node, selector.value)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    case TEXT_TYPE:\r\n      if (fiber.tag === HostComponent || fiber.tag === HostText) {\r\n        var textContent = getTextContent(fiber);\r\n\r\n        if (textContent !== null && textContent.indexOf(selector.value) >= 0) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    case TEST_NAME_TYPE:\r\n      if (fiber.tag === HostComponent) {\r\n        var dataTestID = fiber.memoizedProps['data-testname'];\r\n\r\n        if (typeof dataTestID === 'string' && dataTestID.toLowerCase() === selector.value.toLowerCase()) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    default:\r\n      throw new Error('Invalid selector type specified.');\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction selectorToString(selector) {\r\n  switch (selector.$$typeof) {\r\n    case COMPONENT_TYPE:\r\n      var displayName = getComponentNameFromType(selector.value) || 'Unknown';\r\n      return \"<\" + displayName + \">\";\r\n\r\n    case HAS_PSEUDO_CLASS_TYPE:\r\n      return \":has(\" + (selectorToString(selector) || '') + \")\";\r\n\r\n    case ROLE_TYPE:\r\n      return \"[role=\\\"\" + selector.value + \"\\\"]\";\r\n\r\n    case TEXT_TYPE:\r\n      return \"\\\"\" + selector.value + \"\\\"\";\r\n\r\n    case TEST_NAME_TYPE:\r\n      return \"[data-testname=\\\"\" + selector.value + \"\\\"]\";\r\n\r\n    default:\r\n      throw new Error('Invalid selector type specified.');\r\n  }\r\n}\r\n\r\nfunction findPaths(root, selectors) {\r\n  var matchingFibers = [];\r\n  var stack = [root, 0];\r\n  var index = 0;\r\n\r\n  while (index < stack.length) {\r\n    var fiber = stack[index++];\r\n    var selectorIndex = stack[index++];\r\n    var selector = selectors[selectorIndex];\r\n\r\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\r\n      continue;\r\n    } else {\r\n      while (selector != null && matchSelector(fiber, selector)) {\r\n        selectorIndex++;\r\n        selector = selectors[selectorIndex];\r\n      }\r\n    }\r\n\r\n    if (selectorIndex === selectors.length) {\r\n      matchingFibers.push(fiber);\r\n    } else {\r\n      var child = fiber.child;\r\n\r\n      while (child !== null) {\r\n        stack.push(child, selectorIndex);\r\n        child = child.sibling;\r\n      }\r\n    }\r\n  }\r\n\r\n  return matchingFibers;\r\n} // Same as findPaths but with eager bailout on first match\r\n\r\n\r\nfunction hasMatchingPaths(root, selectors) {\r\n  var stack = [root, 0];\r\n  var index = 0;\r\n\r\n  while (index < stack.length) {\r\n    var fiber = stack[index++];\r\n    var selectorIndex = stack[index++];\r\n    var selector = selectors[selectorIndex];\r\n\r\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\r\n      continue;\r\n    } else {\r\n      while (selector != null && matchSelector(fiber, selector)) {\r\n        selectorIndex++;\r\n        selector = selectors[selectorIndex];\r\n      }\r\n    }\r\n\r\n    if (selectorIndex === selectors.length) {\r\n      return true;\r\n    } else {\r\n      var child = fiber.child;\r\n\r\n      while (child !== null) {\r\n        stack.push(child, selectorIndex);\r\n        child = child.sibling;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction findAllNodes(hostRoot, selectors) {\r\n  if (!supportsTestSelectors) {\r\n    throw new Error('Test selector API is not supported by this renderer.');\r\n  }\r\n\r\n  var root = findFiberRootForHostRoot(hostRoot);\r\n  var matchingFibers = findPaths(root, selectors);\r\n  var instanceRoots = [];\r\n  var stack = Array.from(matchingFibers);\r\n  var index = 0;\r\n\r\n  while (index < stack.length) {\r\n    var node = stack[index++];\r\n\r\n    if (node.tag === HostComponent) {\r\n      if (isHiddenSubtree(node)) {\r\n        continue;\r\n      }\r\n\r\n      instanceRoots.push(node.stateNode);\r\n    } else {\r\n      var child = node.child;\r\n\r\n      while (child !== null) {\r\n        stack.push(child);\r\n        child = child.sibling;\r\n      }\r\n    }\r\n  }\r\n\r\n  return instanceRoots;\r\n}\r\nfunction getFindAllNodesFailureDescription(hostRoot, selectors) {\r\n  if (!supportsTestSelectors) {\r\n    throw new Error('Test selector API is not supported by this renderer.');\r\n  }\r\n\r\n  var root = findFiberRootForHostRoot(hostRoot);\r\n  var maxSelectorIndex = 0;\r\n  var matchedNames = []; // The logic of this loop should be kept in sync with findPaths()\r\n\r\n  var stack = [root, 0];\r\n  var index = 0;\r\n\r\n  while (index < stack.length) {\r\n    var fiber = stack[index++];\r\n    var selectorIndex = stack[index++];\r\n    var selector = selectors[selectorIndex];\r\n\r\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\r\n      continue;\r\n    } else if (matchSelector(fiber, selector)) {\r\n      matchedNames.push(selectorToString(selector));\r\n      selectorIndex++;\r\n\r\n      if (selectorIndex > maxSelectorIndex) {\r\n        maxSelectorIndex = selectorIndex;\r\n      }\r\n    }\r\n\r\n    if (selectorIndex < selectors.length) {\r\n      var child = fiber.child;\r\n\r\n      while (child !== null) {\r\n        stack.push(child, selectorIndex);\r\n        child = child.sibling;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (maxSelectorIndex < selectors.length) {\r\n    var unmatchedNames = [];\r\n\r\n    for (var i = maxSelectorIndex; i < selectors.length; i++) {\r\n      unmatchedNames.push(selectorToString(selectors[i]));\r\n    }\r\n\r\n    return 'findAllNodes was able to match part of the selector:\\n' + (\"  \" + matchedNames.join(' > ') + \"\\n\\n\") + 'No matching component was found for:\\n' + (\"  \" + unmatchedNames.join(' > '));\r\n  }\r\n\r\n  return null;\r\n}\r\nfunction findBoundingRects(hostRoot, selectors) {\r\n  if (!supportsTestSelectors) {\r\n    throw new Error('Test selector API is not supported by this renderer.');\r\n  }\r\n\r\n  var instanceRoots = findAllNodes(hostRoot, selectors);\r\n  var boundingRects = [];\r\n\r\n  for (var i = 0; i < instanceRoots.length; i++) {\r\n    boundingRects.push(getBoundingRect(instanceRoots[i]));\r\n  }\r\n\r\n  for (var _i = boundingRects.length - 1; _i > 0; _i--) {\r\n    var targetRect = boundingRects[_i];\r\n    var targetLeft = targetRect.x;\r\n    var targetRight = targetLeft + targetRect.width;\r\n    var targetTop = targetRect.y;\r\n    var targetBottom = targetTop + targetRect.height;\r\n\r\n    for (var j = _i - 1; j >= 0; j--) {\r\n      if (_i !== j) {\r\n        var otherRect = boundingRects[j];\r\n        var otherLeft = otherRect.x;\r\n        var otherRight = otherLeft + otherRect.width;\r\n        var otherTop = otherRect.y;\r\n        var otherBottom = otherTop + otherRect.height; // Merging all rects to the minimums set would be complicated,\r\n        // but we can handle the most common cases:\r\n        // 1. completely overlapping rects\r\n        // 2. adjacent rects that are the same width or height (e.g. items in a list)\r\n        //\r\n        // Even given the above constraints,\r\n        // we still won't end up with the fewest possible rects without doing multiple passes,\r\n        // but it's good enough for this purpose.\r\n\r\n        if (targetLeft >= otherLeft && targetTop >= otherTop && targetRight <= otherRight && targetBottom <= otherBottom) {\r\n          // Complete overlapping rects; remove the inner one.\r\n          boundingRects.splice(_i, 1);\r\n          break;\r\n        } else if (targetLeft === otherLeft && targetRect.width === otherRect.width && !(otherBottom < targetTop) && !(otherTop > targetBottom)) {\r\n          // Adjacent vertical rects; merge them.\r\n          if (otherTop > targetTop) {\r\n            otherRect.height += otherTop - targetTop;\r\n            otherRect.y = targetTop;\r\n          }\r\n\r\n          if (otherBottom < targetBottom) {\r\n            otherRect.height = targetBottom - otherTop;\r\n          }\r\n\r\n          boundingRects.splice(_i, 1);\r\n          break;\r\n        } else if (targetTop === otherTop && targetRect.height === otherRect.height && !(otherRight < targetLeft) && !(otherLeft > targetRight)) {\r\n          // Adjacent horizontal rects; merge them.\r\n          if (otherLeft > targetLeft) {\r\n            otherRect.width += otherLeft - targetLeft;\r\n            otherRect.x = targetLeft;\r\n          }\r\n\r\n          if (otherRight < targetRight) {\r\n            otherRect.width = targetRight - otherLeft;\r\n          }\r\n\r\n          boundingRects.splice(_i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return boundingRects;\r\n}\r\nfunction focusWithin(hostRoot, selectors) {\r\n  if (!supportsTestSelectors) {\r\n    throw new Error('Test selector API is not supported by this renderer.');\r\n  }\r\n\r\n  var root = findFiberRootForHostRoot(hostRoot);\r\n  var matchingFibers = findPaths(root, selectors);\r\n  var stack = Array.from(matchingFibers);\r\n  var index = 0;\r\n\r\n  while (index < stack.length) {\r\n    var fiber = stack[index++];\r\n\r\n    if (isHiddenSubtree(fiber)) {\r\n      continue;\r\n    }\r\n\r\n    if (fiber.tag === HostComponent) {\r\n      var node = fiber.stateNode;\r\n\r\n      if (setFocusIfFocusable(node)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    var child = fiber.child;\r\n\r\n    while (child !== null) {\r\n      stack.push(child);\r\n      child = child.sibling;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\nvar commitHooks = [];\r\nfunction onCommitRoot$1() {\r\n  if (supportsTestSelectors) {\r\n    commitHooks.forEach(function (commitHook) {\r\n      return commitHook();\r\n    });\r\n  }\r\n}\r\nfunction observeVisibleRects(hostRoot, selectors, callback, options) {\r\n  if (!supportsTestSelectors) {\r\n    throw new Error('Test selector API is not supported by this renderer.');\r\n  }\r\n\r\n  var instanceRoots = findAllNodes(hostRoot, selectors);\r\n\r\n  var _setupIntersectionObs = setupIntersectionObserver(instanceRoots, callback, options),\r\n      disconnect = _setupIntersectionObs.disconnect,\r\n      observe = _setupIntersectionObs.observe,\r\n      unobserve = _setupIntersectionObs.unobserve; // When React mutates the host environment, we may need to change what we're listening to.\r\n\r\n\r\n  var commitHook = function () {\r\n    var nextInstanceRoots = findAllNodes(hostRoot, selectors);\r\n    instanceRoots.forEach(function (target) {\r\n      if (nextInstanceRoots.indexOf(target) < 0) {\r\n        unobserve(target);\r\n      }\r\n    });\r\n    nextInstanceRoots.forEach(function (target) {\r\n      if (instanceRoots.indexOf(target) < 0) {\r\n        observe(target);\r\n      }\r\n    });\r\n  };\r\n\r\n  commitHooks.push(commitHook);\r\n  return {\r\n    disconnect: function () {\r\n      // Stop listening for React mutations:\r\n      var index = commitHooks.indexOf(commitHook);\r\n\r\n      if (index >= 0) {\r\n        commitHooks.splice(index, 1);\r\n      } // Disconnect the host observer:\r\n\r\n\r\n      disconnect();\r\n    }\r\n  };\r\n}\r\n\r\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\r\nfunction isLegacyActEnvironment(fiber) {\r\n  {\r\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\r\n    // act environment whenever `jest` is defined, but you can still turn off\r\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\r\n    // to false.\r\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\r\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest\r\n\r\n    var jestIsDefined = typeof jest !== 'undefined';\r\n    return warnsIfNotActing && jestIsDefined && isReactActEnvironmentGlobal !== false;\r\n  }\r\n}\r\nfunction isConcurrentActEnvironment() {\r\n  {\r\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\r\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;\r\n\r\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\r\n      // TODO: Include link to relevant documentation page.\r\n      error('The current testing environment is not configured to support ' + 'act(...)');\r\n    }\r\n\r\n    return isReactActEnvironmentGlobal;\r\n  }\r\n}\r\n\r\nvar ceil = Math.ceil;\r\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\r\n    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\r\n    ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\r\n    ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\r\nvar NoContext =\r\n/*             */\r\n0;\r\nvar BatchedContext =\r\n/*               */\r\n1;\r\nvar RenderContext =\r\n/*                */\r\n2;\r\nvar CommitContext =\r\n/*                */\r\n4;\r\nvar RootInProgress = 0;\r\nvar RootFatalErrored = 1;\r\nvar RootErrored = 2;\r\nvar RootSuspended = 3;\r\nvar RootSuspendedWithDelay = 4;\r\nvar RootCompleted = 5;\r\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\r\n\r\nvar executionContext = NoContext; // The root we're working on\r\n\r\nvar workInProgressRoot = null; // The fiber we're working on\r\n\r\nvar workInProgress = null; // The lanes we're rendering\r\n\r\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\r\n// This is a superset of the lanes we started working on at the root. The only\r\n// case where it's different from `workInProgressRootRenderLanes` is when we\r\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\r\n// Offscreen component.\r\n//\r\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\r\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\r\n\r\nvar subtreeRenderLanes = NoLanes;\r\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\r\n\r\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\r\n\r\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\r\n// slightly different than `renderLanes` because `renderLanes` can change as you\r\n// enter and exit an Offscreen tree. This value is the combination of all render\r\n// lanes for the entire render phase.\r\n\r\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\r\n// includes unprocessed updates, not work in bailed out children.\r\n\r\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\r\n\r\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\r\n\r\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\r\n\r\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\r\n// We will log them once the tree commits.\r\n\r\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\r\n// model where we don't commit new loading states in too quick succession.\r\n\r\nvar globalMostRecentFallbackTime = 0;\r\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\r\n// more and prefer CPU suspense heuristics instead.\r\n\r\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\r\n// suspense heuristics and opt out of rendering more content.\r\n\r\nvar RENDER_TIMEOUT_MS = 500;\r\nvar workInProgressTransitions = null;\r\n\r\nfunction resetRenderTimer() {\r\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\r\n}\r\n\r\nfunction getRenderTargetTime() {\r\n  return workInProgressRootRenderTargetTime;\r\n}\r\nvar hasUncaughtError = false;\r\nvar firstUncaughtError = null;\r\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\r\nvar rootDoesHavePassiveEffects = false;\r\nvar rootWithPendingPassiveEffects = null;\r\nvar pendingPassiveEffectsLanes = NoLanes;\r\nvar pendingPassiveProfilerEffects = [];\r\nvar pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates\r\n\r\nvar NESTED_UPDATE_LIMIT = 50;\r\nvar nestedUpdateCount = 0;\r\nvar rootWithNestedUpdates = null;\r\nvar isFlushingPassiveEffects = false;\r\nvar didScheduleUpdateDuringPassiveEffects = false;\r\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\r\nvar nestedPassiveUpdateCount = 0;\r\nvar rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their\r\n// event times as simultaneous, even if the actual clock time has advanced\r\n// between the first and second call.\r\n\r\nvar currentEventTime = NoTimestamp;\r\nvar currentEventTransitionLane = NoLanes;\r\nvar isRunningInsertionEffect = false;\r\nfunction getWorkInProgressRoot() {\r\n  return workInProgressRoot;\r\n}\r\nfunction requestEventTime() {\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    // We're inside React, so it's fine to read the actual time.\r\n    return now();\r\n  } // We're not inside React, so we may be in the middle of a browser event.\r\n\r\n\r\n  if (currentEventTime !== NoTimestamp) {\r\n    // Use the same start time for all updates until we enter React again.\r\n    return currentEventTime;\r\n  } // This is the first update since React yielded. Compute a new start time.\r\n\r\n\r\n  currentEventTime = now();\r\n  return currentEventTime;\r\n}\r\nfunction requestUpdateLane(fiber) {\r\n  // Special cases\r\n  var mode = fiber.mode;\r\n\r\n  if ((mode & ConcurrentMode) === NoMode) {\r\n    return SyncLane;\r\n  } else if ( (executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\r\n    // This is a render phase update. These are not officially supported. The\r\n    // old behavior is to give this the same \"thread\" (lanes) as\r\n    // whatever is currently rendering. So if you call `setState` on a component\r\n    // that happens later in the same render, it will flush. Ideally, we want to\r\n    // remove the special case and treat them as if they came from an\r\n    // interleaved event. Regardless, this pattern is not officially supported.\r\n    // This behavior is only a fallback. The flag only exists until we can roll\r\n    // out the setState warning, since existing code might accidentally rely on\r\n    // the current behavior.\r\n    return pickArbitraryLane(workInProgressRootRenderLanes);\r\n  }\r\n\r\n  var isTransition = requestCurrentTransition() !== NoTransition;\r\n\r\n  if (isTransition) {\r\n    if ( ReactCurrentBatchConfig$2.transition !== null) {\r\n      var transition = ReactCurrentBatchConfig$2.transition;\r\n\r\n      if (!transition._updatedFibers) {\r\n        transition._updatedFibers = new Set();\r\n      }\r\n\r\n      transition._updatedFibers.add(fiber);\r\n    } // The algorithm for assigning an update to a lane should be stable for all\r\n    // updates at the same priority within the same event. To do this, the\r\n    // inputs to the algorithm must be the same.\r\n    //\r\n    // The trick we use is to cache the first of each of these inputs within an\r\n    // event. Then reset the cached values once we can be sure the event is\r\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\r\n\r\n\r\n    if (currentEventTransitionLane === NoLane) {\r\n      // All transitions within the same event are assigned the same lane.\r\n      currentEventTransitionLane = claimNextTransitionLane();\r\n    }\r\n\r\n    return currentEventTransitionLane;\r\n  } // Updates originating inside certain React methods, like flushSync, have\r\n  // their priority set by tracking it with a context variable.\r\n  //\r\n  // The opaque type returned by the host config is internally a lane, so we can\r\n  // use that directly.\r\n  // TODO: Move this type conversion to the event priority module.\r\n\r\n\r\n  var updateLane = getCurrentUpdatePriority();\r\n\r\n  if (updateLane !== NoLane) {\r\n    return updateLane;\r\n  } // This update originated outside React. Ask the host environment for an\r\n  // appropriate priority, based on the type of event.\r\n  //\r\n  // The opaque type returned by the host config is internally a lane, so we can\r\n  // use that directly.\r\n  // TODO: Move this type conversion to the event priority module.\r\n\r\n\r\n  var eventLane = getCurrentEventPriority();\r\n  return eventLane;\r\n}\r\n\r\nfunction requestRetryLane(fiber) {\r\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\r\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\r\n  // from its placeholder state to its primary/resolved state.\r\n  // Special cases\r\n  var mode = fiber.mode;\r\n\r\n  if ((mode & ConcurrentMode) === NoMode) {\r\n    return SyncLane;\r\n  }\r\n\r\n  return claimNextRetryLane();\r\n}\r\n\r\nfunction scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\r\n  checkForNestedUpdates();\r\n\r\n  {\r\n    if (isRunningInsertionEffect) {\r\n      error('useInsertionEffect must not schedule updates.');\r\n    }\r\n  }\r\n\r\n  {\r\n    if (isFlushingPassiveEffects) {\r\n      didScheduleUpdateDuringPassiveEffects = true;\r\n    }\r\n  } // Mark that the root has a pending update.\r\n\r\n\r\n  markRootUpdated(root, lane, eventTime);\r\n\r\n  if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\r\n    // This update was dispatched during the render phase. This is a mistake\r\n    // if the update originates from user space (with the exception of local\r\n    // hook updates, which are handled differently and don't reach this\r\n    // function), but there are some internal React features that use this as\r\n    // an implementation detail, like selective hydration.\r\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\r\n  } else {\r\n    // This is a normal update, scheduled from outside the render phase. For\r\n    // example, during an input event.\r\n    {\r\n      if (isDevToolsPresent) {\r\n        addFiberToLanesMap(root, fiber, lane);\r\n      }\r\n    }\r\n\r\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\r\n\r\n    if (root === workInProgressRoot) {\r\n      // Received an update to a tree that's in the middle of rendering. Mark\r\n      // that there was an interleaved update work on this root. Unless the\r\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\r\n      // phase update. In that case, we don't treat render phase updates as if\r\n      // they were interleaved, for backwards compat reasons.\r\n      if ( (executionContext & RenderContext) === NoContext) {\r\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\r\n      }\r\n\r\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\r\n        // The root already suspended with a delay, which means this render\r\n        // definitely won't finish. Since we have a new update, let's mark it as\r\n        // suspended now, right before marking the incoming update. This has the\r\n        // effect of interrupting the current render and switching to the update.\r\n        // TODO: Make sure this doesn't override pings that happen while we've\r\n        // already started rendering.\r\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\r\n      }\r\n    }\r\n\r\n    ensureRootIsScheduled(root, eventTime);\r\n\r\n    if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\r\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\r\n      // Flush the synchronous work now, unless we're already working or inside\r\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\r\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\r\n      // without immediately flushing it. We only do this for user-initiated\r\n      // updates, to preserve historical behavior of legacy mode.\r\n      resetRenderTimer();\r\n      flushSyncCallbacksOnlyInLegacyMode();\r\n    }\r\n  }\r\n}\r\nfunction scheduleInitialHydrationOnRoot(root, lane, eventTime) {\r\n  // This is a special fork of scheduleUpdateOnFiber that is only used to\r\n  // schedule the initial hydration of a root that has just been created. Most\r\n  // of the stuff in scheduleUpdateOnFiber can be skipped.\r\n  //\r\n  // The main reason for this separate path, though, is to distinguish the\r\n  // initial children from subsequent updates. In fully client-rendered roots\r\n  // (createRoot instead of hydrateRoot), all top-level renders are modeled as\r\n  // updates, but hydration roots are special because the initial render must\r\n  // match what was rendered on the server.\r\n  var current = root.current;\r\n  current.lanes = lane;\r\n  markRootUpdated(root, lane, eventTime);\r\n  ensureRootIsScheduled(root, eventTime);\r\n}\r\nfunction isUnsafeClassRenderPhaseUpdate(fiber) {\r\n  // Check if this is a render phase update. Only called by class components,\r\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\r\n  return (// TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\r\n    // decided not to enable it.\r\n     (executionContext & RenderContext) !== NoContext\r\n  );\r\n} // Use this function to schedule a task for a root. There's only one task per\r\n// root; if a task was already scheduled, we'll check to make sure the priority\r\n// of the existing task is the same as the priority of the next level that the\r\n// root has work on. This function is called on every update, and right before\r\n// exiting a task.\r\n\r\nfunction ensureRootIsScheduled(root, currentTime) {\r\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\r\n  // expired so we know to work on those next.\r\n\r\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\r\n\r\n  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\r\n\r\n  if (nextLanes === NoLanes) {\r\n    // Special case: There's nothing to work on.\r\n    if (existingCallbackNode !== null) {\r\n      cancelCallback$1(existingCallbackNode);\r\n    }\r\n\r\n    root.callbackNode = null;\r\n    root.callbackPriority = NoLane;\r\n    return;\r\n  } // We use the highest priority lane to represent the priority of the callback.\r\n\r\n\r\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\r\n\r\n  var existingCallbackPriority = root.callbackPriority;\r\n\r\n  if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\r\n  // Scheduler task, rather than an `act` task, cancel it and re-scheduled\r\n  // on the `act` queue.\r\n  !( ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\r\n    {\r\n      // If we're going to re-use an existing task, it needs to exist.\r\n      // Assume that discrete update microtasks are non-cancellable and null.\r\n      // TODO: Temporary until we confirm this warning is not fired.\r\n      if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\r\n        error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');\r\n      }\r\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\r\n\r\n\r\n    return;\r\n  }\r\n\r\n  if (existingCallbackNode != null) {\r\n    // Cancel the existing callback. We'll schedule a new one below.\r\n    cancelCallback$1(existingCallbackNode);\r\n  } // Schedule a new callback.\r\n\r\n\r\n  var newCallbackNode;\r\n\r\n  if (newCallbackPriority === SyncLane) {\r\n    // Special case: Sync React callbacks are scheduled on a special\r\n    // internal queue\r\n    if (root.tag === LegacyRoot) {\r\n      if ( ReactCurrentActQueue$1.isBatchingLegacy !== null) {\r\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\r\n      }\r\n\r\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\r\n    } else {\r\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\r\n    }\r\n\r\n    if (supportsMicrotasks) {\r\n      // Flush the queue in a microtask.\r\n      if ( ReactCurrentActQueue$1.current !== null) {\r\n        // Inside `act`, use our internal `act` queue so that these get flushed\r\n        // at the end of the current scope even when using the sync version\r\n        // of `act`.\r\n        ReactCurrentActQueue$1.current.push(flushSyncCallbacks);\r\n      } else {\r\n        scheduleMicrotask(function () {\r\n          // In Safari, appending an iframe forces microtasks to run.\r\n          // https://github.com/facebook/react/issues/22459\r\n          // We don't support running callbacks in the middle of render\r\n          // or commit so we need to check against that.\r\n          if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\r\n            // Note that this would still prematurely flush the callbacks\r\n            // if this happens outside render or commit phase (e.g. in an event).\r\n            flushSyncCallbacks();\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      // Flush the queue in an Immediate task.\r\n      scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\r\n    }\r\n\r\n    newCallbackNode = null;\r\n  } else {\r\n    var schedulerPriorityLevel;\r\n\r\n    switch (lanesToEventPriority(nextLanes)) {\r\n      case DiscreteEventPriority:\r\n        schedulerPriorityLevel = ImmediatePriority;\r\n        break;\r\n\r\n      case ContinuousEventPriority:\r\n        schedulerPriorityLevel = UserBlockingPriority;\r\n        break;\r\n\r\n      case DefaultEventPriority:\r\n        schedulerPriorityLevel = NormalPriority;\r\n        break;\r\n\r\n      case IdleEventPriority:\r\n        schedulerPriorityLevel = IdlePriority;\r\n        break;\r\n\r\n      default:\r\n        schedulerPriorityLevel = NormalPriority;\r\n        break;\r\n    }\r\n\r\n    newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\r\n  }\r\n\r\n  root.callbackPriority = newCallbackPriority;\r\n  root.callbackNode = newCallbackNode;\r\n} // This is the entry point for every concurrent task, i.e. anything that\r\n// goes through Scheduler.\r\n\r\n\r\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\r\n  {\r\n    resetNestedUpdateFlag();\r\n  } // Since we know we're in a React event, we can clear the current\r\n  // event time. The next update will compute a new event time.\r\n\r\n\r\n  currentEventTime = NoTimestamp;\r\n  currentEventTransitionLane = NoLanes;\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error('Should not already be working.');\r\n  } // Flush any pending passive effects before deciding which lanes to work on,\r\n  // in case they schedule additional work.\r\n\r\n\r\n  var originalCallbackNode = root.callbackNode;\r\n  var didFlushPassiveEffects = flushPassiveEffects();\r\n\r\n  if (didFlushPassiveEffects) {\r\n    // Something in the passive effect phase may have canceled the current task.\r\n    // Check if the task node for this root was changed.\r\n    if (root.callbackNode !== originalCallbackNode) {\r\n      // The current task was canceled. Exit. We don't need to call\r\n      // `ensureRootIsScheduled` because the check above implies either that\r\n      // there's a new task, or that there's no remaining work on this root.\r\n      return null;\r\n    }\r\n  } // Determine the next lanes to work on, using the fields stored\r\n  // on the root.\r\n\r\n\r\n  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\r\n\r\n  if (lanes === NoLanes) {\r\n    // Defensive coding. This is never expected to happen.\r\n    return null;\r\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\r\n  // for too long (\"expired\" work, to prevent starvation), or we're in\r\n  // sync-updates-by-default mode.\r\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\r\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\r\n  // we can remove this, since we track expiration ourselves.\r\n\r\n\r\n  var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && ( !didTimeout);\r\n  var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\r\n\r\n  if (exitStatus !== RootInProgress) {\r\n    if (exitStatus === RootErrored) {\r\n      // If something threw an error, try rendering one more time. We'll\r\n      // render synchronously to block concurrent data mutations, and we'll\r\n      // includes all pending updates are included. If it still fails after\r\n      // the second attempt, we'll give up and commit the resulting tree.\r\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\r\n\r\n      if (errorRetryLanes !== NoLanes) {\r\n        lanes = errorRetryLanes;\r\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\r\n      }\r\n    }\r\n\r\n    if (exitStatus === RootFatalErrored) {\r\n      var fatalError = workInProgressRootFatalError;\r\n      prepareFreshStack(root, NoLanes);\r\n      markRootSuspended$1(root, lanes);\r\n      ensureRootIsScheduled(root, now());\r\n      throw fatalError;\r\n    }\r\n\r\n    if (exitStatus === RootDidNotComplete) {\r\n      // The render unwound without completing the tree. This happens in special\r\n      // cases where need to exit the current render without producing a\r\n      // consistent tree or committing.\r\n      //\r\n      // This should only happen during a concurrent render, not a discrete or\r\n      // synchronous update. We should have already checked for this when we\r\n      // unwound the stack.\r\n      markRootSuspended$1(root, lanes);\r\n    } else {\r\n      // The render completed.\r\n      // Check if this render may have yielded to a concurrent event, and if so,\r\n      // confirm that any newly rendered stores are consistent.\r\n      // TODO: It's possible that even a concurrent render may never have yielded\r\n      // to the main thread, if it was fast enough, or if it expired. We could\r\n      // skip the consistency check in that case, too.\r\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\r\n      var finishedWork = root.current.alternate;\r\n\r\n      if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\r\n        // A store was mutated in an interleaved event. Render again,\r\n        // synchronously, to block further mutations.\r\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\r\n\r\n        if (exitStatus === RootErrored) {\r\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\r\n\r\n          if (_errorRetryLanes !== NoLanes) {\r\n            lanes = _errorRetryLanes;\r\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\r\n            // concurrent events.\r\n          }\r\n        }\r\n\r\n        if (exitStatus === RootFatalErrored) {\r\n          var _fatalError = workInProgressRootFatalError;\r\n          prepareFreshStack(root, NoLanes);\r\n          markRootSuspended$1(root, lanes);\r\n          ensureRootIsScheduled(root, now());\r\n          throw _fatalError;\r\n        }\r\n      } // We now have a consistent tree. The next step is either to commit it,\r\n      // or, if something suspended, wait to commit it after a timeout.\r\n\r\n\r\n      root.finishedWork = finishedWork;\r\n      root.finishedLanes = lanes;\r\n      finishConcurrentRender(root, exitStatus, lanes);\r\n    }\r\n  }\r\n\r\n  ensureRootIsScheduled(root, now());\r\n\r\n  if (root.callbackNode === originalCallbackNode) {\r\n    // The task node scheduled for this root is the same one that's\r\n    // currently executed. Need to return a continuation.\r\n    return performConcurrentWorkOnRoot.bind(null, root);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\r\n  // If an error occurred during hydration, discard server response and fall\r\n  // back to client side render.\r\n  // Before rendering again, save the errors from the previous attempt.\r\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\r\n\r\n  if (isRootDehydrated(root)) {\r\n    // The shell failed to hydrate. Set a flag to force a client rendering\r\n    // during the next attempt. To do this, we call prepareFreshStack now\r\n    // to create the root work-in-progress fiber. This is a bit weird in terms\r\n    // of factoring, because it relies on renderRootSync not calling\r\n    // prepareFreshStack again in the call below, which happens because the\r\n    // root and lanes haven't changed.\r\n    //\r\n    // TODO: I think what we should do is set ForceClientRender inside\r\n    // throwException, like we do for nested Suspense boundaries. The reason\r\n    // it's here instead is so we can switch to the synchronous work loop, too.\r\n    // Something to consider for a future refactor.\r\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\r\n    rootWorkInProgress.flags |= ForceClientRender;\r\n\r\n    {\r\n      errorHydratingContainer(root.containerInfo);\r\n    }\r\n  }\r\n\r\n  var exitStatus = renderRootSync(root, errorRetryLanes);\r\n\r\n  if (exitStatus !== RootErrored) {\r\n    // Successfully finished rendering on retry\r\n    // The errors from the failed first attempt have been recovered. Add\r\n    // them to the collection of recoverable errors. We'll log them in the\r\n    // commit phase.\r\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\r\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\r\n    // from the first attempt, to preserve the causal sequence.\r\n\r\n    if (errorsFromSecondAttempt !== null) {\r\n      queueRecoverableErrors(errorsFromSecondAttempt);\r\n    }\r\n  }\r\n\r\n  return exitStatus;\r\n}\r\n\r\nfunction queueRecoverableErrors(errors) {\r\n  if (workInProgressRootRecoverableErrors === null) {\r\n    workInProgressRootRecoverableErrors = errors;\r\n  } else {\r\n    workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\r\n  }\r\n}\r\n\r\nfunction finishConcurrentRender(root, exitStatus, lanes) {\r\n  switch (exitStatus) {\r\n    case RootInProgress:\r\n    case RootFatalErrored:\r\n      {\r\n        throw new Error('Root did not complete. This is a bug in React.');\r\n      }\r\n    // Flow knows about invariant, so it complains if I add a break\r\n    // statement, but eslint doesn't know about invariant, so it complains\r\n    // if I do. eslint-disable-next-line no-fallthrough\r\n\r\n    case RootErrored:\r\n      {\r\n        // We should have already attempted to retry this tree. If we reached\r\n        // this point, it errored again. Commit it.\r\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\r\n        break;\r\n      }\r\n\r\n    case RootSuspended:\r\n      {\r\n        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\r\n        // should immediately commit it or wait a bit.\r\n\r\n        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\r\n        !shouldForceFlushFallbacksInDEV()) {\r\n          // This render only included retries, no updates. Throttle committing\r\n          // retries so that we don't show too many loading states too quickly.\r\n          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\r\n\r\n          if (msUntilTimeout > 10) {\r\n            var nextLanes = getNextLanes(root, NoLanes);\r\n\r\n            if (nextLanes !== NoLanes) {\r\n              // There's additional work on this root.\r\n              break;\r\n            }\r\n\r\n            var suspendedLanes = root.suspendedLanes;\r\n\r\n            if (!isSubsetOfLanes(suspendedLanes, lanes)) {\r\n              // We should prefer to render the fallback of at the last\r\n              // suspended level. Ping the last suspended level to try\r\n              // rendering it again.\r\n              // FIXME: What if the suspended lanes are Idle? Should not restart.\r\n              var eventTime = requestEventTime();\r\n              markRootPinged(root, suspendedLanes);\r\n              break;\r\n            } // The render is suspended, it hasn't timed out, and there's no\r\n            // lower priority work to do. Instead of committing the fallback\r\n            // immediately, wait for more data to arrive.\r\n\r\n\r\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);\r\n            break;\r\n          }\r\n        } // The work expired. Commit immediately.\r\n\r\n\r\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\r\n        break;\r\n      }\r\n\r\n    case RootSuspendedWithDelay:\r\n      {\r\n        markRootSuspended$1(root, lanes);\r\n\r\n        if (includesOnlyTransitions(lanes)) {\r\n          // This is a transition, so we should exit without committing a\r\n          // placeholder and without scheduling a timeout. Delay indefinitely\r\n          // until we receive more data.\r\n          break;\r\n        }\r\n\r\n        if (!shouldForceFlushFallbacksInDEV()) {\r\n          // This is not a transition, but we did trigger an avoided state.\r\n          // Schedule a placeholder to display after a short delay, using the Just\r\n          // Noticeable Difference.\r\n          // TODO: Is the JND optimization worth the added complexity? If this is\r\n          // the only reason we track the event time, then probably not.\r\n          // Consider removing.\r\n          var mostRecentEventTime = getMostRecentEventTime(root, lanes);\r\n          var eventTimeMs = mostRecentEventTime;\r\n          var timeElapsedMs = now() - eventTimeMs;\r\n\r\n          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\r\n\r\n\r\n          if (_msUntilTimeout > 10) {\r\n            // Instead of committing the fallback immediately, wait for more data\r\n            // to arrive.\r\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);\r\n            break;\r\n          }\r\n        } // Commit the placeholder.\r\n\r\n\r\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\r\n        break;\r\n      }\r\n\r\n    case RootCompleted:\r\n      {\r\n        // The work completed. Ready to commit.\r\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\r\n        break;\r\n      }\r\n\r\n    default:\r\n      {\r\n        throw new Error('Unknown root exit status.');\r\n      }\r\n  }\r\n}\r\n\r\nfunction isRenderConsistentWithExternalStores(finishedWork) {\r\n  // Search the rendered tree for external store reads, and check whether the\r\n  // stores were mutated in a concurrent event. Intentionally using an iterative\r\n  // loop instead of recursion so we can exit early.\r\n  var node = finishedWork;\r\n\r\n  while (true) {\r\n    if (node.flags & StoreConsistency) {\r\n      var updateQueue = node.updateQueue;\r\n\r\n      if (updateQueue !== null) {\r\n        var checks = updateQueue.stores;\r\n\r\n        if (checks !== null) {\r\n          for (var i = 0; i < checks.length; i++) {\r\n            var check = checks[i];\r\n            var getSnapshot = check.getSnapshot;\r\n            var renderedValue = check.value;\r\n\r\n            try {\r\n              if (!objectIs(getSnapshot(), renderedValue)) {\r\n                // Found an inconsistent store.\r\n                return false;\r\n              }\r\n            } catch (error) {\r\n              // If `getSnapshot` throws, return `false`. This will schedule\r\n              // a re-render, and the error will be rethrown during render.\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var child = node.child;\r\n\r\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\r\n      child.return = node;\r\n      node = child;\r\n      continue;\r\n    }\r\n\r\n    if (node === finishedWork) {\r\n      return true;\r\n    }\r\n\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === finishedWork) {\r\n        return true;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  } // Flow doesn't know this is unreachable, but eslint does\r\n  // eslint-disable-next-line no-unreachable\r\n\r\n\r\n  return true;\r\n}\r\n\r\nfunction markRootSuspended$1(root, suspendedLanes) {\r\n  // When suspending, we should always exclude lanes that were pinged or (more\r\n  // rarely, since we try to avoid it) updated during the render phase.\r\n  // TODO: Lol maybe there's a better way to factor this besides this\r\n  // obnoxiously named function :)\r\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\r\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\r\n  markRootSuspended(root, suspendedLanes);\r\n} // This is the entry point for synchronous tasks that don't go\r\n// through Scheduler\r\n\r\n\r\nfunction performSyncWorkOnRoot(root) {\r\n  {\r\n    syncNestedUpdateFlag();\r\n  }\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error('Should not already be working.');\r\n  }\r\n\r\n  flushPassiveEffects();\r\n  var lanes = getNextLanes(root, NoLanes);\r\n\r\n  if (!includesSomeLane(lanes, SyncLane)) {\r\n    // There's no remaining sync work left.\r\n    ensureRootIsScheduled(root, now());\r\n    return null;\r\n  }\r\n\r\n  var exitStatus = renderRootSync(root, lanes);\r\n\r\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\r\n    // If something threw an error, try rendering one more time. We'll render\r\n    // synchronously to block concurrent data mutations, and we'll includes\r\n    // all pending updates are included. If it still fails after the second\r\n    // attempt, we'll give up and commit the resulting tree.\r\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\r\n\r\n    if (errorRetryLanes !== NoLanes) {\r\n      lanes = errorRetryLanes;\r\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\r\n    }\r\n  }\r\n\r\n  if (exitStatus === RootFatalErrored) {\r\n    var fatalError = workInProgressRootFatalError;\r\n    prepareFreshStack(root, NoLanes);\r\n    markRootSuspended$1(root, lanes);\r\n    ensureRootIsScheduled(root, now());\r\n    throw fatalError;\r\n  }\r\n\r\n  if (exitStatus === RootDidNotComplete) {\r\n    throw new Error('Root did not complete. This is a bug in React.');\r\n  } // We now have a consistent tree. Because this is a sync render, we\r\n  // will commit it even if something suspended.\r\n\r\n\r\n  var finishedWork = root.current.alternate;\r\n  root.finishedWork = finishedWork;\r\n  root.finishedLanes = lanes;\r\n  commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next\r\n  // pending level.\r\n\r\n  ensureRootIsScheduled(root, now());\r\n  return null;\r\n}\r\n\r\nfunction flushRoot(root, lanes) {\r\n  if (lanes !== NoLanes) {\r\n    markRootEntangled(root, mergeLanes(lanes, SyncLane));\r\n    ensureRootIsScheduled(root, now());\r\n\r\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\r\n      resetRenderTimer();\r\n      flushSyncCallbacks();\r\n    }\r\n  }\r\n}\r\nfunction deferredUpdates(fn) {\r\n  var previousPriority = getCurrentUpdatePriority();\r\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n\r\n  try {\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    setCurrentUpdatePriority(DefaultEventPriority);\r\n    return fn();\r\n  } finally {\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n  }\r\n}\r\nfunction batchedUpdates(fn, a) {\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= BatchedContext;\r\n\r\n  try {\r\n    return fn(a);\r\n  } finally {\r\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\r\n    // most batchedUpdates-like method.\r\n\r\n    if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\r\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\r\n      resetRenderTimer();\r\n      flushSyncCallbacksOnlyInLegacyMode();\r\n    }\r\n  }\r\n}\r\nfunction discreteUpdates(fn, a, b, c, d) {\r\n  var previousPriority = getCurrentUpdatePriority();\r\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n\r\n  try {\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n    return fn(a, b, c, d);\r\n  } finally {\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n\r\n    if (executionContext === NoContext) {\r\n      resetRenderTimer();\r\n    }\r\n  }\r\n} // Overload the definition to the two valid signatures.\r\n// Warning, this opts-out of checking the function body.\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction flushSync(fn) {\r\n  // In legacy mode, we flush pending passive effects at the beginning of the\r\n  // next event, not at the end of the previous one.\r\n  if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\r\n    flushPassiveEffects();\r\n  }\r\n\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= BatchedContext;\r\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n  var previousPriority = getCurrentUpdatePriority();\r\n\r\n  try {\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n\r\n    if (fn) {\r\n      return fn();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  } finally {\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\r\n    // Note that this will happen even if batchedUpdates is higher up\r\n    // the stack.\r\n\r\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\r\n      flushSyncCallbacks();\r\n    }\r\n  }\r\n}\r\nfunction isAlreadyRendering() {\r\n  // Used by the renderer to print a warning if certain APIs are called from\r\n  // the wrong context.\r\n  return  (executionContext & (RenderContext | CommitContext)) !== NoContext;\r\n}\r\nfunction flushControlled(fn) {\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= BatchedContext;\r\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n  var previousPriority = getCurrentUpdatePriority();\r\n\r\n  try {\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n    fn();\r\n  } finally {\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n    executionContext = prevExecutionContext;\r\n\r\n    if (executionContext === NoContext) {\r\n      // Flush the immediate callbacks that were scheduled during this batch\r\n      resetRenderTimer();\r\n      flushSyncCallbacks();\r\n    }\r\n  }\r\n}\r\nfunction pushRenderLanes(fiber, lanes) {\r\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\r\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\r\n  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\r\n}\r\nfunction popRenderLanes(fiber) {\r\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\r\n  pop(subtreeRenderLanesCursor, fiber);\r\n}\r\n\r\nfunction prepareFreshStack(root, lanes) {\r\n  root.finishedWork = null;\r\n  root.finishedLanes = NoLanes;\r\n  var timeoutHandle = root.timeoutHandle;\r\n\r\n  if (timeoutHandle !== noTimeout) {\r\n    // The root previous suspended and scheduled a timeout to commit a fallback\r\n    // state. Now that we have additional work, cancel the timeout.\r\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\r\n\r\n    cancelTimeout(timeoutHandle);\r\n  }\r\n\r\n  if (workInProgress !== null) {\r\n    var interruptedWork = workInProgress.return;\r\n\r\n    while (interruptedWork !== null) {\r\n      var current = interruptedWork.alternate;\r\n      unwindInterruptedWork(current, interruptedWork);\r\n      interruptedWork = interruptedWork.return;\r\n    }\r\n  }\r\n\r\n  workInProgressRoot = root;\r\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\r\n  workInProgress = rootWorkInProgress;\r\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\r\n  workInProgressRootExitStatus = RootInProgress;\r\n  workInProgressRootFatalError = null;\r\n  workInProgressRootSkippedLanes = NoLanes;\r\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\r\n  workInProgressRootPingedLanes = NoLanes;\r\n  workInProgressRootConcurrentErrors = null;\r\n  workInProgressRootRecoverableErrors = null;\r\n  finishQueueingConcurrentUpdates();\r\n\r\n  {\r\n    ReactStrictModeWarnings.discardPendingWarnings();\r\n  }\r\n\r\n  return rootWorkInProgress;\r\n}\r\n\r\nfunction handleError(root, thrownValue) {\r\n  do {\r\n    var erroredWork = workInProgress;\r\n\r\n    try {\r\n      // Reset module-level state that was set during the render phase.\r\n      resetContextDependencies();\r\n      resetHooksAfterThrow();\r\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\r\n      // separate issue. Write a regression test using string refs.\r\n\r\n      ReactCurrentOwner$2.current = null;\r\n\r\n      if (erroredWork === null || erroredWork.return === null) {\r\n        // Expected to be working on a non-root fiber. This is a fatal error\r\n        // because there's no ancestor that can handle it; the root is\r\n        // supposed to capture all errors that weren't caught by an error\r\n        // boundary.\r\n        workInProgressRootExitStatus = RootFatalErrored;\r\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\r\n        // sibling, or the parent if there are no siblings. But since the root\r\n        // has no siblings nor a parent, we set it to null. Usually this is\r\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\r\n        // intentionally not calling those, we need set it here.\r\n        // TODO: Consider calling `unwindWork` to pop the contexts.\r\n\r\n        workInProgress = null;\r\n        return;\r\n      }\r\n\r\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\r\n        // Record the time spent rendering before an error was thrown. This\r\n        // avoids inaccurate Profiler durations in the case of a\r\n        // suspended render.\r\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\r\n      }\r\n\r\n      if (enableSchedulingProfiler) {\r\n        markComponentRenderStopped();\r\n\r\n        if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {\r\n          var wakeable = thrownValue;\r\n          markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\r\n        } else {\r\n          markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\r\n        }\r\n      }\r\n\r\n      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\r\n      completeUnitOfWork(erroredWork);\r\n    } catch (yetAnotherThrownValue) {\r\n      // Something in the return path also threw.\r\n      thrownValue = yetAnotherThrownValue;\r\n\r\n      if (workInProgress === erroredWork && erroredWork !== null) {\r\n        // If this boundary has already errored, then we had trouble processing\r\n        // the error. Bubble it to the next boundary.\r\n        erroredWork = erroredWork.return;\r\n        workInProgress = erroredWork;\r\n      } else {\r\n        erroredWork = workInProgress;\r\n      }\r\n\r\n      continue;\r\n    } // Return to the normal work loop.\r\n\r\n\r\n    return;\r\n  } while (true);\r\n}\r\n\r\nfunction pushDispatcher() {\r\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\r\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\r\n\r\n  if (prevDispatcher === null) {\r\n    // The React isomorphic package does not include a default dispatcher.\r\n    // Instead the first renderer will lazily attach one, in order to give\r\n    // nicer error messages.\r\n    return ContextOnlyDispatcher;\r\n  } else {\r\n    return prevDispatcher;\r\n  }\r\n}\r\n\r\nfunction popDispatcher(prevDispatcher) {\r\n  ReactCurrentDispatcher$2.current = prevDispatcher;\r\n}\r\n\r\nfunction markCommitTimeOfFallback() {\r\n  globalMostRecentFallbackTime = now();\r\n}\r\nfunction markSkippedUpdateLanes(lane) {\r\n  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\r\n}\r\nfunction renderDidSuspend() {\r\n  if (workInProgressRootExitStatus === RootInProgress) {\r\n    workInProgressRootExitStatus = RootSuspended;\r\n  }\r\n}\r\nfunction renderDidSuspendDelayIfPossible() {\r\n  if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\r\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\r\n  } // Check if there are updates that we skipped tree that might have unblocked\r\n  // this render.\r\n\r\n\r\n  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\r\n    // Mark the current render as suspended so that we switch to working on\r\n    // the updates that were skipped. Usually we only suspend at the end of\r\n    // the render phase.\r\n    // TODO: We should probably always mark the root as suspended immediately\r\n    // (inside this function), since by suspending at the end of the render\r\n    // phase introduces a potential mistake where we suspend lanes that were\r\n    // pinged or updated while we were rendering.\r\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\r\n  }\r\n}\r\nfunction renderDidError(error) {\r\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\r\n    workInProgressRootExitStatus = RootErrored;\r\n  }\r\n\r\n  if (workInProgressRootConcurrentErrors === null) {\r\n    workInProgressRootConcurrentErrors = [error];\r\n  } else {\r\n    workInProgressRootConcurrentErrors.push(error);\r\n  }\r\n} // Called during render to determine if anything has suspended.\r\n// Returns false if we're not sure.\r\n\r\nfunction renderHasNotSuspendedYet() {\r\n  // If something errored or completed, we can't really be sure,\r\n  // so those are false.\r\n  return workInProgressRootExitStatus === RootInProgress;\r\n}\r\n\r\nfunction renderRootSync(root, lanes) {\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= RenderContext;\r\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\r\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\r\n\r\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\r\n    {\r\n      if (isDevToolsPresent) {\r\n        var memoizedUpdaters = root.memoizedUpdaters;\r\n\r\n        if (memoizedUpdaters.size > 0) {\r\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\r\n          memoizedUpdaters.clear();\r\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\r\n        // If we bailout on this work, we'll move them back (like above).\r\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\r\n        // That way we can keep the current update and future updates separate.\r\n\r\n\r\n        movePendingFibersToMemoized(root, lanes);\r\n      }\r\n    }\r\n\r\n    workInProgressTransitions = getTransitionsForLanes();\r\n    prepareFreshStack(root, lanes);\r\n  }\r\n\r\n  {\r\n    markRenderStarted(lanes);\r\n  }\r\n\r\n  do {\r\n    try {\r\n      workLoopSync();\r\n      break;\r\n    } catch (thrownValue) {\r\n      handleError(root, thrownValue);\r\n    }\r\n  } while (true);\r\n\r\n  resetContextDependencies();\r\n  executionContext = prevExecutionContext;\r\n  popDispatcher(prevDispatcher);\r\n\r\n  if (workInProgress !== null) {\r\n    // This is a sync render, so we should have finished the whole tree.\r\n    throw new Error('Cannot commit an incomplete root. This error is likely caused by a ' + 'bug in React. Please file an issue.');\r\n  }\r\n\r\n  {\r\n    markRenderStopped();\r\n  } // Set this to null to indicate there's no in-progress render.\r\n\r\n\r\n  workInProgressRoot = null;\r\n  workInProgressRootRenderLanes = NoLanes;\r\n  return workInProgressRootExitStatus;\r\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\r\n\r\n/** @noinline */\r\n\r\n\r\nfunction workLoopSync() {\r\n  // Already timed out, so perform work without checking if we need to yield.\r\n  while (workInProgress !== null) {\r\n    performUnitOfWork(workInProgress);\r\n  }\r\n}\r\n\r\nfunction renderRootConcurrent(root, lanes) {\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= RenderContext;\r\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\r\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\r\n\r\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\r\n    {\r\n      if (isDevToolsPresent) {\r\n        var memoizedUpdaters = root.memoizedUpdaters;\r\n\r\n        if (memoizedUpdaters.size > 0) {\r\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\r\n          memoizedUpdaters.clear();\r\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\r\n        // If we bailout on this work, we'll move them back (like above).\r\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\r\n        // That way we can keep the current update and future updates separate.\r\n\r\n\r\n        movePendingFibersToMemoized(root, lanes);\r\n      }\r\n    }\r\n\r\n    workInProgressTransitions = getTransitionsForLanes();\r\n    resetRenderTimer();\r\n    prepareFreshStack(root, lanes);\r\n  }\r\n\r\n  {\r\n    markRenderStarted(lanes);\r\n  }\r\n\r\n  do {\r\n    try {\r\n      workLoopConcurrent();\r\n      break;\r\n    } catch (thrownValue) {\r\n      handleError(root, thrownValue);\r\n    }\r\n  } while (true);\r\n\r\n  resetContextDependencies();\r\n  popDispatcher(prevDispatcher);\r\n  executionContext = prevExecutionContext;\r\n\r\n\r\n  if (workInProgress !== null) {\r\n    // Still work remaining.\r\n    {\r\n      markRenderYielded();\r\n    }\r\n\r\n    return RootInProgress;\r\n  } else {\r\n    // Completed the tree.\r\n    {\r\n      markRenderStopped();\r\n    } // Set this to null to indicate there's no in-progress render.\r\n\r\n\r\n    workInProgressRoot = null;\r\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\r\n\r\n    return workInProgressRootExitStatus;\r\n  }\r\n}\r\n/** @noinline */\r\n\r\n\r\nfunction workLoopConcurrent() {\r\n  // Perform work until Scheduler asks us to yield\r\n  while (workInProgress !== null && !shouldYield()) {\r\n    performUnitOfWork(workInProgress);\r\n  }\r\n}\r\n\r\nfunction performUnitOfWork(unitOfWork) {\r\n  // The current, flushed, state of this fiber is the alternate. Ideally\r\n  // nothing should rely on this, but relying on it here means that we don't\r\n  // need an additional field on the work in progress.\r\n  var current = unitOfWork.alternate;\r\n  setCurrentFiber(unitOfWork);\r\n  var next;\r\n\r\n  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {\r\n    startProfilerTimer(unitOfWork);\r\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\r\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\r\n  } else {\r\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\r\n  }\r\n\r\n  resetCurrentFiber();\r\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\r\n\r\n  if (next === null) {\r\n    // If this doesn't spawn new work, complete the current work.\r\n    completeUnitOfWork(unitOfWork);\r\n  } else {\r\n    workInProgress = next;\r\n  }\r\n\r\n  ReactCurrentOwner$2.current = null;\r\n}\r\n\r\nfunction completeUnitOfWork(unitOfWork) {\r\n  // Attempt to complete the current unit of work, then move to the next\r\n  // sibling. If there are no more siblings, return to the parent fiber.\r\n  var completedWork = unitOfWork;\r\n\r\n  do {\r\n    // The current, flushed, state of this fiber is the alternate. Ideally\r\n    // nothing should rely on this, but relying on it here means that we don't\r\n    // need an additional field on the work in progress.\r\n    var current = completedWork.alternate;\r\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\r\n\r\n    if ((completedWork.flags & Incomplete) === NoFlags) {\r\n      setCurrentFiber(completedWork);\r\n      var next = void 0;\r\n\r\n      if ( (completedWork.mode & ProfileMode) === NoMode) {\r\n        next = completeWork(current, completedWork, subtreeRenderLanes);\r\n      } else {\r\n        startProfilerTimer(completedWork);\r\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\r\n\r\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\r\n      }\r\n\r\n      resetCurrentFiber();\r\n\r\n      if (next !== null) {\r\n        // Completing this fiber spawned new work. Work on that next.\r\n        workInProgress = next;\r\n        return;\r\n      }\r\n    } else {\r\n      // This fiber did not complete because something threw. Pop values off\r\n      // the stack without entering the complete phase. If this is a boundary,\r\n      // capture values if possible.\r\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\r\n\r\n\r\n      if (_next !== null) {\r\n        // If completing this work spawned new work, do that next. We'll come\r\n        // back here again.\r\n        // Since we're restarting, remove anything that is not a host effect\r\n        // from the effect tag.\r\n        _next.flags &= HostEffectMask;\r\n        workInProgress = _next;\r\n        return;\r\n      }\r\n\r\n      if ( (completedWork.mode & ProfileMode) !== NoMode) {\r\n        // Record the render duration for the fiber that errored.\r\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\r\n\r\n        var actualDuration = completedWork.actualDuration;\r\n        var child = completedWork.child;\r\n\r\n        while (child !== null) {\r\n          actualDuration += child.actualDuration;\r\n          child = child.sibling;\r\n        }\r\n\r\n        completedWork.actualDuration = actualDuration;\r\n      }\r\n\r\n      if (returnFiber !== null) {\r\n        // Mark the parent fiber as incomplete and clear its subtree flags.\r\n        returnFiber.flags |= Incomplete;\r\n        returnFiber.subtreeFlags = NoFlags;\r\n        returnFiber.deletions = null;\r\n      } else {\r\n        // We've unwound all the way to the root.\r\n        workInProgressRootExitStatus = RootDidNotComplete;\r\n        workInProgress = null;\r\n        return;\r\n      }\r\n    }\r\n\r\n    var siblingFiber = completedWork.sibling;\r\n\r\n    if (siblingFiber !== null) {\r\n      // If there is more work to do in this returnFiber, do that next.\r\n      workInProgress = siblingFiber;\r\n      return;\r\n    } // Otherwise, return to the parent\r\n\r\n\r\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\r\n\r\n    workInProgress = completedWork;\r\n  } while (completedWork !== null); // We've reached the root.\r\n\r\n\r\n  if (workInProgressRootExitStatus === RootInProgress) {\r\n    workInProgressRootExitStatus = RootCompleted;\r\n  }\r\n}\r\n\r\nfunction commitRoot(root, recoverableErrors, transitions) {\r\n  // TODO: This no longer makes any sense. We already wrap the mutation and\r\n  // layout phases. Should be able to remove.\r\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\r\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n\r\n  try {\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n    commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);\r\n  } finally {\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n    setCurrentUpdatePriority(previousUpdateLanePriority);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {\r\n  do {\r\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\r\n    // means `flushPassiveEffects` will sometimes result in additional\r\n    // passive effects. So we need to keep flushing in a loop until there are\r\n    // no more pending effects.\r\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\r\n    // flush synchronous work at the end, to avoid factoring hazards like this.\r\n    flushPassiveEffects();\r\n  } while (rootWithPendingPassiveEffects !== null);\r\n\r\n  flushRenderPhaseStrictModeWarningsInDEV();\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error('Should not already be working.');\r\n  }\r\n\r\n  var finishedWork = root.finishedWork;\r\n  var lanes = root.finishedLanes;\r\n\r\n  {\r\n    markCommitStarted(lanes);\r\n  }\r\n\r\n  if (finishedWork === null) {\r\n\r\n    {\r\n      markCommitStopped();\r\n    }\r\n\r\n    return null;\r\n  } else {\r\n    {\r\n      if (lanes === NoLanes) {\r\n        error('root.finishedLanes should not be empty during a commit. This is a ' + 'bug in React.');\r\n      }\r\n    }\r\n  }\r\n\r\n  root.finishedWork = null;\r\n  root.finishedLanes = NoLanes;\r\n\r\n  if (finishedWork === root.current) {\r\n    throw new Error('Cannot commit the same tree as before. This error is likely caused by ' + 'a bug in React. Please file an issue.');\r\n  } // commitRoot never returns a continuation; it always finishes synchronously.\r\n  // So we can clear these now to allow a new callback to be scheduled.\r\n\r\n\r\n  root.callbackNode = null;\r\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\r\n  // pending time is whatever is left on the root fiber.\r\n\r\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\r\n  markRootFinished(root, remainingLanes);\r\n\r\n  if (root === workInProgressRoot) {\r\n    // We can reset these now that they are finished.\r\n    workInProgressRoot = null;\r\n    workInProgress = null;\r\n    workInProgressRootRenderLanes = NoLanes;\r\n  } // If there are pending passive effects, schedule a callback to process them.\r\n  // Do this as early as possible, so it is queued before anything else that\r\n  // might get scheduled in the commit phase. (See #16714.)\r\n  // TODO: Delete all other places that schedule the passive effect callback\r\n  // They're redundant.\r\n\r\n\r\n  if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\r\n    if (!rootDoesHavePassiveEffects) {\r\n      rootDoesHavePassiveEffects = true;\r\n      // to store it in pendingPassiveTransitions until they get processed\r\n      // We need to pass this through as an argument to commitRoot\r\n      // because workInProgressTransitions might have changed between\r\n      // the previous render and commit if we throttle the commit\r\n      // with setTimeout\r\n\r\n      pendingPassiveTransitions = transitions;\r\n      scheduleCallback$1(NormalPriority, function () {\r\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\r\n        // *after* passive effects fire to avoid freeing a cache pool that may\r\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\r\n\r\n        return null;\r\n      });\r\n    }\r\n  } // Check if there are any effects in the whole tree.\r\n  // TODO: This is left over from the effect list implementation, where we had\r\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\r\n  // only other reason this optimization exists is because it affects profiling.\r\n  // Reconsider whether this is necessary.\r\n\r\n\r\n  var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\r\n  var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\r\n\r\n  if (subtreeHasEffects || rootHasEffect) {\r\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    var previousPriority = getCurrentUpdatePriority();\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n    var prevExecutionContext = executionContext;\r\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\r\n\r\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\r\n    // of the effect list for each phase: all mutation effects come before all\r\n    // layout effects, and so on.\r\n    // The first phase a \"before mutation\" phase. We use this phase to read the\r\n    // state of the host tree right before we mutate it. This is where\r\n    // getSnapshotBeforeUpdate is called.\r\n\r\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\r\n\r\n    {\r\n      // Mark the current commit time to be shared by all Profilers in this\r\n      // batch. This enables them to be grouped later.\r\n      recordCommitTime();\r\n    }\r\n\r\n\r\n    commitMutationEffects(root, finishedWork, lanes);\r\n\r\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\r\n    // the mutation phase, so that the previous tree is still current during\r\n    // componentWillUnmount, but before the layout phase, so that the finished\r\n    // work is current during componentDidMount/Update.\r\n\r\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\r\n\r\n    {\r\n      markLayoutEffectsStarted(lanes);\r\n    }\r\n\r\n    commitLayoutEffects(finishedWork, root, lanes);\r\n\r\n    {\r\n      markLayoutEffectsStopped();\r\n    }\r\n    // opportunity to paint.\r\n\r\n\r\n    requestPaint();\r\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\r\n\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n  } else {\r\n    // No effects.\r\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\r\n    // no effects.\r\n    // TODO: Maybe there's a better way to report this.\r\n\r\n    {\r\n      recordCommitTime();\r\n    }\r\n  }\r\n\r\n  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\r\n\r\n  if (rootDoesHavePassiveEffects) {\r\n    // This commit has passive effects. Stash a reference to them. But don't\r\n    // schedule a callback until after flushing layout work.\r\n    rootDoesHavePassiveEffects = false;\r\n    rootWithPendingPassiveEffects = root;\r\n    pendingPassiveEffectsLanes = lanes;\r\n  } else {\r\n\r\n    {\r\n      nestedPassiveUpdateCount = 0;\r\n      rootWithPassiveNestedUpdates = null;\r\n    }\r\n  } // Read this again, since an effect might have updated it\r\n\r\n\r\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\r\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\r\n  // is to detect whether something might have called setState inside\r\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\r\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\r\n  // `getDerivedStateFromError` instead. However, it could be improved by\r\n  // checking if remainingLanes includes Sync work, instead of whether there's\r\n  // any work remaining at all (which would also include stuff like Suspense\r\n  // retries or transitions). It's been like this for a while, though, so fixing\r\n  // it probably isn't that urgent.\r\n\r\n  if (remainingLanes === NoLanes) {\r\n    // If there's no remaining work, we can clear the set of already failed\r\n    // error boundaries.\r\n    legacyErrorBoundariesThatAlreadyFailed = null;\r\n  }\r\n\r\n  {\r\n    if (!rootDidHavePassiveEffects) {\r\n      commitDoubleInvokeEffectsInDEV(root.current, false);\r\n    }\r\n  }\r\n\r\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\r\n\r\n  {\r\n    if (isDevToolsPresent) {\r\n      root.memoizedUpdaters.clear();\r\n    }\r\n  }\r\n\r\n  {\r\n    onCommitRoot$1();\r\n  } // Always call this before exiting `commitRoot`, to ensure that any\r\n  // additional work on this root is scheduled.\r\n\r\n\r\n  ensureRootIsScheduled(root, now());\r\n\r\n  if (recoverableErrors !== null) {\r\n    // There were errors during this render, but recovered from them without\r\n    // needing to surface it to the UI. We log them here.\r\n    var onRecoverableError = root.onRecoverableError;\r\n\r\n    for (var i = 0; i < recoverableErrors.length; i++) {\r\n      var recoverableError = recoverableErrors[i];\r\n      var componentStack = recoverableError.stack;\r\n      var digest = recoverableError.digest;\r\n      onRecoverableError(recoverableError.value, {\r\n        componentStack: componentStack,\r\n        digest: digest\r\n      });\r\n    }\r\n  }\r\n\r\n  if (hasUncaughtError) {\r\n    hasUncaughtError = false;\r\n    var error$1 = firstUncaughtError;\r\n    firstUncaughtError = null;\r\n    throw error$1;\r\n  } // If the passive effects are the result of a discrete render, flush them\r\n  // synchronously at the end of the current task so that the result is\r\n  // immediately observable. Otherwise, we assume that they are not\r\n  // order-dependent and do not need to be observed by external systems, so we\r\n  // can wait until after paint.\r\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\r\n  // currently schedule the callback in multiple places, will wait until those\r\n  // are consolidated.\r\n\r\n\r\n  if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\r\n    flushPassiveEffects();\r\n  } // Read this again, since a passive effect might have updated it\r\n\r\n\r\n  remainingLanes = root.pendingLanes;\r\n\r\n  if (includesSomeLane(remainingLanes, SyncLane)) {\r\n    {\r\n      markNestedUpdateScheduled();\r\n    } // Count the number of times the root synchronously re-renders without\r\n    // finishing. If there are too many, it indicates an infinite update loop.\r\n\r\n\r\n    if (root === rootWithNestedUpdates) {\r\n      nestedUpdateCount++;\r\n    } else {\r\n      nestedUpdateCount = 0;\r\n      rootWithNestedUpdates = root;\r\n    }\r\n  } else {\r\n    nestedUpdateCount = 0;\r\n  } // If layout work was scheduled, flush it now.\r\n\r\n\r\n  flushSyncCallbacks();\r\n\r\n  {\r\n    markCommitStopped();\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction flushPassiveEffects() {\r\n  // Returns whether passive effects were flushed.\r\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\r\n  // probably just combine the two functions. I believe they were only separate\r\n  // in the first place because we used to wrap it with\r\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\r\n  // priority within React itself, so we can mutate the variable directly.\r\n  if (rootWithPendingPassiveEffects !== null) {\r\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\r\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\r\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n    var previousPriority = getCurrentUpdatePriority();\r\n\r\n    try {\r\n      ReactCurrentBatchConfig$2.transition = null;\r\n      setCurrentUpdatePriority(priority);\r\n      return flushPassiveEffectsImpl();\r\n    } finally {\r\n      setCurrentUpdatePriority(previousPriority);\r\n      ReactCurrentBatchConfig$2.transition = prevTransition; // Once passive effects have run for the tree - giving components a\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\r\n  {\r\n    pendingPassiveProfilerEffects.push(fiber);\r\n\r\n    if (!rootDoesHavePassiveEffects) {\r\n      rootDoesHavePassiveEffects = true;\r\n      scheduleCallback$1(NormalPriority, function () {\r\n        flushPassiveEffects();\r\n        return null;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushPassiveEffectsImpl() {\r\n  if (rootWithPendingPassiveEffects === null) {\r\n    return false;\r\n  } // Cache and clear the transitions flag\r\n\r\n\r\n  var transitions = pendingPassiveTransitions;\r\n  pendingPassiveTransitions = null;\r\n  var root = rootWithPendingPassiveEffects;\r\n  var lanes = pendingPassiveEffectsLanes;\r\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\r\n  // Figure out why and fix it. It's not causing any known issues (probably\r\n  // because it's only used for profiling), but it's a refactor hazard.\r\n\r\n  pendingPassiveEffectsLanes = NoLanes;\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error('Cannot flush passive effects while already rendering.');\r\n  }\r\n\r\n  {\r\n    isFlushingPassiveEffects = true;\r\n    didScheduleUpdateDuringPassiveEffects = false;\r\n  }\r\n\r\n  {\r\n    markPassiveEffectsStarted(lanes);\r\n  }\r\n\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= CommitContext;\r\n  commitPassiveUnmountEffects(root.current);\r\n  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects\r\n\r\n  {\r\n    var profilerEffects = pendingPassiveProfilerEffects;\r\n    pendingPassiveProfilerEffects = [];\r\n\r\n    for (var i = 0; i < profilerEffects.length; i++) {\r\n      var _fiber = profilerEffects[i];\r\n      commitPassiveEffectDurations(root, _fiber);\r\n    }\r\n  }\r\n\r\n  {\r\n    markPassiveEffectsStopped();\r\n  }\r\n\r\n  {\r\n    commitDoubleInvokeEffectsInDEV(root.current, true);\r\n  }\r\n\r\n  executionContext = prevExecutionContext;\r\n  flushSyncCallbacks();\r\n\r\n  {\r\n    // If additional passive effects were scheduled, increment a counter. If this\r\n    // exceeds the limit, we'll fire a warning.\r\n    if (didScheduleUpdateDuringPassiveEffects) {\r\n      if (root === rootWithPassiveNestedUpdates) {\r\n        nestedPassiveUpdateCount++;\r\n      } else {\r\n        nestedPassiveUpdateCount = 0;\r\n        rootWithPassiveNestedUpdates = root;\r\n      }\r\n    } else {\r\n      nestedPassiveUpdateCount = 0;\r\n    }\r\n\r\n    isFlushingPassiveEffects = false;\r\n    didScheduleUpdateDuringPassiveEffects = false;\r\n  } // TODO: Move to commitPassiveMountEffects\r\n\r\n\r\n  onPostCommitRoot(root);\r\n\r\n  {\r\n    var stateNode = root.current.stateNode;\r\n    stateNode.effectDuration = 0;\r\n    stateNode.passiveEffectDuration = 0;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\r\n  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\r\n}\r\nfunction markLegacyErrorBoundaryAsFailed(instance) {\r\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\r\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\r\n  } else {\r\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\r\n  }\r\n}\r\n\r\nfunction prepareToThrowUncaughtError(error) {\r\n  if (!hasUncaughtError) {\r\n    hasUncaughtError = true;\r\n    firstUncaughtError = error;\r\n  }\r\n}\r\n\r\nvar onUncaughtError = prepareToThrowUncaughtError;\r\n\r\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\r\n  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\r\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\r\n  var root = enqueueUpdate(rootFiber, update, SyncLane);\r\n  var eventTime = requestEventTime();\r\n\r\n  if (root !== null) {\r\n    markRootUpdated(root, SyncLane, eventTime);\r\n    ensureRootIsScheduled(root, eventTime);\r\n  }\r\n}\r\n\r\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\r\n  {\r\n    reportUncaughtErrorInDEV(error$1);\r\n    setIsRunningInsertionEffect(false);\r\n  }\r\n\r\n  if (sourceFiber.tag === HostRoot) {\r\n    // Error was thrown at the root. There is no parent, so the root\r\n    // itself should capture it.\r\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\r\n    return;\r\n  }\r\n\r\n  var fiber = null;\r\n\r\n  {\r\n    fiber = nearestMountedAncestor;\r\n  }\r\n\r\n  while (fiber !== null) {\r\n    if (fiber.tag === HostRoot) {\r\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\r\n      return;\r\n    } else if (fiber.tag === ClassComponent) {\r\n      var ctor = fiber.type;\r\n      var instance = fiber.stateNode;\r\n\r\n      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\r\n        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\r\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\r\n        var root = enqueueUpdate(fiber, update, SyncLane);\r\n        var eventTime = requestEventTime();\r\n\r\n        if (root !== null) {\r\n          markRootUpdated(root, SyncLane, eventTime);\r\n          ensureRootIsScheduled(root, eventTime);\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    fiber = fiber.return;\r\n  }\r\n\r\n  {\r\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\r\n    // will fire for errors that are thrown by destroy functions inside deleted\r\n    // trees. What it should instead do is propagate the error to the parent of\r\n    // the deleted tree. In the meantime, do not add this warning to the\r\n    // allowlist; this is only for our internal use.\r\n    error('Internal React error: Attempted to capture a commit phase error ' + 'inside a detached tree. This indicates a bug in React. Likely ' + 'causes include deleting the same fiber more than once, committing an ' + 'already-finished tree, or an inconsistent return pointer.\\n\\n' + 'Error message:\\n\\n%s', error$1);\r\n  }\r\n}\r\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\r\n  var pingCache = root.pingCache;\r\n\r\n  if (pingCache !== null) {\r\n    // The wakeable resolved, so we no longer need to memoize, because it will\r\n    // never be thrown again.\r\n    pingCache.delete(wakeable);\r\n  }\r\n\r\n  var eventTime = requestEventTime();\r\n  markRootPinged(root, pingedLanes);\r\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\r\n\r\n  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\r\n    // Received a ping at the same priority level at which we're currently\r\n    // rendering. We might want to restart this render. This should mirror\r\n    // the logic of whether or not a root suspends once it completes.\r\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\r\n    // we should probably never restart.\r\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\r\n    // so we can always restart.\r\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\r\n      // Restart from the root.\r\n      prepareFreshStack(root, NoLanes);\r\n    } else {\r\n      // Even though we can't restart right now, we might get an\r\n      // opportunity later. So we mark this render as having a ping.\r\n      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\r\n    }\r\n  }\r\n\r\n  ensureRootIsScheduled(root, eventTime);\r\n}\r\n\r\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\r\n  // The boundary fiber (a Suspense component or SuspenseList component)\r\n  // previously was rendered in its fallback state. One of the promises that\r\n  // suspended it has resolved, which means at least part of the tree was\r\n  // likely unblocked. Try rendering again, at a new lanes.\r\n  if (retryLane === NoLane) {\r\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\r\n    // unnecessary entanglement?\r\n    retryLane = requestRetryLane(boundaryFiber);\r\n  } // TODO: Special case idle priority?\r\n\r\n\r\n  var eventTime = requestEventTime();\r\n  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\r\n\r\n  if (root !== null) {\r\n    markRootUpdated(root, retryLane, eventTime);\r\n    ensureRootIsScheduled(root, eventTime);\r\n  }\r\n}\r\n\r\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\r\n  var suspenseState = boundaryFiber.memoizedState;\r\n  var retryLane = NoLane;\r\n\r\n  if (suspenseState !== null) {\r\n    retryLane = suspenseState.retryLane;\r\n  }\r\n\r\n  retryTimedOutBoundary(boundaryFiber, retryLane);\r\n}\r\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\r\n  var retryLane = NoLane; // Default\r\n\r\n  var retryCache;\r\n\r\n  switch (boundaryFiber.tag) {\r\n    case SuspenseComponent:\r\n      retryCache = boundaryFiber.stateNode;\r\n      var suspenseState = boundaryFiber.memoizedState;\r\n\r\n      if (suspenseState !== null) {\r\n        retryLane = suspenseState.retryLane;\r\n      }\r\n\r\n      break;\r\n\r\n    case SuspenseListComponent:\r\n      retryCache = boundaryFiber.stateNode;\r\n      break;\r\n\r\n    default:\r\n      throw new Error('Pinged unknown suspense boundary type. ' + 'This is probably a bug in React.');\r\n  }\r\n\r\n  if (retryCache !== null) {\r\n    // The wakeable resolved, so we no longer need to memoize, because it will\r\n    // never be thrown again.\r\n    retryCache.delete(wakeable);\r\n  }\r\n\r\n  retryTimedOutBoundary(boundaryFiber, retryLane);\r\n} // Computes the next Just Noticeable Difference (JND) boundary.\r\n// The theory is that a person can't tell the difference between small differences in time.\r\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\r\n// difference in the experience. However, waiting for longer might mean that we can avoid\r\n// showing an intermediate loading state. The longer we have already waited, the harder it\r\n// is to tell small differences in time. Therefore, the longer we've already waited,\r\n// the longer we can wait additionally. At some point we have to give up though.\r\n// We pick a train model where the next boundary commits at a consistent schedule.\r\n// These particular numbers are vague estimates. We expect to adjust them based on research.\r\n\r\nfunction jnd(timeElapsed) {\r\n  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\r\n}\r\n\r\nfunction checkForNestedUpdates() {\r\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\r\n    nestedUpdateCount = 0;\r\n    rootWithNestedUpdates = null;\r\n    throw new Error('Maximum update depth exceeded. This can happen when a component ' + 'repeatedly calls setState inside componentWillUpdate or ' + 'componentDidUpdate. React limits the number of nested updates to ' + 'prevent infinite loops.');\r\n  }\r\n\r\n  {\r\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\r\n      nestedPassiveUpdateCount = 0;\r\n      rootWithPassiveNestedUpdates = null;\r\n\r\n      error('Maximum update depth exceeded. This can happen when a component ' + \"calls setState inside useEffect, but useEffect either doesn't \" + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\r\n  {\r\n    ReactStrictModeWarnings.flushLegacyContextWarning();\r\n\r\n    {\r\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {\r\n  {\r\n    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects\r\n    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.\r\n    // Maybe not a big deal since this is DEV only behavior.\r\n    setCurrentFiber(fiber);\r\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);\r\n\r\n    if (hasPassiveEffects) {\r\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);\r\n    }\r\n\r\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);\r\n\r\n    if (hasPassiveEffects) {\r\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);\r\n    }\r\n\r\n    resetCurrentFiber();\r\n  }\r\n}\r\n\r\nfunction invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {\r\n  {\r\n    // We don't need to re-check StrictEffectsMode here.\r\n    // This function is only called if that check has already passed.\r\n    var current = firstChild;\r\n    var subtreeRoot = null;\r\n\r\n    while (current !== null) {\r\n      var primarySubtreeFlag = current.subtreeFlags & fiberFlags;\r\n\r\n      if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) {\r\n        current = current.child;\r\n      } else {\r\n        if ((current.flags & fiberFlags) !== NoFlags) {\r\n          invokeEffectFn(current);\r\n        }\r\n\r\n        if (current.sibling !== null) {\r\n          current = current.sibling;\r\n        } else {\r\n          current = subtreeRoot = current.return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar didWarnStateUpdateForNotYetMountedComponent = null;\r\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\r\n  {\r\n    if ((executionContext & RenderContext) !== NoContext) {\r\n      // We let the other warning about render phase updates deal with this one.\r\n      return;\r\n    }\r\n\r\n    if (!(fiber.mode & ConcurrentMode)) {\r\n      return;\r\n    }\r\n\r\n    var tag = fiber.tag;\r\n\r\n    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\r\n      // Only warn for user-defined components, not internal ones like Suspense.\r\n      return;\r\n    } // We show the whole stack but dedupe on the top component's name because\r\n    // the problematic code almost always lies inside that component.\r\n\r\n\r\n    var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\r\n\r\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\r\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\r\n        return;\r\n      }\r\n\r\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\r\n    } else {\r\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\r\n    }\r\n\r\n    var previousFiber = current;\r\n\r\n    try {\r\n      setCurrentFiber(fiber);\r\n\r\n      error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');\r\n    } finally {\r\n      if (previousFiber) {\r\n        setCurrentFiber(fiber);\r\n      } else {\r\n        resetCurrentFiber();\r\n      }\r\n    }\r\n  }\r\n}\r\nvar beginWork$1;\r\n\r\n{\r\n  var dummyFiber = null;\r\n\r\n  beginWork$1 = function (current, unitOfWork, lanes) {\r\n    // If a component throws an error, we replay it again in a synchronously\r\n    // dispatched event, so that the debugger will treat it as an uncaught\r\n    // error See ReactErrorUtils for more information.\r\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\r\n    // fiber. If beginWork throws, we'll use this to reset the state.\r\n    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);\r\n\r\n    try {\r\n      return beginWork(current, unitOfWork, lanes);\r\n    } catch (originalError) {\r\n      if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {\r\n        // Don't replay promises.\r\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\r\n        throw originalError;\r\n      } // Keep this code in sync with handleError; any changes here must have\r\n      // corresponding changes there.\r\n\r\n\r\n      resetContextDependencies();\r\n      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the\r\n      // same fiber again.\r\n      // Unwind the failed stack frame\r\n\r\n      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.\r\n\r\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\r\n\r\n      if ( unitOfWork.mode & ProfileMode) {\r\n        // Reset the profiler timer.\r\n        startProfilerTimer(unitOfWork);\r\n      } // Run beginWork again.\r\n\r\n\r\n      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\r\n\r\n      if (hasCaughtError()) {\r\n        var replayError = clearCaughtError();\r\n\r\n        if (typeof replayError === 'object' && replayError !== null && replayError._suppressLogging && typeof originalError === 'object' && originalError !== null && !originalError._suppressLogging) {\r\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\r\n          originalError._suppressLogging = true;\r\n        }\r\n      } // We always throw the original error in case the second render pass is not idempotent.\r\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\r\n\r\n\r\n      throw originalError;\r\n    }\r\n  };\r\n}\r\n\r\nvar didWarnAboutUpdateInRender = false;\r\nvar didWarnAboutUpdateInRenderForAnotherComponent;\r\n\r\n{\r\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\r\n}\r\n\r\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\r\n  {\r\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\r\n      switch (fiber.tag) {\r\n        case FunctionComponent:\r\n        case ForwardRef:\r\n        case SimpleMemoComponent:\r\n          {\r\n            var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.\r\n\r\n            var dedupeKey = renderingComponentName;\r\n\r\n            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\r\n              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\r\n              var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';\r\n\r\n              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case ClassComponent:\r\n          {\r\n            if (!didWarnAboutUpdateInRender) {\r\n              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');\r\n\r\n              didWarnAboutUpdateInRender = true;\r\n            }\r\n\r\n            break;\r\n          }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction restorePendingUpdaters(root, lanes) {\r\n  {\r\n    if (isDevToolsPresent) {\r\n      var memoizedUpdaters = root.memoizedUpdaters;\r\n      memoizedUpdaters.forEach(function (schedulingFiber) {\r\n        addFiberToLanesMap(root, schedulingFiber, lanes);\r\n      }); // This function intentionally does not clear memoized updaters.\r\n      // Those may still be relevant to the current commit\r\n      // and a future one (e.g. Suspense).\r\n    }\r\n  }\r\n}\r\nvar fakeActCallbackNode = {};\r\n\r\nfunction scheduleCallback$1(priorityLevel, callback) {\r\n  {\r\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\r\n    // the `act` queue instead.\r\n    var actQueue = ReactCurrentActQueue$1.current;\r\n\r\n    if (actQueue !== null) {\r\n      actQueue.push(callback);\r\n      return fakeActCallbackNode;\r\n    } else {\r\n      return scheduleCallback(priorityLevel, callback);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cancelCallback$1(callbackNode) {\r\n  if ( callbackNode === fakeActCallbackNode) {\r\n    return;\r\n  } // In production, always call Scheduler. This function will be stripped out.\r\n\r\n\r\n  return cancelCallback(callbackNode);\r\n}\r\n\r\nfunction shouldForceFlushFallbacksInDEV() {\r\n  // Never force flush in production. This function should get stripped out.\r\n  return  ReactCurrentActQueue$1.current !== null;\r\n}\r\n\r\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\r\n  {\r\n    if (fiber.mode & ConcurrentMode) {\r\n      if (!isConcurrentActEnvironment()) {\r\n        // Not in an act environment. No need to warn.\r\n        return;\r\n      }\r\n    } else {\r\n      // Legacy mode has additional cases where we suppress a warning.\r\n      if (!isLegacyActEnvironment()) {\r\n        // Not in an act environment. No need to warn.\r\n        return;\r\n      }\r\n\r\n      if (executionContext !== NoContext) {\r\n        // Legacy mode doesn't warn if the update is batched, i.e.\r\n        // batchedUpdates or flushSync.\r\n        return;\r\n      }\r\n\r\n      if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\r\n        // For backwards compatibility with pre-hooks code, legacy mode only\r\n        // warns for updates that originate from a hook.\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (ReactCurrentActQueue$1.current === null) {\r\n      var previousFiber = current;\r\n\r\n      try {\r\n        setCurrentFiber(fiber);\r\n\r\n        error('An update to %s inside a test was not wrapped in act(...).\\n\\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\\n\\n' + 'act(() => {\\n' + '  /* fire events that update state */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentNameFromFiber(fiber));\r\n      } finally {\r\n        if (previousFiber) {\r\n          setCurrentFiber(fiber);\r\n        } else {\r\n          resetCurrentFiber();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\r\n  {\r\n    if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\r\n      error('A suspended resource finished loading inside a test, but the event ' + 'was not wrapped in act(...).\\n\\n' + 'When testing, code that resolves suspended data should be wrapped ' + 'into act(...):\\n\\n' + 'act(() => {\\n' + '  /* finish loading suspended data */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act');\r\n    }\r\n  }\r\n}\r\n\r\nfunction setIsRunningInsertionEffect(isRunning) {\r\n  {\r\n    isRunningInsertionEffect = isRunning;\r\n  }\r\n}\r\n\r\n/* eslint-disable react-internal/prod-error-codes */\r\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\r\n\r\nvar failedBoundaries = null;\r\nvar setRefreshHandler = function (handler) {\r\n  {\r\n    resolveFamily = handler;\r\n  }\r\n};\r\nfunction resolveFunctionForHotReloading(type) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return type;\r\n    }\r\n\r\n    var family = resolveFamily(type);\r\n\r\n    if (family === undefined) {\r\n      return type;\r\n    } // Use the latest known implementation.\r\n\r\n\r\n    return family.current;\r\n  }\r\n}\r\nfunction resolveClassForHotReloading(type) {\r\n  // No implementation differences.\r\n  return resolveFunctionForHotReloading(type);\r\n}\r\nfunction resolveForwardRefForHotReloading(type) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return type;\r\n    }\r\n\r\n    var family = resolveFamily(type);\r\n\r\n    if (family === undefined) {\r\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\r\n      if (type !== null && type !== undefined && typeof type.render === 'function') {\r\n        // ForwardRef is special because its resolved .type is an object,\r\n        // but it's possible that we only have its inner render function in the map.\r\n        // If that inner render function is different, we'll build a new forwardRef type.\r\n        var currentRender = resolveFunctionForHotReloading(type.render);\r\n\r\n        if (type.render !== currentRender) {\r\n          var syntheticType = {\r\n            $$typeof: REACT_FORWARD_REF_TYPE,\r\n            render: currentRender\r\n          };\r\n\r\n          if (type.displayName !== undefined) {\r\n            syntheticType.displayName = type.displayName;\r\n          }\r\n\r\n          return syntheticType;\r\n        }\r\n      }\r\n\r\n      return type;\r\n    } // Use the latest known implementation.\r\n\r\n\r\n    return family.current;\r\n  }\r\n}\r\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return false;\r\n    }\r\n\r\n    var prevType = fiber.elementType;\r\n    var nextType = element.type; // If we got here, we know types aren't === equal.\r\n\r\n    var needsCompareFamilies = false;\r\n    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;\r\n\r\n    switch (fiber.tag) {\r\n      case ClassComponent:\r\n        {\r\n          if (typeof nextType === 'function') {\r\n            needsCompareFamilies = true;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case FunctionComponent:\r\n        {\r\n          if (typeof nextType === 'function') {\r\n            needsCompareFamilies = true;\r\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\r\n            // We don't know the inner type yet.\r\n            // We're going to assume that the lazy inner type is stable,\r\n            // and so it is sufficient to avoid reconciling it away.\r\n            // We're not going to unwrap or actually use the new lazy type.\r\n            needsCompareFamilies = true;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case ForwardRef:\r\n        {\r\n          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\r\n            needsCompareFamilies = true;\r\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\r\n            needsCompareFamilies = true;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case MemoComponent:\r\n      case SimpleMemoComponent:\r\n        {\r\n          if ($$typeofNextType === REACT_MEMO_TYPE) {\r\n            // TODO: if it was but can no longer be simple,\r\n            // we shouldn't set this.\r\n            needsCompareFamilies = true;\r\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\r\n            needsCompareFamilies = true;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      default:\r\n        return false;\r\n    } // Check if both types have a family and it's the same one.\r\n\r\n\r\n    if (needsCompareFamilies) {\r\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\r\n      // This means both of them need to be registered to preserve state.\r\n      // If we unwrapped and compared the inner types for wrappers instead,\r\n      // then we would risk falsely saying two separate memo(Foo)\r\n      // calls are equivalent because they wrap the same Foo function.\r\n      var prevFamily = resolveFamily(prevType);\r\n\r\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return;\r\n    }\r\n\r\n    if (typeof WeakSet !== 'function') {\r\n      return;\r\n    }\r\n\r\n    if (failedBoundaries === null) {\r\n      failedBoundaries = new WeakSet();\r\n    }\r\n\r\n    failedBoundaries.add(fiber);\r\n  }\r\n}\r\nvar scheduleRefresh = function (root, update) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return;\r\n    }\r\n\r\n    var staleFamilies = update.staleFamilies,\r\n        updatedFamilies = update.updatedFamilies;\r\n    flushPassiveEffects();\r\n    flushSync(function () {\r\n      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\r\n    });\r\n  }\r\n};\r\nvar scheduleRoot = function (root, element) {\r\n  {\r\n    if (root.context !== emptyContextObject) {\r\n      // Super edge case: root has a legacy _renderSubtree context\r\n      // but we don't know the parentComponent so we can't pass it.\r\n      // Just ignore. We'll delete this with _renderSubtree code path later.\r\n      return;\r\n    }\r\n\r\n    flushPassiveEffects();\r\n    flushSync(function () {\r\n      updateContainer(element, root, null, null);\r\n    });\r\n  }\r\n};\r\n\r\nfunction scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\r\n  {\r\n    var alternate = fiber.alternate,\r\n        child = fiber.child,\r\n        sibling = fiber.sibling,\r\n        tag = fiber.tag,\r\n        type = fiber.type;\r\n    var candidateType = null;\r\n\r\n    switch (tag) {\r\n      case FunctionComponent:\r\n      case SimpleMemoComponent:\r\n      case ClassComponent:\r\n        candidateType = type;\r\n        break;\r\n\r\n      case ForwardRef:\r\n        candidateType = type.render;\r\n        break;\r\n    }\r\n\r\n    if (resolveFamily === null) {\r\n      throw new Error('Expected resolveFamily to be set during hot reload.');\r\n    }\r\n\r\n    var needsRender = false;\r\n    var needsRemount = false;\r\n\r\n    if (candidateType !== null) {\r\n      var family = resolveFamily(candidateType);\r\n\r\n      if (family !== undefined) {\r\n        if (staleFamilies.has(family)) {\r\n          needsRemount = true;\r\n        } else if (updatedFamilies.has(family)) {\r\n          if (tag === ClassComponent) {\r\n            needsRemount = true;\r\n          } else {\r\n            needsRender = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (failedBoundaries !== null) {\r\n      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\r\n        needsRemount = true;\r\n      }\r\n    }\r\n\r\n    if (needsRemount) {\r\n      fiber._debugNeedsRemount = true;\r\n    }\r\n\r\n    if (needsRemount || needsRender) {\r\n      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (_root !== null) {\r\n        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n\r\n    if (child !== null && !needsRemount) {\r\n      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\r\n    }\r\n\r\n    if (sibling !== null) {\r\n      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\r\n    }\r\n  }\r\n}\r\n\r\nvar findHostInstancesForRefresh = function (root, families) {\r\n  {\r\n    var hostInstances = new Set();\r\n    var types = new Set(families.map(function (family) {\r\n      return family.current;\r\n    }));\r\n    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\r\n    return hostInstances;\r\n  }\r\n};\r\n\r\nfunction findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\r\n  {\r\n    var child = fiber.child,\r\n        sibling = fiber.sibling,\r\n        tag = fiber.tag,\r\n        type = fiber.type;\r\n    var candidateType = null;\r\n\r\n    switch (tag) {\r\n      case FunctionComponent:\r\n      case SimpleMemoComponent:\r\n      case ClassComponent:\r\n        candidateType = type;\r\n        break;\r\n\r\n      case ForwardRef:\r\n        candidateType = type.render;\r\n        break;\r\n    }\r\n\r\n    var didMatch = false;\r\n\r\n    if (candidateType !== null) {\r\n      if (types.has(candidateType)) {\r\n        didMatch = true;\r\n      }\r\n    }\r\n\r\n    if (didMatch) {\r\n      // We have a match. This only drills down to the closest host components.\r\n      // There's no need to search deeper because for the purpose of giving\r\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\r\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\r\n    } else {\r\n      // If there's no match, maybe there will be one further down in the child tree.\r\n      if (child !== null) {\r\n        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\r\n      }\r\n    }\r\n\r\n    if (sibling !== null) {\r\n      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\r\n    }\r\n  }\r\n}\r\n\r\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\r\n  {\r\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\r\n\r\n    if (foundHostInstances) {\r\n      return;\r\n    } // If we didn't find any host children, fallback to closest host parent.\r\n\r\n\r\n    var node = fiber;\r\n\r\n    while (true) {\r\n      switch (node.tag) {\r\n        case HostComponent:\r\n          hostInstances.add(node.stateNode);\r\n          return;\r\n\r\n        case HostPortal:\r\n          hostInstances.add(node.stateNode.containerInfo);\r\n          return;\r\n\r\n        case HostRoot:\r\n          hostInstances.add(node.stateNode.containerInfo);\r\n          return;\r\n      }\r\n\r\n      if (node.return === null) {\r\n        throw new Error('Expected to reach root first.');\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\r\n  {\r\n    var node = fiber;\r\n    var foundHostInstances = false;\r\n\r\n    while (true) {\r\n      if (node.tag === HostComponent) {\r\n        // We got a match.\r\n        foundHostInstances = true;\r\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n\r\n      if (node === fiber) {\r\n        return foundHostInstances;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === fiber) {\r\n          return foundHostInstances;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nvar hasBadMapPolyfill;\r\n\r\n{\r\n  hasBadMapPolyfill = false;\r\n\r\n  try {\r\n    var nonExtensibleObject = Object.preventExtensions({});\r\n    /* eslint-disable no-new */\r\n\r\n    new Map([[nonExtensibleObject, null]]);\r\n    new Set([nonExtensibleObject]);\r\n    /* eslint-enable no-new */\r\n  } catch (e) {\r\n    // TODO: Consider warning about bad polyfills\r\n    hasBadMapPolyfill = true;\r\n  }\r\n}\r\n\r\nfunction FiberNode(tag, pendingProps, key, mode) {\r\n  // Instance\r\n  this.tag = tag;\r\n  this.key = key;\r\n  this.elementType = null;\r\n  this.type = null;\r\n  this.stateNode = null; // Fiber\r\n\r\n  this.return = null;\r\n  this.child = null;\r\n  this.sibling = null;\r\n  this.index = 0;\r\n  this.ref = null;\r\n  this.pendingProps = pendingProps;\r\n  this.memoizedProps = null;\r\n  this.updateQueue = null;\r\n  this.memoizedState = null;\r\n  this.dependencies = null;\r\n  this.mode = mode; // Effects\r\n\r\n  this.flags = NoFlags;\r\n  this.subtreeFlags = NoFlags;\r\n  this.deletions = null;\r\n  this.lanes = NoLanes;\r\n  this.childLanes = NoLanes;\r\n  this.alternate = null;\r\n\r\n  {\r\n    // Note: The following is done to avoid a v8 performance cliff.\r\n    //\r\n    // Initializing the fields below to smis and later updating them with\r\n    // double values will cause Fibers to end up having separate shapes.\r\n    // This behavior/bug has something to do with Object.preventExtension().\r\n    // Fortunately this only impacts DEV builds.\r\n    // Unfortunately it makes React unusably slow for some applications.\r\n    // To work around this, initialize the fields below with doubles.\r\n    //\r\n    // Learn more about this here:\r\n    // https://github.com/facebook/react/issues/14365\r\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\r\n    this.actualDuration = Number.NaN;\r\n    this.actualStartTime = Number.NaN;\r\n    this.selfBaseDuration = Number.NaN;\r\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\r\n    // This won't trigger the performance cliff mentioned above,\r\n    // and it simplifies other profiler code (including DevTools).\r\n\r\n    this.actualDuration = 0;\r\n    this.actualStartTime = -1;\r\n    this.selfBaseDuration = 0;\r\n    this.treeBaseDuration = 0;\r\n  }\r\n\r\n  {\r\n    // This isn't directly used but is handy for debugging internals:\r\n    this._debugSource = null;\r\n    this._debugOwner = null;\r\n    this._debugNeedsRemount = false;\r\n    this._debugHookTypes = null;\r\n\r\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\r\n      Object.preventExtensions(this);\r\n    }\r\n  }\r\n} // This is a constructor function, rather than a POJO constructor, still\r\n// please ensure we do the following:\r\n// 1) Nobody should add any instance methods on this. Instance methods can be\r\n//    more difficult to predict when they get optimized and they are almost\r\n//    never inlined properly in static compilers.\r\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\r\n//    always know when it is a fiber.\r\n// 3) We might want to experiment with using numeric keys since they are easier\r\n//    to optimize in a non-JIT environment.\r\n// 4) We can easily go from a constructor to a createFiber object literal if that\r\n//    is faster.\r\n// 5) It should be easy to port this to a C struct and keep a C implementation\r\n//    compatible.\r\n\r\n\r\nvar createFiber = function (tag, pendingProps, key, mode) {\r\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\r\n  return new FiberNode(tag, pendingProps, key, mode);\r\n};\r\n\r\nfunction shouldConstruct$1(Component) {\r\n  var prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nfunction isSimpleFunctionComponent(type) {\r\n  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;\r\n}\r\nfunction resolveLazyComponentTag(Component) {\r\n  if (typeof Component === 'function') {\r\n    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;\r\n  } else if (Component !== undefined && Component !== null) {\r\n    var $$typeof = Component.$$typeof;\r\n\r\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\r\n      return ForwardRef;\r\n    }\r\n\r\n    if ($$typeof === REACT_MEMO_TYPE) {\r\n      return MemoComponent;\r\n    }\r\n  }\r\n\r\n  return IndeterminateComponent;\r\n} // This is used to create an alternate fiber to do work on.\r\n\r\nfunction createWorkInProgress(current, pendingProps) {\r\n  var workInProgress = current.alternate;\r\n\r\n  if (workInProgress === null) {\r\n    // We use a double buffering pooling technique because we know that we'll\r\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\r\n    // node that we're free to reuse. This is lazily created to avoid allocating\r\n    // extra objects for things that are never updated. It also allow us to\r\n    // reclaim the extra memory if needed.\r\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\r\n    workInProgress.elementType = current.elementType;\r\n    workInProgress.type = current.type;\r\n    workInProgress.stateNode = current.stateNode;\r\n\r\n    {\r\n      // DEV-only fields\r\n      workInProgress._debugSource = current._debugSource;\r\n      workInProgress._debugOwner = current._debugOwner;\r\n      workInProgress._debugHookTypes = current._debugHookTypes;\r\n    }\r\n\r\n    workInProgress.alternate = current;\r\n    current.alternate = workInProgress;\r\n  } else {\r\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\r\n\r\n    workInProgress.type = current.type; // We already have an alternate.\r\n    // Reset the effect tag.\r\n\r\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\r\n\r\n    workInProgress.subtreeFlags = NoFlags;\r\n    workInProgress.deletions = null;\r\n\r\n    {\r\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\r\n      // This prevents time from endlessly accumulating in new commits.\r\n      // This has the downside of resetting values for different priority renders,\r\n      // But works for yielding (the common case) and should support resuming.\r\n      workInProgress.actualDuration = 0;\r\n      workInProgress.actualStartTime = -1;\r\n    }\r\n  } // Reset all effects except static ones.\r\n  // Static effects are not specific to a render.\r\n\r\n\r\n  workInProgress.flags = current.flags & StaticMask;\r\n  workInProgress.childLanes = current.childLanes;\r\n  workInProgress.lanes = current.lanes;\r\n  workInProgress.child = current.child;\r\n  workInProgress.memoizedProps = current.memoizedProps;\r\n  workInProgress.memoizedState = current.memoizedState;\r\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\r\n  // it cannot be shared with the current fiber.\r\n\r\n  var currentDependencies = current.dependencies;\r\n  workInProgress.dependencies = currentDependencies === null ? null : {\r\n    lanes: currentDependencies.lanes,\r\n    firstContext: currentDependencies.firstContext\r\n  }; // These will be overridden during the parent's reconciliation\r\n\r\n  workInProgress.sibling = current.sibling;\r\n  workInProgress.index = current.index;\r\n  workInProgress.ref = current.ref;\r\n\r\n  {\r\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\r\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\r\n  }\r\n\r\n  {\r\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\r\n\r\n    switch (workInProgress.tag) {\r\n      case IndeterminateComponent:\r\n      case FunctionComponent:\r\n      case SimpleMemoComponent:\r\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\r\n        break;\r\n\r\n      case ClassComponent:\r\n        workInProgress.type = resolveClassForHotReloading(current.type);\r\n        break;\r\n\r\n      case ForwardRef:\r\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return workInProgress;\r\n} // Used to reuse a Fiber for a second pass.\r\n\r\nfunction resetWorkInProgress(workInProgress, renderLanes) {\r\n  // This resets the Fiber to what createFiber or createWorkInProgress would\r\n  // have set the values to before during the first pass. Ideally this wouldn't\r\n  // be necessary but unfortunately many code paths reads from the workInProgress\r\n  // when they should be reading from current and writing to workInProgress.\r\n  // We assume pendingProps, index, key, ref, return are still untouched to\r\n  // avoid doing another reconciliation.\r\n  // Reset the effect flags but keep any Placement tags, since that's something\r\n  // that child fiber is setting, not the reconciliation.\r\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\r\n\r\n  var current = workInProgress.alternate;\r\n\r\n  if (current === null) {\r\n    // Reset to createFiber's initial values.\r\n    workInProgress.childLanes = NoLanes;\r\n    workInProgress.lanes = renderLanes;\r\n    workInProgress.child = null;\r\n    workInProgress.subtreeFlags = NoFlags;\r\n    workInProgress.memoizedProps = null;\r\n    workInProgress.memoizedState = null;\r\n    workInProgress.updateQueue = null;\r\n    workInProgress.dependencies = null;\r\n    workInProgress.stateNode = null;\r\n\r\n    {\r\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\r\n      // actual time across multiple render passes.\r\n      workInProgress.selfBaseDuration = 0;\r\n      workInProgress.treeBaseDuration = 0;\r\n    }\r\n  } else {\r\n    // Reset to the cloned values that createWorkInProgress would've.\r\n    workInProgress.childLanes = current.childLanes;\r\n    workInProgress.lanes = current.lanes;\r\n    workInProgress.child = current.child;\r\n    workInProgress.subtreeFlags = NoFlags;\r\n    workInProgress.deletions = null;\r\n    workInProgress.memoizedProps = current.memoizedProps;\r\n    workInProgress.memoizedState = current.memoizedState;\r\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\r\n\r\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\r\n    // it cannot be shared with the current fiber.\r\n\r\n    var currentDependencies = current.dependencies;\r\n    workInProgress.dependencies = currentDependencies === null ? null : {\r\n      lanes: currentDependencies.lanes,\r\n      firstContext: currentDependencies.firstContext\r\n    };\r\n\r\n    {\r\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\r\n      // actual time across multiple render passes.\r\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\r\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\r\n    }\r\n  }\r\n\r\n  return workInProgress;\r\n}\r\nfunction createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\r\n  var mode;\r\n\r\n  if (tag === ConcurrentRoot) {\r\n    mode = ConcurrentMode;\r\n\r\n    if (isStrictMode === true) {\r\n      mode |= StrictLegacyMode;\r\n\r\n      {\r\n        mode |= StrictEffectsMode;\r\n      }\r\n    }\r\n  } else {\r\n    mode = NoMode;\r\n  }\r\n\r\n  if ( isDevToolsPresent) {\r\n    // Always collect profile timings when DevTools are present.\r\n    // This enables DevTools to start capturing timing at any point–\r\n    // Without some nodes in the tree having empty base times.\r\n    mode |= ProfileMode;\r\n  }\r\n\r\n  return createFiber(HostRoot, null, null, mode);\r\n}\r\nfunction createFiberFromTypeAndProps(type, // React$ElementType\r\nkey, pendingProps, owner, mode, lanes) {\r\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\r\n\r\n  var resolvedType = type;\r\n\r\n  if (typeof type === 'function') {\r\n    if (shouldConstruct$1(type)) {\r\n      fiberTag = ClassComponent;\r\n\r\n      {\r\n        resolvedType = resolveClassForHotReloading(resolvedType);\r\n      }\r\n    } else {\r\n      {\r\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\r\n      }\r\n    }\r\n  } else if (typeof type === 'string') {\r\n    fiberTag = HostComponent;\r\n  } else {\r\n    getTag: switch (type) {\r\n      case REACT_FRAGMENT_TYPE:\r\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\r\n\r\n      case REACT_STRICT_MODE_TYPE:\r\n        fiberTag = Mode;\r\n        mode |= StrictLegacyMode;\r\n\r\n        if ( (mode & ConcurrentMode) !== NoMode) {\r\n          // Strict effects should never run on legacy roots\r\n          mode |= StrictEffectsMode;\r\n        }\r\n\r\n        break;\r\n\r\n      case REACT_PROFILER_TYPE:\r\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_SUSPENSE_TYPE:\r\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_SUSPENSE_LIST_TYPE:\r\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_OFFSCREEN_TYPE:\r\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_LEGACY_HIDDEN_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_SCOPE_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_CACHE_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_TRACING_MARKER_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_DEBUG_TRACING_MODE_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      default:\r\n        {\r\n          if (typeof type === 'object' && type !== null) {\r\n            switch (type.$$typeof) {\r\n              case REACT_PROVIDER_TYPE:\r\n                fiberTag = ContextProvider;\r\n                break getTag;\r\n\r\n              case REACT_CONTEXT_TYPE:\r\n                // This is a consumer\r\n                fiberTag = ContextConsumer;\r\n                break getTag;\r\n\r\n              case REACT_FORWARD_REF_TYPE:\r\n                fiberTag = ForwardRef;\r\n\r\n                {\r\n                  resolvedType = resolveForwardRefForHotReloading(resolvedType);\r\n                }\r\n\r\n                break getTag;\r\n\r\n              case REACT_MEMO_TYPE:\r\n                fiberTag = MemoComponent;\r\n                break getTag;\r\n\r\n              case REACT_LAZY_TYPE:\r\n                fiberTag = LazyComponent;\r\n                resolvedType = null;\r\n                break getTag;\r\n            }\r\n          }\r\n\r\n          var info = '';\r\n\r\n          {\r\n            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\r\n              info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\r\n            }\r\n\r\n            var ownerName = owner ? getComponentNameFromFiber(owner) : null;\r\n\r\n            if (ownerName) {\r\n              info += '\\n\\nCheck the render method of `' + ownerName + '`.';\r\n            }\r\n          }\r\n\r\n          throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\r\n        }\r\n    }\r\n  }\r\n\r\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\r\n  fiber.elementType = type;\r\n  fiber.type = resolvedType;\r\n  fiber.lanes = lanes;\r\n\r\n  {\r\n    fiber._debugOwner = owner;\r\n  }\r\n\r\n  return fiber;\r\n}\r\nfunction createFiberFromElement(element, mode, lanes) {\r\n  var owner = null;\r\n\r\n  {\r\n    owner = element._owner;\r\n  }\r\n\r\n  var type = element.type;\r\n  var key = element.key;\r\n  var pendingProps = element.props;\r\n  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\r\n\r\n  {\r\n    fiber._debugSource = element._source;\r\n    fiber._debugOwner = element._owner;\r\n  }\r\n\r\n  return fiber;\r\n}\r\nfunction createFiberFromFragment(elements, mode, lanes, key) {\r\n  var fiber = createFiber(Fragment, elements, key, mode);\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\r\n  {\r\n    if (typeof pendingProps.id !== 'string') {\r\n      error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\r\n    }\r\n  }\r\n\r\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\r\n  fiber.elementType = REACT_PROFILER_TYPE;\r\n  fiber.lanes = lanes;\r\n\r\n  {\r\n    fiber.stateNode = {\r\n      effectDuration: 0,\r\n      passiveEffectDuration: 0\r\n    };\r\n  }\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\r\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\r\n  fiber.elementType = REACT_SUSPENSE_TYPE;\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\r\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\r\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\r\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\r\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\r\n  fiber.lanes = lanes;\r\n  var primaryChildInstance = {\r\n    isHidden: false\r\n  };\r\n  fiber.stateNode = primaryChildInstance;\r\n  return fiber;\r\n}\r\nfunction createFiberFromText(content, mode, lanes) {\r\n  var fiber = createFiber(HostText, content, null, mode);\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\nfunction createFiberFromHostInstanceForDeletion() {\r\n  var fiber = createFiber(HostComponent, null, null, NoMode);\r\n  fiber.elementType = 'DELETED';\r\n  return fiber;\r\n}\r\nfunction createFiberFromDehydratedFragment(dehydratedNode) {\r\n  var fiber = createFiber(DehydratedFragment, null, null, NoMode);\r\n  fiber.stateNode = dehydratedNode;\r\n  return fiber;\r\n}\r\nfunction createFiberFromPortal(portal, mode, lanes) {\r\n  var pendingProps = portal.children !== null ? portal.children : [];\r\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\r\n  fiber.lanes = lanes;\r\n  fiber.stateNode = {\r\n    containerInfo: portal.containerInfo,\r\n    pendingChildren: null,\r\n    // Used by persistent updates\r\n    implementation: portal.implementation\r\n  };\r\n  return fiber;\r\n} // Used for stashing WIP properties to replay failed work in DEV.\r\n\r\nfunction assignFiberPropertiesInDEV(target, source) {\r\n  if (target === null) {\r\n    // This Fiber's initial properties will always be overwritten.\r\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\r\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\r\n  } // This is intentionally written as a list of all properties.\r\n  // We tried to use Object.assign() instead but this is called in\r\n  // the hottest path, and Object.assign() was too slow:\r\n  // https://github.com/facebook/react/issues/12502\r\n  // This code is DEV-only so size is not a concern.\r\n\r\n\r\n  target.tag = source.tag;\r\n  target.key = source.key;\r\n  target.elementType = source.elementType;\r\n  target.type = source.type;\r\n  target.stateNode = source.stateNode;\r\n  target.return = source.return;\r\n  target.child = source.child;\r\n  target.sibling = source.sibling;\r\n  target.index = source.index;\r\n  target.ref = source.ref;\r\n  target.pendingProps = source.pendingProps;\r\n  target.memoizedProps = source.memoizedProps;\r\n  target.updateQueue = source.updateQueue;\r\n  target.memoizedState = source.memoizedState;\r\n  target.dependencies = source.dependencies;\r\n  target.mode = source.mode;\r\n  target.flags = source.flags;\r\n  target.subtreeFlags = source.subtreeFlags;\r\n  target.deletions = source.deletions;\r\n  target.lanes = source.lanes;\r\n  target.childLanes = source.childLanes;\r\n  target.alternate = source.alternate;\r\n\r\n  {\r\n    target.actualDuration = source.actualDuration;\r\n    target.actualStartTime = source.actualStartTime;\r\n    target.selfBaseDuration = source.selfBaseDuration;\r\n    target.treeBaseDuration = source.treeBaseDuration;\r\n  }\r\n\r\n  target._debugSource = source._debugSource;\r\n  target._debugOwner = source._debugOwner;\r\n  target._debugNeedsRemount = source._debugNeedsRemount;\r\n  target._debugHookTypes = source._debugHookTypes;\r\n  return target;\r\n}\r\n\r\nfunction FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\r\n  this.tag = tag;\r\n  this.containerInfo = containerInfo;\r\n  this.pendingChildren = null;\r\n  this.current = null;\r\n  this.pingCache = null;\r\n  this.finishedWork = null;\r\n  this.timeoutHandle = noTimeout;\r\n  this.context = null;\r\n  this.pendingContext = null;\r\n  this.callbackNode = null;\r\n  this.callbackPriority = NoLane;\r\n  this.eventTimes = createLaneMap(NoLanes);\r\n  this.expirationTimes = createLaneMap(NoTimestamp);\r\n  this.pendingLanes = NoLanes;\r\n  this.suspendedLanes = NoLanes;\r\n  this.pingedLanes = NoLanes;\r\n  this.expiredLanes = NoLanes;\r\n  this.mutableReadLanes = NoLanes;\r\n  this.finishedLanes = NoLanes;\r\n  this.entangledLanes = NoLanes;\r\n  this.entanglements = createLaneMap(NoLanes);\r\n  this.identifierPrefix = identifierPrefix;\r\n  this.onRecoverableError = onRecoverableError;\r\n\r\n  if (supportsHydration) {\r\n    this.mutableSourceEagerHydrationData = null;\r\n  }\r\n\r\n  {\r\n    this.effectDuration = 0;\r\n    this.passiveEffectDuration = 0;\r\n  }\r\n\r\n  {\r\n    this.memoizedUpdaters = new Set();\r\n    var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\r\n\r\n    for (var _i = 0; _i < TotalLanes; _i++) {\r\n      pendingUpdatersLaneMap.push(new Set());\r\n    }\r\n  }\r\n\r\n  {\r\n    switch (tag) {\r\n      case ConcurrentRoot:\r\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\r\n        break;\r\n\r\n      case LegacyRoot:\r\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\r\n// host config, but because they are passed in at runtime, we have to thread\r\n// them through the root constructor. Perhaps we should put them all into a\r\n// single type, like a DynamicHostConfig that is defined by the renderer.\r\nidentifierPrefix, onRecoverableError, transitionCallbacks) {\r\n  var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\r\n  // stateNode is any.\r\n\r\n\r\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\r\n  root.current = uninitializedFiber;\r\n  uninitializedFiber.stateNode = root;\r\n\r\n  {\r\n    var _initialState = {\r\n      element: initialChildren,\r\n      isDehydrated: hydrate,\r\n      cache: null,\r\n      // not enabled yet\r\n      transitions: null,\r\n      pendingSuspenseBoundaries: null\r\n    };\r\n    uninitializedFiber.memoizedState = _initialState;\r\n  }\r\n\r\n  initializeUpdateQueue(uninitializedFiber);\r\n  return root;\r\n}\r\n\r\nvar ReactVersion = '18.3.1';\r\n\r\nfunction createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.\r\nimplementation) {\r\n  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n\r\n  {\r\n    checkKeyStringCoercion(key);\r\n  }\r\n\r\n  return {\r\n    // This tag allow us to uniquely identify this as a React Portal\r\n    $$typeof: REACT_PORTAL_TYPE,\r\n    key: key == null ? null : '' + key,\r\n    children: children,\r\n    containerInfo: containerInfo,\r\n    implementation: implementation\r\n  };\r\n}\r\n\r\nvar didWarnAboutNestedUpdates;\r\nvar didWarnAboutFindNodeInStrictMode;\r\n\r\n{\r\n  didWarnAboutNestedUpdates = false;\r\n  didWarnAboutFindNodeInStrictMode = {};\r\n}\r\n\r\nfunction getContextForSubtree(parentComponent) {\r\n  if (!parentComponent) {\r\n    return emptyContextObject;\r\n  }\r\n\r\n  var fiber = get(parentComponent);\r\n  var parentContext = findCurrentUnmaskedContext(fiber);\r\n\r\n  if (fiber.tag === ClassComponent) {\r\n    var Component = fiber.type;\r\n\r\n    if (isContextProvider(Component)) {\r\n      return processChildContext(fiber, Component, parentContext);\r\n    }\r\n  }\r\n\r\n  return parentContext;\r\n}\r\n\r\nfunction findHostInstance(component) {\r\n  var fiber = get(component);\r\n\r\n  if (fiber === undefined) {\r\n    if (typeof component.render === 'function') {\r\n      throw new Error('Unable to find node on an unmounted component.');\r\n    } else {\r\n      var keys = Object.keys(component).join(',');\r\n      throw new Error(\"Argument appears to not be a ReactComponent. Keys: \" + keys);\r\n    }\r\n  }\r\n\r\n  var hostFiber = findCurrentHostFiber(fiber);\r\n\r\n  if (hostFiber === null) {\r\n    return null;\r\n  }\r\n\r\n  return hostFiber.stateNode;\r\n}\r\n\r\nfunction findHostInstanceWithWarning(component, methodName) {\r\n  {\r\n    var fiber = get(component);\r\n\r\n    if (fiber === undefined) {\r\n      if (typeof component.render === 'function') {\r\n        throw new Error('Unable to find node on an unmounted component.');\r\n      } else {\r\n        var keys = Object.keys(component).join(',');\r\n        throw new Error(\"Argument appears to not be a ReactComponent. Keys: \" + keys);\r\n      }\r\n    }\r\n\r\n    var hostFiber = findCurrentHostFiber(fiber);\r\n\r\n    if (hostFiber === null) {\r\n      return null;\r\n    }\r\n\r\n    if (hostFiber.mode & StrictLegacyMode) {\r\n      var componentName = getComponentNameFromFiber(fiber) || 'Component';\r\n\r\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\r\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\r\n        var previousFiber = current;\r\n\r\n        try {\r\n          setCurrentFiber(hostFiber);\r\n\r\n          if (fiber.mode & StrictLegacyMode) {\r\n            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);\r\n          } else {\r\n            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);\r\n          }\r\n        } finally {\r\n          // Ideally this should reset to previous but this shouldn't be called in\r\n          // render and there's another warning for that anyway.\r\n          if (previousFiber) {\r\n            setCurrentFiber(previousFiber);\r\n          } else {\r\n            resetCurrentFiber();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return hostFiber.stateNode;\r\n  }\r\n}\r\n\r\nfunction createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\r\n  var hydrate = false;\r\n  var initialChildren = null;\r\n  return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\r\n}\r\nfunction createHydrationContainer(initialChildren, // TODO: Remove `callback` when we delete legacy mode.\r\ncallback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\r\n  var hydrate = true;\r\n  var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor\r\n\r\n  root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from\r\n  // a regular update because the initial render must match was was rendered\r\n  // on the server.\r\n  // NOTE: This update intentionally doesn't have a payload. We're only using\r\n  // the update to schedule work on the root fiber (and, for legacy roots, to\r\n  // enqueue the callback if one is provided).\r\n\r\n  var current = root.current;\r\n  var eventTime = requestEventTime();\r\n  var lane = requestUpdateLane(current);\r\n  var update = createUpdate(eventTime, lane);\r\n  update.callback = callback !== undefined && callback !== null ? callback : null;\r\n  enqueueUpdate(current, update, lane);\r\n  scheduleInitialHydrationOnRoot(root, lane, eventTime);\r\n  return root;\r\n}\r\nfunction updateContainer(element, container, parentComponent, callback) {\r\n  {\r\n    onScheduleRoot(container, element);\r\n  }\r\n\r\n  var current$1 = container.current;\r\n  var eventTime = requestEventTime();\r\n  var lane = requestUpdateLane(current$1);\r\n\r\n  {\r\n    markRenderScheduled(lane);\r\n  }\r\n\r\n  var context = getContextForSubtree(parentComponent);\r\n\r\n  if (container.context === null) {\r\n    container.context = context;\r\n  } else {\r\n    container.pendingContext = context;\r\n  }\r\n\r\n  {\r\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\r\n      didWarnAboutNestedUpdates = true;\r\n\r\n      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' + 'Check the render method of %s.', getComponentNameFromFiber(current) || 'Unknown');\r\n    }\r\n  }\r\n\r\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\r\n  // being called \"element\".\r\n\r\n  update.payload = {\r\n    element: element\r\n  };\r\n  callback = callback === undefined ? null : callback;\r\n\r\n  if (callback !== null) {\r\n    {\r\n      if (typeof callback !== 'function') {\r\n        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);\r\n      }\r\n    }\r\n\r\n    update.callback = callback;\r\n  }\r\n\r\n  var root = enqueueUpdate(current$1, update, lane);\r\n\r\n  if (root !== null) {\r\n    scheduleUpdateOnFiber(root, current$1, lane, eventTime);\r\n    entangleTransitions(root, current$1, lane);\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction getPublicRootInstance(container) {\r\n  var containerFiber = container.current;\r\n\r\n  if (!containerFiber.child) {\r\n    return null;\r\n  }\r\n\r\n  switch (containerFiber.child.tag) {\r\n    case HostComponent:\r\n      return getPublicInstance(containerFiber.child.stateNode);\r\n\r\n    default:\r\n      return containerFiber.child.stateNode;\r\n  }\r\n}\r\nfunction attemptSynchronousHydration(fiber) {\r\n  switch (fiber.tag) {\r\n    case HostRoot:\r\n      {\r\n        var root = fiber.stateNode;\r\n\r\n        if (isRootDehydrated(root)) {\r\n          // Flush the first scheduled \"update\".\r\n          var lanes = getHighestPriorityPendingLanes(root);\r\n          flushRoot(root, lanes);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    case SuspenseComponent:\r\n      {\r\n        flushSync(function () {\r\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n          if (root !== null) {\r\n            var eventTime = requestEventTime();\r\n            scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);\r\n          }\r\n        }); // If we're still blocked after this, we need to increase\r\n        // the priority of any promises resolving within this\r\n        // boundary so that they next attempt also has higher pri.\r\n\r\n        var retryLane = SyncLane;\r\n        markRetryLaneIfNotHydrated(fiber, retryLane);\r\n        break;\r\n      }\r\n  }\r\n}\r\n\r\nfunction markRetryLaneImpl(fiber, retryLane) {\r\n  var suspenseState = fiber.memoizedState;\r\n\r\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\r\n    suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);\r\n  }\r\n} // Increases the priority of thenables when they resolve within this boundary.\r\n\r\n\r\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\r\n  markRetryLaneImpl(fiber, retryLane);\r\n  var alternate = fiber.alternate;\r\n\r\n  if (alternate) {\r\n    markRetryLaneImpl(alternate, retryLane);\r\n  }\r\n}\r\n\r\nfunction attemptDiscreteHydration(fiber) {\r\n  if (fiber.tag !== SuspenseComponent) {\r\n    // We ignore HostRoots here because we can't increase\r\n    // their priority and they should not suspend on I/O,\r\n    // since you have to wrap anything that might suspend in\r\n    // Suspense.\r\n    return;\r\n  }\r\n\r\n  var lane = SyncLane;\r\n  var root = enqueueConcurrentRenderForLane(fiber, lane);\r\n\r\n  if (root !== null) {\r\n    var eventTime = requestEventTime();\r\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n  }\r\n\r\n  markRetryLaneIfNotHydrated(fiber, lane);\r\n}\r\nfunction attemptContinuousHydration(fiber) {\r\n  if (fiber.tag !== SuspenseComponent) {\r\n    // We ignore HostRoots here because we can't increase\r\n    // their priority and they should not suspend on I/O,\r\n    // since you have to wrap anything that might suspend in\r\n    // Suspense.\r\n    return;\r\n  }\r\n\r\n  var lane = SelectiveHydrationLane;\r\n  var root = enqueueConcurrentRenderForLane(fiber, lane);\r\n\r\n  if (root !== null) {\r\n    var eventTime = requestEventTime();\r\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n  }\r\n\r\n  markRetryLaneIfNotHydrated(fiber, lane);\r\n}\r\nfunction attemptHydrationAtCurrentPriority(fiber) {\r\n  if (fiber.tag !== SuspenseComponent) {\r\n    // We ignore HostRoots here because we can't increase\r\n    // their priority other than synchronously flush it.\r\n    return;\r\n  }\r\n\r\n  var lane = requestUpdateLane(fiber);\r\n  var root = enqueueConcurrentRenderForLane(fiber, lane);\r\n\r\n  if (root !== null) {\r\n    var eventTime = requestEventTime();\r\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n  }\r\n\r\n  markRetryLaneIfNotHydrated(fiber, lane);\r\n}\r\nfunction findHostInstanceWithNoPortals(fiber) {\r\n  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);\r\n\r\n  if (hostFiber === null) {\r\n    return null;\r\n  }\r\n\r\n  return hostFiber.stateNode;\r\n}\r\n\r\nvar shouldErrorImpl = function (fiber) {\r\n  return null;\r\n};\r\n\r\nfunction shouldError(fiber) {\r\n  return shouldErrorImpl(fiber);\r\n}\r\n\r\nvar shouldSuspendImpl = function (fiber) {\r\n  return false;\r\n};\r\n\r\nfunction shouldSuspend(fiber) {\r\n  return shouldSuspendImpl(fiber);\r\n}\r\nvar overrideHookState = null;\r\nvar overrideHookStateDeletePath = null;\r\nvar overrideHookStateRenamePath = null;\r\nvar overrideProps = null;\r\nvar overridePropsDeletePath = null;\r\nvar overridePropsRenamePath = null;\r\nvar scheduleUpdate = null;\r\nvar setErrorHandler = null;\r\nvar setSuspenseHandler = null;\r\n\r\n{\r\n  var copyWithDeleteImpl = function (obj, path, index) {\r\n    var key = path[index];\r\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\r\n\r\n    if (index + 1 === path.length) {\r\n      if (isArray(updated)) {\r\n        updated.splice(key, 1);\r\n      } else {\r\n        delete updated[key];\r\n      }\r\n\r\n      return updated;\r\n    } // $FlowFixMe number or string is fine here\r\n\r\n\r\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\r\n    return updated;\r\n  };\r\n\r\n  var copyWithDelete = function (obj, path) {\r\n    return copyWithDeleteImpl(obj, path, 0);\r\n  };\r\n\r\n  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {\r\n    var oldKey = oldPath[index];\r\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\r\n\r\n    if (index + 1 === oldPath.length) {\r\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\r\n\r\n      updated[newKey] = updated[oldKey];\r\n\r\n      if (isArray(updated)) {\r\n        updated.splice(oldKey, 1);\r\n      } else {\r\n        delete updated[oldKey];\r\n      }\r\n    } else {\r\n      // $FlowFixMe number or string is fine here\r\n      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here\r\n      obj[oldKey], oldPath, newPath, index + 1);\r\n    }\r\n\r\n    return updated;\r\n  };\r\n\r\n  var copyWithRename = function (obj, oldPath, newPath) {\r\n    if (oldPath.length !== newPath.length) {\r\n      warn('copyWithRename() expects paths of the same length');\r\n\r\n      return;\r\n    } else {\r\n      for (var i = 0; i < newPath.length - 1; i++) {\r\n        if (oldPath[i] !== newPath[i]) {\r\n          warn('copyWithRename() expects paths to be the same except for the deepest key');\r\n\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\r\n  };\r\n\r\n  var copyWithSetImpl = function (obj, path, index, value) {\r\n    if (index >= path.length) {\r\n      return value;\r\n    }\r\n\r\n    var key = path[index];\r\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\r\n\r\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\r\n    return updated;\r\n  };\r\n\r\n  var copyWithSet = function (obj, path, value) {\r\n    return copyWithSetImpl(obj, path, 0, value);\r\n  };\r\n\r\n  var findHook = function (fiber, id) {\r\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\r\n    // This may change in the future with e.g. nested hooks.\r\n    var currentHook = fiber.memoizedState;\r\n\r\n    while (currentHook !== null && id > 0) {\r\n      currentHook = currentHook.next;\r\n      id--;\r\n    }\r\n\r\n    return currentHook;\r\n  }; // Support DevTools editable values for useState and useReducer.\r\n\r\n\r\n  overrideHookState = function (fiber, id, path, value) {\r\n    var hook = findHook(fiber, id);\r\n\r\n    if (hook !== null) {\r\n      var newState = copyWithSet(hook.memoizedState, path, value);\r\n      hook.memoizedState = newState;\r\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\r\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\r\n      // (There's no appropriate action type for DevTools overrides.)\r\n      // As a result though, React will see the scheduled update as a noop and bailout.\r\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\r\n\r\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\r\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (root !== null) {\r\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n  };\r\n\r\n  overrideHookStateDeletePath = function (fiber, id, path) {\r\n    var hook = findHook(fiber, id);\r\n\r\n    if (hook !== null) {\r\n      var newState = copyWithDelete(hook.memoizedState, path);\r\n      hook.memoizedState = newState;\r\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\r\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\r\n      // (There's no appropriate action type for DevTools overrides.)\r\n      // As a result though, React will see the scheduled update as a noop and bailout.\r\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\r\n\r\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\r\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (root !== null) {\r\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n  };\r\n\r\n  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {\r\n    var hook = findHook(fiber, id);\r\n\r\n    if (hook !== null) {\r\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\r\n      hook.memoizedState = newState;\r\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\r\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\r\n      // (There's no appropriate action type for DevTools overrides.)\r\n      // As a result though, React will see the scheduled update as a noop and bailout.\r\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\r\n\r\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\r\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (root !== null) {\r\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\r\n\r\n\r\n  overrideProps = function (fiber, path, value) {\r\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\r\n\r\n    if (fiber.alternate) {\r\n      fiber.alternate.pendingProps = fiber.pendingProps;\r\n    }\r\n\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  overridePropsDeletePath = function (fiber, path) {\r\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\r\n\r\n    if (fiber.alternate) {\r\n      fiber.alternate.pendingProps = fiber.pendingProps;\r\n    }\r\n\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  overridePropsRenamePath = function (fiber, oldPath, newPath) {\r\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\r\n\r\n    if (fiber.alternate) {\r\n      fiber.alternate.pendingProps = fiber.pendingProps;\r\n    }\r\n\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  scheduleUpdate = function (fiber) {\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  setErrorHandler = function (newShouldErrorImpl) {\r\n    shouldErrorImpl = newShouldErrorImpl;\r\n  };\r\n\r\n  setSuspenseHandler = function (newShouldSuspendImpl) {\r\n    shouldSuspendImpl = newShouldSuspendImpl;\r\n  };\r\n}\r\n\r\nfunction findHostInstanceByFiber(fiber) {\r\n  var hostFiber = findCurrentHostFiber(fiber);\r\n\r\n  if (hostFiber === null) {\r\n    return null;\r\n  }\r\n\r\n  return hostFiber.stateNode;\r\n}\r\n\r\nfunction emptyFindFiberByHostInstance(instance) {\r\n  return null;\r\n}\r\n\r\nfunction getCurrentFiberForDevTools() {\r\n  return current;\r\n}\r\n\r\nfunction injectIntoDevTools(devToolsConfig) {\r\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\r\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\n  return injectInternals({\r\n    bundleType: devToolsConfig.bundleType,\r\n    version: devToolsConfig.version,\r\n    rendererPackageName: devToolsConfig.rendererPackageName,\r\n    rendererConfig: devToolsConfig.rendererConfig,\r\n    overrideHookState: overrideHookState,\r\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\r\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\r\n    overrideProps: overrideProps,\r\n    overridePropsDeletePath: overridePropsDeletePath,\r\n    overridePropsRenamePath: overridePropsRenamePath,\r\n    setErrorHandler: setErrorHandler,\r\n    setSuspenseHandler: setSuspenseHandler,\r\n    scheduleUpdate: scheduleUpdate,\r\n    currentDispatcherRef: ReactCurrentDispatcher,\r\n    findHostInstanceByFiber: findHostInstanceByFiber,\r\n    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\r\n    // React Refresh\r\n    findHostInstancesForRefresh:  findHostInstancesForRefresh ,\r\n    scheduleRefresh:  scheduleRefresh ,\r\n    scheduleRoot:  scheduleRoot ,\r\n    setRefreshHandler:  setRefreshHandler ,\r\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\r\n    getCurrentFiber:  getCurrentFiberForDevTools ,\r\n    // Enables DevTools to detect reconciler version rather than renderer version\r\n    // which may not match for third party renderers.\r\n    reconcilerVersion: ReactVersion\r\n  });\r\n}\r\n\r\nexports.attemptContinuousHydration = attemptContinuousHydration;\r\nexports.attemptDiscreteHydration = attemptDiscreteHydration;\r\nexports.attemptHydrationAtCurrentPriority = attemptHydrationAtCurrentPriority;\r\nexports.attemptSynchronousHydration = attemptSynchronousHydration;\r\nexports.batchedUpdates = batchedUpdates;\r\nexports.createComponentSelector = createComponentSelector;\r\nexports.createContainer = createContainer;\r\nexports.createHasPseudoClassSelector = createHasPseudoClassSelector;\r\nexports.createHydrationContainer = createHydrationContainer;\r\nexports.createPortal = createPortal;\r\nexports.createRoleSelector = createRoleSelector;\r\nexports.createTestNameSelector = createTestNameSelector;\r\nexports.createTextSelector = createTextSelector;\r\nexports.deferredUpdates = deferredUpdates;\r\nexports.discreteUpdates = discreteUpdates;\r\nexports.findAllNodes = findAllNodes;\r\nexports.findBoundingRects = findBoundingRects;\r\nexports.findHostInstance = findHostInstance;\r\nexports.findHostInstanceWithNoPortals = findHostInstanceWithNoPortals;\r\nexports.findHostInstanceWithWarning = findHostInstanceWithWarning;\r\nexports.flushControlled = flushControlled;\r\nexports.flushPassiveEffects = flushPassiveEffects;\r\nexports.flushSync = flushSync;\r\nexports.focusWithin = focusWithin;\r\nexports.getCurrentUpdatePriority = getCurrentUpdatePriority;\r\nexports.getFindAllNodesFailureDescription = getFindAllNodesFailureDescription;\r\nexports.getPublicRootInstance = getPublicRootInstance;\r\nexports.injectIntoDevTools = injectIntoDevTools;\r\nexports.isAlreadyRendering = isAlreadyRendering;\r\nexports.observeVisibleRects = observeVisibleRects;\r\nexports.registerMutableSourceForHydration = registerMutableSourceForHydration;\r\nexports.runWithPriority = runWithPriority;\r\nexports.shouldError = shouldError;\r\nexports.shouldSuspend = shouldSuspend;\r\nexports.updateContainer = updateContainer;\r\n    return exports;\r\n  };\r\n}\r\n", "'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-reconciler.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-reconciler.development.js');\r\n}\r\n", "/**\r\n * @license React\r\n * react-reconciler-constants.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  (function() {\r\n'use strict';\r\n\r\nvar SyncLane =\r\n/*                        */\r\n1;\r\nvar InputContinuousLane =\r\n/*             */\r\n4;\r\nvar DefaultLane =\r\n/*                     */\r\n16;\r\nvar IdleLane =\r\n/*                        */\r\n536870912;\r\n\r\nvar DiscreteEventPriority = SyncLane;\r\nvar ContinuousEventPriority = InputContinuousLane;\r\nvar DefaultEventPriority = DefaultLane;\r\nvar IdleEventPriority = IdleLane;\r\n\r\nvar LegacyRoot = 0;\r\nvar ConcurrentRoot = 1;\r\n\r\nexports.ConcurrentRoot = ConcurrentRoot;\r\nexports.ContinuousEventPriority = ContinuousEventPriority;\r\nexports.DefaultEventPriority = DefaultEventPriority;\r\nexports.DiscreteEventPriority = DiscreteEventPriority;\r\nexports.IdleEventPriority = IdleEventPriority;\r\nexports.LegacyRoot = LegacyRoot;\r\n  })();\r\n}\r\n", "'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-reconciler-constants.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-reconciler-constants.development.js');\r\n}\r\n", "/**\r\n * Based on ReactArt.js\r\n * Copyright (c) 2017-present Lavrenov Anton.\r\n * All rights reserved.\r\n *\r\n * MIT\r\n */\r\n'use strict';\r\nimport 'konva';\r\nexport * from './ReactKonvaCore.js';\r\n", "/**\r\n * Based on ReactArt.js\r\n * Copyright (c) 2017-present Lavrenov Anton.\r\n * All rights reserved.\r\n *\r\n * MIT\r\n */\r\n'use strict';\r\nimport React from 'react';\r\nimport Konva from 'konva/lib/Core.js';\r\nimport ReactFiberReconciler from 'react-reconciler';\r\nimport { LegacyRoot } from 'react-reconciler/constants.js';\r\nimport * as HostConfig from './ReactKonvaHostConfig.js';\r\nimport { applyNodeProps, toggleStrictMode } from './makeUpdates.js';\r\nimport { useContextBridge, FiberProvider } from 'its-fine';\r\nfunction usePrevious(value) {\r\n    const ref = React.useRef({});\r\n    React.useLayoutEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    React.useLayoutEffect(() => {\r\n        return () => {\r\n            // when using suspense it is possible that stage is unmounted\r\n            // but React still keep component ref\r\n            // in that case we need to manually flush props\r\n            // we have a special test for that\r\n            ref.current = {};\r\n        };\r\n    }, []);\r\n    return ref.current;\r\n}\r\nconst StageWrap = (props) => {\r\n    const container = React.useRef();\r\n    const stage = React.useRef();\r\n    const fiberRef = React.useRef();\r\n    const oldProps = usePrevious(props);\r\n    const Bridge = useContextBridge();\r\n    const _setRef = (stage) => {\r\n        const { forwardedRef } = props;\r\n        if (!forwardedRef) {\r\n            return;\r\n        }\r\n        if (typeof forwardedRef === 'function') {\r\n            forwardedRef(stage);\r\n        }\r\n        else {\r\n            forwardedRef.current = stage;\r\n        }\r\n    };\r\n    React.useLayoutEffect(() => {\r\n        stage.current = new Konva.Stage({\r\n            width: props.width,\r\n            height: props.height,\r\n            container: container.current,\r\n        });\r\n        _setRef(stage.current);\r\n        // @ts-ignore\r\n        fiberRef.current = KonvaRenderer.createContainer(stage.current, LegacyRoot, false, null);\r\n        KonvaRenderer.updateContainer(React.createElement(Bridge, {}, props.children), fiberRef.current);\r\n        return () => {\r\n            if (!Konva.isBrowser) {\r\n                return;\r\n            }\r\n            _setRef(null);\r\n            KonvaRenderer.updateContainer(null, fiberRef.current, null);\r\n            stage.current.destroy();\r\n        };\r\n    }, []);\r\n    React.useLayoutEffect(() => {\r\n        _setRef(stage.current);\r\n        applyNodeProps(stage.current, props, oldProps);\r\n        KonvaRenderer.updateContainer(React.createElement(Bridge, {}, props.children), fiberRef.current, null);\r\n    });\r\n    return React.createElement('div', {\r\n        ref: container,\r\n        id: props.id,\r\n        accessKey: props.accessKey,\r\n        className: props.className,\r\n        role: props.role,\r\n        style: props.style,\r\n        tabIndex: props.tabIndex,\r\n        title: props.title,\r\n    });\r\n};\r\nexport const Layer = 'Layer';\r\nexport const FastLayer = 'FastLayer';\r\nexport const Group = 'Group';\r\nexport const Label = 'Label';\r\nexport const Rect = 'Rect';\r\nexport const Circle = 'Circle';\r\nexport const Ellipse = 'Ellipse';\r\nexport const Wedge = 'Wedge';\r\nexport const Line = 'Line';\r\nexport const Sprite = 'Sprite';\r\nexport const Image = 'Image';\r\nexport const Text = 'Text';\r\nexport const TextPath = 'TextPath';\r\nexport const Star = 'Star';\r\nexport const Ring = 'Ring';\r\nexport const Arc = 'Arc';\r\nexport const Tag = 'Tag';\r\nexport const Path = 'Path';\r\nexport const RegularPolygon = 'RegularPolygon';\r\nexport const Arrow = 'Arrow';\r\nexport const Shape = 'Shape';\r\nexport const Transformer = 'Transformer';\r\nexport const version = '18.2.12';\r\n// @ts-ignore\r\nexport const KonvaRenderer = ReactFiberReconciler(HostConfig);\r\nKonvaRenderer.injectIntoDevTools({\r\n    // @ts-ignore\r\n    findHostInstanceByFiber: () => null,\r\n    bundleType: process.env.NODE_ENV !== 'production' ? 1 : 0,\r\n    version: React.version,\r\n    rendererPackageName: 'react-konva',\r\n});\r\nexport const Stage = React.forwardRef((props, ref) => {\r\n    return React.createElement(FiberProvider, {}, React.createElement(StageWrap, { ...props, forwardedRef: ref }));\r\n});\r\nexport const useStrictMode = toggleStrictMode;\r\n", "import Konva from 'konva/lib/Core.js';\r\nimport { applyNodeProps, updatePicture, EVENTS_NAMESPACE } from './makeUpdates.js';\r\nexport { unstable_now as now, unstable_IdlePriority as idlePriority, unstable_runWithPriority as run, } from 'scheduler';\r\nimport { DefaultEventPriority } from 'react-reconciler/constants.js';\r\nconst NO_CONTEXT = {};\r\nconst UPDATE_SIGNAL = {};\r\n// for react-spring capability\r\nKonva.Node.prototype._applyProps = applyNodeProps;\r\nexport function appendInitialChild(parentInstance, child) {\r\n    if (typeof child === 'string') {\r\n        // Noop for string children of Text (eg <Text>foo</Text>)\r\n        console.error(`Do not use plain text as child of Konva.Node. You are using text: ${child}`);\r\n        return;\r\n    }\r\n    parentInstance.add(child);\r\n    updatePicture(parentInstance);\r\n}\r\nexport function createInstance(type, props, internalInstanceHandle) {\r\n    let NodeClass = Konva[type];\r\n    if (!NodeClass) {\r\n        console.error(`Konva has no node with the type ${type}. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/${type}\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html`);\r\n        NodeClass = Konva.Group;\r\n    }\r\n    // we need to split props into events and non events\r\n    // we we can pass non events into constructor directly\r\n    // that way the performance should be better\r\n    // we we apply change \"applyNodeProps\"\r\n    // then it will trigger change events on first run\r\n    // but we don't need them!\r\n    const propsWithoutEvents = {};\r\n    const propsWithOnlyEvents = {};\r\n    for (var key in props) {\r\n        var isEvent = key.slice(0, 2) === 'on';\r\n        if (isEvent) {\r\n            propsWithOnlyEvents[key] = props[key];\r\n        }\r\n        else {\r\n            propsWithoutEvents[key] = props[key];\r\n        }\r\n    }\r\n    const instance = new NodeClass(propsWithoutEvents);\r\n    applyNodeProps(instance, propsWithOnlyEvents);\r\n    return instance;\r\n}\r\nexport function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\r\n    console.error(`Text components are not supported for now in ReactKonva. Your text is: \"${text}\"`);\r\n}\r\nexport function finalizeInitialChildren(domElement, type, props) {\r\n    return false;\r\n}\r\nexport function getPublicInstance(instance) {\r\n    return instance;\r\n}\r\nexport function prepareForCommit() {\r\n    return null;\r\n}\r\nexport function preparePortalMount() {\r\n    return null;\r\n}\r\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\r\n    return UPDATE_SIGNAL;\r\n}\r\nexport function resetAfterCommit() {\r\n    // Noop\r\n}\r\nexport function resetTextContent(domElement) {\r\n    // Noop\r\n}\r\nexport function shouldDeprioritizeSubtree(type, props) {\r\n    return false;\r\n}\r\nexport function getRootHostContext() {\r\n    return NO_CONTEXT;\r\n}\r\nexport function getChildHostContext() {\r\n    return NO_CONTEXT;\r\n}\r\nexport const scheduleTimeout = setTimeout;\r\nexport const cancelTimeout = clearTimeout;\r\nexport const noTimeout = -1;\r\n// export const schedulePassiveEffects = scheduleDeferredCallback;\r\n// export const cancelPassiveEffects = cancelDeferredCallback;\r\nexport function shouldSetTextContent(type, props) {\r\n    return false;\r\n}\r\n// The Konva renderer is secondary to the React DOM renderer.\r\nexport const isPrimaryRenderer = false;\r\nexport const warnsIfNotActing = true;\r\nexport const supportsMutation = true;\r\nexport function appendChild(parentInstance, child) {\r\n    if (child.parent === parentInstance) {\r\n        child.moveToTop();\r\n    }\r\n    else {\r\n        parentInstance.add(child);\r\n    }\r\n    updatePicture(parentInstance);\r\n}\r\nexport function appendChildToContainer(parentInstance, child) {\r\n    if (child.parent === parentInstance) {\r\n        child.moveToTop();\r\n    }\r\n    else {\r\n        parentInstance.add(child);\r\n    }\r\n    updatePicture(parentInstance);\r\n}\r\nexport function insertBefore(parentInstance, child, beforeChild) {\r\n    // child._remove() will not stop dragging\r\n    // but child.remove() will stop it, but we don't need it\r\n    // removing will reset zIndexes\r\n    child._remove();\r\n    parentInstance.add(child);\r\n    child.setZIndex(beforeChild.getZIndex());\r\n    updatePicture(parentInstance);\r\n}\r\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\r\n    insertBefore(parentInstance, child, beforeChild);\r\n}\r\nexport function removeChild(parentInstance, child) {\r\n    child.destroy();\r\n    child.off(EVENTS_NAMESPACE);\r\n    updatePicture(parentInstance);\r\n}\r\nexport function removeChildFromContainer(parentInstance, child) {\r\n    child.destroy();\r\n    child.off(EVENTS_NAMESPACE);\r\n    updatePicture(parentInstance);\r\n}\r\nexport function commitTextUpdate(textInstance, oldText, newText) {\r\n    console.error(`Text components are not yet supported in ReactKonva. You text is: \"${newText}\"`);\r\n}\r\nexport function commitMount(instance, type, newProps) {\r\n    // Noop\r\n}\r\nexport function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\r\n    applyNodeProps(instance, newProps, oldProps);\r\n}\r\nexport function hideInstance(instance) {\r\n    instance.hide();\r\n    updatePicture(instance);\r\n}\r\nexport function hideTextInstance(textInstance) {\r\n    // Noop\r\n}\r\nexport function unhideInstance(instance, props) {\r\n    if (props.visible == null || props.visible) {\r\n        instance.show();\r\n    }\r\n}\r\nexport function unhideTextInstance(textInstance, text) {\r\n    // Noop\r\n}\r\nexport function clearContainer(container) {\r\n    // Noop\r\n}\r\nexport function detachDeletedInstance() { }\r\nexport const getCurrentEventPriority = () => DefaultEventPriority;\r\n", "import { Konva } from 'konva/lib/Global.js';\r\nconst propsToSkip = {\r\n    children: true,\r\n    ref: true,\r\n    key: true,\r\n    style: true,\r\n    forwardedRef: true,\r\n    unstable_applyCache: true,\r\n    unstable_applyDrawHitFromCache: true,\r\n};\r\nlet zIndexWarningShowed = false;\r\nlet dragWarningShowed = false;\r\nexport const EVENTS_NAMESPACE = '.react-konva-event';\r\nlet useStrictMode = false;\r\nexport function toggleStrictMode(value) {\r\n    useStrictMode = value;\r\n}\r\nconst DRAGGABLE_WARNING = `ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\r\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\r\nConsider to add onDragMove or onDragEnd events.\r\nFor more info see: https://github.com/konvajs/react-konva/issues/256\r\n`;\r\nconst Z_INDEX_WARNING = `ReactKonva: You are using \"zIndex\" attribute for a Konva node.\r\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\r\nFor more info see: https://github.com/konvajs/react-konva/issues/194\r\n`;\r\nconst EMPTY_PROPS = {};\r\nexport function applyNodeProps(instance, props, oldProps = EMPTY_PROPS) {\r\n    // don't use zIndex in react-konva\r\n    if (!zIndexWarningShowed && 'zIndex' in props) {\r\n        console.warn(Z_INDEX_WARNING);\r\n        zIndexWarningShowed = true;\r\n    }\r\n    // check correct draggable usage\r\n    if (!dragWarningShowed && props.draggable) {\r\n        var hasPosition = props.x !== undefined || props.y !== undefined;\r\n        var hasEvents = props.onDragEnd || props.onDragMove;\r\n        if (hasPosition && !hasEvents) {\r\n            console.warn(DRAGGABLE_WARNING);\r\n            dragWarningShowed = true;\r\n        }\r\n    }\r\n    // check old props\r\n    // we need to unset properties that are not in new props\r\n    // and remove all events\r\n    for (var key in oldProps) {\r\n        if (propsToSkip[key]) {\r\n            continue;\r\n        }\r\n        var isEvent = key.slice(0, 2) === 'on';\r\n        var propChanged = oldProps[key] !== props[key];\r\n        // if that is a changed event, we need to remove it\r\n        if (isEvent && propChanged) {\r\n            var eventName = key.substr(2).toLowerCase();\r\n            if (eventName.substr(0, 7) === 'content') {\r\n                eventName =\r\n                    'content' +\r\n                        eventName.substr(7, 1).toUpperCase() +\r\n                        eventName.substr(8);\r\n            }\r\n            instance.off(eventName, oldProps[key]);\r\n        }\r\n        var toRemove = !props.hasOwnProperty(key);\r\n        if (toRemove) {\r\n            instance.setAttr(key, undefined);\r\n        }\r\n    }\r\n    var strictUpdate = useStrictMode || props._useStrictMode;\r\n    var updatedProps = {};\r\n    var hasUpdates = false;\r\n    const newEvents = {};\r\n    for (var key in props) {\r\n        if (propsToSkip[key]) {\r\n            continue;\r\n        }\r\n        var isEvent = key.slice(0, 2) === 'on';\r\n        var toAdd = oldProps[key] !== props[key];\r\n        if (isEvent && toAdd) {\r\n            var eventName = key.substr(2).toLowerCase();\r\n            if (eventName.substr(0, 7) === 'content') {\r\n                eventName =\r\n                    'content' +\r\n                        eventName.substr(7, 1).toUpperCase() +\r\n                        eventName.substr(8);\r\n            }\r\n            // check that event is not undefined\r\n            if (props[key]) {\r\n                newEvents[eventName] = props[key];\r\n            }\r\n        }\r\n        if (!isEvent &&\r\n            (props[key] !== oldProps[key] ||\r\n                (strictUpdate && props[key] !== instance.getAttr(key)))) {\r\n            hasUpdates = true;\r\n            updatedProps[key] = props[key];\r\n        }\r\n    }\r\n    if (hasUpdates) {\r\n        instance.setAttrs(updatedProps);\r\n        updatePicture(instance);\r\n    }\r\n    // subscribe to events AFTER we set attrs\r\n    // we need it to fix https://github.com/konvajs/react-konva/issues/471\r\n    // settings attrs may add events. Like \"draggable: true\" will add \"mousedown\" listener\r\n    for (var eventName in newEvents) {\r\n        instance.on(eventName + EVENTS_NAMESPACE, newEvents[eventName]);\r\n    }\r\n}\r\nexport function updatePicture(node) {\r\n    if (!Konva.autoDrawEnabled) {\r\n        var drawingNode = node.getLayer() || node.getStage();\r\n        drawingNode && drawingNode.batchDraw();\r\n    }\r\n}\r\n", "import * as React from 'react'\r\nimport type ReactReconciler from 'react-reconciler'\r\n\r\n/**\r\n * An SSR-friendly useLayoutEffect.\r\n *\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect elsewhere.\r\n *\r\n * @see https://github.com/facebook/react/issues/14927\r\n */\r\nconst useIsomorphicLayoutEffect =\r\n  typeof window !== 'undefined' && (window.document?.createElement || window.navigator?.product === 'ReactNative')\r\n    ? React.useLayoutEffect\r\n    : React.useEffect\r\n\r\n/**\r\n * Represents a react-internal Fiber node.\r\n */\r\nexport type Fiber<T = any> = Omit<ReactReconciler.Fiber, 'stateNode'> & { stateNode: T }\r\n\r\n/**\r\n * Represents a {@link Fiber} node selector for traversal.\r\n */\r\nexport type FiberSelector<T = any> = (\r\n  /** The current {@link Fiber} node. */\r\n  node: Fiber<T | null>,\r\n) => boolean | void\r\n\r\n/**\r\n * Traverses up or down a {@link Fiber}, return `true` to stop and select a node.\r\n */\r\nexport function traverseFiber<T = any>(\r\n  /** Input {@link Fiber} to traverse. */\r\n  fiber: Fiber | undefined,\r\n  /** Whether to ascend and walk up the tree. Will walk down if `false`. */\r\n  ascending: boolean,\r\n  /** A {@link Fiber} node selector, returns the first match when `true` is passed. */\r\n  selector: FiberSelector<T>,\r\n): Fiber<T> | undefined {\r\n  if (!fiber) return\r\n  if (selector(fiber) === true) return fiber\r\n\r\n  let child = ascending ? fiber.return : fiber.child\r\n  while (child) {\r\n    const match = traverseFiber(child, ascending, selector)\r\n    if (match) return match\r\n\r\n    child = ascending ? null : child.sibling\r\n  }\r\n}\r\n\r\n// In development, React will warn about using contexts between renderers.\r\n// Hide the warning because its-fine fixes this issue\r\n// https://github.com/facebook/react/pull/12779\r\nfunction wrapContext<T>(context: React.Context<T>): React.Context<T> {\r\n  try {\r\n    return Object.defineProperties(context, {\r\n      _currentRenderer: {\r\n        get() {\r\n          return null\r\n        },\r\n        set() {},\r\n      },\r\n      _currentRenderer2: {\r\n        get() {\r\n          return null\r\n        },\r\n        set() {},\r\n      },\r\n    })\r\n  } catch (_) {\r\n    return context\r\n  }\r\n}\r\n\r\nconst error = console.error\r\nconsole.error = function () {\r\n  const message = [...arguments].join('')\r\n  if (message?.startsWith('Warning:') && message.includes('useContext')) {\r\n    console.error = error\r\n    return\r\n  }\r\n\r\n  return error.apply(this, arguments as any)\r\n}\r\n\r\nconst FiberContext = wrapContext(React.createContext<Fiber>(null!))\r\n\r\n/**\r\n * A react-internal {@link Fiber} provider. This component binds React children to the React Fiber tree. Call its-fine hooks within this.\r\n */\r\nexport class FiberProvider extends React.Component<{ children?: React.ReactNode }> {\r\n  private _reactInternals!: Fiber\r\n\r\n  render() {\r\n    return <FiberContext.Provider value={this._reactInternals}>{this.props.children}</FiberContext.Provider>\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the current react-internal {@link Fiber}. This is an implementation detail of [react-reconciler](https://github.com/facebook/react/tree/main/packages/react-reconciler).\r\n */\r\nexport function useFiber(): Fiber<null> | undefined {\r\n  const root = React.useContext(FiberContext)\r\n  if (root === null) throw new Error('its-fine: useFiber must be called within a <FiberProvider />!')\r\n\r\n  const id = React.useId()\r\n  const fiber = React.useMemo(() => {\r\n    for (const maybeFiber of [root, root?.alternate]) {\r\n      if (!maybeFiber) continue\r\n      const fiber = traverseFiber<null>(maybeFiber, false, (node) => {\r\n        let state = node.memoizedState\r\n        while (state) {\r\n          if (state.memoizedState === id) return true\r\n          state = state.next\r\n        }\r\n      })\r\n      if (fiber) return fiber\r\n    }\r\n  }, [root, id])\r\n\r\n  return fiber\r\n}\r\n\r\n/**\r\n * Represents a react-reconciler container instance.\r\n */\r\nexport interface ContainerInstance<T = any> {\r\n  containerInfo: T\r\n}\r\n\r\n/**\r\n * Returns the current react-reconciler container info passed to {@link ReactReconciler.Reconciler.createContainer}.\r\n *\r\n * In react-dom, a container will point to the root DOM element; in react-three-fiber, it will point to the root Zustand store.\r\n */\r\nexport function useContainer<T = any>(): T | undefined {\r\n  const fiber = useFiber()\r\n  const root = React.useMemo(\r\n    () => traverseFiber<ContainerInstance<T>>(fiber, true, (node) => node.stateNode?.containerInfo != null),\r\n    [fiber],\r\n  )\r\n\r\n  return root?.stateNode.containerInfo\r\n}\r\n\r\n/**\r\n * Returns the nearest react-reconciler child instance or the node created from {@link ReactReconciler.HostConfig.createInstance}.\r\n *\r\n * In react-dom, this would be a DOM element; in react-three-fiber this would be an instance descriptor.\r\n */\r\nexport function useNearestChild<T = any>(\r\n  /** An optional element type to filter to. */\r\n  type?: keyof JSX.IntrinsicElements,\r\n): React.MutableRefObject<T | undefined> {\r\n  const fiber = useFiber()\r\n  const childRef = React.useRef<T>()\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    childRef.current = traverseFiber<T>(\r\n      fiber,\r\n      false,\r\n      (node) => typeof node.type === 'string' && (type === undefined || node.type === type),\r\n    )?.stateNode\r\n  }, [fiber])\r\n\r\n  return childRef\r\n}\r\n\r\n/**\r\n * Returns the nearest react-reconciler parent instance or the node created from {@link ReactReconciler.HostConfig.createInstance}.\r\n *\r\n * In react-dom, this would be a DOM element; in react-three-fiber this would be an instance descriptor.\r\n */\r\nexport function useNearestParent<T = any>(\r\n  /** An optional element type to filter to. */\r\n  type?: keyof JSX.IntrinsicElements,\r\n): React.MutableRefObject<T | undefined> {\r\n  const fiber = useFiber()\r\n  const parentRef = React.useRef<T>()\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    parentRef.current = traverseFiber<T>(\r\n      fiber,\r\n      true,\r\n      (node) => typeof node.type === 'string' && (type === undefined || node.type === type),\r\n    )?.stateNode\r\n  }, [fiber])\r\n\r\n  return parentRef\r\n}\r\n\r\nexport type ContextMap = Map<React.Context<any>, any> & {\r\n  get<T>(context: React.Context<T>): T | undefined\r\n}\r\n\r\n/**\r\n * Returns a map of all contexts and their values.\r\n */\r\nexport function useContextMap(): ContextMap {\r\n  const fiber = useFiber()\r\n  const [contextMap] = React.useState(() => new Map<React.Context<any>, any>())\r\n\r\n  // Collect live context\r\n  contextMap.clear()\r\n  let node = fiber\r\n  while (node) {\r\n    if (node.type && typeof node.type === 'object') {\r\n      // https://github.com/facebook/react/pull/28226\r\n      const enableRenderableContext = node.type._context === undefined && node.type.Provider === node.type\r\n      const context = enableRenderableContext ? node.type : node.type._context\r\n      if (context && context !== FiberContext && !contextMap.has(context)) {\r\n        contextMap.set(context, React.useContext(wrapContext(context)))\r\n      }\r\n    }\r\n\r\n    node = node.return!\r\n  }\r\n\r\n  return contextMap\r\n}\r\n\r\n/**\r\n * Represents a react-context bridge provider component.\r\n */\r\nexport type ContextBridge = React.FC<React.PropsWithChildren<{}>>\r\n\r\n/**\r\n * React Context currently cannot be shared across [React renderers](https://reactjs.org/docs/codebase-overview.html#renderers) but explicitly forwarded between providers (see [react#17275](https://github.com/facebook/react/issues/17275)). This hook returns a {@link ContextBridge} of live context providers to pierce Context across renderers.\r\n *\r\n * Pass {@link ContextBridge} as a component to a secondary renderer to enable context-sharing within its children.\r\n */\r\nexport function useContextBridge(): ContextBridge {\r\n  const contextMap = useContextMap()\r\n\r\n  // Flatten context and their memoized values into a `ContextBridge` provider\r\n  return React.useMemo(\r\n    () =>\r\n      Array.from(contextMap.keys()).reduce(\r\n        (Prev, context) => (props) =>\r\n          (\r\n            <Prev>\r\n              <context.Provider {...props} value={contextMap.get(context)} />\r\n            </Prev>\r\n          ),\r\n        (props) => <FiberProvider {...props} />,\r\n      ),\r\n    [contextMap],\r\n  )\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,gBAAgB,QAAQ,QAAQ,QAAQ,OAAO;AACvD,QAAM,cAAc,KAAK,KAAK;AAC9B,aAAS,gBAAgB;AACrB,aAAQ,OAAO,WAAW,gBACrB,CAAC,EAAE,SAAS,KAAK,MAAM,MAAM,qBAC1B,CAAC,EAAE,SAAS,KAAK,MAAM,MAAM;AAAA,IACzC;AACA,YAAQ,OAAO,OAAO,WAAW,cAC3B,SACA,OAAO,WAAW,cACd,SACA,OAAO,sBAAsB,cACzB,OACA,CAAC;AACf,YAAQ,QAAQ;AAAA,MACZ,SAAS,QAAQ;AAAA,MACjB,SAAS;AAAA,MACT,WAAW,cAAc;AAAA,MACzB,cAAc,QAAQ,MAAK,SAAU,OAAO;AAAA,MAAE,GAAE,SAAS,CAAC;AAAA,MAC1D,gBAAgB;AAAA,MAChB,SAAS,OAAO;AACZ,eAAO,QAAQ,MAAM,WAAW,QAAQ,cAAc;AAAA,MAC1D;AAAA,MACA,aAAa;AAAA,MACb,sBAAsB;AAAA,MACtB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,6BAA6B;AAAA,MAC7B,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,qBAAqB;AAAA,MACrB,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,0BAA0B;AAAA,MAC1B,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,mBAAmB;AAAA,MACnB,YAAa,OAAO,WAAW,eAAe,OAAO,oBAAqB;AAAA,MAC1E,cAAc;AAAA,MACd,UAAU;AAAA,MACV,cAAc;AAAA,MACd,aAAa,CAAC,GAAG,CAAC;AAAA,MAClB,aAAa;AACT,eAAO,QAAQ,MAAM,IAAI,EAAE;AAAA,MAC/B;AAAA,MACA,iBAAiB;AACb,YAAIA;AACJ,gBAAQA,MAAK,QAAQ,MAAM,aAAa,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG,eAAe;AAAA,MACtG;AAAA,MACA,cAAc;AACV,eAAO,CAAC,CAAC,QAAQ,MAAM,IAAI,EAAE;AAAA,MACjC;AAAA,MACA,wBAAwB;AAAA,MACxB,UAAU,QAAQ,KAAK;AAAA,MACvB,cAAcC,QAAO;AACjB,gBAAQ,KAAK,QAAQA;AAAA,MACzB;AAAA,IACJ;AACA,QAAM,gBAAgB,CAAC,cAAc;AACjC,cAAQ,MAAM,UAAU,UAAU,aAAa,CAAC,IAAI;AAAA,IACxD;AACA,YAAQ,gBAAgB;AACxB,YAAQ,MAAM,cAAc,QAAQ,KAAK;AAAA;AAAA;;;ACjEzC;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,OAAO,QAAQ,YAAY;AACnC,QAAM,WAAW;AACjB,QAAM,YAAN,MAAM,WAAU;AAAA,MACZ,YAAY,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG;AAChC,aAAK,QAAQ;AACb,aAAK,IAAK,KAAK,EAAE,MAAM,KAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAClD;AAAA,MACA,QAAQ;AACJ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AAAA,MAChB;AAAA,MACA,OAAO;AACH,eAAO,IAAI,WAAU,KAAK,CAAC;AAAA,MAC/B;AAAA,MACA,SAAS,IAAI;AACT,WAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAClB,WAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAClB,WAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAClB,WAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAClB,WAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAClB,WAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAAA,MACtB;AAAA,MACA,MAAM,OAAO;AACT,cAAM,IAAI,KAAK;AACf,eAAO;AAAA,UACH,GAAG,EAAE,CAAC,IAAI,MAAM,IAAI,EAAE,CAAC,IAAI,MAAM,IAAI,EAAE,CAAC;AAAA,UACxC,GAAG,EAAE,CAAC,IAAI,MAAM,IAAI,EAAE,CAAC,IAAI,MAAM,IAAI,EAAE,CAAC;AAAA,QAC5C;AAAA,MACJ;AAAA,MACA,UAAU,GAAG,GAAG;AACZ,aAAK,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI;AACzC,aAAK,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI;AACzC,eAAO;AAAA,MACX;AAAA,MACA,MAAM,IAAI,IAAI;AACV,aAAK,EAAE,CAAC,KAAK;AACb,aAAK,EAAE,CAAC,KAAK;AACb,aAAK,EAAE,CAAC,KAAK;AACb,aAAK,EAAE,CAAC,KAAK;AACb,eAAO;AAAA,MACX;AAAA,MACA,OAAO,KAAK;AACR,cAAM,IAAI,KAAK,IAAI,GAAG;AACtB,cAAM,IAAI,KAAK,IAAI,GAAG;AACtB,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI;AACxC,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI;AACxC,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI;AACzC,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI;AACzC,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB;AACb,eAAO;AAAA,UACH,GAAG,KAAK,EAAE,CAAC;AAAA,UACX,GAAG,KAAK,EAAE,CAAC;AAAA,QACf;AAAA,MACJ;AAAA,MACA,KAAK,IAAI,IAAI;AACT,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI;AACpC,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI;AACpC,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI;AACpC,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI;AACpC,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,eAAO;AAAA,MACX;AAAA,MACA,SAAS,QAAQ;AACb,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC;AAC5D,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC;AAC5D,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC;AAC5D,cAAM,MAAM,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC;AAC5D,cAAM,KAAK,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AACvE,cAAM,KAAK,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AACvE,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,eAAO;AAAA,MACX;AAAA,MACA,SAAS;AACL,cAAM,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAC3D,cAAM,KAAK,KAAK,EAAE,CAAC,IAAI;AACvB,cAAM,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI;AACxB,cAAM,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI;AACxB,cAAM,KAAK,KAAK,EAAE,CAAC,IAAI;AACvB,cAAM,KAAK,KAAK,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAC5D,cAAM,KAAK,KAAK,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC;AAC5D,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,aAAK,EAAE,CAAC,IAAI;AACZ,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,YAAY;AACR,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,cAAM,QAAQ,IAAI,IAAI,IAAI;AAC1B,cAAM,SAAS;AAAA,UACX,GAAG;AAAA,UACH,GAAG;AAAA,UACH,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AACA,YAAI,KAAK,KAAK,KAAK,GAAG;AAClB,gBAAM,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC;AACjC,iBAAO,WAAW,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;AAC7D,iBAAO,SAAS;AAChB,iBAAO,SAAS,QAAQ;AACxB,iBAAO,SAAS,IAAI,IAAI,IAAI,KAAK;AACjC,iBAAO,QAAQ;AAAA,QACnB,WACS,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC;AACjC,iBAAO,WACH,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;AAC/D,iBAAO,SAAS,QAAQ;AACxB,iBAAO,SAAS;AAChB,iBAAO,QAAQ;AACf,iBAAO,SAAS,IAAI,IAAI,IAAI,KAAK;AAAA,QACrC,OACK;AAAA,QACL;AACA,eAAO,WAAW,QAAQ,KAAK,aAAa,OAAO,QAAQ;AAC3D,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,YAAY;AACpB,QAAM,eAAe;AAArB,QAAuC,gBAAgB;AAAvD,QAA0E,gBAAgB;AAA1F,QAA6G,iBAAiB;AAA9H,QAAkJ,iBAAiB,KAAK,KAAK;AAA7K,QAAkL,iBAAiB,MAAM,KAAK;AAA9M,QAAkN,OAAO;AAAzN,QAA8N,eAAe;AAA7O,QAAiP,OAAO;AAAxP,QAA6P,gBAAgB;AAA7Q,QAAgS,cAAc;AAA9S,QAA+T,YAAY;AAA3U,QAAmV,SAAS;AAAA,MACxV,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,cAAc,CAAC,KAAK,KAAK,GAAG;AAAA,MAC5B,MAAM,CAAC,GAAG,KAAK,GAAG;AAAA,MAClB,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,MACrB,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,MACrB,QAAQ,CAAC,KAAK,KAAK,GAAG;AAAA,MACtB,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,MACf,gBAAgB,CAAC,KAAK,KAAK,GAAG;AAAA,MAC9B,MAAM,CAAC,GAAG,GAAG,GAAG;AAAA,MAChB,YAAY,CAAC,KAAK,IAAI,GAAG;AAAA,MACzB,OAAO,CAAC,KAAK,IAAI,EAAE;AAAA,MACnB,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,WAAW,CAAC,IAAI,KAAK,GAAG;AAAA,MACxB,YAAY,CAAC,KAAK,KAAK,CAAC;AAAA,MACxB,WAAW,CAAC,KAAK,KAAK,EAAE;AAAA,MACxB,OAAO,CAAC,KAAK,KAAK,EAAE;AAAA,MACpB,gBAAgB,CAAC,KAAK,KAAK,GAAG;AAAA,MAC9B,UAAU,CAAC,KAAK,KAAK,GAAG;AAAA,MACxB,SAAS,CAAC,KAAK,IAAI,EAAE;AAAA,MACrB,MAAM,CAAC,GAAG,KAAK,GAAG;AAAA,MAClB,UAAU,CAAC,GAAG,GAAG,GAAG;AAAA,MACpB,UAAU,CAAC,GAAG,KAAK,GAAG;AAAA,MACtB,eAAe,CAAC,KAAK,KAAK,EAAE;AAAA,MAC5B,UAAU,CAAC,KAAK,KAAK,GAAG;AAAA,MACxB,WAAW,CAAC,GAAG,KAAK,CAAC;AAAA,MACrB,UAAU,CAAC,KAAK,KAAK,GAAG;AAAA,MACxB,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,aAAa,CAAC,KAAK,GAAG,GAAG;AAAA,MACzB,gBAAgB,CAAC,IAAI,KAAK,EAAE;AAAA,MAC5B,YAAY,CAAC,KAAK,KAAK,CAAC;AAAA,MACxB,YAAY,CAAC,KAAK,IAAI,GAAG;AAAA,MACzB,SAAS,CAAC,KAAK,GAAG,CAAC;AAAA,MACnB,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,cAAc,CAAC,KAAK,KAAK,GAAG;AAAA,MAC5B,eAAe,CAAC,IAAI,IAAI,GAAG;AAAA,MAC3B,eAAe,CAAC,IAAI,IAAI,EAAE;AAAA,MAC1B,eAAe,CAAC,IAAI,IAAI,EAAE;AAAA,MAC1B,eAAe,CAAC,GAAG,KAAK,GAAG;AAAA,MAC3B,YAAY,CAAC,KAAK,GAAG,GAAG;AAAA,MACxB,UAAU,CAAC,KAAK,IAAI,GAAG;AAAA,MACvB,aAAa,CAAC,GAAG,KAAK,GAAG;AAAA,MACzB,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB,YAAY,CAAC,IAAI,KAAK,GAAG;AAAA,MACzB,WAAW,CAAC,KAAK,IAAI,EAAE;AAAA,MACvB,aAAa,CAAC,KAAK,KAAK,GAAG;AAAA,MAC3B,aAAa,CAAC,IAAI,KAAK,EAAE;AAAA,MACzB,SAAS,CAAC,KAAK,GAAG,GAAG;AAAA,MACrB,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,MAAM,CAAC,KAAK,KAAK,CAAC;AAAA,MAClB,WAAW,CAAC,KAAK,KAAK,EAAE;AAAA,MACxB,MAAM,CAAC,KAAK,KAAK,GAAG;AAAA,MACpB,OAAO,CAAC,GAAG,KAAK,CAAC;AAAA,MACjB,aAAa,CAAC,KAAK,KAAK,EAAE;AAAA,MAC1B,MAAM,CAAC,KAAK,KAAK,GAAG;AAAA,MACpB,UAAU,CAAC,KAAK,KAAK,GAAG;AAAA,MACxB,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB,WAAW,CAAC,KAAK,IAAI,EAAE;AAAA,MACvB,QAAQ,CAAC,IAAI,GAAG,GAAG;AAAA,MACnB,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,MACrB,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,MACrB,UAAU,CAAC,KAAK,KAAK,GAAG;AAAA,MACxB,eAAe,CAAC,KAAK,KAAK,GAAG;AAAA,MAC7B,WAAW,CAAC,KAAK,KAAK,CAAC;AAAA,MACvB,cAAc,CAAC,KAAK,KAAK,GAAG;AAAA,MAC5B,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,sBAAsB,CAAC,KAAK,KAAK,GAAG;AAAA,MACpC,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,aAAa,CAAC,KAAK,KAAK,GAAG;AAAA,MAC3B,eAAe,CAAC,IAAI,KAAK,GAAG;AAAA,MAC5B,cAAc,CAAC,KAAK,KAAK,GAAG;AAAA,MAC5B,gBAAgB,CAAC,KAAK,KAAK,GAAG;AAAA,MAC9B,gBAAgB,CAAC,KAAK,KAAK,GAAG;AAAA,MAC9B,gBAAgB,CAAC,KAAK,KAAK,GAAG;AAAA,MAC9B,aAAa,CAAC,KAAK,KAAK,GAAG;AAAA,MAC3B,MAAM,CAAC,GAAG,KAAK,CAAC;AAAA,MAChB,WAAW,CAAC,IAAI,KAAK,EAAE;AAAA,MACvB,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,MACrB,SAAS,CAAC,KAAK,GAAG,GAAG;AAAA,MACrB,QAAQ,CAAC,KAAK,GAAG,CAAC;AAAA,MAClB,kBAAkB,CAAC,KAAK,KAAK,GAAG;AAAA,MAChC,YAAY,CAAC,GAAG,GAAG,GAAG;AAAA,MACtB,cAAc,CAAC,KAAK,IAAI,GAAG;AAAA,MAC3B,cAAc,CAAC,KAAK,KAAK,GAAG;AAAA,MAC5B,gBAAgB,CAAC,IAAI,KAAK,GAAG;AAAA,MAC7B,iBAAiB,CAAC,KAAK,KAAK,GAAG;AAAA,MAC/B,mBAAmB,CAAC,GAAG,KAAK,GAAG;AAAA,MAC/B,iBAAiB,CAAC,IAAI,KAAK,GAAG;AAAA,MAC9B,iBAAiB,CAAC,KAAK,IAAI,GAAG;AAAA,MAC9B,cAAc,CAAC,IAAI,IAAI,GAAG;AAAA,MAC1B,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,UAAU,CAAC,KAAK,KAAK,GAAG;AAAA,MACxB,aAAa,CAAC,KAAK,KAAK,GAAG;AAAA,MAC3B,MAAM,CAAC,GAAG,GAAG,GAAG;AAAA,MAChB,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB,OAAO,CAAC,KAAK,KAAK,CAAC;AAAA,MACnB,WAAW,CAAC,KAAK,KAAK,EAAE;AAAA,MACxB,QAAQ,CAAC,KAAK,KAAK,CAAC;AAAA,MACpB,WAAW,CAAC,KAAK,IAAI,CAAC;AAAA,MACtB,QAAQ,CAAC,KAAK,KAAK,GAAG;AAAA,MACtB,eAAe,CAAC,KAAK,KAAK,GAAG;AAAA,MAC7B,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,eAAe,CAAC,KAAK,KAAK,GAAG;AAAA,MAC7B,eAAe,CAAC,KAAK,KAAK,GAAG;AAAA,MAC7B,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,MAAM,CAAC,KAAK,KAAK,EAAE;AAAA,MACnB,MAAM,CAAC,KAAK,KAAK,GAAG;AAAA,MACpB,MAAM,CAAC,KAAK,KAAK,GAAG;AAAA,MACpB,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,QAAQ,CAAC,KAAK,GAAG,GAAG;AAAA,MACpB,eAAe,CAAC,KAAK,IAAI,GAAG;AAAA,MAC5B,KAAK,CAAC,KAAK,GAAG,CAAC;AAAA,MACf,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,WAAW,CAAC,IAAI,KAAK,GAAG;AAAA,MACxB,aAAa,CAAC,KAAK,IAAI,EAAE;AAAA,MACzB,QAAQ,CAAC,KAAK,KAAK,GAAG;AAAA,MACtB,YAAY,CAAC,KAAK,KAAK,EAAE;AAAA,MACzB,UAAU,CAAC,IAAI,KAAK,EAAE;AAAA,MACtB,UAAU,CAAC,KAAK,KAAK,GAAG;AAAA,MACxB,QAAQ,CAAC,KAAK,IAAI,EAAE;AAAA,MACpB,QAAQ,CAAC,KAAK,KAAK,GAAG;AAAA,MACtB,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB,WAAW,CAAC,KAAK,IAAI,GAAG;AAAA,MACxB,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,WAAW,CAAC,KAAK,KAAK,GAAG;AAAA,MACzB,MAAM,CAAC,KAAK,KAAK,GAAG;AAAA,MACpB,aAAa,CAAC,GAAG,KAAK,GAAG;AAAA,MACzB,WAAW,CAAC,IAAI,KAAK,GAAG;AAAA,MACxB,KAAK,CAAC,KAAK,KAAK,GAAG;AAAA,MACnB,MAAM,CAAC,GAAG,KAAK,GAAG;AAAA,MAClB,SAAS,CAAC,KAAK,KAAK,GAAG;AAAA,MACvB,aAAa,CAAC,KAAK,KAAK,KAAK,CAAC;AAAA,MAC9B,QAAQ,CAAC,KAAK,IAAI,EAAE;AAAA,MACpB,WAAW,CAAC,IAAI,KAAK,GAAG;AAAA,MACxB,QAAQ,CAAC,KAAK,KAAK,GAAG;AAAA,MACtB,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,MACrB,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,MACrB,YAAY,CAAC,KAAK,KAAK,GAAG;AAAA,MAC1B,QAAQ,CAAC,KAAK,KAAK,CAAC;AAAA,MACpB,aAAa,CAAC,KAAK,KAAK,CAAC;AAAA,IAC7B;AAtJA,QAsJG,YAAY;AACf,QAAI,YAAY,CAAC;AACjB,QAAM,MAAO,OAAO,0BAA0B,eAAe,yBACzD,SAAU,GAAG;AACT,iBAAW,GAAG,EAAE;AAAA,IACpB;AACJ,YAAQ,OAAO;AAAA,MACX,WAAW,KAAK;AACZ,eAAO,CAAC,EAAE,OAAO,IAAI,YAAY;AAAA,MACrC;AAAA,MACA,YAAY,KAAK;AACb,eAAO,CAAC,EAAE,OAAO,IAAI,eAAe,IAAI,QAAQ,IAAI;AAAA,MACxD;AAAA,MACA,eAAe,KAAK;AAChB,eAAO,CAAC,CAAC,OAAO,IAAI,gBAAgB;AAAA,MACxC;AAAA,MACA,SAAS,KAAK;AACV,eAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAAA,MACnD;AAAA,MACA,UAAU,KAAK;AACX,eAAQ,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,iBAC5C,CAAC,MAAM,GAAG,KACV,SAAS,GAAG;AAAA,MACpB;AAAA,MACA,UAAU,KAAK;AACX,eAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAAA,MACnD;AAAA,MACA,WAAW,KAAK;AACZ,eAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAAA,MACnD;AAAA,MACA,SAAS,KAAK;AACV,eAAO,eAAe;AAAA,MAC1B;AAAA,MACA,gBAAgB,UAAU;AACtB,YAAI,OAAO,aAAa,UAAU;AAC9B,iBAAO;AAAA,QACX;AACA,cAAM,YAAY,SAAS,CAAC;AAC5B,eAAQ,cAAc,OAClB,cAAc,OACd,cAAc,UAAU,YAAY;AAAA,MAC5C;AAAA,MACA,MAAM,QAAQ;AACV,YAAI,WAAW,GAAG;AACd,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,GAAG;AACZ,iBAAO;AAAA,QACX,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,iBAAiB,UAAU;AACvB,kBAAU,KAAK,QAAQ;AACvB,YAAI,UAAU,WAAW,GAAG;AACxB,cAAI,WAAY;AACZ,kBAAM,QAAQ;AACd,wBAAY,CAAC;AACb,kBAAM,QAAQ,SAAU,IAAI;AACxB,iBAAG;AAAA,YACP,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,sBAAsB;AAClB,cAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,YAAI;AACA,iBAAO,QAAQ,OAAO,SAAS,CAAC;AAAA,QACpC,SACO,GAAG;AAAA,QAAE;AACZ,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB;AACjB,eAAO,SAAS,cAAc,KAAK;AAAA,MACvC;AAAA,MACA,cAAc,IAAI;AACd,eAAQ,KAAK,GAAG,YAAa;AACzB,cAAI,MAAM,UAAU;AAChB,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,YAAY,KAAK,UAAU;AACvB,cAAM,WAAW,QAAQ,KAAK,mBAAmB;AACjD,iBAAS,SAAS,WAAY;AAC1B,mBAAS,QAAQ;AAAA,QACrB;AACA,iBAAS,MAAM;AAAA,MACnB;AAAA,MACA,UAAU,GAAG,GAAG,GAAG;AACf,iBAAS,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK,GAAG,SAAS,EAAE,EAAE,MAAM,CAAC;AAAA,MACtE;AAAA,MACA,UAAU,KAAK;AACX,cAAM,IAAI,QAAQ,MAAM,YAAY;AACpC,cAAM,SAAS,SAAS,KAAK,EAAE;AAC/B,eAAO;AAAA,UACH,GAAI,UAAU,KAAM;AAAA,UACpB,GAAI,UAAU,IAAK;AAAA,UACnB,GAAG,SAAS;AAAA,QAChB;AAAA,MACJ;AAAA,MACA,iBAAiB;AACb,YAAI,aAAc,KAAK,OAAO,IAAI,YAAa,GAAG,SAAS,EAAE;AAC7D,eAAO,UAAU,SAAS,GAAG;AACzB,sBAAY,OAAO;AAAA,QACvB;AACA,eAAO,OAAO;AAAA,MAClB;AAAA,MACA,OAAO,OAAO;AACV,YAAI;AACJ,YAAI,SAAS,QAAQ;AACjB,gBAAM,OAAO,KAAK;AAClB,iBAAO;AAAA,YACH,GAAG,IAAI,CAAC;AAAA,YACR,GAAG,IAAI,CAAC;AAAA,YACR,GAAG,IAAI,CAAC;AAAA,UACZ;AAAA,QACJ,WACS,MAAM,CAAC,MAAM,MAAM;AACxB,iBAAO,KAAK,UAAU,MAAM,UAAU,CAAC,CAAC;AAAA,QAC5C,WACS,MAAM,OAAO,GAAG,CAAC,MAAM,WAAW;AACvC,gBAAM,UAAU,KAAK,MAAM,QAAQ,MAAM,EAAE,CAAC;AAC5C,iBAAO;AAAA,YACH,GAAG,SAAS,IAAI,CAAC,GAAG,EAAE;AAAA,YACtB,GAAG,SAAS,IAAI,CAAC,GAAG,EAAE;AAAA,YACtB,GAAG,SAAS,IAAI,CAAC,GAAG,EAAE;AAAA,UAC1B;AAAA,QACJ,OACK;AACD,iBAAO;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,YAAY,KAAK;AACb,cAAM,OAAO;AACb,eAAQ,QAAQ,KAAK,iBAAiB,GAAG,KACrC,QAAQ,KAAK,iBAAiB,GAAG,KACjC,QAAQ,KAAK,iBAAiB,GAAG,KACjC,QAAQ,KAAK,iBAAiB,GAAG,KACjC,QAAQ,KAAK,iBAAiB,GAAG,KACjC,QAAQ,KAAK,gBAAgB,GAAG,KAChC,QAAQ,KAAK,iBAAiB,GAAG,KACjC,QAAQ,KAAK,gBAAgB,GAAG;AAAA,MACxC;AAAA,MACA,iBAAiB,KAAK;AAClB,cAAM,IAAI,OAAO,IAAI,YAAY,CAAC;AAClC,YAAI,CAAC,GAAG;AACJ,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,UACH,GAAG,EAAE,CAAC;AAAA,UACN,GAAG,EAAE,CAAC;AAAA,UACN,GAAG,EAAE,CAAC;AAAA,UACN,GAAG;AAAA,QACP;AAAA,MACJ;AAAA,MACA,gBAAgB,KAAK;AACjB,YAAI,IAAI,QAAQ,MAAM,MAAM,GAAG;AAC3B,gBAAM,IAAI,MAAM,gBAAgB,EAAE,CAAC;AACnC,gBAAM,QAAQ,IAAI,MAAM,OAAO,EAAE,IAAI,MAAM;AAC3C,iBAAO;AAAA,YACH,GAAG,MAAM,CAAC;AAAA,YACV,GAAG,MAAM,CAAC;AAAA,YACV,GAAG,MAAM,CAAC;AAAA,YACV,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,KAAK;AAClB,YAAI,IAAI,QAAQ,OAAO,MAAM,GAAG;AAC5B,gBAAM,IAAI,MAAM,iBAAiB,EAAE,CAAC;AACpC,gBAAM,QAAQ,IAAI,MAAM,OAAO,EAAE,IAAI,CAAC,GAAG,UAAU;AAC/C,gBAAI,EAAE,MAAM,EAAE,MAAM,KAAK;AACrB,qBAAO,UAAU,IAAI,SAAS,CAAC,IAAI,MAAO,SAAS,CAAC,IAAI,MAAO;AAAA,YACnE;AACA,mBAAO,OAAO,CAAC;AAAA,UACnB,CAAC;AACD,iBAAO;AAAA,YACH,GAAG,MAAM,CAAC;AAAA,YACV,GAAG,MAAM,CAAC;AAAA,YACV,GAAG,MAAM,CAAC;AAAA,YACV,GAAG,MAAM,CAAC;AAAA,UACd;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,KAAK;AAClB,YAAI,IAAI,CAAC,MAAM,OAAO,IAAI,WAAW,GAAG;AACpC,iBAAO;AAAA,YACH,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE,IAAI;AAAA,UACvC;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,KAAK;AAClB,YAAI,IAAI,CAAC,MAAM,OAAO,IAAI,WAAW,GAAG;AACpC,iBAAO;AAAA,YACH,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,KAAK;AAClB,YAAI,IAAI,CAAC,MAAM,OAAO,IAAI,WAAW,GAAG;AACpC,iBAAO;AAAA,YACH,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI;AAAA,UACvC;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,KAAK;AAClB,YAAI,IAAI,CAAC,MAAM,OAAO,IAAI,WAAW,GAAG;AACpC,iBAAO;AAAA,YACH,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;AAAA,YAC/B,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,gBAAgB,KAAK;AACjB,YAAI,0CAA0C,KAAK,GAAG,GAAG;AACrD,gBAAM,CAAC,GAAG,GAAG,GAAG,IAAI,0CAA0C,KAAK,GAAG;AACtE,gBAAM,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI;AAC3B,gBAAM,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI;AAC3B,gBAAM,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI;AAC3B,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI,MAAM,GAAG;AACT,kBAAM,IAAI;AACV,mBAAO;AAAA,cACH,GAAG,KAAK,MAAM,GAAG;AAAA,cACjB,GAAG,KAAK,MAAM,GAAG;AAAA,cACjB,GAAG,KAAK,MAAM,GAAG;AAAA,cACjB,GAAG;AAAA,YACP;AAAA,UACJ;AACA,cAAI,IAAI,KAAK;AACT,iBAAK,KAAK,IAAI;AAAA,UAClB,OACK;AACD,iBAAK,IAAI,IAAI,IAAI;AAAA,UACrB;AACA,gBAAM,KAAK,IAAI,IAAI;AACnB,gBAAM,MAAM,CAAC,GAAG,GAAG,CAAC;AACpB,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,iBAAK,IAAK,IAAI,IAAK,EAAE,IAAI;AACzB,gBAAI,KAAK,GAAG;AACR;AAAA,YACJ;AACA,gBAAI,KAAK,GAAG;AACR;AAAA,YACJ;AACA,gBAAI,IAAI,KAAK,GAAG;AACZ,oBAAM,MAAM,KAAK,MAAM,IAAI;AAAA,YAC/B,WACS,IAAI,KAAK,GAAG;AACjB,oBAAM;AAAA,YACV,WACS,IAAI,KAAK,GAAG;AACjB,oBAAM,MAAM,KAAK,OAAO,IAAI,IAAI,MAAM;AAAA,YAC1C,OACK;AACD,oBAAM;AAAA,YACV;AACA,gBAAI,CAAC,IAAI,MAAM;AAAA,UACnB;AACA,iBAAO;AAAA,YACH,GAAG,KAAK,MAAM,IAAI,CAAC,CAAC;AAAA,YACpB,GAAG,KAAK,MAAM,IAAI,CAAC,CAAC;AAAA,YACpB,GAAG,KAAK,MAAM,IAAI,CAAC,CAAC;AAAA,YACpB,GAAG;AAAA,UACP;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,IAAI,IAAI;AACrB,eAAO,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,SACtB,GAAG,IAAI,GAAG,QAAQ,GAAG,KACrB,GAAG,IAAI,GAAG,IAAI,GAAG,UACjB,GAAG,IAAI,GAAG,SAAS,GAAG;AAAA,MAC9B;AAAA,MACA,YAAY,KAAK;AACb,cAAM,SAAS,CAAC;AAChB,mBAAW,OAAO,KAAK;AACnB,cAAI,KAAK,eAAe,IAAI,GAAG,CAAC,GAAG;AAC/B,mBAAO,GAAG,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC;AAAA,UAC3C,WACS,KAAK,SAAS,IAAI,GAAG,CAAC,GAAG;AAC9B,mBAAO,GAAG,IAAI,KAAK,WAAW,IAAI,GAAG,CAAC;AAAA,UAC1C,OACK;AACD,mBAAO,GAAG,IAAI,IAAI,GAAG;AAAA,UACzB;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW,KAAK;AACZ,eAAO,IAAI,MAAM,CAAC;AAAA,MACtB;AAAA,MACA,SAAS,KAAK;AACV,eAAO,MAAM;AAAA,MACjB;AAAA,MACA,SAAS,KAAK;AACV,eAAO,MAAM;AAAA,MACjB;AAAA,MACA,UAAU,KAAK;AACX,gBAAQ,KAAK,KAAK,qEAAqE;AACvF,eAAO,QAAQ,KAAK,SAAS,GAAG;AAAA,MACpC;AAAA,MACA,UAAU,KAAK;AACX,gBAAQ,KAAK,KAAK,qEAAqE;AACvF,eAAO,QAAQ,KAAK,SAAS,GAAG;AAAA,MACpC;AAAA,MACA,aAAa,SAAS;AAClB,eAAO,SAAS,MAAM,WAAW,QAAQ,KAAK,SAAS,OAAO,IAAI;AAAA,MACtE;AAAA,MACA,YAAY,KAAK;AACb,eAAO,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC;AAAA,MACpD;AAAA,MACA,MAAM,KAAK;AACP,cAAM,IAAI,MAAM,cAAc,GAAG;AAAA,MACrC;AAAA,MACA,MAAM,KAAK;AACP,gBAAQ,MAAM,cAAc,GAAG;AAAA,MACnC;AAAA,MACA,KAAK,KAAK;AACN,YAAI,CAAC,SAAS,MAAM,cAAc;AAC9B;AAAA,QACJ;AACA,gBAAQ,KAAK,gBAAgB,GAAG;AAAA,MACpC;AAAA,MACA,KAAK,KAAK,MAAM;AACZ,mBAAW,OAAO,KAAK;AACnB,eAAK,KAAK,IAAI,GAAG,CAAC;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,SAAS,KAAK,MAAM,OAAO;AACvB,eAAO,QAAQ,OAAO,MAAM;AAAA,MAChC;AAAA,MACA,wBAAwB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAC5C,YAAI,GAAG,GAAG;AACV,cAAM,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK;AACtD,YAAI,OAAO,GAAG;AACV,cAAI;AACJ,cAAI;AACJ,kBAAQ,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK;AAAA,QACrD,OACK;AACD,gBAAM,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO;AAC5D,cAAI,IAAI,GAAG;AACP,gBAAI;AACJ,gBAAI;AACJ,oBAAQ,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK;AAAA,UACrD,WACS,IAAI,GAAK;AACd,gBAAI;AACJ,gBAAI;AACJ,oBAAQ,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK;AAAA,UACrD,OACK;AACD,gBAAI,KAAK,KAAK,KAAK;AACnB,gBAAI,KAAK,KAAK,KAAK;AACnB,oBAAQ,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI;AAAA,UACjD;AAAA,QACJ;AACA,eAAO,CAAC,GAAG,GAAG,IAAI;AAAA,MACtB;AAAA,MACA,qBAAqB,IAAI,MAAM,UAAU;AACrC,cAAM,KAAK,QAAQ,KAAK,YAAY,EAAE;AACtC,YAAI,OAAO,OAAO;AAClB,aAAK,QAAQ,SAAU,IAAI,GAAG;AAC1B,cAAI,CAAC,YAAY,MAAM,KAAK,SAAS,GAAG;AACpC;AAAA,UACJ;AACA,gBAAM,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM;AACrC,gBAAM,OAAO,QAAQ,KAAK,wBAAwB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACpF,gBAAM,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,QAAQ,KAAK,CAAC;AAChD,cAAI,QAAQ,MAAM;AACd,eAAG,IAAI;AACP,eAAG,IAAI;AACP,mBAAO;AAAA,UACX;AAAA,QACJ,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,sBAAsB,YAAY,UAAU,UAAU;AAClD,cAAM,QAAQ,CAAC,GAAG,MAAM,CAAC;AACzB,YAAI,WAAW,SAAS,SAAS,QAAQ;AACrC,gBAAM,OAAO;AACb,qBAAW;AACX,uBAAa;AAAA,QACjB;AACA,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC3C,gBAAM,KAAK;AAAA,YACP,GAAG,WAAW,CAAC;AAAA,YACf,GAAG,WAAW,IAAI,CAAC;AAAA,UACvB,CAAC;AAAA,QACL;AACA,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AACzC,cAAI,KAAK;AAAA,YACL,GAAG,SAAS,CAAC;AAAA,YACb,GAAG,SAAS,IAAI,CAAC;AAAA,UACrB,CAAC;AAAA,QACL;AACA,cAAM,WAAW,CAAC;AAClB,YAAI,QAAQ,SAAU,OAAO;AACzB,gBAAM,KAAK,QAAQ,KAAK,qBAAqB,OAAO,OAAO,QAAQ;AACnE,mBAAS,KAAK,GAAG,CAAC;AAClB,mBAAS,KAAK,GAAG,CAAC;AAAA,QACtB,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,KAAK;AACrB,YAAI;AACJ,YAAI,oCAAoC;AACxC,mBAAW,OAAO,KAAK;AACnB,cAAI,EAAE,IAAI,eAAe,GAAG,KAAK,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,WAAW;AACvE;AAAA,UACJ;AACA,iBAAO,OAAO,yBAAyB,KAAK,GAAG;AAC/C,cAAI,IAAI,GAAG,EAAE,qCACT,QAAQ,KAAK,WAAW,IAAI,GAAG,CAAC,GAAG;AACnC,gBAAI,KAAK,cAAc;AACnB,qBAAO,IAAI,GAAG;AAAA,YAClB,OACK;AACD,qBAAO;AAAA,YACX;AAAA,UACJ,WACS,QAAQ,KAAK,oBAAoB,IAAI,GAAG,CAAC,MAAM,MAAM;AAC1D,gBAAI,KAAK,cAAc;AACnB,qBAAO,IAAI,GAAG;AAAA,YAClB,OACK;AACD,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ;AACA,eAAO,IAAI;AACX,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,QAAQ,QAAQ;AACpB,mBAAW,OAAO,QAAQ;AACtB,iBAAO,GAAG,IAAI,OAAO,GAAG;AAAA,QAC5B;AACA,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,KAAK;AACpB,YAAI,CAAC,IAAI,SAAS;AACd,iBAAO,IAAI,aAAa;AAAA,QAC5B,OACK;AACD,iBAAO,IAAI,eAAe,CAAC,EAAE;AAAA,QACjC;AAAA,MACJ;AAAA,MACA,iBAAiB,UAAU;AACvB,YAAI,CAAC,SAAS,MAAM;AAChB;AACJ,iBAAS,QAAQ,CAAC,MAAM;AACpB,YAAE,QAAQ;AACV,YAAE,SAAS;AAAA,QACf,CAAC;AAAA,MACL;AAAA,MACA,oBAAoB,SAAS,OAAO,QAAQ,cAAc;AACtD,YAAI,UAAU;AACd,YAAI,WAAW;AACf,YAAI,aAAa;AACjB,YAAI,cAAc;AAClB,YAAI,OAAO,iBAAiB,UAAU;AAClC,oBACI,WACI,aACI,cACI,KAAK,IAAI,cAAc,QAAQ,GAAG,SAAS,CAAC;AAAA,QAChE,OACK;AACD,oBAAU,KAAK,IAAI,aAAa,CAAC,KAAK,GAAG,QAAQ,GAAG,SAAS,CAAC;AAC9D,qBAAW,KAAK,IAAI,aAAa,CAAC,KAAK,GAAG,QAAQ,GAAG,SAAS,CAAC;AAC/D,wBAAc,KAAK,IAAI,aAAa,CAAC,KAAK,GAAG,QAAQ,GAAG,SAAS,CAAC;AAClE,uBAAa,KAAK,IAAI,aAAa,CAAC,KAAK,GAAG,QAAQ,GAAG,SAAS,CAAC;AAAA,QACrE;AACA,gBAAQ,OAAO,SAAS,CAAC;AACzB,gBAAQ,OAAO,QAAQ,UAAU,CAAC;AAClC,gBAAQ,IAAI,QAAQ,UAAU,UAAU,UAAW,KAAK,KAAK,IAAK,GAAG,GAAG,KAAK;AAC7E,gBAAQ,OAAO,OAAO,SAAS,WAAW;AAC1C,gBAAQ,IAAI,QAAQ,aAAa,SAAS,aAAa,aAAa,GAAG,KAAK,KAAK,GAAG,KAAK;AACzF,gBAAQ,OAAO,YAAY,MAAM;AACjC,gBAAQ,IAAI,YAAY,SAAS,YAAY,YAAY,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK;AACpF,gBAAQ,OAAO,GAAG,OAAO;AACzB,gBAAQ,IAAI,SAAS,SAAS,SAAS,KAAK,IAAK,KAAK,KAAK,IAAK,GAAG,KAAK;AAAA,MAC5E;AAAA,IACJ;AAAA;AAAA;;;ACryBA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,aAAa,QAAQ,eAAe,QAAQ,UAAU;AAC9D,QAAM,SAAS;AACf,QAAM,WAAW;AACjB,aAAS,cAAc,KAAK;AACxB,YAAM,SAAS,CAAC,GAAG,MAAM,IAAI,QAAQ,OAAO,OAAO;AACnD,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,YAAI,MAAM,IAAI,CAAC;AACf,YAAI,KAAK,UAAU,GAAG,GAAG;AACrB,gBAAM,KAAK,MAAM,MAAM,GAAI,IAAI;AAAA,QACnC,WACS,CAAC,KAAK,UAAU,GAAG,GAAG;AAC3B,gBAAM,MAAM;AAAA,QAChB;AACA,eAAO,KAAK,GAAG;AAAA,MACnB;AACA,aAAO;AAAA,IACX;AACA,QAAM,QAAQ;AAAd,QAAmB,aAAa;AAAhC,QAAqC,cAAc;AAAnD,QAAwD,qBAAqB;AAA7E,QAAmF,sBAAsB;AAAzG,QAA+G,YAAY;AAA3H,QAAgI,eAAe;AAA/I,QAAqJ,SAAS;AAA9J,QAAmK,kBAAkB;AAAA,MACjL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,QAAM,qBAAqB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,QAAM,cAAc;AACpB,QAAM,UAAN,MAAc;AAAA,MACV,YAAY,QAAQ;AAChB,aAAK,SAAS;AACd,YAAI,SAAS,MAAM,aAAa;AAC5B,eAAK,WAAW,CAAC;AACjB,eAAK,aAAa;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,UAAU,OAAO;AACb,YAAI,MAAM,YAAY,GAAG;AACrB,eAAK,MAAM,KAAK;AAAA,QACpB;AAAA,MACJ;AAAA,MACA,MAAM,OAAO;AAAA,MACb;AAAA,MACA,YAAY,OAAO;AACf,YAAI,MAAM,UAAU,GAAG;AACnB,eAAK,QAAQ,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,QAAQ,OAAO;AAAA,MACf;AAAA,MACA,gBAAgB,OAAO;AACnB,YAAI,MAAM,MAAM,wBAAwB;AACpC,eAAK,YAAY,KAAK;AACtB,eAAK,UAAU,KAAK;AAAA,QACxB,OACK;AACD,eAAK,UAAU,KAAK;AACpB,eAAK,YAAY,KAAK;AAAA,QAC1B;AAAA,MACJ;AAAA,MACA,SAAS,SAAS,SAAS;AACvB,YAAI,WAAW,KAAK,UAAU,MAAM,SAAS,QAAQ,MAAM,IAAI,GAAG,OAAO,QAAQ;AACjF,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,kBAAQ,SAAS,CAAC;AAClB,mBAAS,MAAM;AACf,cAAI,QAAQ;AACR,mBAAO,MAAM;AACb,mBAAO;AACP,gBAAI,SAAS;AACT,qBAAO;AAAA,YACX,OACK;AACD,kBAAI,OAAO,KAAK,SAAS,KAAK,CAAC,CAAC,GAAG;AAC/B,uBAAO,qBAAqB,KAAK,KAAK,KAAK,IAAI;AAAA,cACnD,OACK;AACD,oBAAI,SAAS;AACT,yBAAO,KAAK,IAAI,CAAC,MAAM,OAAO,MAAM,WAAW,KAAK,MAAM,CAAC,IAAI,CAAC;AAAA,gBACpE;AACA,uBAAO,aAAa,KAAK,KAAK,KAAK,IAAI;AAAA,cAC3C;AAAA,YACJ;AAAA,UACJ,OACK;AACD,mBAAO,MAAM;AACb,gBAAI,CAAC,SAAS;AACV,qBAAO,SAAS,MAAM;AAAA,YAC1B;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,aAAa;AACT,aAAK,WAAW,CAAC;AAAA,MACrB;AAAA,MACA,OAAO,KAAK;AACR,YAAI,WAAW,KAAK,UAAU;AAC9B,iBAAS,KAAK,GAAG;AACjB,cAAM,SAAS;AACf,YAAI,OAAO,aAAa;AACpB,mBAAS,MAAM;AAAA,QACnB;AAAA,MACJ;AAAA,MACA,QAAQ;AACJ,cAAM,aAAa,KAAK,UAAU,EAAE,cAAc;AAClD,aAAK,aAAa,IAAI,YAAY,GAAG,GAAG,IAAI,YAAY,GAAG,CAAC;AAAA,MAChE;AAAA,MACA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,MAAM,QAAQ;AACV,cAAM,SAAS,KAAK,UAAU;AAC9B,YAAI,QAAQ;AACR,eAAK,UAAU,OAAO,KAAK,GAAG,OAAO,KAAK,GAAG,OAAO,SAAS,GAAG,OAAO,UAAU,CAAC;AAAA,QACtF,OACK;AACD,eAAK,UAAU,GAAG,GAAG,OAAO,SAAS,IAAI,OAAO,YAAY,OAAO,UAAU,IAAI,OAAO,UAAU;AAAA,QACtG;AAAA,MACJ;AAAA,MACA,cAAc,OAAO;AACjB,cAAM,UAAU,MAAM,MAAM;AAC5B,YAAI,SAAS;AACT,eAAK,QAAQ,WAAW,OAAO;AAAA,QACnC;AAAA,MACJ;AAAA,MACA,cAAc,OAAO;AACjB,cAAM,aAAa,MAAM,mBAAmB;AAC5C,YAAI,eAAe,GAAG;AAClB,eAAK,QAAQ,eAAe,UAAU;AAAA,QAC1C;AAAA,MACJ;AAAA,MACA,eAAe,OAAO;AAClB,cAAM,WAAW,MAAM,MAAM;AAC7B,YAAI,UAAU;AACV,eAAK,QAAQ,YAAY,QAAQ;AAAA,QACrC;AAAA,MACJ;AAAA,MACA,QAAQ,MAAM,KAAK;AACf,aAAK,SAAS,IAAI,IAAI;AAAA,MAC1B;AAAA,MACA,IAAI,GAAG,GAAG,QAAQ,YAAY,UAAU,kBAAkB;AACtD,aAAK,SAAS,IAAI,GAAG,GAAG,QAAQ,YAAY,UAAU,gBAAgB;AAAA,MAC1E;AAAA,MACA,MAAM,IAAI,IAAI,IAAI,IAAI,QAAQ;AAC1B,aAAK,SAAS,MAAM,IAAI,IAAI,IAAI,IAAI,MAAM;AAAA,MAC9C;AAAA,MACA,YAAY;AACR,aAAK,SAAS,UAAU;AAAA,MAC5B;AAAA,MACA,cAAc,MAAM,MAAM,MAAM,MAAM,GAAG,GAAG;AACxC,aAAK,SAAS,cAAc,MAAM,MAAM,MAAM,MAAM,GAAG,CAAC;AAAA,MAC5D;AAAA,MACA,UAAU,GAAG,GAAG,OAAO,QAAQ;AAC3B,aAAK,SAAS,UAAU,GAAG,GAAG,OAAO,MAAM;AAAA,MAC/C;AAAA,MACA,QAAQ,MAAM;AACV,aAAK,SAAS,KAAK,MAAM,KAAK,UAAU,IAAI;AAAA,MAChD;AAAA,MACA,YAAY;AACR,aAAK,SAAS,UAAU;AAAA,MAC5B;AAAA,MACA,gBAAgB,OAAO,QAAQ;AAC3B,cAAM,IAAI;AACV,YAAI,EAAE,WAAW,GAAG;AAChB,iBAAO,KAAK,SAAS,gBAAgB,OAAO,MAAM;AAAA,QACtD,WACS,EAAE,WAAW,GAAG;AACrB,iBAAO,KAAK,SAAS,gBAAgB,KAAK;AAAA,QAC9C;AAAA,MACJ;AAAA,MACA,qBAAqB,IAAI,IAAI,IAAI,IAAI;AACjC,eAAO,KAAK,SAAS,qBAAqB,IAAI,IAAI,IAAI,EAAE;AAAA,MAC5D;AAAA,MACA,cAAc,OAAO,YAAY;AAC7B,eAAO,KAAK,SAAS,cAAc,OAAO,UAAU;AAAA,MACxD;AAAA,MACA,qBAAqB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACzC,eAAO,KAAK,SAAS,qBAAqB,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,MACpE;AAAA,MACA,UAAU,OAAO,IAAI,IAAI,QAAQ,SAAS,IAAI,IAAI,QAAQ,SAAS;AAC/D,cAAM,IAAI,WAAW,WAAW,KAAK;AACrC,YAAI,EAAE,WAAW,GAAG;AAChB,mBAAS,UAAU,OAAO,IAAI,EAAE;AAAA,QACpC,WACS,EAAE,WAAW,GAAG;AACrB,mBAAS,UAAU,OAAO,IAAI,IAAI,QAAQ,OAAO;AAAA,QACrD,WACS,EAAE,WAAW,GAAG;AACrB,mBAAS,UAAU,OAAO,IAAI,IAAI,QAAQ,SAAS,IAAI,IAAI,QAAQ,OAAO;AAAA,QAC9E;AAAA,MACJ;AAAA,MACA,QAAQ,GAAG,GAAG,SAAS,SAAS,UAAU,YAAY,UAAU,kBAAkB;AAC9E,aAAK,SAAS,QAAQ,GAAG,GAAG,SAAS,SAAS,UAAU,YAAY,UAAU,gBAAgB;AAAA,MAClG;AAAA,MACA,cAAc,GAAG,GAAG,MAAM,UAAU;AAChC,YAAI,MAAM;AACN,iBAAO,KAAK,SAAS,cAAc,MAAM,GAAG,GAAG,QAAQ;AAAA,QAC3D;AACA,eAAO,KAAK,SAAS,cAAc,GAAG,GAAG,QAAQ;AAAA,MACrD;AAAA,MACA,QAAQ,MAAM;AACV,aAAK,SAAS,KAAK,MAAM,KAAK,UAAU,IAAI;AAAA,MAChD;AAAA,MACA,SAAS,GAAG,GAAG,OAAO,QAAQ;AAC1B,aAAK,SAAS,SAAS,GAAG,GAAG,OAAO,MAAM;AAAA,MAC9C;AAAA,MACA,WAAW,GAAG,GAAG,OAAO,QAAQ;AAC5B,aAAK,SAAS,WAAW,GAAG,GAAG,OAAO,MAAM;AAAA,MAChD;AAAA,MACA,SAAS,MAAM,GAAG,GAAG,UAAU;AAC3B,YAAI,UAAU;AACV,eAAK,SAAS,SAAS,MAAM,GAAG,GAAG,QAAQ;AAAA,QAC/C,OACK;AACD,eAAK,SAAS,SAAS,MAAM,GAAG,CAAC;AAAA,QACrC;AAAA,MACJ;AAAA,MACA,YAAY,MAAM;AACd,eAAO,KAAK,SAAS,YAAY,IAAI;AAAA,MACzC;AAAA,MACA,aAAa,IAAI,IAAI,IAAI,IAAI;AACzB,eAAO,KAAK,SAAS,aAAa,IAAI,IAAI,IAAI,EAAE;AAAA,MACpD;AAAA,MACA,OAAO,GAAG,GAAG;AACT,aAAK,SAAS,OAAO,GAAG,CAAC;AAAA,MAC7B;AAAA,MACA,OAAO,GAAG,GAAG;AACT,aAAK,SAAS,OAAO,GAAG,CAAC;AAAA,MAC7B;AAAA,MACA,KAAK,GAAG,GAAG,OAAO,QAAQ;AACtB,aAAK,SAAS,KAAK,GAAG,GAAG,OAAO,MAAM;AAAA,MAC1C;AAAA,MACA,UAAU,GAAG,GAAG,OAAO,QAAQ,OAAO;AAClC,aAAK,SAAS,UAAU,GAAG,GAAG,OAAO,QAAQ,KAAK;AAAA,MACtD;AAAA,MACA,aAAa,WAAW,IAAI,IAAI;AAC5B,aAAK,SAAS,aAAa,WAAW,IAAI,EAAE;AAAA,MAChD;AAAA,MACA,iBAAiB,KAAK,KAAK,GAAG,GAAG;AAC7B,aAAK,SAAS,iBAAiB,KAAK,KAAK,GAAG,CAAC;AAAA,MACjD;AAAA,MACA,UAAU;AACN,aAAK,SAAS,QAAQ;AAAA,MAC1B;AAAA,MACA,OAAO,OAAO;AACV,aAAK,SAAS,OAAO,KAAK;AAAA,MAC9B;AAAA,MACA,OAAO;AACH,aAAK,SAAS,KAAK;AAAA,MACvB;AAAA,MACA,MAAM,GAAG,GAAG;AACR,aAAK,SAAS,MAAM,GAAG,CAAC;AAAA,MAC5B;AAAA,MACA,YAAY,UAAU;AAClB,YAAI,KAAK,SAAS,aAAa;AAC3B,eAAK,SAAS,YAAY,QAAQ;AAAA,QACtC,WACS,aAAa,KAAK,UAAU;AACjC,eAAK,SAAS,SAAS,IAAI;AAAA,QAC/B,WACS,oBAAoB,KAAK,UAAU;AACxC,eAAK,SAAS,gBAAgB,IAAI;AAAA,QACtC;AAAA,MACJ;AAAA,MACA,cAAc;AACV,eAAO,KAAK,SAAS,YAAY;AAAA,MACrC;AAAA,MACA,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC3B,aAAK,SAAS,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC/C;AAAA,MACA,OAAO,QAAQ;AACX,YAAI,QAAQ;AACR,eAAK,SAAS,OAAO,MAAM;AAAA,QAC/B,OACK;AACD,eAAK,SAAS,OAAO;AAAA,QACzB;AAAA,MACJ;AAAA,MACA,WAAW,MAAM,GAAG,GAAG,UAAU;AAC7B,aAAK,SAAS,WAAW,MAAM,GAAG,GAAG,QAAQ;AAAA,MACjD;AAAA,MACA,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AACxB,aAAK,SAAS,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC5C;AAAA,MACA,UAAU,GAAG,GAAG;AACZ,aAAK,SAAS,UAAU,GAAG,CAAC;AAAA,MAChC;AAAA,MACA,eAAe;AACX,YAAI,OAAO,MAAM,MAAM,gBAAgB,QAAQ,aAAa,KAAK,SAAS,GAAG;AAC7E,cAAM,OAAO,SAAU,YAAY;AAC/B,cAAI,aAAa,KAAK,UAAU,GAAG;AACnC,eAAK,UAAU,IAAI,WAAY;AAC3B,mBAAO,cAAc,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC,CAAC;AAC7D,kBAAM,WAAW,MAAM,MAAM,SAAS;AACtC,iBAAK,OAAO;AAAA,cACR,QAAQ;AAAA,cACR;AAAA,YACJ,CAAC;AACD,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,eAAK,gBAAgB,CAAC,CAAC;AAAA,QAC3B;AACA,aAAK,UAAU,WAAY;AACvB,qBAAW,MAAM,MAAM,SAAS;AAChC,gBAAM,OAAO,UAAU,CAAC;AACxB,cAAI,MAAM,UAAU,CAAC;AACrB,cAAI,SAAS,mBACT,SAAS,mBACT,SAAS,cAAc;AACvB,kBAAM,MAAM,KAAK,OAAO,cAAc;AAAA,UAC1C;AACA,eAAK,OAAO;AAAA,YACR,UAAU;AAAA,YACV;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,+BAA+B,MAAM;AACjC,cAAM,KAAK,KAAK,MAAM;AACtB,cAAM,MAAM,CAAC,MAAM,OAAO;AAC1B,YAAI,CAAC,KAAK;AACN,eAAK,QAAQ,4BAA4B,EAAE;AAAA,QAC/C;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,UAAU;AAClB,uBAAmB,QAAQ,SAAU,MAAM;AACvC,aAAO,eAAe,QAAQ,WAAW,MAAM;AAAA,QAC3C,MAAM;AACF,iBAAO,KAAK,SAAS,IAAI;AAAA,QAC7B;AAAA,QACA,IAAI,KAAK;AACL,eAAK,SAAS,IAAI,IAAI;AAAA,QAC1B;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AACD,QAAM,eAAN,cAA2B,QAAQ;AAAA,MAC/B,YAAY,QAAQ,EAAE,qBAAqB,MAAM,IAAI,CAAC,GAAG;AACrD,cAAM,MAAM;AACZ,aAAK,WAAW,OAAO,QAAQ,WAAW,MAAM;AAAA,UAC5C;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,WAAW,OAAO;AACd,cAAM,OAAO,MAAM,KAAK;AACxB,aAAK,QAAQ,aAAa,IAAI;AAC9B,cAAM,UAAU,IAAI;AAAA,MACxB;AAAA,MACA,aAAa,OAAO;AAChB,aAAK,QAAQ,aAAa,MAAM,gBAAgB,CAAC;AACjD,cAAM,UAAU,IAAI;AAAA,MACxB;AAAA,MACA,oBAAoB,OAAO;AACvB,cAAM,MAAM,MAAM,mBAAmB;AACrC,YAAI,KAAK;AACL,eAAK,QAAQ,aAAa,GAAG;AAC7B,gBAAM,UAAU,IAAI;AAAA,QACxB;AAAA,MACJ;AAAA,MACA,oBAAoB,OAAO;AACvB,cAAM,MAAM,MAAM,mBAAmB;AACrC,YAAI,KAAK;AACL,eAAK,QAAQ,aAAa,GAAG;AAC7B,gBAAM,UAAU,IAAI;AAAA,QACxB;AAAA,MACJ;AAAA,MACA,MAAM,OAAO;AACT,cAAM,WAAW,MAAM,KAAK,GAAG,eAAe,MAAM,gBAAgB;AACpE,YAAI,YAAY,iBAAiB,SAAS;AACtC,eAAK,WAAW,KAAK;AACrB;AAAA,QACJ;AACA,cAAM,aAAa,MAAM,oBAAoB;AAC7C,YAAI,cAAc,iBAAiB,WAAW;AAC1C,eAAK,aAAa,KAAK;AACvB;AAAA,QACJ;AACA,cAAM,oBAAoB,MAAM,gCAAgC;AAChE,YAAI,qBAAqB,iBAAiB,mBAAmB;AACzD,eAAK,oBAAoB,KAAK;AAC9B;AAAA,QACJ;AACA,cAAM,oBAAoB,MAAM,gCAAgC;AAChE,YAAI,qBAAqB,iBAAiB,mBAAmB;AACzD,eAAK,oBAAoB,KAAK;AAC9B;AAAA,QACJ;AACA,YAAI,UAAU;AACV,eAAK,WAAW,KAAK;AAAA,QACzB,WACS,YAAY;AACjB,eAAK,aAAa,KAAK;AAAA,QAC3B,WACS,mBAAmB;AACxB,eAAK,oBAAoB,KAAK;AAAA,QAClC,WACS,mBAAmB;AACxB,eAAK,oBAAoB,KAAK;AAAA,QAClC;AAAA,MACJ;AAAA,MACA,sBAAsB,OAAO;AACzB,cAAM,QAAQ,MAAM,kCAAkC,GAAG,MAAM,MAAM,gCAAgC,GAAG,aAAa,MAAM,kCAAkC,GAAG,MAAM,KAAK,qBAAqB,MAAM,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;AAC9N,YAAI,YAAY;AACZ,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC3C,gBAAI,aAAa,WAAW,CAAC,GAAG,WAAW,IAAI,CAAC,CAAC;AAAA,UACrD;AACA,eAAK,QAAQ,eAAe,GAAG;AAAA,QACnC;AAAA,MACJ;AAAA,MACA,QAAQ,OAAO;AACX,cAAM,OAAO,MAAM,KAAK,GAAG,qBAAqB,MAAM,sBAAsB;AAC5E,YAAI,MAAM,UAAU,GAAG;AACnB,cAAI,CAAC,oBAAoB;AACrB,iBAAK,KAAK;AACV,kBAAM,aAAa,KAAK,UAAU,EAAE,cAAc;AAClD,iBAAK,aAAa,YAAY,GAAG,GAAG,YAAY,GAAG,CAAC;AAAA,UACxD;AACA,eAAK,cAAc,KAAK;AACxB,cAAI,QAAQ,MAAM,YAAY,GAAG;AAC7B,iBAAK,YAAY,IAAI;AACrB,iBAAK,QAAQ,kBAAkB,MAAM,WAAW,CAAC;AAAA,UACrD;AACA,eAAK,QAAQ,aAAa,MAAM,YAAY,CAAC;AAC7C,cAAI,CAAC,MAAM,0BAA0B,GAAG;AACpC,iBAAK,QAAQ,eAAe,eAAe;AAAA,UAC/C;AACA,gBAAM,oBAAoB,MAAM,kCAAkC;AAClE,cAAI,mBAAmB;AACnB,iBAAK,sBAAsB,KAAK;AAAA,UACpC,OACK;AACD,iBAAK,QAAQ,eAAe,MAAM,OAAO,CAAC;AAAA,UAC9C;AACA,gBAAM,YAAY,IAAI;AACtB,cAAI,CAAC,oBAAoB;AACrB,iBAAK,QAAQ;AAAA,UACjB;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,aAAa,OAAO;AAChB,YAAIC,KAAIC,KAAI;AACZ,cAAM,SAASD,MAAK,MAAM,cAAc,OAAO,QAAQA,QAAO,SAASA,MAAK,SAAS,QAAQC,MAAK,MAAM,cAAc,OAAO,QAAQA,QAAO,SAASA,MAAK,GAAG,UAAU,KAAK,MAAM,gBAAgB,OAAO,QAAQ,OAAO,SAAS,KAAK;AAAA,UAClO,GAAG;AAAA,UACH,GAAG;AAAA,QACP,GAAG,QAAQ,MAAM,iBAAiB,GAAG,QAAQ,KAAK,OAAO,cAAc,GAAG,SAAS,MAAM,IAAI,OAAO,SAAS,MAAM,IAAI;AACvH,aAAK,QAAQ,eAAe,KAAK;AACjC,aAAK,QAAQ,cAAc,OAAO,KAAK,IAAI,KAAK,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM,CAAC,CAAC;AAC9E,aAAK,QAAQ,iBAAiB,OAAO,IAAI,MAAM;AAC/C,aAAK,QAAQ,iBAAiB,OAAO,IAAI,MAAM;AAAA,MACnD;AAAA,IACJ;AACA,YAAQ,eAAe;AACvB,QAAM,aAAN,cAAyB,QAAQ;AAAA,MAC7B,YAAY,QAAQ;AAChB,cAAM,MAAM;AACZ,aAAK,WAAW,OAAO,QAAQ,WAAW,MAAM;AAAA,UAC5C,oBAAoB;AAAA,QACxB,CAAC;AAAA,MACL;AAAA,MACA,MAAM,OAAO;AACT,aAAK,KAAK;AACV,aAAK,QAAQ,aAAa,MAAM,QAAQ;AACxC,cAAM,aAAa,IAAI;AACvB,aAAK,QAAQ;AAAA,MACjB;AAAA,MACA,YAAY,OAAO;AACf,YAAI,MAAM,aAAa,GAAG;AACtB,eAAK,QAAQ,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,QAAQ,OAAO;AACX,YAAI,MAAM,aAAa,GAAG;AACtB,gBAAM,qBAAqB,MAAM,sBAAsB;AACvD,cAAI,CAAC,oBAAoB;AACrB,iBAAK,KAAK;AACV,kBAAM,aAAa,KAAK,UAAU,EAAE,cAAc;AAClD,iBAAK,aAAa,YAAY,GAAG,GAAG,YAAY,GAAG,CAAC;AAAA,UACxD;AACA,eAAK,cAAc,KAAK;AACxB,gBAAM,iBAAiB,MAAM,eAAe;AAC5C,gBAAM,cAAc,mBAAmB,SAAS,MAAM,YAAY,IAAI;AACtE,eAAK,QAAQ,aAAa,WAAW;AACrC,eAAK,QAAQ,eAAe,MAAM,QAAQ;AAC1C,gBAAM,eAAe,IAAI;AACzB,cAAI,CAAC,oBAAoB;AACrB,iBAAK,QAAQ;AAAA,UACjB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,aAAa;AAAA;AAAA;;;AC5hBrB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY,QAAQ,cAAc,QAAQ,SAAS;AAC3D,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAI;AACJ,aAAS,sBAAsB;AAC3B,UAAI,aAAa;AACb,eAAO;AAAA,MACX;AACA,YAAM,SAAS,OAAO,KAAK,oBAAoB;AAC/C,YAAM,UAAU,OAAO,WAAW,IAAI;AACtC,oBAAe,WAAY;AACvB,cAAM,mBAAmB,SAAS,MAAM,QAAQ,oBAAoB,GAAG,oBAAoB,QAAQ,gCAC/F,QAAQ,6BACR,QAAQ,4BACR,QAAQ,2BACR,QAAQ,0BACR;AACJ,eAAO,mBAAmB;AAAA,MAC9B,EAAG;AACH,aAAO,KAAK,cAAc,MAAM;AAChC,aAAO;AAAA,IACX;AACA,QAAM,SAAN,MAAa;AAAA,MACT,YAAY,QAAQ;AAChB,aAAK,aAAa;AAClB,aAAK,QAAQ;AACb,aAAK,SAAS;AACd,aAAK,UAAU;AACf,cAAM,OAAO,UAAU,CAAC;AACxB,cAAM,aAAa,KAAK,cAAc,SAAS,MAAM,cAAc,oBAAoB;AACvF,aAAK,aAAa;AAClB,aAAK,UAAU,OAAO,KAAK,oBAAoB;AAC/C,aAAK,QAAQ,MAAM,UAAU;AAC7B,aAAK,QAAQ,MAAM,SAAS;AAC5B,aAAK,QAAQ,MAAM,SAAS;AAC5B,aAAK,QAAQ,MAAM,aAAa;AAChC,aAAK,QAAQ,MAAM,WAAW;AAC9B,aAAK,QAAQ,MAAM,MAAM;AACzB,aAAK,QAAQ,MAAM,OAAO;AAAA,MAC9B;AAAA,MACA,aAAa;AACT,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,gBAAgB;AACZ,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,cAAc,YAAY;AACtB,cAAM,gBAAgB,KAAK;AAC3B,aAAK,aAAa;AAClB,aAAK,QAAQ,KAAK,SAAS,IAAI,eAAe,KAAK,UAAU,IAAI,aAAa;AAAA,MAClF;AAAA,MACA,SAAS,OAAO;AACZ,aAAK,QAAQ,KAAK,QAAQ,QAAQ,QAAQ,KAAK;AAC/C,aAAK,QAAQ,MAAM,QAAQ,QAAQ;AACnC,cAAM,aAAa,KAAK,YAAY,WAAW,KAAK,WAAW,EAAE;AACjE,iBAAS,MAAM,YAAY,UAAU;AAAA,MACzC;AAAA,MACA,UAAU,QAAQ;AACd,aAAK,SAAS,KAAK,QAAQ,SAAS,SAAS,KAAK;AAClD,aAAK,QAAQ,MAAM,SAAS,SAAS;AACrC,cAAM,aAAa,KAAK,YAAY,WAAW,KAAK,WAAW,EAAE;AACjE,iBAAS,MAAM,YAAY,UAAU;AAAA,MACzC;AAAA,MACA,WAAW;AACP,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,QAAQ,OAAO,QAAQ;AACnB,aAAK,SAAS,SAAS,CAAC;AACxB,aAAK,UAAU,UAAU,CAAC;AAAA,MAC9B;AAAA,MACA,UAAU,UAAU,SAAS;AACzB,YAAI;AACA,iBAAO,KAAK,QAAQ,UAAU,UAAU,OAAO;AAAA,QACnD,SACO,GAAG;AACN,cAAI;AACA,mBAAO,KAAK,QAAQ,UAAU;AAAA,UAClC,SACO,KAAK;AACR,mBAAO,KAAK,MAAM,6BACd,IAAI,UACJ,yEAAyE;AAC7E,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,SAAS;AACjB,QAAM,cAAN,cAA0B,OAAO;AAAA,MAC7B,YAAY,SAAS,EAAE,OAAO,GAAG,QAAQ,GAAG,oBAAoB,MAAM,GAAG;AACrE,cAAM,MAAM;AACZ,aAAK,UAAU,IAAI,UAAU,aAAa,MAAM;AAAA,UAC5C,oBAAoB,OAAO;AAAA,QAC/B,CAAC;AACD,aAAK,QAAQ,OAAO,OAAO,OAAO,MAAM;AAAA,MAC5C;AAAA,IACJ;AACA,YAAQ,cAAc;AACtB,QAAM,YAAN,cAAwB,OAAO;AAAA,MAC3B,YAAY,SAAS,EAAE,OAAO,GAAG,QAAQ,EAAE,GAAG;AAC1C,cAAM,MAAM;AACZ,aAAK,YAAY;AACjB,aAAK,UAAU,IAAI,UAAU,WAAW,IAAI;AAC5C,aAAK,QAAQ,OAAO,OAAO,OAAO,MAAM;AAAA,MAC5C;AAAA,IACJ;AACA,YAAQ,YAAY;AAAA;AAAA;;;AChHpB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,KAAK;AACb,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,YAAQ,KAAK;AAAA,MACT,IAAI,aAAa;AACb,YAAI,OAAO;AACX,gBAAQ,GAAG,cAAc,QAAQ,CAAC,SAAS;AACvC,cAAI,KAAK,eAAe,YAAY;AAChC,mBAAO;AAAA,UACX;AAAA,QACJ,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,aAAa;AAAA,MACb,IAAI,OAAO;AACP,YAAI;AACJ,gBAAQ,GAAG,cAAc,QAAQ,CAAC,SAAS;AACvC,iBAAO,KAAK;AAAA,QAChB,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,eAAe,oBAAI,IAAI;AAAA,MACvB,MAAM,KAAK;AACP,cAAM,oBAAoB,CAAC;AAC3B,gBAAQ,GAAG,cAAc,QAAQ,CAAC,MAAM,QAAQ;AAC5C,gBAAM,EAAE,KAAK,IAAI;AACjB,gBAAM,QAAQ,KAAK,SAAS;AAC5B,gBAAM,qBAAqB,GAAG;AAC9B,cAAI,KAAK,cAAc,QAAW;AAC9B,iBAAK,YAAY,OAAO,KAAK,mBAAmB,GAAG;AAAA,UACvD;AACA,gBAAM,MAAM,MAAM,yBAAyB,KAAK,CAACC,SAAQA,KAAI,OAAO,KAAK,SAAS;AAClF,cAAI,CAAC,KAAK;AACN;AAAA,UACJ;AACA,cAAI,KAAK,eAAe,YAAY;AAChC,kBAAM,eAAe,KAAK,aAAa;AACvC,kBAAM,WAAW,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,gBAAgB,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,gBAAgB,CAAC,CAAC;AAC5G,gBAAI,WAAW,cAAc;AACzB;AAAA,YACJ;AACA,iBAAK,UAAU,EAAE,IAAI,CAAC;AACtB,gBAAI,CAAC,KAAK,WAAW,GAAG;AACpB;AAAA,YACJ;AAAA,UACJ;AACA,eAAK,iBAAiB,KAAK,IAAI;AAC/B,4BAAkB,KAAK,IAAI;AAAA,QAC/B,CAAC;AACD,0BAAkB,QAAQ,CAAC,SAAS;AAChC,eAAK,KAAK,YAAY;AAAA,YAClB,MAAM;AAAA,YACN,QAAQ;AAAA,YACR;AAAA,UACJ,GAAG,IAAI;AAAA,QACX,CAAC;AAAA,MACL;AAAA,MACA,eAAe,KAAK;AAChB,cAAM,YAAY,CAAC;AACnB,gBAAQ,GAAG,cAAc,QAAQ,CAAC,SAAS;AACvC,gBAAM,EAAE,KAAK,IAAI;AACjB,gBAAM,QAAQ,KAAK,SAAS;AAC5B,cAAI,KAAK;AACL,kBAAM,qBAAqB,GAAG;AAAA,UAClC;AACA,gBAAM,MAAM,MAAM,yBAAyB,KAAK,CAACA,SAAQA,KAAI,OAAO,KAAK,SAAS;AAClF,cAAI,CAAC,KAAK;AACN;AAAA,UACJ;AACA,cAAI,KAAK,eAAe,cAAc,KAAK,eAAe,WAAW;AACjE,oBAAQ,GAAG,cAAc;AACzB,qBAAS,MAAM,oBAAoB;AACnC,qBAAS,MAAM,oBAAoB;AACnC,qBAAS,MAAM,sBAAsB;AACrC,iBAAK,aAAa;AAAA,UACtB;AACA,gBAAM,WAAW,KAAK,KAAK,SAAS,KAC/B,KAAK,gBAAgB,SAAS,MAAM,OAAO,KAAK,KAAK;AAC1D,cAAI,YAAY,UAAU,QAAQ,QAAQ,MAAM,IAAI;AAChD,sBAAU,KAAK,QAAQ;AAAA,UAC3B;AAAA,QACJ,CAAC;AACD,kBAAU,QAAQ,CAAC,aAAa;AAC5B,mBAAS,KAAK;AAAA,QAClB,CAAC;AAAA,MACL;AAAA,MACA,cAAc,KAAK;AACf,gBAAQ,GAAG,cAAc,QAAQ,CAAC,MAAM,QAAQ;AAC5C,cAAI,KAAK,eAAe,WAAW;AAC/B,iBAAK,KAAK,KAAK,WAAW;AAAA,cACtB,MAAM;AAAA,cACN,QAAQ,KAAK;AAAA,cACb;AAAA,YACJ,GAAG,IAAI;AAAA,UACX;AACA,cAAI,KAAK,eAAe,YAAY;AAChC,oBAAQ,GAAG,cAAc,OAAO,GAAG;AAAA,UACvC;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAI,SAAS,MAAM,WAAW;AAC1B,aAAO,iBAAiB,WAAW,QAAQ,GAAG,gBAAgB,IAAI;AAClE,aAAO,iBAAiB,YAAY,QAAQ,GAAG,gBAAgB,IAAI;AACnE,aAAO,iBAAiB,eAAe,QAAQ,GAAG,gBAAgB,IAAI;AACtE,aAAO,iBAAiB,aAAa,QAAQ,GAAG,KAAK;AACrD,aAAO,iBAAiB,aAAa,QAAQ,GAAG,KAAK;AACrD,aAAO,iBAAiB,WAAW,QAAQ,GAAG,eAAe,KAAK;AAClE,aAAO,iBAAiB,YAAY,QAAQ,GAAG,eAAe,KAAK;AACnE,aAAO,iBAAiB,eAAe,QAAQ,GAAG,eAAe,KAAK;AAAA,IAC1E;AAAA;AAAA;;;AChHA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,eAAe;AACvB,YAAQ,iBAAiB;AACzB,YAAQ,qBAAqB;AAC7B,YAAQ,qCAAqC;AAC7C,YAAQ,2BAA2B;AACnC,YAAQ,qBAAqB;AAC7B,YAAQ,+BAA+B;AACvC,YAAQ,uBAAuB;AAC/B,YAAQ,0BAA0B;AAClC,YAAQ,sBAAsB;AAC9B,YAAQ,wBAAwB;AAChC,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,aAAS,aAAa,KAAK;AACvB,UAAI,OAAO,KAAK,UAAU,GAAG,GAAG;AAC5B,eAAO,MAAM,MAAM;AAAA,MACvB;AACA,UAAI,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,mBAAmB;AAC3D,eAAO;AAAA,MACX;AACA,UAAI,OAAO,KAAK,WAAW,GAAG,GAAG;AAC7B,eAAO;AAAA,MACX;AACA,aAAO,OAAO,UAAU,SAAS,KAAK,GAAG;AAAA,IAC7C;AACA,aAAS,aAAa,KAAK;AACvB,UAAI,MAAM,KAAK;AACX,eAAO;AAAA,MACX,WACS,MAAM,GAAG;AACd,eAAO;AAAA,MACX;AACA,aAAO,KAAK,MAAM,GAAG;AAAA,IACzB;AACA,aAAS,eAAe,KAAK;AACzB,UAAI,MAAM,GAAG;AACT,eAAO;AAAA,MACX,WACS,MAAM,MAAQ;AACnB,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AACA,aAAS,qBAAqB;AAC1B,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,cAAI,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG;AAC7B,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,4CAA4C;AAAA,UACpD;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,mCAAmC,cAAc;AACtD,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,cAAI,WAAW,OAAO,KAAK,UAAU,GAAG;AACxC,cAAI,eAAe,OAAO,KAAK,SAAS,GAAG,KAAK,IAAI,UAAU;AAC9D,cAAI,CAAC,YAAY,CAAC,cAAc;AAC5B,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,gEACA,eACA,GAAG;AAAA,UACX;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,2BAA2B;AAChC,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,gBAAM,WAAW,OAAO,KAAK,UAAU,GAAG;AAC1C,gBAAM,SAAS,QAAQ;AACvB,cAAI,EAAE,YAAY,SAAS;AACvB,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,sDAAsD;AAAA,UAC9D;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,qBAAqB;AAC1B,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,cAAI,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG;AAC7B,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,4CAA4C;AAAA,UACpD;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,+BAA+B;AACpC,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,gBAAM,WAAW,OAAO,KAAK,UAAU,GAAG;AAC1C,gBAAM,aAAa,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,6BACtD,OAAO,IAAI,cAAc;AAC9B,cAAI,EAAE,YAAY,aAAa;AAC3B,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,iEAAiE;AAAA,UACzE;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,uBAAuB;AAC5B,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,cAAI,CAAC,OAAO,KAAK,YAAY,GAAG,GAAG;AAC/B,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,8CAA8C;AAAA,UACtD;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,0BAA0B;AAC/B,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,gBAAM,aAAa,YAAY,OAAO,eAAe,SAAS,IAAI;AAClE,cAAI,cAAc,eAAe,YAAY;AACzC,mBAAO;AAAA,UACX;AACA,cAAI,CAAC,OAAO,KAAK,SAAS,GAAG,GAAG;AAC5B,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,sDAAsD;AAAA,UAC9D,OACK;AACD,gBAAI,QAAQ,SAAU,MAAM;AACxB,kBAAI,CAAC,OAAO,KAAK,UAAU,IAAI,GAAG;AAC9B,uBAAO,KAAK,KAAK,MACb,OACA,yCACA,OACA,4CAA4C;AAAA,cACpD;AAAA,YACJ,CAAC;AAAA,UACL;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,sBAAsB;AAC3B,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,gBAAM,SAAS,QAAQ,QAAQ,QAAQ;AACvC,cAAI,CAAC,QAAQ;AACT,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,6CAA6C;AAAA,UACrD;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,aAAS,sBAAsB,YAAY;AACvC,UAAI,SAAS,MAAM,cAAc;AAC7B,eAAO,SAAU,KAAK,MAAM;AACxB,cAAI,QAAQ,UAAa,QAAQ,MAAM;AACnC,mBAAO;AAAA,UACX;AACA,cAAI,CAAC,OAAO,KAAK,SAAS,GAAG,GAAG;AAC5B,mBAAO,KAAK,KAAK,aAAa,GAAG,IAC7B,gCACA,OACA,gEACA,UAAU;AAAA,UAClB;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;AC9LA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,UAAU;AAClB,QAAM,SAAS;AACf,QAAM,eAAe;AACrB,QAAM,MAAM;AACZ,QAAM,MAAM;AACZ,YAAQ,UAAU;AAAA,MACd,gBAAgB,aAAa,MAAM,KAAK,WAAW,OAAO;AACtD,gBAAQ,QAAQ,UAAU,aAAa,MAAM,GAAG;AAChD,gBAAQ,QAAQ,UAAU,aAAa,MAAM,WAAW,KAAK;AAC7D,gBAAQ,QAAQ,0BAA0B,aAAa,IAAI;AAAA,MAC/D;AAAA,MACA,UAAU,aAAa,MAAM,KAAK;AAC9B,cAAM,SAAS,MAAM,OAAO,KAAK,YAAY,IAAI;AACjD,oBAAY,UAAU,MAAM,IACxB,YAAY,UAAU,MAAM,KACxB,WAAY;AACR,gBAAM,MAAM,KAAK,MAAM,IAAI;AAC3B,iBAAO,QAAQ,SAAY,MAAM;AAAA,QACrC;AAAA,MACZ;AAAA,MACA,UAAU,aAAa,MAAM,WAAW,OAAO;AAC3C,cAAM,SAAS,MAAM,OAAO,KAAK,YAAY,IAAI;AACjD,YAAI,CAAC,YAAY,UAAU,MAAM,GAAG;AAChC,kBAAQ,QAAQ,gBAAgB,aAAa,MAAM,WAAW,KAAK;AAAA,QACvE;AAAA,MACJ;AAAA,MACA,gBAAgB,aAAa,MAAM,WAAW,OAAO;AACjD,cAAM,SAAS,MAAM,OAAO,KAAK,YAAY,IAAI;AACjD,oBAAY,UAAU,MAAM,IAAI,SAAU,KAAK;AAC3C,cAAI,aAAa,QAAQ,UAAa,QAAQ,MAAM;AAChD,kBAAM,UAAU,KAAK,MAAM,KAAK,IAAI;AAAA,UACxC;AACA,eAAK,SAAS,MAAM,GAAG;AACvB,cAAI,OAAO;AACP,kBAAM,KAAK,IAAI;AAAA,UACnB;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,0BAA0B,aAAa,MAAM,YAAY,WAAW,OAAO;AACvE,cAAM,MAAM,WAAW,QAAQ,aAAa,OAAO,KAAK,aAAa,SAAS,MAAM,WAAW,IAAI,GAAG,SAAS,MAAM,WAAW,IAAI;AACpI,oBAAY,UAAU,MAAM,IAAI,WAAY;AACxC,gBAAM,MAAM,CAAC;AACb,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,kBAAM,YAAY,WAAW,CAAC;AAC9B,gBAAI,SAAS,IAAI,KAAK,QAAQ,OAAO,WAAW,SAAS,CAAC;AAAA,UAC9D;AACA,iBAAO;AAAA,QACX;AACA,cAAM,kBAAkB,GAAG,aAAa,uBAAuB,UAAU;AACzE,oBAAY,UAAU,MAAM,IAAI,SAAU,KAAK;AAC3C,gBAAM,SAAS,KAAK,MAAM,IAAI;AAC9B,cAAI,WAAW;AACX,kBAAM,UAAU,KAAK,MAAM,KAAK,IAAI;AAAA,UACxC;AACA,cAAI,gBAAgB;AAChB,2BAAe,KAAK,MAAM,KAAK,IAAI;AAAA,UACvC;AACA,qBAAW,OAAO,KAAK;AACnB,gBAAI,CAAC,IAAI,eAAe,GAAG,GAAG;AAC1B;AAAA,YACJ;AACA,iBAAK,SAAS,OAAO,WAAW,GAAG,GAAG,IAAI,GAAG,CAAC;AAAA,UAClD;AACA,cAAI,CAAC,KAAK;AACN,uBAAW,QAAQ,CAAC,cAAc;AAC9B,mBAAK,SAAS,OAAO,WAAW,SAAS,GAAG,MAAS;AAAA,YACzD,CAAC;AAAA,UACL;AACA,eAAK,iBAAiB,MAAM,QAAQ,GAAG;AACvC,cAAI,OAAO;AACP,kBAAM,KAAK,IAAI;AAAA,UACnB;AACA,iBAAO;AAAA,QACX;AACA,gBAAQ,QAAQ,0BAA0B,aAAa,IAAI;AAAA,MAC/D;AAAA,MACA,0BAA0B,aAAa,MAAM;AACzC,cAAM,kBAAkB,OAAO,KAAK,YAAY,IAAI,GAAG,SAAS,MAAM,iBAAiB,SAAS,MAAM;AACtG,oBAAY,UAAU,IAAI,IAAI,WAAY;AACtC,cAAI,UAAU,QAAQ;AAClB,iBAAK,MAAM,EAAE,UAAU,CAAC,CAAC;AACzB,mBAAO;AAAA,UACX;AACA,iBAAO,KAAK,MAAM,EAAE;AAAA,QACxB;AAAA,MACJ;AAAA,MACA,0BAA0B,aAAa,MAAM,KAAK,WAAW;AACzD,eAAO,KAAK,MAAM,uBAAuB,IAAI;AAC7C,cAAM,SAAS,MAAM,OAAO,KAAK,YAAY,IAAI;AACjD,cAAM,UAAU,OACZ;AACJ,oBAAY,UAAU,MAAM,IAAI,WAAY;AACxC,iBAAO,KAAK,MAAM,OAAO;AACzB,gBAAM,MAAM,KAAK,MAAM,IAAI;AAC3B,iBAAO,QAAQ,SAAY,MAAM;AAAA,QACrC;AACA,gBAAQ,QAAQ,UAAU,aAAa,MAAM,WAAW,WAAY;AAChE,iBAAO,KAAK,MAAM,OAAO;AAAA,QAC7B,CAAC;AACD,gBAAQ,QAAQ,0BAA0B,aAAa,IAAI;AAAA,MAC/D;AAAA,MACA,WAAW,aAAa,SAAS;AAC7B,eAAO,KAAK,KAAK,SAAS,SAAU,eAAe,eAAe;AAC9D,gBAAM,SAAS,YAAY,UAAU,aAAa;AAClD,gBAAM,YAAY,MAAM,OAAO,KAAK,YAAY,aAAa;AAC7D,gBAAM,YAAY,MAAM,OAAO,KAAK,YAAY,aAAa;AAC7D,mBAAS,aAAa;AAClB,mBAAO,MAAM,MAAM,SAAS;AAC5B,mBAAO,KAAK,MAAM,MACd,gBACA,4DACA,gBACA,YAAY;AAAA,UACpB;AACA,sBAAY,UAAU,aAAa,IAAI;AACvC,sBAAY,UAAU,SAAS,IAAI;AACnC,sBAAY,UAAU,SAAS,IAAI;AAAA,QACvC,CAAC;AAAA,MACL;AAAA,MACA,iBAAiB;AACb,aAAK,kBAAkB;AAAA,MAC3B;AAAA,IACJ;AAAA;AAAA;;;AC7HA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,OAAO;AACf,QAAM,WAAW;AACjB,QAAM,gBAAgB;AACtB,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,eAAe;AACrB,QAAM,mBAAmB;AAAzB,QAA4C,gBAAgB;AAA5D,QAAiF,qBAAqB;AAAtG,QAA2H,iBAAiB;AAA5I,QAA6J,SAAS;AAAtK,QAAgL,SAAS;AAAzL,QAAmM,WAAW;AAA9M,QAA0N,QAAQ;AAAlO,QAA2O,YAAY;AAAvP,QAAoQ,aAAa;AAAjR,QAA+R,aAAa;AAA5S,QAA0T,eAAe;AAAzU,QAAyV,eAAe;AAAxW,QAAwX,aAAa;AAArY,QAAmZ,aAAa;AAAha,QAA6b,MAAM;AAAnc,QAA0c,QAAQ;AAAld,QAA2d,QAAQ;AAAne,QAAwe,QAAQ;AAAhf,QAAyf,YAAY;AAArgB,QAAkhB,cAAc;AAAhiB,QAAyiB,UAAU;AAAnjB,QAA8jB,uBAAuB;AAAA,MACjlB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,EAAE,KAAK,KAAK;AACZ,QAAI,YAAY;AAChB,QAAM,OAAN,MAAM,MAAK;AAAA,MACP,YAAY,QAAQ;AAChB,aAAK,MAAM;AACX,aAAK,iBAAiB,CAAC;AACvB,aAAK,QAAQ,CAAC;AACd,aAAK,QAAQ;AACb,aAAK,qBAAqB;AAC1B,aAAK,SAAS;AACd,aAAK,SAAS,oBAAI,IAAI;AACtB,aAAK,yBAAyB,oBAAI,IAAI;AACtC,aAAK,WAAW;AAChB,aAAK,2BAA2B;AAChC,aAAK,2BAA2B;AAChC,aAAK,kBAAkB;AACvB,aAAK,gBAAgB;AACrB,aAAK,eAAe;AACpB,aAAK,0BAA0B;AAC/B,aAAK,SAAS,MAAM;AACpB,aAAK,0BAA0B;AAAA,MACnC;AAAA,MACA,cAAc;AACV,eAAO;AAAA,MACX;AAAA,MACA,YAAY,MAAM;AACd,aAAK,SAAS,aAAa,SAAS,uBAChC,KAAK,OAAO,IAAI,IAAI,GAAG;AACvB,eAAK,OAAO,IAAI,IAAI,EAAE,QAAQ;AAAA,QAClC,WACS,MAAM;AACX,eAAK,OAAO,OAAO,IAAI;AAAA,QAC3B,OACK;AACD,eAAK,OAAO,MAAM;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,UAAU,MAAM,eAAe;AAC3B,YAAI,QAAQ,KAAK,OAAO,IAAI,IAAI;AAChC,cAAM,cAAc,SAAS,aAAa,SAAS;AACnD,cAAM,UAAU,UAAU,UAAc,eAAe,MAAM,UAAU;AACvE,YAAI,SAAS;AACT,kBAAQ,cAAc,KAAK,IAAI;AAC/B,eAAK,OAAO,IAAI,MAAM,KAAK;AAAA,QAC/B;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW,MAAM,MAAM,QAAQ;AAC3B,YAAI,CAAC,KAAK,uBAAuB,IAAI,IAAI,GAAG;AACxC,gBAAM,aAAa,KAAK,IAAI,CAAC,QAAQ,MAAM,cAAc,EAAE,KAAK,KAAK;AACrE,eAAK,GAAG,YAAY,MAAM;AACtB,iBAAK,YAAY,IAAI;AAAA,UACzB,CAAC;AACD,eAAK,uBAAuB,IAAI,MAAM,IAAI;AAAA,QAC9C;AACA,eAAO,KAAK,UAAU,MAAM,MAAM;AAAA,MACtC;AAAA,MACA,kBAAkB;AACd,eAAO,KAAK,OAAO,IAAI,MAAM;AAAA,MACjC;AAAA,MACA,6BAA6B,MAAM;AAC/B,aAAK,YAAY,IAAI;AACrB,YAAI,SAAS,oBAAoB;AAC7B,eAAK,KAAK,yBAAyB;AAAA,QACvC;AAAA,MACJ;AAAA,MACA,aAAa;AACT,YAAI,KAAK,OAAO,IAAI,MAAM,GAAG;AACzB,gBAAM,EAAE,OAAO,QAAQ,KAAK,OAAO,IAAI,KAAK,OAAO,IAAI,MAAM;AAC7D,iBAAO,KAAK,cAAc,OAAO,QAAQ,KAAK,MAAM;AACpD,eAAK,OAAO,OAAO,MAAM;AAAA,QAC7B;AACA,aAAK,6BAA6B;AAClC,aAAK,aAAa;AAClB,eAAO;AAAA,MACX;AAAA,MACA,MAAM,QAAQ;AACV,cAAM,OAAO,UAAU,CAAC;AACxB,YAAI,OAAO,CAAC;AACZ,YAAI,KAAK,MAAM,UACX,KAAK,MAAM,UACX,KAAK,UAAU,UACf,KAAK,WAAW,QAAW;AAC3B,iBAAO,KAAK,cAAc;AAAA,YACtB,eAAe;AAAA,YACf,YAAY,KAAK,UAAU,KAAK;AAAA,UACpC,CAAC;AAAA,QACL;AACA,YAAI,QAAQ,KAAK,KAAK,KAAK,SAAS,KAAK,KAAK,GAAG,SAAS,KAAK,KAAK,KAAK,UAAU,KAAK,MAAM,GAAG,aAAa,KAAK,YAAY,IAAI,KAAK,MAAM,SAAY,KAAK,MAAM,KAAK,CAAC,IAAI,KAAK,GAAG,IAAI,KAAK,MAAM,SAAY,KAAK,MAAM,KAAK,CAAC,IAAI,KAAK,GAAG,SAAS,KAAK,UAAU,GAAG,aAAa,KAAK,cAAc,OAAO,sBAAsB,KAAK,uBAAuB;AACnW,YAAI,CAAC,SAAS,CAAC,QAAQ;AACnB,iBAAO,KAAK,MAAM,mFAAmF;AACrG;AAAA,QACJ;AACA,cAAM,gBAAgB,KAAK,IAAI,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,IAAI;AACnE,cAAM,gBAAgB,KAAK,IAAI,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,IAAI;AACnE,iBAAS,SAAS,IAAI;AACtB,kBAAU,SAAS,IAAI;AACvB,aAAK;AACL,aAAK;AACL,cAAM,oBAAoB,IAAI,SAAS,YAAY;AAAA,UAC/C;AAAA,UACA;AAAA,UACA;AAAA,QACJ,CAAC,GAAG,qBAAqB,IAAI,SAAS,YAAY;AAAA,UAC9C;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,oBAAoB;AAAA,QACxB,CAAC,GAAG,kBAAkB,IAAI,SAAS,UAAU;AAAA,UACzC,YAAY;AAAA,UACZ;AAAA,UACA;AAAA,QACJ,CAAC,GAAG,eAAe,kBAAkB,WAAW,GAAG,aAAa,gBAAgB,WAAW;AAC3F,cAAM,eAAe,IAAI,SAAS,YAAY;AAAA,UAC1C,OAAO,kBAAkB,QAAQ,kBAAkB,aAAa,KAAK,IAAI,CAAC;AAAA,UAC1E,QAAQ,kBAAkB,SAAS,kBAAkB,aAAa,KAAK,IAAI,CAAC;AAAA,UAC5E,YAAY,kBAAkB;AAAA,QAClC,CAAC,GAAG,gBAAgB,aAAa,WAAW;AAC5C,wBAAgB,UAAU;AAC1B,0BAAkB,UAAU;AAC5B,aAAK,OAAO,OAAO,MAAM;AACzB,aAAK,kBAAkB;AACvB,YAAI,KAAK,0BAA0B,OAAO;AACtC,4BAAkB,WAAW,EAAE,SAAS,wBAAwB;AAChE,6BAAmB,WAAW,EAAE,SAAS,wBAAwB;AAAA,QACrE;AACA,qBAAa,KAAK;AAClB,mBAAW,KAAK;AAChB,sBAAc,KAAK;AACnB,qBAAa,UAAU,CAAC,GAAG,CAAC,CAAC;AAC7B,mBAAW,UAAU,CAAC,GAAG,CAAC,CAAC;AAC3B,sBAAc,UAAU,CAAC,GAAG,CAAC,CAAC;AAC9B,qBAAa,IAAI;AACjB,qBAAa,IAAI;AACjB,aAAK,gBAAgB;AACrB,aAAK,6BAA6B,gBAAgB;AAClD,aAAK,6BAA6B,cAAc;AAChD,aAAK,UAAU,mBAAmB,MAAM,YAAY;AACpD,aAAK,QAAQ,iBAAiB,IAAI;AAClC,aAAK,gBAAgB;AACrB,qBAAa,QAAQ;AACrB,mBAAW,QAAQ;AACnB,YAAI,YAAY;AACZ,uBAAa,KAAK;AAClB,uBAAa,UAAU;AACvB,uBAAa,KAAK,GAAG,GAAG,OAAO,MAAM;AACrC,uBAAa,UAAU;AACvB,uBAAa,QAAQ,eAAe,KAAK;AACzC,uBAAa,QAAQ,aAAa,CAAC;AACnC,uBAAa,OAAO;AACpB,uBAAa,QAAQ;AAAA,QACzB;AACA,aAAK,OAAO,IAAI,QAAQ;AAAA,UACpB,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,KAAK;AAAA,UACL,QAAQ;AAAA,UACR;AAAA,UACA;AAAA,QACJ,CAAC;AACD,aAAK,aAAa;AAClB,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,eAAO,KAAK,OAAO,IAAI,MAAM;AAAA,MACjC;AAAA,MACA,cAAc,QAAQ;AAClB,cAAM,IAAI,MAAM,sCAAsC;AAAA,MAC1D;AAAA,MACA,iBAAiB,MAAM,KAAK;AACxB,cAAM,SAAS;AAAA,UACX,EAAE,GAAG,KAAK,GAAG,GAAG,KAAK,EAAE;AAAA,UACvB,EAAE,GAAG,KAAK,IAAI,KAAK,OAAO,GAAG,KAAK,EAAE;AAAA,UACpC,EAAE,GAAG,KAAK,IAAI,KAAK,OAAO,GAAG,KAAK,IAAI,KAAK,OAAO;AAAA,UAClD,EAAE,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,KAAK,OAAO;AAAA,QACzC;AACA,YAAI,OAAO,UAAU,OAAO,UAAU,OAAO,WAAW,OAAO;AAC/D,cAAM,QAAQ,KAAK,qBAAqB,GAAG;AAC3C,eAAO,QAAQ,SAAU,OAAO;AAC5B,gBAAM,cAAc,MAAM,MAAM,KAAK;AACrC,cAAI,SAAS,QAAW;AACpB,mBAAO,OAAO,YAAY;AAC1B,mBAAO,OAAO,YAAY;AAAA,UAC9B;AACA,iBAAO,KAAK,IAAI,MAAM,YAAY,CAAC;AACnC,iBAAO,KAAK,IAAI,MAAM,YAAY,CAAC;AACnC,iBAAO,KAAK,IAAI,MAAM,YAAY,CAAC;AACnC,iBAAO,KAAK,IAAI,MAAM,YAAY,CAAC;AAAA,QACvC,CAAC;AACD,eAAO;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO,OAAO;AAAA,UACd,QAAQ,OAAO;AAAA,QACnB;AAAA,MACJ;AAAA,MACA,uBAAuB,SAAS;AAC5B,gBAAQ,KAAK;AACb,gBAAQ,cAAc,IAAI;AAC1B,gBAAQ,+BAA+B,IAAI;AAC3C,cAAM,cAAc,KAAK,gBAAgB;AACzC,gBAAQ,UAAU,YAAY,GAAG,YAAY,CAAC;AAC9C,cAAM,cAAc,KAAK,sBAAsB;AAC/C,cAAM,QAAQ,YAAY;AAC1B,gBAAQ,UAAU,YAAY,SAAS,GAAG,GAAG,YAAY,QAAQ,OAAO,YAAY,SAAS,KAAK;AAClG,gBAAQ,QAAQ;AAAA,MACpB;AAAA,MACA,qBAAqB,SAAS;AAC1B,cAAM,cAAc,KAAK,gBAAgB,GAAG,YAAY,YAAY;AACpE,gBAAQ,KAAK;AACb,gBAAQ,UAAU,YAAY,GAAG,YAAY,CAAC;AAC9C,gBAAQ,UAAU,UAAU,SAAS,GAAG,GAAG,UAAU,QAAQ,UAAU,YAAY,UAAU,SAAS,UAAU,UAAU;AAC1H,gBAAQ,QAAQ;AAAA,MACpB;AAAA,MACA,wBAAwB;AACpB,YAAI,UAAU,KAAK,QAAQ,GAAG,eAAe,KAAK,gBAAgB,GAAG,cAAc,aAAa,OAAO,eAAe,aAAa,QAAQ,gBAAgB,aAAa,WAAW,GAAG,KAAK,WAAW,GAAG;AACzM,YAAI,SAAS;AACT,cAAI,CAAC,KAAK,iBAAiB;AACvB,kBAAM,QAAQ,YAAY;AAC1B,yBAAa,QAAQ,YAAY,QAAQ,YAAY,YAAY,YAAY,SAAS,YAAY,UAAU;AAC5G,gBAAI;AACA,oBAAM,QAAQ;AACd,4BAAc,MAAM;AACpB,4BAAc,UAAU,YAAY,SAAS,GAAG,GAAG,YAAY,SAAS,IAAI,OAAO,YAAY,UAAU,IAAI,KAAK;AAClH,0BAAY,cAAc,aAAa,GAAG,GAAG,aAAa,SAAS,GAAG,aAAa,UAAU,CAAC;AAC9F,mBAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,yBAAS,QAAQ,CAAC;AAClB,oBAAI,OAAO,WAAW,YAAY;AAC9B,yBAAO,KAAK,MAAM,gDACd,OAAO,SACP,wCAAwC;AAC5C;AAAA,gBACJ;AACA,uBAAO,KAAK,MAAM,SAAS;AAC3B,8BAAc,aAAa,WAAW,GAAG,CAAC;AAAA,cAC9C;AAAA,YACJ,SACO,GAAG;AACN,qBAAO,KAAK,MAAM,6BACd,EAAE,UACF,4EAA4E;AAAA,YACpF;AACA,iBAAK,kBAAkB;AAAA,UAC3B;AACA,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,GAAG,QAAQ,SAAS;AAChB,YAAI,KAAK,QAAQ;AACb,eAAK,OAAO,OAAO,aAAa;AAAA,QACpC;AACA,YAAI,UAAU,WAAW,GAAG;AACxB,iBAAO,KAAK,UAAU,MAAM,MAAM,SAAS;AAAA,QAC/C;AACA,cAAM,SAAS,OAAO,MAAM,KAAK;AACjC,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,gBAAM,QAAQ,OAAO,CAAC;AACtB,gBAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,gBAAM,YAAY,MAAM,CAAC;AACzB,gBAAM,OAAO,MAAM,CAAC,KAAK;AACzB,cAAI,CAAC,KAAK,eAAe,SAAS,GAAG;AACjC,iBAAK,eAAe,SAAS,IAAI,CAAC;AAAA,UACtC;AACA,eAAK,eAAe,SAAS,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAAA,QACzD;AACA,eAAO;AAAA,MACX;AAAA,MACA,IAAI,QAAQ,UAAU;AAClB,YAAI,UAAU,UAAU,IAAI,MAAM,KAAK,GAAG,MAAM,OAAO,QAAQ,GAAG,GAAG,OAAO,OAAO,WAAW;AAC9F,aAAK,UAAU,KAAK,OAAO,OAAO,aAAa;AAC/C,YAAI,CAAC,QAAQ;AACT,eAAK,KAAK,KAAK,gBAAgB;AAC3B,iBAAK,KAAK,CAAC;AAAA,UACf;AAAA,QACJ;AACA,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,kBAAQ,OAAO,CAAC;AAChB,kBAAQ,MAAM,MAAM,GAAG;AACvB,sBAAY,MAAM,CAAC;AACnB,iBAAO,MAAM,CAAC;AACd,cAAI,WAAW;AACX,gBAAI,KAAK,eAAe,SAAS,GAAG;AAChC,mBAAK,KAAK,WAAW,MAAM,QAAQ;AAAA,YACvC;AAAA,UACJ,OACK;AACD,iBAAK,KAAK,KAAK,gBAAgB;AAC3B,mBAAK,KAAK,GAAG,MAAM,QAAQ;AAAA,YAC/B;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,cAAc,KAAK;AACf,cAAM,IAAI;AAAA,UACN,QAAQ;AAAA,UACR,MAAM,IAAI;AAAA,UACV;AAAA,QACJ;AACA,aAAK,KAAK,IAAI,MAAM,CAAC;AACrB,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB,MAAM,SAAS;AAC5B,aAAK,GAAG,MAAM,SAAU,KAAK;AACzB,kBAAQ,KAAK,MAAM,IAAI,GAAG;AAAA,QAC9B,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,MAAM;AACtB,aAAK,IAAI,IAAI;AACb,eAAO;AAAA,MACX;AAAA,MACA,UAAU,OAAO,UAAU,SAAS;AAChC,cAAM,WAAW;AACjB,aAAK,GAAG,OAAO,SAAU,KAAK;AAC1B,gBAAM,UAAU,IAAI,OAAO,cAAc,UAAU,MAAM,QAAQ;AACjE,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,kBAAM,OAAO,KAAK,YAAY,GAAG;AACjC,gBAAI,gBAAgB,QAAQ,CAAC;AAC7B,oBAAQ,KAAK,QAAQ,CAAC,GAAG,GAAG;AAAA,UAChC;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,SAAS;AACL,YAAI,KAAK,WAAW,GAAG;AACnB,eAAK,SAAS;AAAA,QAClB;AACA,sBAAc,GAAG,cAAc,OAAO,KAAK,GAAG;AAC9C,aAAK,QAAQ;AACb,eAAO;AAAA,MACX;AAAA,MACA,eAAe;AACX,aAAK,6BAA6B,kBAAkB;AACpD,aAAK,6BAA6B,gBAAgB;AAClD,aAAK,6BAA6B,cAAc;AAChD,aAAK,6BAA6B,KAAK;AACvC,aAAK,6BAA6B,OAAO;AACzC,aAAK,6BAA6B,SAAS;AAAA,MAC/C;AAAA,MACA,UAAU;AACN,aAAK,aAAa;AAClB,cAAM,SAAS,KAAK,UAAU;AAC9B,YAAI,UAAU,OAAO,UAAU;AAC3B,iBAAO,SAAS,OAAO,KAAK,OAAO,CAAC;AACpC,iBAAO,oBAAoB;AAC3B,eAAK,SAAS;AAAA,QAClB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,OAAO;AACZ,aAAK,WAAW;AAChB,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,MAAM;AACV,cAAM,SAAS,QAAQ,OAAO,KAAK,YAAY,IAAI;AACnD,YAAI,OAAO,KAAK,YAAY,KAAK,MAAM,CAAC,GAAG;AACvC,iBAAO,KAAK,MAAM,EAAE;AAAA,QACxB;AACA,eAAO,KAAK,MAAM,IAAI;AAAA,MAC1B;AAAA,MACA,eAAe;AACX,YAAI,SAAS,KAAK,UAAU,GAAG,YAAY,CAAC;AAC5C,eAAO,QAAQ;AACX,oBAAU,KAAK,MAAM;AACrB,mBAAS,OAAO,UAAU;AAAA,QAC9B;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,eAAQ,KAAK,SAAS,CAAC;AAAA,MAC3B;AAAA,MACA,SAAS,QAAQ;AACb,aAAK,uBAAuB,MAAM;AAC9B,cAAI,KAAK;AACT,cAAI,CAAC,QAAQ;AACT,mBAAO;AAAA,UACX;AACA,eAAK,OAAO,QAAQ;AAChB,gBAAI,QAAQ,UAAU;AAClB;AAAA,YACJ;AACA,qBAAS,MAAM,OAAO,KAAK,YAAY,GAAG;AAC1C,gBAAI,OAAO,KAAK,YAAY,KAAK,MAAM,CAAC,GAAG;AACvC,mBAAK,MAAM,EAAE,OAAO,GAAG,CAAC;AAAA,YAC5B,OACK;AACD,mBAAK,SAAS,KAAK,OAAO,GAAG,CAAC;AAAA,YAClC;AAAA,UACJ;AAAA,QACJ,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,cAAc;AACV,eAAO,KAAK,UAAU,WAAW,KAAK,YAAY;AAAA,MACtD;AAAA,MACA,aAAa,YAAY;AACrB,cAAM,YAAY,KAAK,UAAU;AACjC,YAAI,CAAC,WAAW;AACZ,iBAAO;AAAA,QACX;AACA,cAAM,SAAS,KAAK,UAAU;AAC9B,YAAI,UAAU,WAAW,cAAc,SAAS,YAAY;AACxD,iBAAO,OAAO,aAAa,UAAU;AAAA,QACzC,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,YAAY;AACR,eAAO,KAAK,UAAU,SAAS,KAAK,UAAU;AAAA,MAClD;AAAA,MACA,WAAW,YAAY;AACnB,cAAM,UAAU,KAAK,QAAQ;AAC7B,YAAI,CAAC,SAAS;AACV,iBAAO;AAAA,QACX;AACA,cAAM,SAAS,KAAK,UAAU;AAC9B,YAAI,UAAU,WAAW,cAAc,SAAS,YAAY;AACxD,iBAAO,OAAO,WAAW,UAAU;AAAA,QACvC,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,cAAc,KAAK,gBAAgB,OAAO;AACtC,YAAI,KAAK;AACL,iBAAO,KAAK,WAAW,GAAG,KAAK,KAAK,aAAa,GAAG;AAAA,QACxD;AACA,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,iBAAiB;AACrB,sBAAc,GAAG,cAAc,QAAQ,CAAC,SAAS;AAC7C,cAAI,KAAK,eAAe,YAAY;AAChC;AAAA,UACJ,WACS,KAAK,KAAK,aAAa,SAAS;AACrC,6BAAiB;AAAA,UACrB,WACS,KAAK,KAAK,SAAS,MAAM,OAAO;AACrC,6BAAiB;AAAA,UACrB;AAAA,QACJ,CAAC;AACD,cAAM,WAAW,CAAC,iBACd,CAAC,SAAS,MAAM,qBACf,kBAAkB,SAAS,MAAM,eAAe;AACrD,eAAO,KAAK,YAAY,KAAK,KAAK,UAAU,KAAK,CAAC;AAAA,MACtD;AAAA,MACA,OAAO;AACH,aAAK,QAAQ,IAAI;AACjB,eAAO;AAAA,MACX;AAAA,MACA,OAAO;AACH,aAAK,QAAQ,KAAK;AAClB,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,eAAO,KAAK,SAAS;AAAA,MACzB;AAAA,MACA,oBAAoB;AAChB,YAAI,QAAQ,KAAK,SAAS,GAAG,OAAO,MAAM,QAAQ,GAAG,OAAO,KAAK,GAAG;AACpE,iBAAS,YAAY,UAAU;AAC3B,kBAAQ,CAAC;AACT,gBAAM,SAAS;AACf,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,oBAAQ,SAAS,CAAC;AAClB;AACA,gBAAI,MAAM,aAAa,OAAO;AAC1B,sBAAQ,MAAM,OAAO,MAAM,YAAY,EAAE,MAAM,CAAC;AAAA,YACpD;AACA,gBAAI,MAAM,QAAQ,KAAK,KAAK;AACxB,kBAAI;AAAA,YACR;AAAA,UACJ;AACA,cAAI,MAAM,SAAS,KAAK,MAAM,CAAC,EAAE,SAAS,KAAK,OAAO;AAClD,wBAAY,KAAK;AAAA,UACrB;AAAA,QACJ;AACA,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,KAAK,aAAa,eAAe,OAAO;AACxC,sBAAY,MAAM,YAAY,CAAC;AAAA,QACnC;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,YAAI,QAAQ,GAAG,SAAS,KAAK;AAC7B,eAAO,QAAQ;AACX;AACA,mBAAS,OAAO;AAAA,QACpB;AACA,eAAO;AAAA,MACX;AAAA,MACA,uBAAuB,MAAM;AACzB,aAAK,2BAA2B;AAChC,aAAK;AACL,aAAK,2BAA2B;AAChC,YAAI,KAAK,0BAA0B;AAC/B,eAAK,YAAY,SAAS;AAC1B,eAAK,6BAA6B,kBAAkB;AAAA,QACxD;AACA,aAAK,2BAA2B;AAAA,MACpC;AAAA,MACA,YAAY,KAAK;AACb,aAAK,uBAAuB,MAAM;AAC9B,eAAK,EAAE,IAAI,CAAC;AACZ,eAAK,EAAE,IAAI,CAAC;AAAA,QAChB,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,cAAc;AACV,eAAO;AAAA,UACH,GAAG,KAAK,EAAE;AAAA,UACV,GAAG,KAAK,EAAE;AAAA,QACd;AAAA,MACJ;AAAA,MACA,6BAA6B;AACzB,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,cAAM,MAAM,MAAM,mBAAmB;AACrC,YAAI,CAAC,KAAK;AACN,iBAAO;AAAA,QACX;AACA,cAAM,YAAY,KAAK,qBAAqB,EAAE,KAAK;AACnD,kBAAU,OAAO;AACjB,eAAO,UAAU,MAAM,GAAG;AAAA,MAC9B;AAAA,MACA,oBAAoB,KAAK;AACrB,YAAI,mBAAmB;AACvB,YAAI,SAAS,KAAK;AAClB,eAAO,QAAQ;AACX,cAAI,OAAO,SAAS,GAAG;AACnB,+BAAmB;AACnB;AAAA,UACJ;AACA,mBAAS,OAAO;AAAA,QACpB;AACA,YAAI,oBAAoB,CAAC,KAAK;AAC1B,gBAAM;AAAA,QACV;AACA,cAAM,iBAAiB,KAAK,qBAAqB,GAAG,EAAE,UAAU,GAAG,oBAAoB,IAAI,OAAO,UAAU,GAAG,SAAS,KAAK,OAAO;AACpI,0BAAkB,IAAI,eAAe,MAAM;AAC3C,0BAAkB,UAAU,OAAO,GAAG,OAAO,CAAC;AAC9C,eAAO,kBAAkB,eAAe;AAAA,MAC5C;AAAA,MACA,oBAAoB,KAAK;AACrB,cAAM,EAAE,GAAG,GAAG,GAAG,UAAU,IAAI,KAAK,gBAAgB;AACpD,aAAK,MAAM,IAAI;AACf,aAAK,MAAM,IAAI;AACf,aAAK,YAAY,SAAS;AAC1B,cAAM,KAAK,KAAK,sBAAsB,EAAE,KAAK;AAC7C,WAAG,OAAO;AACV,WAAG,UAAU,IAAI,GAAG,IAAI,CAAC;AACzB,cAAM;AAAA,UACF,GAAG,KAAK,MAAM,IAAI,GAAG,eAAe,EAAE;AAAA,UACtC,GAAG,KAAK,MAAM,IAAI,GAAG,eAAe,EAAE;AAAA,QAC1C;AACA,aAAK,cAAc,SAAS;AAC5B,aAAK,YAAY,EAAE,GAAG,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC;AACvC,aAAK,YAAY,SAAS;AAC1B,aAAK,6BAA6B,kBAAkB;AACpD,eAAO;AAAA,MACX;AAAA,MACA,cAAc,OAAO;AACjB,YAAI;AACJ,aAAK,OAAO,OAAO;AACf,eAAK,MAAM,GAAG,IAAI,MAAM,GAAG;AAAA,QAC/B;AAAA,MACJ;AAAA,MACA,kBAAkB;AACd,cAAM,QAAQ;AAAA,UACV,GAAG,KAAK,EAAE;AAAA,UACV,GAAG,KAAK,EAAE;AAAA,UACV,UAAU,KAAK,SAAS;AAAA,UACxB,QAAQ,KAAK,OAAO;AAAA,UACpB,QAAQ,KAAK,OAAO;AAAA,UACpB,SAAS,KAAK,QAAQ;AAAA,UACtB,SAAS,KAAK,QAAQ;AAAA,UACtB,OAAO,KAAK,MAAM;AAAA,UAClB,OAAO,KAAK,MAAM;AAAA,QACtB;AACA,aAAK,MAAM,IAAI;AACf,aAAK,MAAM,IAAI;AACf,aAAK,MAAM,WAAW;AACtB,aAAK,MAAM,SAAS;AACpB,aAAK,MAAM,SAAS;AACpB,aAAK,MAAM,UAAU;AACrB,aAAK,MAAM,UAAU;AACrB,aAAK,MAAM,QAAQ;AACnB,aAAK,MAAM,QAAQ;AACnB,eAAO;AAAA,MACX;AAAA,MACA,KAAK,QAAQ;AACT,YAAI,UAAU,OAAO,GAAG,UAAU,OAAO,GAAG,IAAI,KAAK,EAAE,GAAG,IAAI,KAAK,EAAE;AACrE,YAAI,YAAY,QAAW;AACvB,eAAK;AAAA,QACT;AACA,YAAI,YAAY,QAAW;AACvB,eAAK;AAAA,QACT;AACA,aAAK,YAAY,EAAE,GAAM,EAAK,CAAC;AAC/B,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB,MAAM,KAAK;AAC5B,YAAI,SAAS,CAAC,GAAG,SAAS,KAAK,UAAU,GAAG,KAAK;AACjD,YAAI,OAAO,IAAI,QAAQ,KAAK,KAAK;AAC7B;AAAA,QACJ;AACA,eAAO,QAAQ,IAAI;AACnB,eAAO,WAAW,CAAC,OAAO,OAAO,QAAQ,IAAI,MAAM;AAC/C,iBAAO,QAAQ,MAAM;AACrB,mBAAS,OAAO;AAAA,QACpB;AACA,cAAM,OAAO;AACb,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,eAAK,OAAO,CAAC,CAAC;AAAA,QAClB;AAAA,MACJ;AAAA,MACA,OAAO,OAAO;AACV,aAAK,SAAS,KAAK,SAAS,IAAI,KAAK;AACrC,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,YAAI,CAAC,KAAK,QAAQ;AACd,iBAAO,KAAK,KAAK,oDAAoD;AACrE,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,KAAK,OAAO,MAAM,KAAK,OAAO,YAAY,EAAE;AAC1D,YAAI,QAAQ,MAAM,GAAG;AACjB,eAAK,OAAO,SAAS,OAAO,OAAO,CAAC;AACpC,eAAK,OAAO,SAAS,KAAK,IAAI;AAC9B,eAAK,OAAO,oBAAoB;AAChC,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,SAAS;AACL,YAAI,CAAC,KAAK,QAAQ;AACd,iBAAO,KAAK,KAAK,iDAAiD;AAClE,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,KAAK,OAAO,MAAM,KAAK,OAAO,YAAY,EAAE;AAC1D,YAAI,QAAQ,MAAM,GAAG;AACjB,eAAK,OAAO,SAAS,OAAO,OAAO,CAAC;AACpC,eAAK,OAAO,SAAS,OAAO,QAAQ,GAAG,GAAG,IAAI;AAC9C,eAAK,OAAO,oBAAoB;AAChC,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,YAAI,CAAC,KAAK,QAAQ;AACd,iBAAO,KAAK,KAAK,mDAAmD;AACpE,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,KAAK;AACnB,YAAI,QAAQ,GAAG;AACX,eAAK,OAAO,SAAS,OAAO,OAAO,CAAC;AACpC,eAAK,OAAO,SAAS,OAAO,QAAQ,GAAG,GAAG,IAAI;AAC9C,eAAK,OAAO,oBAAoB;AAChC,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,eAAe;AACX,YAAI,CAAC,KAAK,QAAQ;AACd,iBAAO,KAAK,KAAK,uDAAuD;AACxE,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,KAAK;AACnB,YAAI,QAAQ,GAAG;AACX,eAAK,OAAO,SAAS,OAAO,OAAO,CAAC;AACpC,eAAK,OAAO,SAAS,QAAQ,IAAI;AACjC,eAAK,OAAO,oBAAoB;AAChC,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,UAAU,QAAQ;AACd,YAAI,CAAC,KAAK,QAAQ;AACd,iBAAO,KAAK,KAAK,kDAAkD;AACnE,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,KAAK,UAAU,KAAK,OAAO,SAAS,QAAQ;AACrD,iBAAO,KAAK,KAAK,sBACb,SACA,kHACC,KAAK,OAAO,SAAS,SAAS,KAC/B,GAAG;AAAA,QACX;AACA,cAAM,QAAQ,KAAK;AACnB,aAAK,OAAO,SAAS,OAAO,OAAO,CAAC;AACpC,aAAK,OAAO,SAAS,OAAO,QAAQ,GAAG,IAAI;AAC3C,aAAK,OAAO,oBAAoB;AAChC,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB;AACjB,eAAO,KAAK,UAAU,kBAAkB,KAAK,mBAAmB;AAAA,MACpE;AAAA,MACA,sBAAsB;AAClB,YAAI,aAAa,KAAK,QAAQ;AAC9B,cAAM,SAAS,KAAK,UAAU;AAC9B,YAAI,UAAU,CAAC,OAAO,eAAe;AACjC,wBAAc,OAAO,mBAAmB;AAAA,QAC5C;AACA,eAAO;AAAA,MACX;AAAA,MACA,OAAO,cAAc;AACjB,YAAI,KAAK,UAAU,MAAM,cAAc;AACnC,eAAK,QAAQ;AACb,uBAAa,IAAI,IAAI;AAAA,QACzB;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,YAAI,QAAQ,KAAK,SAAS,GAAG,KAAK,KAAK,QAAQ,cAAc;AAC7D,cAAM,MAAM;AAAA,UACR,OAAO,CAAC;AAAA,UACR,WAAW,KAAK,aAAa;AAAA,QACjC;AACA,aAAK,OAAO,OAAO;AACf,gBAAM,MAAM,GAAG;AACf,2BACI,OAAO,KAAK,SAAS,GAAG,KAAK,CAAC,OAAO,KAAK,eAAe,GAAG,KAAK,CAAC,OAAO,KAAK,SAAS,GAAG;AAC9F,cAAI,gBAAgB;AAChB;AAAA,UACJ;AACA,mBAAS,OAAO,KAAK,GAAG,MAAM,cAAc,KAAK,GAAG;AACpD,iBAAO,MAAM,GAAG;AAChB,yBAAe,SAAS,OAAO,KAAK,IAAI,IAAI;AAC5C,gBAAM,GAAG,IAAI;AACb,cAAI,iBAAiB,KAAK;AACtB,gBAAI,MAAM,GAAG,IAAI;AAAA,UACrB;AAAA,QACJ;AACA,eAAO,OAAO,KAAK,oBAAoB,GAAG;AAAA,MAC9C;AAAA,MACA,SAAS;AACL,eAAO,KAAK,UAAU,KAAK,SAAS,CAAC;AAAA,MACzC;AAAA,MACA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,cAAc,UAAU,aAAa,UAAU;AAC3C,cAAM,MAAM,CAAC;AACb,YAAI,eAAe,KAAK,SAAS,QAAQ,GAAG;AACxC,cAAI,KAAK,IAAI;AAAA,QACjB;AACA,YAAI,WAAW,KAAK;AACpB,eAAO,UAAU;AACb,cAAI,aAAa,UAAU;AACvB,mBAAO;AAAA,UACX;AACA,cAAI,SAAS,SAAS,QAAQ,GAAG;AAC7B,gBAAI,KAAK,QAAQ;AAAA,UACrB;AACA,qBAAW,SAAS;AAAA,QACxB;AACA,eAAO;AAAA,MACX;AAAA,MACA,aAAa,MAAM;AACf,eAAO;AAAA,MACX;AAAA,MACA,aAAa,UAAU,aAAa,UAAU;AAC1C,eAAO,KAAK,cAAc,UAAU,aAAa,QAAQ,EAAE,CAAC;AAAA,MAChE;AAAA,MACA,SAAS,UAAU;AACf,YAAI,CAAC,UAAU;AACX,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,aAAa,YAAY;AAChC,iBAAO,SAAS,IAAI;AAAA,QACxB;AACA,YAAI,cAAc,SAAS,QAAQ,MAAM,EAAE,EAAE,MAAM,GAAG,GAAG,MAAM,YAAY,QAAQ,GAAG;AACtF,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,gBAAM,YAAY,CAAC;AACnB,cAAI,CAAC,OAAO,KAAK,gBAAgB,GAAG,GAAG;AACnC,mBAAO,KAAK,KAAK,eACb,MACA,yEAAyE;AAC7E,mBAAO,KAAK,KAAK,8GAA8G;AAC/H,mBAAO,KAAK,KAAK,0BAA0B;AAAA,UAC/C;AACA,cAAI,IAAI,OAAO,CAAC,MAAM,KAAK;AACvB,gBAAI,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,GAAG;AAC5B,qBAAO;AAAA,YACX;AAAA,UACJ,WACS,IAAI,OAAO,CAAC,MAAM,KAAK;AAC5B,gBAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,CAAC,GAAG;AAC5B,qBAAO;AAAA,YACX;AAAA,UACJ,WACS,KAAK,cAAc,OAAO,KAAK,aAAa,KAAK;AACtD,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,cAAM,SAAS,KAAK,UAAU;AAC9B,eAAO,SAAS,OAAO,SAAS,IAAI;AAAA,MACxC;AAAA,MACA,WAAW;AACP,eAAO,KAAK,UAAU,OAAO,KAAK,SAAS;AAAA,MAC/C;AAAA,MACA,YAAY;AACR,cAAM,SAAS,KAAK,UAAU;AAC9B,YAAI,QAAQ;AACR,iBAAO,OAAO,SAAS;AAAA,QAC3B,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,KAAK,WAAW,MAAM,CAAC,GAAG,QAAQ;AAC9B,YAAI,SAAS,IAAI,UAAU;AAC3B,YAAI,QAAQ;AACR,eAAK,eAAe,WAAW,GAAG;AAAA,QACtC,OACK;AACD,eAAK,MAAM,WAAW,GAAG;AAAA,QAC7B;AACA,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB,KAAK;AACtB,YAAI,KAAK;AACL,iBAAO,KAAK,sBAAsB,GAAG;AAAA,QACzC,OACK;AACD,iBAAO,KAAK,UAAU,oBAAoB,KAAK,qBAAqB;AAAA,QACxE;AAAA,MACJ;AAAA,MACA,sBAAsB,KAAK;AACvB,YAAI;AACJ,YAAI,KAAK;AACL,eAAK,IAAI,OAAO,UAAU;AAC1B,eAAK,qBAAqB,SAAU,MAAM;AACtC,kBAAM,oBAAoB,KAAK,kBAAkB;AACjD,gBAAI,sBAAsB,OAAO;AAC7B,iBAAG,SAAS,KAAK,aAAa,CAAC;AAAA,YACnC,WACS,sBAAsB,YAAY;AACvC,iBAAG,UAAU,KAAK,EAAE,IAAI,KAAK,QAAQ,GAAG,KAAK,EAAE,IAAI,KAAK,QAAQ,CAAC;AAAA,YACrE;AAAA,UACJ,GAAG,GAAG;AACN,iBAAO;AAAA,QACX,OACK;AACD,eAAK,KAAK,OAAO,IAAI,kBAAkB,KAAK,IAAI,OAAO,UAAU;AACjE,cAAI,KAAK,QAAQ;AACb,iBAAK,OAAO,qBAAqB,EAAE,SAAS,EAAE;AAAA,UAClD,OACK;AACD,eAAG,MAAM;AAAA,UACb;AACA,gBAAM,oBAAoB,KAAK,kBAAkB;AACjD,cAAI,sBAAsB,OAAO;AAC7B,eAAG,SAAS,KAAK,aAAa,CAAC;AAAA,UACnC,WACS,sBAAsB,YAAY;AACvC,kBAAM,IAAI,KAAK,MAAM,KAAK;AAC1B,kBAAM,IAAI,KAAK,MAAM,KAAK;AAC1B,kBAAM,UAAU,KAAK,MAAM,WAAW;AACtC,kBAAM,UAAU,KAAK,MAAM,WAAW;AACtC,eAAG,UAAU,IAAI,SAAS,IAAI,OAAO;AAAA,UACzC;AACA,aAAG,QAAQ;AACX,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,iBAAiB,KAAK;AAClB,YAAI,SAAS;AACb,eAAO,QAAQ;AACX,cAAI,OAAO,eAAe;AACtB,kBAAM;AAAA,UACV;AACA,mBAAS,OAAO,UAAU;AAAA,QAC9B;AACA,cAAM,YAAY,KAAK,qBAAqB,GAAG;AAC/C,cAAM,QAAQ,UAAU,UAAU;AAClC,eAAO;AAAA,UACH,GAAG,MAAM;AAAA,UACT,GAAG,MAAM;AAAA,QACb;AAAA,MACJ;AAAA,MACA,sBAAsB;AAClB,eAAO,KAAK,qBAAqB,EAAE,UAAU,EAAE;AAAA,MACnD;AAAA,MACA,eAAe;AACX,eAAO,KAAK,UAAU,WAAW,KAAK,aAAa;AAAA,MACvD;AAAA,MACA,gBAAgB;AACZ,YAAIC,KAAIC;AACR,cAAM,IAAI,KAAK,OAAO,IAAI,SAAS,KAAK,IAAI,OAAO,UAAU;AAC7D,UAAE,MAAM;AACR,cAAM,IAAI,KAAK,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,WAAW,SAAS,MAAM,SAAS,KAAK,SAAS,CAAC,GAAG,UAAUD,MAAK,KAAK,MAAM,YAAY,QAAQA,QAAO,SAASA,MAAK,GAAG,UAAUC,MAAK,KAAK,MAAM,YAAY,QAAQA,QAAO,SAASA,MAAK,GAAG,QAAQ,KAAK,MAAM,SAAS,GAAG,QAAQ,KAAK,MAAM,SAAS,GAAG,UAAU,KAAK,MAAM,WAAW,GAAG,UAAU,KAAK,MAAM,WAAW;AACpW,YAAI,MAAM,KAAK,MAAM,GAAG;AACpB,YAAE,UAAU,GAAG,CAAC;AAAA,QACpB;AACA,YAAI,aAAa,GAAG;AAChB,YAAE,OAAO,QAAQ;AAAA,QACrB;AACA,YAAI,UAAU,KAAK,UAAU,GAAG;AAC5B,YAAE,KAAK,OAAO,KAAK;AAAA,QACvB;AACA,YAAI,WAAW,KAAK,WAAW,GAAG;AAC9B,YAAE,MAAM,QAAQ,MAAM;AAAA,QAC1B;AACA,YAAI,YAAY,KAAK,YAAY,GAAG;AAChC,YAAE,UAAU,KAAK,SAAS,KAAK,OAAO;AAAA,QAC1C;AACA,UAAE,QAAQ;AACV,eAAO;AAAA,MACX;AAAA,MACA,MAAM,KAAK;AACP,YAAI,QAAQ,OAAO,KAAK,YAAY,KAAK,KAAK,GAAG,KAAK,cAAc,KAAK,GAAG;AAC5E,aAAK,OAAO,KAAK;AACb,gBAAM,GAAG,IAAI,IAAI,GAAG;AAAA,QACxB;AACA,cAAM,OAAO,IAAI,KAAK,YAAY,KAAK;AACvC,aAAK,OAAO,KAAK,gBAAgB;AAC7B,yBAAe,KAAK,eAAe,GAAG;AACtC,gBAAM,aAAa;AACnB,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,uBAAW,aAAa,CAAC;AACzB,gBAAI,SAAS,KAAK,QAAQ,KAAK,IAAI,GAAG;AAClC,kBAAI,CAAC,KAAK,eAAe,GAAG,GAAG;AAC3B,qBAAK,eAAe,GAAG,IAAI,CAAC;AAAA,cAChC;AACA,mBAAK,eAAe,GAAG,EAAE,KAAK,QAAQ;AAAA,YAC1C;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,eAAe,QAAQ;AACnB,iBAAS,UAAU,CAAC;AACpB,cAAM,MAAM,KAAK,cAAc;AAC/B,cAAM,QAAQ,KAAK,SAAS,GAAG,IAAI,OAAO,MAAM,SAAY,OAAO,IAAI,KAAK,MAAM,IAAI,CAAC,GAAG,IAAI,OAAO,MAAM,SAAY,OAAO,IAAI,KAAK,MAAM,IAAI,CAAC,GAAG,aAAa,OAAO,cAAc,GAAG,SAAS,IAAI,SAAS,YAAY;AAAA,UACxN,OAAO,OAAO,SAAS,KAAK,KAAK,IAAI,KAAK,MAAM,QAAQ,MAAM,MAAM,IAAI;AAAA,UACxE,QAAQ,OAAO,UACX,KAAK,KAAK,IAAI,MAAM,MACnB,QAAQ,MAAM,OAAO,IAAI;AAAA,UAC9B;AAAA,QACJ,CAAC,GAAG,UAAU,OAAO,WAAW;AAChC,cAAM,eAAe,IAAI,SAAS,YAAY;AAAA,UAC1C,OAAO,OAAO,QAAQ,OAAO,aAAa,KAAK,IAAI,CAAC;AAAA,UACpD,QAAQ,OAAO,SAAS,OAAO,aAAa,KAAK,IAAI,CAAC;AAAA,UACtD,YAAY,OAAO;AAAA,QACvB,CAAC;AACD,YAAI,OAAO,0BAA0B,OAAO;AACxC,kBAAQ,SAAS,wBAAwB;AAAA,QAC7C;AACA,gBAAQ,KAAK;AACb,YAAI,KAAK,GAAG;AACR,kBAAQ,UAAU,KAAK,GAAG,KAAK,CAAC;AAAA,QACpC;AACA,aAAK,UAAU,QAAQ,QAAW,YAAY;AAC9C,gBAAQ,QAAQ;AAChB,eAAO;AAAA,MACX;AAAA,MACA,SAAS,QAAQ;AACb,eAAO,KAAK,eAAe,MAAM,EAAE;AAAA,MACvC;AAAA,MACA,UAAU,QAAQ;AACd,iBAAS,UAAU,CAAC;AACpB,cAAM,WAAW,OAAO,YAAY,MAAM,UAAU,OAAO,WAAW;AACtE,cAAM,MAAM,KAAK,eAAe,MAAM,EAAE,UAAU,UAAU,OAAO;AACnE,YAAI,OAAO,UAAU;AACjB,iBAAO,SAAS,GAAG;AAAA,QACvB;AACA,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,QAAQ;AACZ,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAI;AACA,kBAAM,WAAW,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO;AACxE,gBAAI;AACA,qBAAO,OAAO;AAClB,mBAAO,KAAK,YAAY,KAAK,UAAU,MAAM,GAAG,SAAU,KAAK;AAC3D,sBAAQ,GAAG;AACX,2BAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,GAAG;AAAA,YACpE,CAAC;AAAA,UACL,SACO,KAAK;AACR,mBAAO,GAAG;AAAA,UACd;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,OAAO,QAAQ;AACX,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAI;AACA,kBAAM,WAAW,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO;AACxE,gBAAI;AACA,qBAAO,OAAO;AAClB,iBAAK,SAAS,MAAM,EAAE,OAAO,CAAC,SAAS;AACnC,sBAAQ,IAAI;AACZ,2BAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,IAAI;AAAA,YACrE,GAAG,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,UAAU,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,OAAO;AAAA,UACtI,SACO,KAAK;AACR,mBAAO,GAAG;AAAA,UACd;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,QAAQ,MAAM;AACV,aAAK,MAAM,KAAK,KAAK;AACrB,aAAK,OAAO,KAAK,MAAM;AACvB,eAAO;AAAA,MACX;AAAA,MACA,UAAU;AACN,eAAO;AAAA,UACH,OAAO,KAAK,MAAM;AAAA,UAClB,QAAQ,KAAK,OAAO;AAAA,QACxB;AAAA,MACJ;AAAA,MACA,eAAe;AACX,eAAO,KAAK,aAAa,KAAK;AAAA,MAClC;AAAA,MACA,UAAU;AACN,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,kBAAkB;AACd,YAAI,KAAK,MAAM,iBAAiB,QAAW;AACvC,iBAAO,KAAK,MAAM;AAAA,QACtB,WACS,KAAK,QAAQ;AAClB,iBAAO,KAAK,OAAO,gBAAgB;AAAA,QACvC,OACK;AACD,iBAAO,SAAS,MAAM;AAAA,QAC1B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,MAAM,UAAU;AACvB,YAAI,eAAe,KAAK,eAAe,IAAI,GAAG,GAAG,SAAS;AAC1D,aAAK,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AACtC,oBAAU,aAAa,CAAC,EAAE;AAC1B,oBAAU,aAAa,CAAC,EAAE;AAC1B,eAAK,YAAY,WAAW,SAAS,aAChC,CAAC,QAAQ,YAAY,UACrB,CAAC,YAAY,aAAa,UAAU;AACrC,yBAAa,OAAO,GAAG,CAAC;AACxB,gBAAI,aAAa,WAAW,GAAG;AAC3B,qBAAO,KAAK,eAAe,IAAI;AAC/B;AAAA,YACJ;AACA;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,MAAM,QAAQ,QAAQ;AACnC,aAAK,MAAM,OAAO,QAAQ;AAAA,UACtB;AAAA,UACA;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,QAAQ,MAAM;AACV,YAAI,CAAC,KAAK,QAAQ,IAAI,GAAG;AACrB,gBAAM,UAAU,KAAK,KAAK;AAC1B,gBAAM,UAAU,UAAU,UAAU,MAAM,OAAO;AACjD,eAAK,KAAK,OAAO;AAAA,QACrB;AACA,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,MAAM;AACV,YAAI,CAAC,MAAM;AACP,iBAAO;AAAA,QACX;AACA,cAAM,WAAW,KAAK,KAAK;AAC3B,YAAI,CAAC,UAAU;AACX,iBAAO;AAAA,QACX;AACA,cAAM,SAAS,YAAY,IAAI,MAAM,KAAK;AAC1C,eAAO,MAAM,QAAQ,IAAI,MAAM;AAAA,MACnC;AAAA,MACA,WAAW,MAAM;AACb,cAAM,SAAS,KAAK,KAAK,KAAK,IAAI,MAAM,KAAK;AAC7C,cAAM,QAAQ,MAAM,QAAQ,IAAI;AAChC,YAAI,UAAU,IAAI;AACd,gBAAM,OAAO,OAAO,CAAC;AACrB,eAAK,KAAK,MAAM,KAAK,GAAG,CAAC;AAAA,QAC7B;AACA,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,MAAM,KAAK;AACf,cAAM,OAAO,KAAK,MAAM,OAAO,KAAK,YAAY,IAAI,CAAC;AACrD,YAAI,OAAO,KAAK,YAAY,IAAI,GAAG;AAC/B,eAAK,KAAK,MAAM,GAAG;AAAA,QACvB,OACK;AACD,eAAK,SAAS,MAAM,GAAG;AAAA,QAC3B;AACA,eAAO;AAAA,MACX;AAAA,MACA,eAAe;AACX,YAAI,SAAS,MAAM,iBAAiB;AAChC,gBAAM,WAAW,KAAK,SAAS,KAAK,KAAK,SAAS;AAClD,uBAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,UAAU;AAAA,QAC3E;AAAA,MACJ;AAAA,MACA,SAAS,KAAK,KAAK;AACf,cAAM,SAAS,KAAK,MAAM,GAAG;AAC7B,YAAI,WAAW,OAAO,CAAC,OAAO,KAAK,SAAS,GAAG,GAAG;AAC9C;AAAA,QACJ;AACA,YAAI,QAAQ,UAAa,QAAQ,MAAM;AACnC,iBAAO,KAAK,MAAM,GAAG;AAAA,QACzB,OACK;AACD,eAAK,MAAM,GAAG,IAAI;AAAA,QACtB;AACA,YAAI,KAAK,yBAAyB;AAC9B,eAAK,iBAAiB,KAAK,QAAQ,GAAG;AAAA,QAC1C;AACA,aAAK,aAAa;AAAA,MACtB;AAAA,MACA,kBAAkB,KAAK,WAAW,KAAK;AACnC,YAAI;AACJ,YAAI,QAAQ,QAAW;AACnB,mBAAS,KAAK,MAAM,GAAG;AACvB,cAAI,CAAC,QAAQ;AACT,iBAAK,MAAM,GAAG,IAAI,KAAK,QAAQ,GAAG;AAAA,UACtC;AACA,eAAK,MAAM,GAAG,EAAE,SAAS,IAAI;AAC7B,eAAK,iBAAiB,KAAK,QAAQ,GAAG;AAAA,QAC1C;AAAA,MACJ;AAAA,MACA,eAAe,WAAW,KAAK,cAAc;AACzC,YAAI,OAAO,KAAK,aAAa,OAAO;AAChC,cAAI,SAAS;AAAA,QACjB;AACA,cAAM,cAAc;AAAA,UAChB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AACA,cAAM,aAAa,YAAY,QAAQ,SAAS,MAAM,OAChD,iBACG,SAAS,gBACL,KAAK,gBAAgB,KAAK,aAAa,YAAY,MACvD,KAAK,aAAa,WAAW,CAAC;AACvC,YAAI,CAAC,YAAY;AACb,eAAK,MAAM,WAAW,GAAG;AACzB,gBAAM,aAAa,YAAY,QAAQ,SAAS,MAAM,MAClD,gBACA,aAAa,gBACb,aAAa,aAAa,IAAI,KAC9B,CAAC,aAAa,aAAa,KAAK,MAAM;AAC1C,eAAM,OAAO,CAAC,IAAI,gBAAiB,CAAC,QAChC,KAAK,UACL,KAAK,OAAO,YAAY,KACxB,CAAC,YAAY;AACb,gBAAI,gBAAgB,aAAa,QAAQ;AACrC,mBAAK,eAAe,KAAK,KAAK,QAAQ,WAAW,KAAK,YAAY;AAAA,YACtE,OACK;AACD,mBAAK,eAAe,KAAK,KAAK,QAAQ,WAAW,GAAG;AAAA,YACxD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,mBAAmB,WAAW;AAC1B,YAAID,KAAIC,KAAI;AACZ,cAAM,gBAAgBD,MAAK,KAAK,OAAO,IAAI,aAAa,OAAO,QAAQA,QAAO,SAASA,MAAK,CAAC;AAC7F,YAAI,SAAS,iBAAiB,QAAQ,iBAAiB,SAAS,SAAS,aAAa,SAAS;AAC/F,YAAI,WAAW,QAAW;AACtB,mBAAS,CAAC;AACV,cAAI,MAAM,OAAO,eAAe,IAAI;AACpC,iBAAO,KAAK;AACR,kBAAM,mBAAmB,MAAMC,MAAK,IAAI,oBAAoB,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAS,OAAO,QAAQ,OAAO,SAAS,KAAK,CAAC;AAC9I,mBAAO,KAAK,GAAG,eAAe;AAC9B,kBAAM,OAAO,eAAe,GAAG;AAAA,UACnC;AACA,uBAAa,SAAS,IAAI;AAC1B,eAAK,OAAO,IAAI,eAAe,YAAY;AAAA,QAC/C;AACA,eAAO;AAAA,MACX;AAAA,MACA,MAAM,WAAW,KAAK;AAClB,cAAM,OAAO,CAAC;AACd,YAAI,gBAAgB;AACpB,YAAI,OAAO;AACX,cAAM,eAAe,KAAK,mBAAmB,SAAS;AACtD,YAAI,cAAc;AACd,mBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,yBAAa,CAAC,EAAE,QAAQ,KAAK,MAAM,GAAG;AAAA,UAC1C;AAAA,QACJ;AACA,cAAM,gBAAgB,KAAK,eAAe,SAAS;AACnD,YAAI,eAAe;AACf,mBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC3C,0BAAc,CAAC,EAAE,QAAQ,KAAK,MAAM,GAAG;AAAA,UAC3C;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,OAAO;AACH,aAAK,UAAU;AACf,aAAK,QAAQ;AACb,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,KAAK;AACpB,cAAM,YAAY,MAAM,IAAI,YAAY;AACxC,cAAM,QAAQ,KAAK,SAAS;AAC5B,cAAM,KAAK,KAAK,oBAAoB;AACpC,YAAI,CAAC,OAAO;AACR;AAAA,QACJ;AACA,cAAM,MAAM,MAAM,gBAAgB,SAAS,KACvC,MAAM,yBAAyB,CAAC,KAChC;AACJ,sBAAc,GAAG,cAAc,IAAI,KAAK,KAAK;AAAA,UACzC,MAAM;AAAA,UACN,iBAAiB;AAAA,UACjB,QAAQ;AAAA,YACJ,GAAG,IAAI,IAAI,GAAG;AAAA,YACd,GAAG,IAAI,IAAI,GAAG;AAAA,UAClB;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,UAAU,KAAK,cAAc,MAAM;AAC/B,YAAI,CAAC,cAAc,GAAG,cAAc,IAAI,KAAK,GAAG,GAAG;AAC/C,eAAK,mBAAmB,GAAG;AAAA,QAC/B;AACA,cAAM,OAAO,cAAc,GAAG,cAAc,IAAI,KAAK,GAAG;AACxD,aAAK,aAAa;AAClB,aAAK,KAAK,aAAa;AAAA,UACnB,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,KAAK,OAAO,IAAI;AAAA,QACpB,GAAG,WAAW;AAAA,MAClB;AAAA,MACA,iBAAiB,KAAK,MAAM;AACxB,cAAM,MAAM,KAAK,SAAS,EAAE,gBAAgB,KAAK,SAAS;AAC1D,YAAI,CAAC,KAAK;AACN;AAAA,QACJ;AACA,YAAI,aAAa;AAAA,UACb,GAAG,IAAI,IAAI,KAAK,OAAO;AAAA,UACvB,GAAG,IAAI,IAAI,KAAK,OAAO;AAAA,QAC3B;AACA,cAAM,MAAM,KAAK,cAAc;AAC/B,YAAI,QAAQ,QAAW;AACnB,gBAAM,UAAU,IAAI,KAAK,MAAM,YAAY,GAAG;AAC9C,cAAI,CAAC,SAAS;AACV,mBAAO,KAAK,KAAK,gIAAgI;AAAA,UACrJ,OACK;AACD,yBAAa;AAAA,UACjB;AAAA,QACJ;AACA,YAAI,CAAC,KAAK,YACN,KAAK,SAAS,MAAM,WAAW,KAC/B,KAAK,SAAS,MAAM,WAAW,GAAG;AAClC,eAAK,oBAAoB,UAAU;AACnC,eAAK,aAAa;AAAA,QACtB;AACA,aAAK,WAAW;AAAA,MACpB;AAAA,MACA,SAAS,KAAK;AACV,cAAM,OAAO,cAAc,GAAG,cAAc,IAAI,KAAK,GAAG;AACxD,YAAI,MAAM;AACN,eAAK,aAAa;AAAA,QACtB;AACA,sBAAc,GAAG,eAAe,GAAG;AACnC,sBAAc,GAAG,cAAc,GAAG;AAAA,MACtC;AAAA,MACA,aAAa,WAAW;AACpB,aAAK,SAAS,aAAa,SAAS;AACpC,aAAK,YAAY;AAAA,MACrB;AAAA,MACA,aAAa;AACT,cAAM,OAAO,cAAc,GAAG,cAAc,IAAI,KAAK,GAAG;AACxD,eAAO,OAAO,KAAK,eAAe,aAAa;AAAA,MACnD;AAAA,MACA,cAAc;AACV,aAAK,aAAa;AAClB,aAAK,GAAG,oCAAoC,SAAU,KAAK;AACvD,gBAAM,oBAAoB,IAAI,IAAI,QAAQ,MAAM;AAChD,gBAAM,UAAU,CAAC,qBAAqB,SAAS,MAAM,YAAY,QAAQ,IAAI,IAAI,QAAQ,CAAC,KAAK;AAC/F,cAAI,CAAC,SAAS;AACV;AAAA,UACJ;AACA,cAAI,KAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AACA,cAAI,mBAAmB;AACvB,wBAAc,GAAG,cAAc,QAAQ,CAAC,SAAS;AAC7C,gBAAI,KAAK,aAAa,KAAK,IAAI,GAAG;AAC9B,iCAAmB;AAAA,YACvB;AAAA,UACJ,CAAC;AACD,cAAI,CAAC,kBAAkB;AACnB,iBAAK,mBAAmB,GAAG;AAAA,UAC/B;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,cAAc;AACV,YAAI,KAAK,MAAM,WAAW;AACtB,eAAK,YAAY;AAAA,QACrB,OACK;AACD,eAAK,aAAa;AAClB,gBAAM,QAAQ,KAAK,SAAS;AAC5B,cAAI,CAAC,OAAO;AACR;AAAA,UACJ;AACA,gBAAM,cAAc,cAAc,GAAG,cAAc,IAAI,KAAK,GAAG;AAC/D,gBAAM,aAAa,eAAe,YAAY,eAAe;AAC7D,gBAAM,UAAU,eAAe,YAAY,eAAe;AAC1D,cAAI,YAAY;AACZ,iBAAK,SAAS;AAAA,UAClB,WACS,SAAS;AACd,0BAAc,GAAG,cAAc,OAAO,KAAK,GAAG;AAAA,UAClD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,eAAe;AACX,aAAK,IAAI,iBAAiB;AAC1B,aAAK,IAAI,kBAAkB;AAAA,MAC/B;AAAA,MACA,qBAAqB,SAAS,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG;AAC1C,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,cAAM,aAAa;AAAA,UACf,GAAG,CAAC,OAAO;AAAA,UACX,GAAG,CAAC,OAAO;AAAA,UACX,OAAO,MAAM,MAAM,IAAI,IAAI,OAAO;AAAA,UAClC,QAAQ,MAAM,OAAO,IAAI,IAAI,OAAO;AAAA,QACxC;AACA,eAAO,OAAO,KAAK,iBAAiB,YAAY,KAAK,cAAc,CAAC;AAAA,MACxE;AAAA,MACA,OAAO,OAAO,MAAM,WAAW;AAC3B,YAAI,OAAO,KAAK,UAAU,IAAI,GAAG;AAC7B,iBAAO,KAAK,MAAM,IAAI;AAAA,QAC1B;AACA,eAAO,KAAK,YAAY,MAAM,SAAS;AAAA,MAC3C;AAAA,MACA,OAAO,YAAY,KAAK,WAAW;AAC/B,YAAI,YAAY,MAAK,UAAU,aAAa,KAAK,GAAG,GAAG,WAAW,IAAI,UAAU,IAAI,KAAK;AACzF,YAAI,WAAW;AACX,cAAI,MAAM,YAAY;AAAA,QAC1B;AACA,YAAI,CAAC,SAAS,MAAM,SAAS,GAAG;AAC5B,iBAAO,KAAK,KAAK,0CACb,YACA,yBAAyB;AAC7B,sBAAY;AAAA,QAChB;AACA,cAAM,QAAQ,SAAS,MAAM,SAAS;AACtC,aAAK,IAAI,MAAM,IAAI,KAAK;AACxB,YAAI,UAAU;AACV,gBAAM,SAAS;AACf,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,eAAG,IAAI,MAAK,YAAY,SAAS,CAAC,CAAC,CAAC;AAAA,UACxC;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,OAAO;AACf,SAAK,UAAU,WAAW;AAC1B,SAAK,UAAU,sBAAsB,CAAC;AACtC,SAAK,UAAU,iBAAiB,CAAC;AACjC,SAAK,UAAU,GAAG,KAAK,KAAK,WAAW,sBAAsB,WAAY;AACrE,UAAI,KAAK,0BAA0B;AAC/B,aAAK,2BAA2B;AAChC;AAAA,MACJ;AACA,WAAK,YAAY,SAAS;AAC1B,WAAK,6BAA6B,kBAAkB;AAAA,IACxD,CAAC;AACD,SAAK,UAAU,GAAG,KAAK,KAAK,WAAW,uBAAuB,WAAY;AACtE,WAAK,6BAA6B,OAAO;AAAA,IAC7C,CAAC;AACD,SAAK,UAAU,GAAG,KAAK,KAAK,WAAW,yBAAyB,WAAY;AACxE,WAAK,6BAA6B,SAAS;AAAA,IAC/C,CAAC;AACD,SAAK,UAAU,GAAG,KAAK,KAAK,WAAW,uBAAuB,WAAY;AACtE,WAAK,6BAA6B,gBAAgB;AAAA,IACtD,CAAC;AACD,QAAM,kBAAkB,UAAU,QAAQ;AAC1C,oBAAgB,MAAM,QAAQ;AAC9B,oBAAgB,MAAM,kBAAkB;AACxC,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,MAAM,KAAK,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACpE,oBAAgB,MAAM,KAAK,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACpE,oBAAgB,MAAM,4BAA4B,gBAAgB,GAAG,aAAa,oBAAoB,CAAC;AACvG,oBAAgB,MAAM,WAAW,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAC1E,oBAAgB,MAAM,QAAQ,KAAK,GAAG,aAAa,oBAAoB,CAAC;AACxE,oBAAgB,MAAM,MAAM,KAAK,GAAG,aAAa,oBAAoB,CAAC;AACtE,oBAAgB,MAAM,YAAY,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAC3E,cAAU,QAAQ,0BAA0B,MAAM,SAAS,CAAC,KAAK,GAAG,CAAC;AACrE,oBAAgB,MAAM,UAAU,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACzE,oBAAgB,MAAM,UAAU,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACzE,cAAU,QAAQ,0BAA0B,MAAM,QAAQ,CAAC,KAAK,GAAG,CAAC;AACpE,oBAAgB,MAAM,SAAS,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACxE,oBAAgB,MAAM,SAAS,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACxE,cAAU,QAAQ,0BAA0B,MAAM,UAAU,CAAC,KAAK,GAAG,CAAC;AACtE,oBAAgB,MAAM,WAAW,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAC1E,oBAAgB,MAAM,WAAW,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAC1E,oBAAgB,MAAM,gBAAgB,SAAY,GAAG,aAAa,oBAAoB,CAAC;AACvF,oBAAgB,MAAM,SAAS,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACxE,oBAAgB,MAAM,UAAU,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACzE,oBAAgB,MAAM,aAAa,OAAO,GAAG,aAAa,qBAAqB,CAAC;AAChF,oBAAgB,MAAM,kBAAkB,OAAO,GAAG,aAAa,qBAAqB,CAAC;AACrF,oBAAgB,MAAM,WAAW,QAAW,SAAU,KAAK;AACvD,WAAK,kBAAkB;AACvB,aAAO;AAAA,IACX,CAAC;AACD,oBAAgB,MAAM,WAAW,OAAO,GAAG,aAAa,qBAAqB,CAAC;AAC9E,oBAAgB,MAAM,qBAAqB,QAAQ,GAAG,aAAa,oBAAoB,CAAC;AACxF,oBAAgB,MAAM,MAAM;AAC5B,oBAAgB,MAAM,eAAe;AACrC,oBAAgB,MAAM,aAAa,QAAQ,GAAG,aAAa,qBAAqB,CAAC;AACjF,cAAU,QAAQ,WAAW,MAAM;AAAA,MAC/B,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,IACpB,CAAC;AAAA;AAAA;;;ACv6CD;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY;AACpB,QAAM,YAAY;AAClB,QAAM,SAAS;AACf,QAAM,eAAe;AACrB,QAAM,YAAN,cAAwB,OAAO,KAAK;AAAA,MAChC,cAAc;AACV,cAAM,GAAG,SAAS;AAClB,aAAK,WAAW,CAAC;AAAA,MACrB;AAAA,MACA,YAAY,YAAY;AACpB,cAAM,WAAW,KAAK,YAAY,CAAC;AACnC,YAAI,YAAY;AACZ,iBAAO,SAAS,OAAO,UAAU;AAAA,QACrC;AACA,eAAO;AAAA,MACX;AAAA,MACA,cAAc;AACV,eAAO,KAAK,YAAY,EAAE,SAAS;AAAA,MACvC;AAAA,MACA,iBAAiB;AACb,aAAK,YAAY,EAAE,QAAQ,CAAC,UAAU;AAClC,gBAAM,SAAS;AACf,gBAAM,QAAQ;AACd,gBAAM,OAAO;AAAA,QACjB,CAAC;AACD,aAAK,WAAW,CAAC;AACjB,aAAK,aAAa;AAClB,eAAO;AAAA,MACX;AAAA,MACA,kBAAkB;AACd,aAAK,YAAY,EAAE,QAAQ,CAAC,UAAU;AAClC,gBAAM,SAAS;AACf,gBAAM,QAAQ;AACd,gBAAM,QAAQ;AAAA,QAClB,CAAC;AACD,aAAK,WAAW,CAAC;AACjB,aAAK,aAAa;AAClB,eAAO;AAAA,MACX;AAAA,MACA,OAAO,UAAU;AACb,YAAI,SAAS,WAAW,GAAG;AACvB,iBAAO;AAAA,QACX;AACA,YAAI,SAAS,SAAS,GAAG;AACrB,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,iBAAK,IAAI,SAAS,CAAC,CAAC;AAAA,UACxB;AACA,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,SAAS,CAAC;AACxB,YAAI,MAAM,UAAU,GAAG;AACnB,gBAAM,OAAO,IAAI;AACjB,iBAAO;AAAA,QACX;AACA,aAAK,aAAa,KAAK;AACvB,cAAM,QAAQ,KAAK,YAAY,EAAE;AACjC,cAAM,SAAS;AACf,cAAM,aAAa;AACnB,aAAK,YAAY,EAAE,KAAK,KAAK;AAC7B,aAAK,MAAM,OAAO;AAAA,UACd;AAAA,QACJ,CAAC;AACD,aAAK,aAAa;AAClB,eAAO;AAAA,MACX;AAAA,MACA,UAAU;AACN,YAAI,KAAK,YAAY,GAAG;AACpB,eAAK,gBAAgB;AAAA,QACzB;AACA,cAAM,QAAQ;AACd,eAAO;AAAA,MACX;AAAA,MACA,KAAK,UAAU;AACX,eAAO,KAAK,aAAa,UAAU,KAAK;AAAA,MAC5C;AAAA,MACA,QAAQ,UAAU;AACd,cAAM,SAAS,KAAK,aAAa,UAAU,IAAI;AAC/C,eAAO,OAAO,SAAS,IAAI,OAAO,CAAC,IAAI;AAAA,MAC3C;AAAA,MACA,aAAa,UAAU,SAAS;AAC5B,cAAM,SAAS,CAAC;AAChB,aAAK,aAAa,CAAC,SAAS;AACxB,gBAAM,QAAQ,KAAK,SAAS,QAAQ;AACpC,cAAI,OAAO;AACP,mBAAO,KAAK,IAAI;AAAA,UACpB;AACA,cAAI,SAAS,SAAS;AAClB,mBAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACX,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,aAAa,IAAI;AACb,YAAI,aAAa;AACjB,cAAM,WAAW,KAAK,YAAY;AAClC,mBAAW,SAAS,UAAU;AAC1B,uBAAa,GAAG,KAAK;AACrB,cAAI,YAAY;AACZ,mBAAO;AAAA,UACX;AACA,cAAI,CAAC,MAAM,YAAY,GAAG;AACtB;AAAA,UACJ;AACA,uBAAa,MAAM,aAAa,EAAE;AAClC,cAAI,YAAY;AACZ,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,cAAM,MAAM,OAAO,KAAK,UAAU,SAAS,KAAK,IAAI;AACpD,YAAI,WAAW,CAAC;AAChB,aAAK,YAAY,EAAE,QAAQ,CAAC,UAAU;AAClC,cAAI,SAAS,KAAK,MAAM,SAAS,CAAC;AAAA,QACtC,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,aAAa,MAAM;AACf,YAAI,SAAS,KAAK,UAAU;AAC5B,eAAO,QAAQ;AACX,cAAI,OAAO,QAAQ,KAAK,KAAK;AACzB,mBAAO;AAAA,UACX;AACA,mBAAS,OAAO,UAAU;AAAA,QAC9B;AACA,eAAO;AAAA,MACX;AAAA,MACA,MAAM,KAAK;AACP,cAAM,OAAO,OAAO,KAAK,UAAU,MAAM,KAAK,MAAM,GAAG;AACvD,aAAK,YAAY,EAAE,QAAQ,SAAU,IAAI;AACrC,eAAK,IAAI,GAAG,MAAM,CAAC;AAAA,QACvB,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,KAAK;AACrB,cAAM,MAAM,CAAC;AACb,aAAK,KAAK,OAAO,EAAE,QAAQ,CAAC,UAAU;AAClC,cAAI,MAAM,UAAU,KAAK,MAAM,WAAW,GAAG,GAAG;AAC5C,gBAAI,KAAK,KAAK;AAAA,UAClB;AAAA,QACJ,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,6BAA6B,MAAM;AAC/B,YAAIC;AACJ,cAAM,6BAA6B,IAAI;AACvC,YAAI,KAAK,SAAS,GAAG;AACjB;AAAA,QACJ;AACA,SAACA,MAAK,KAAK,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,QAAQ,SAAU,MAAM;AACjF,eAAK,6BAA6B,IAAI;AAAA,QAC1C,CAAC;AAAA,MACL;AAAA,MACA,sBAAsB;AAClB,YAAIA;AACJ,SAACA,MAAK,KAAK,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,QAAQ,SAAU,OAAO,GAAG;AACrF,gBAAM,QAAQ;AAAA,QAClB,CAAC;AACD,aAAK,aAAa;AAAA,MACtB;AAAA,MACA,UAAU,KAAK,KAAK,cAAc;AAC9B,cAAM,QAAQ,KAAK,SAAS,GAAG,SAAS,OAAQ,SAAS,MAAM,UAAU,GAAI,UAAU,UAAU,OAAO,WAAW,GAAG,eAAe,KAAK,gBAAgB,GAAG,oBAAoB,gBAAgB,aAAa;AAC9M,cAAM,UAAU,UAAU,OAAO;AACjC,YAAI,CAAC,KAAK,UAAU,KAAK,CAAC,SAAS;AAC/B,iBAAO;AAAA,QACX;AACA,YAAI,mBAAmB;AACnB,kBAAQ,KAAK;AACb,gBAAM,IAAI,KAAK,qBAAqB,GAAG,EAAE,UAAU;AACnD,kBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AACpD,eAAK,uBAAuB,OAAO;AACnC,kBAAQ,QAAQ;AAAA,QACpB,OACK;AACD,eAAK,cAAc,aAAa,QAAQ,KAAK,YAAY;AAAA,QAC7D;AACA,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,KAAK,KAAK;AACd,YAAI,CAAC,KAAK,cAAc,GAAG,GAAG;AAC1B,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,KAAK,SAAS,GAAG,SAAS,OAAQ,SAAS,MAAM,WAAY,UAAU,UAAU,OAAO,WAAW,GAAG,eAAe,KAAK,gBAAgB,GAAG,kBAAkB,gBAAgB,aAAa;AAC1M,YAAI,iBAAiB;AACjB,kBAAQ,KAAK;AACb,gBAAM,IAAI,KAAK,qBAAqB,GAAG,EAAE,UAAU;AACnD,kBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AACpD,eAAK,qBAAqB,OAAO;AACjC,kBAAQ,QAAQ;AAAA,QACpB,OACK;AACD,eAAK,cAAc,WAAW,QAAQ,GAAG;AAAA,QAC7C;AACA,eAAO;AAAA,MACX;AAAA,MACA,cAAc,YAAY,QAAQ,KAAK,cAAc;AACjD,YAAIA;AACJ,cAAM,UAAU,UAAU,OAAO,WAAW,GAAG,YAAY,KAAK,UAAU,GAAG,aAAa,KAAK,WAAW,GAAG,WAAW,KAAK,SAAS,GAAG,UAAW,OAAO,cAAc,YAAY,OAAO,eAAe,YACvM;AACJ,cAAM,YAAY,QAAQ;AAC1B,YAAI,SAAS;AACT,kBAAQ,KAAK;AACb,gBAAM,YAAY,KAAK,qBAAqB,GAAG;AAC/C,cAAI,IAAI,UAAU,UAAU;AAC5B,kBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AACpD,kBAAQ,UAAU;AAClB,cAAI;AACJ,cAAI,UAAU;AACV,uBAAW,SAAS,KAAK,MAAM,SAAS,IAAI;AAAA,UAChD,OACK;AACD,kBAAM,QAAQ,KAAK,MAAM;AACzB,kBAAM,QAAQ,KAAK,MAAM;AACzB,oBAAQ,KAAK,SAAS,GAAG,SAAS,GAAG,WAAW,UAAU;AAAA,UAC9D;AACA,kBAAQ,KAAK,MAAM,SAAS,QAAQ;AACpC,cAAI,UAAU,KAAK,EAAE,OAAO,EAAE,UAAU;AACxC,kBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,QACxD;AACA,cAAM,iBAAiB,CAAC,aACpB,KAAK,yBAAyB,MAAM,iBACpC,eAAe;AACnB,YAAI,gBAAgB;AAChB,kBAAQ,KAAK;AACb,kBAAQ,+BAA+B,IAAI;AAAA,QAC/C;AACA,SAACA,MAAK,KAAK,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,QAAQ,SAAU,OAAO;AAClF,gBAAM,UAAU,EAAE,QAAQ,KAAK,YAAY;AAAA,QAC/C,CAAC;AACD,YAAI,gBAAgB;AAChB,kBAAQ,QAAQ;AAAA,QACpB;AACA,YAAI,SAAS;AACT,kBAAQ,QAAQ;AAAA,QACpB;AAAA,MACJ;AAAA,MACA,cAAc,SAAS,CAAC,GAAG;AACvB,YAAIA;AACJ,cAAM,gBAAgB,OAAO;AAC7B,cAAM,aAAa,OAAO;AAC1B,YAAI,MAAM,MAAM,MAAM;AACtB,YAAI,WAAW;AAAA,UACX,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,QACZ;AACA,cAAM,OAAO;AACb,SAACA,MAAK,KAAK,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,QAAQ,SAAU,OAAO;AAClF,cAAI,CAAC,MAAM,QAAQ,GAAG;AAClB;AAAA,UACJ;AACA,gBAAM,OAAO,MAAM,cAAc;AAAA,YAC7B,YAAY;AAAA,YACZ,YAAY,OAAO;AAAA,YACnB,YAAY,OAAO;AAAA,UACvB,CAAC;AACD,cAAI,KAAK,UAAU,KAAK,KAAK,WAAW,GAAG;AACvC;AAAA,UACJ;AACA,cAAI,SAAS,QAAW;AACpB,mBAAO,KAAK;AACZ,mBAAO,KAAK;AACZ,mBAAO,KAAK,IAAI,KAAK;AACrB,mBAAO,KAAK,IAAI,KAAK;AAAA,UACzB,OACK;AACD,mBAAO,KAAK,IAAI,MAAM,KAAK,CAAC;AAC5B,mBAAO,KAAK,IAAI,MAAM,KAAK,CAAC;AAC5B,mBAAO,KAAK,IAAI,MAAM,KAAK,IAAI,KAAK,KAAK;AACzC,mBAAO,KAAK,IAAI,MAAM,KAAK,IAAI,KAAK,MAAM;AAAA,UAC9C;AAAA,QACJ,CAAC;AACD,cAAM,SAAS,KAAK,KAAK,OAAO;AAChC,YAAI,aAAa;AACjB,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,gBAAM,QAAQ,OAAO,CAAC;AACtB,cAAI,MAAM,WAAW,IAAI,GAAG;AACxB,yBAAa;AACb;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,cAAc,SAAS,QAAW;AAClC,qBAAW;AAAA,YACP,GAAG;AAAA,YACH,GAAG;AAAA,YACH,OAAO,OAAO;AAAA,YACd,QAAQ,OAAO;AAAA,UACnB;AAAA,QACJ,OACK;AACD,qBAAW;AAAA,YACP,GAAG;AAAA,YACH,GAAG;AAAA,YACH,OAAO;AAAA,YACP,QAAQ;AAAA,UACZ;AAAA,QACJ;AACA,YAAI,CAAC,eAAe;AAChB,iBAAO,KAAK,iBAAiB,UAAU,UAAU;AAAA,QACrD;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,YAAY;AACpB,cAAU,QAAQ,0BAA0B,WAAW,QAAQ;AAAA,MAC3D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AACD,cAAU,QAAQ,gBAAgB,WAAW,SAAS,SAAY,GAAG,aAAa,oBAAoB,CAAC;AACvG,cAAU,QAAQ,gBAAgB,WAAW,SAAS,SAAY,GAAG,aAAa,oBAAoB,CAAC;AACvG,cAAU,QAAQ,gBAAgB,WAAW,aAAa,SAAY,GAAG,aAAa,oBAAoB,CAAC;AAC3G,cAAU,QAAQ,gBAAgB,WAAW,cAAc,SAAY,GAAG,aAAa,oBAAoB,CAAC;AAC5G,cAAU,QAAQ,gBAAgB,WAAW,UAAU;AAAA;AAAA;;;AC/TvD;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,mBAAmB;AAC3B,YAAQ,cAAc;AACtB,YAAQ,oBAAoB;AAC5B,YAAQ,oBAAoB;AAC5B,YAAQ,iBAAiB;AACzB,QAAM,WAAW;AACjB,QAAM,WAAW,oBAAI,IAAI;AACzB,QAAM,yBAAyB,SAAS,MAAM,QAAQ,cAAc,MAAM;AAC1E,aAAS,iBAAiB,WAAW;AACjC,aAAO,SAAS,IAAI,SAAS;AAAA,IACjC;AACA,aAAS,YAAY,KAAK;AACtB,aAAO;AAAA,QACH;AAAA,QACA,WAAW,IAAI;AAAA,MACnB;AAAA,IACJ;AACA,aAAS,kBAAkB,WAAW,OAAO;AACzC,aAAO,SAAS,IAAI,SAAS,MAAM;AAAA,IACvC;AACA,aAAS,kBAAkB,WAAW,OAAO;AACzC,qBAAe,SAAS;AACxB,YAAM,QAAQ,MAAM,SAAS;AAC7B,UAAI,CAAC;AACD;AACJ,eAAS,IAAI,WAAW,KAAK;AAC7B,UAAI,wBAAwB;AACxB,cAAM,MAAM,qBAAqB,YAAY,IAAI,aAAa,mBAAmB,CAAC,CAAC;AAAA,MACvF;AAAA,IACJ;AACA,aAAS,eAAe,WAAW,QAAQ;AACvC,YAAM,QAAQ,SAAS,IAAI,SAAS;AACpC,UAAI,CAAC;AACD;AACJ,YAAM,QAAQ,MAAM,SAAS;AAC7B,UAAI,SAAS,MAAM,SAAS;AAAA,MAC5B;AACA,eAAS,OAAO,SAAS;AACzB,UAAI,wBAAwB;AACxB,cAAM,MAAM,sBAAsB,YAAY,IAAI,aAAa,oBAAoB,CAAC,CAAC;AAAA,MACzF;AAAA,IACJ;AAAA;AAAA;;;AC3CA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,QAAQ,QAAQ,SAAS;AACjC,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,cAAc;AACpB,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,gBAAgB;AACtB,QAAM,WAAW;AACjB,QAAM,gBAAgB;AACtB,QAAM,QAAQ;AAAd,QAAuB,SAAS;AAAhC,QAA0C,KAAK;AAA/C,QAAqD,WAAW;AAAhE,QAA4E,aAAa;AAAzF,QAAuG,YAAY;AAAnH,QAAgI,aAAa;AAA7I,QAA2J,YAAY;AAAvK,QAAoL,YAAY;AAAhM,QAA6M,UAAU;AAAvN,QAAkO,cAAc;AAAhP,QAA+P,cAAc;AAA7Q,QAA4R,YAAY;AAAxS,QAAqT,gBAAgB;AAArU,QAAsV,qBAAqB;AAA3W,QAAiY,aAAa;AAA9Y,QAA4Z,eAAe;AAA3a,QAA2b,cAAc;AAAzc,QAAwd,eAAe;AAAve,QAAuf,cAAc;AAArgB,QAAohB,aAAa;AAAjiB,QAA+iB,WAAW;AAA1jB,QAAskB,YAAY;AAAllB,QAA+lB,cAAc;AAA7mB,QAA4nB,QAAQ;AAApoB,QAA6oB,oBAAoB;AAAjqB,QAAoqB,SAAS;AAAA,MACzqB,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,WAAW,cAAc;AAAA,MAC1B,CAAC,WAAW,cAAc;AAAA,MAC1B,CAAC,SAAS,YAAY;AAAA,MACtB,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,YAAY,cAAc;AAAA,MAC3B,CAAC,WAAW,cAAc;AAAA,MAC1B,CAAC,UAAU,YAAY;AAAA,MACvB,CAAC,aAAa,gBAAgB;AAAA,MAC9B,CAAC,WAAW,cAAc;AAAA,MAC1B,CAAC,OAAO,QAAQ;AAAA,MAChB,CAAC,aAAa,cAAc;AAAA,MAC5B,CAAC,aAAa,cAAc;AAAA,MAC5B,CAAC,aAAa,cAAc;AAAA,MAC5B,CAAC,WAAW,YAAY;AAAA,MACxB,CAAC,eAAe,gBAAgB;AAAA,MAChC,CAAC,cAAc,eAAe;AAAA,MAC9B,CAAC,oBAAoB,qBAAqB;AAAA,IAC9C;AACA,QAAM,aAAa;AAAA,MACf,OAAO;AAAA,QACH,CAAC,UAAU,GAAG;AAAA,QACd,CAAC,YAAY,GAAG;AAAA,QAChB,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,YAAY,GAAG;AAAA,QAChB,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,SAAS,GAAG;AAAA,QACb,CAAC,aAAa,GAAG;AAAA,QACjB,cAAc;AAAA,QACd,iBAAiB;AAAA,MACrB;AAAA,MACA,OAAO;AAAA,QACH,CAAC,UAAU,GAAG;AAAA,QACd,CAAC,YAAY,GAAG;AAAA,QAChB,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,YAAY,GAAG;AAAA,QAChB,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,SAAS,GAAG;AAAA,QACb,CAAC,aAAa,GAAG;AAAA,QACjB,cAAc;AAAA,QACd,iBAAiB;AAAA,MACrB;AAAA,MACA,SAAS;AAAA,QACL,CAAC,UAAU,GAAG;AAAA,QACd,CAAC,YAAY,GAAG;AAAA,QAChB,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,YAAY,GAAG;AAAA,QAChB,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,WAAW,GAAG;AAAA,QACf,CAAC,SAAS,GAAG;AAAA,QACb,CAAC,aAAa,GAAG;AAAA,QACjB,cAAc;AAAA,QACd,iBAAiB;AAAA,MACrB;AAAA,IACJ;AACA,QAAM,eAAe,CAAC,SAAS;AAC3B,UAAI,KAAK,QAAQ,SAAS,KAAK,GAAG;AAC9B,eAAO;AAAA,MACX;AACA,UAAI,KAAK,QAAQ,OAAO,KAAK,GAAG;AAC5B,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AACA,QAAM,eAAe,CAAC,cAAc;AAChC,YAAM,OAAO,aAAa,SAAS;AACnC,UAAI,SAAS,WAAW;AACpB,eAAO,SAAS,MAAM,wBAAwB,WAAW;AAAA,MAC7D;AACA,UAAI,SAAS,SAAS;AAClB,eAAO,WAAW;AAAA,MACtB;AACA,UAAI,SAAS,SAAS;AAClB,eAAO,WAAW;AAAA,MACtB;AAAA,IACJ;AACA,aAAS,YAAY,QAAQ,CAAC,GAAG;AAC7B,UAAI,MAAM,YAAY,MAAM,aAAa,MAAM,YAAY;AACvD,eAAO,KAAK,KAAK,wEAAwE;AAAA,MAC7F;AACA,aAAO;AAAA,IACX;AACA,QAAM,sBAAsB;AAC5B,YAAQ,SAAS,CAAC;AAClB,QAAMC,SAAN,cAAoB,YAAY,UAAU;AAAA,MACtC,YAAY,QAAQ;AAChB,cAAM,YAAY,MAAM,CAAC;AACzB,aAAK,oBAAoB,CAAC;AAC1B,aAAK,2BAA2B,CAAC;AACjC,aAAK,UAAU;AACf,aAAK,mBAAmB;AACxB,gBAAQ,OAAO,KAAK,IAAI;AACxB,aAAK,GAAG,wCAAwC,KAAK,UAAU;AAC/D,aAAK,GAAG,uBAAuB,KAAK,gBAAgB;AACpD,aAAK,GAAG,qEAAqE,MAAM;AAC/E,sBAAY,KAAK,KAAK;AAAA,QAC1B,CAAC;AACD,aAAK,iBAAiB;AAAA,MAC1B;AAAA,MACA,aAAa,OAAO;AAChB,cAAM,UAAU,MAAM,QAAQ,MAAM;AACpC,cAAM,cAAc,MAAM,QAAQ,MAAM;AACxC,cAAM,QAAQ,WAAW;AACzB,YAAI,CAAC,OAAO;AACR,iBAAO,KAAK,MAAM,uCAAuC;AAAA,QAC7D;AAAA,MACJ;AAAA,MACA,mBAAmB;AACf,YAAI,CAAC,KAAK,SAAS;AACf;AAAA,QACJ;AACA,cAAM,QAAQ,KAAK,QAAQ,IAAI,KAAK;AACpC,aAAK,QAAQ,MAAM,UAAU;AAAA,MACjC;AAAA,MACA,aAAa,WAAW;AACpB,YAAI,OAAO,cAAc,QAAQ;AAC7B,cAAI;AACJ,cAAI,UAAU,OAAO,CAAC,MAAM,KAAK;AAC7B,kBAAM,YAAY,UAAU,MAAM,CAAC;AACnC,wBAAY,SAAS,uBAAuB,SAAS,EAAE,CAAC;AAAA,UAC5D,OACK;AACD,gBAAI,UAAU,OAAO,CAAC,MAAM,KAAK;AAC7B,mBAAK;AAAA,YACT,OACK;AACD,mBAAK,UAAU,MAAM,CAAC;AAAA,YAC1B;AACA,wBAAY,SAAS,eAAe,EAAE;AAAA,UAC1C;AACA,cAAI,CAAC,WAAW;AACZ,kBAAM,gDAAgD;AAAA,UAC1D;AAAA,QACJ;AACA,aAAK,SAAS,aAAa,SAAS;AACpC,YAAI,KAAK,SAAS;AACd,cAAI,KAAK,QAAQ,eAAe;AAC5B,iBAAK,QAAQ,cAAc,YAAY,KAAK,OAAO;AAAA,UACvD;AACA,oBAAU,YAAY,KAAK,OAAO;AAAA,QACtC;AACA,eAAO;AAAA,MACX;AAAA,MACA,gBAAgB;AACZ,eAAO;AAAA,MACX;AAAA,MACA,QAAQ;AACJ,cAAM,SAAS,KAAK,UAAU,MAAM,OAAO;AAC3C,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,iBAAO,CAAC,EAAE,MAAM;AAAA,QACpB;AACA,eAAO;AAAA,MACX;AAAA,MACA,MAAM,KAAK;AACP,YAAI,CAAC,KAAK;AACN,gBAAM,CAAC;AAAA,QACX;AACA,YAAI,YACA,OAAO,aAAa,eAAe,SAAS,cAAc,KAAK;AACnE,eAAO,YAAY,UAAU,UAAU,MAAM,KAAK,MAAM,GAAG;AAAA,MAC/D;AAAA,MACA,UAAU;AACN,cAAM,QAAQ;AACd,cAAM,UAAU,KAAK;AACrB,YAAI,WAAW,OAAO,KAAK,cAAc,OAAO,GAAG;AAC/C,eAAK,UAAU,EAAE,YAAY,OAAO;AAAA,QACxC;AACA,cAAM,QAAQ,QAAQ,OAAO,QAAQ,IAAI;AACzC,YAAI,QAAQ,IAAI;AACZ,kBAAQ,OAAO,OAAO,OAAO,CAAC;AAAA,QAClC;AACA,eAAO,KAAK,cAAc,KAAK,aAAa,SAAS,KAAK,gBAAgB,OAAO;AACjF,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB;AACjB,cAAM,MAAM,KAAK,kBAAkB,CAAC,KAAK,KAAK,yBAAyB,CAAC;AACxE,YAAI,CAAC,KAAK;AACN,iBAAO,KAAK,KAAK,mBAAmB;AACpC,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,UACH,GAAG,IAAI;AAAA,UACP,GAAG,IAAI;AAAA,QACX;AAAA,MACJ;AAAA,MACA,gBAAgB,IAAI;AAChB,eAAO,KAAK,kBAAkB,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE;AAAA,MACzD;AAAA,MACA,uBAAuB;AACnB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,WAAW;AACP,eAAO;AAAA,MACX;AAAA,MACA,aAAa;AACT,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,eAAe,QAAQ;AACnB,iBAAS,UAAU,CAAC;AACpB,eAAO,IAAI,OAAO,KAAK;AACvB,eAAO,IAAI,OAAO,KAAK;AACvB,eAAO,QAAQ,OAAO,SAAS,KAAK,MAAM;AAC1C,eAAO,SAAS,OAAO,UAAU,KAAK,OAAO;AAC7C,cAAM,SAAS,IAAI,SAAS,YAAY;AAAA,UACpC,OAAO,OAAO;AAAA,UACd,QAAQ,OAAO;AAAA,UACf,YAAY,OAAO,cAAc;AAAA,QACrC,CAAC;AACD,cAAM,WAAW,OAAO,WAAW,EAAE;AACrC,cAAM,SAAS,KAAK;AACpB,YAAI,OAAO,KAAK,OAAO,GAAG;AACtB,mBAAS,UAAU,KAAK,OAAO,GAAG,KAAK,OAAO,CAAC;AAAA,QACnD;AACA,eAAO,QAAQ,SAAU,OAAO;AAC5B,cAAI,CAAC,MAAM,UAAU,GAAG;AACpB;AAAA,UACJ;AACA,gBAAM,cAAc,MAAM,eAAe,MAAM;AAC/C,mBAAS,UAAU,YAAY,SAAS,OAAO,GAAG,OAAO,GAAG,YAAY,SAAS,IAAI,YAAY,cAAc,GAAG,YAAY,UAAU,IAAI,YAAY,cAAc,CAAC;AAAA,QAC3K,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,gBAAgB,KAAK;AACjB,YAAI,CAAC,KAAK;AACN,iBAAO;AAAA,QACX;AACA,cAAM,SAAS,KAAK,UAAU,MAAM,OAAO,QAAQ,MAAM,MAAM;AAC/D,iBAAS,IAAI,KAAK,KAAK,GAAG,KAAK;AAC3B,gBAAM,QAAQ,OAAO,CAAC,EAAE,gBAAgB,GAAG;AAC3C,cAAI,OAAO;AACP,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,aAAa;AACT,cAAM,QAAQ,KAAK,MAAM;AACzB,cAAM,SAAS,KAAK,OAAO;AAC3B,YAAI,KAAK,SAAS;AACd,eAAK,QAAQ,MAAM,QAAQ,QAAQ;AACnC,eAAK,QAAQ,MAAM,SAAS,SAAS;AAAA,QACzC;AACA,aAAK,aAAa,QAAQ,OAAO,MAAM;AACvC,aAAK,gBAAgB,QAAQ,OAAO,MAAM;AAC1C,aAAK,SAAS,QAAQ,CAAC,UAAU;AAC7B,gBAAM,QAAQ,EAAE,OAAO,OAAO,CAAC;AAC/B,gBAAM,KAAK;AAAA,QACf,CAAC;AAAA,MACL;AAAA,MACA,IAAI,UAAU,MAAM;AAChB,YAAI,UAAU,SAAS,GAAG;AACtB,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,iBAAK,IAAI,UAAU,CAAC,CAAC;AAAA,UACzB;AACA,iBAAO;AAAA,QACX;AACA,cAAM,IAAI,KAAK;AACf,cAAM,SAAS,KAAK,SAAS;AAC7B,YAAI,SAAS,mBAAmB;AAC5B,iBAAO,KAAK,KAAK,mBACb,SACA,yKAAyK;AAAA,QACjL;AACA,cAAM,QAAQ,EAAE,OAAO,KAAK,MAAM,GAAG,QAAQ,KAAK,OAAO,EAAE,CAAC;AAC5D,cAAM,KAAK;AACX,YAAI,SAAS,MAAM,WAAW;AAC1B,eAAK,QAAQ,YAAY,MAAM,OAAO,OAAO;AAAA,QACjD;AACA,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,eAAO;AAAA,MACX;AAAA,MACA,kBAAkB,WAAW;AACzB,eAAO,cAAc,kBAAkB,WAAW,IAAI;AAAA,MAC1D;AAAA,MACA,kBAAkB,WAAW;AACzB,sBAAc,kBAAkB,WAAW,IAAI;AAAA,MACnD;AAAA,MACA,eAAe,WAAW;AACtB,sBAAc,eAAe,WAAW,IAAI;AAAA,MAChD;AAAA,MACA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,qBAAqB;AACjB,YAAI,CAAC,SAAS,MAAM,WAAW;AAC3B;AAAA,QACJ;AACA,eAAO,QAAQ,CAAC,CAAC,OAAO,UAAU,MAAM;AACpC,eAAK,QAAQ,iBAAiB,OAAO,CAAC,QAAQ;AAC1C,iBAAK,UAAU,EAAE,GAAG;AAAA,UACxB,GAAG,EAAE,SAAS,MAAM,CAAC;AAAA,QACzB,CAAC;AAAA,MACL;AAAA,MACA,cAAc,KAAK;AACf,aAAK,qBAAqB,GAAG;AAC7B,cAAM,SAAS,aAAa,IAAI,IAAI;AACpC,YAAI,QAAQ;AACR,eAAK,MAAM,OAAO,cAAc;AAAA,YAC5B;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,UACnB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,aAAa,KAAK;AACd,aAAK,qBAAqB,GAAG;AAC7B,cAAM,SAAS,aAAa,IAAI,IAAI;AACpC,YAAI,QAAQ;AACR,eAAK,MAAM,OAAO,aAAa;AAAA,YAC3B;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,UACnB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,gBAAgB,UAAU;AACtB,YAAI,QAAQ,KAAK,WAAW,aAAa;AACzC,YAAI,SAAS,CAAC,MAAM,SAAS,GAAG;AAC5B,kBAAQ;AAAA,QACZ;AACA,eAAO;AAAA,MACX;AAAA,MACA,cAAc,KAAK;AACf,cAAM,SAAS,aAAa,IAAI,IAAI;AACpC,cAAM,YAAY,aAAa,IAAI,IAAI;AACvC,YAAI,CAAC,QAAQ;AACT;AAAA,QACJ;AACA,aAAK,qBAAqB,GAAG;AAC7B,cAAM,cAAc,KAAK,gBAAgB,SAAS;AAClD,cAAM,gBAAgB,EAAE,SAAS,MAAM,WAAW,KAAK,SAAS,MAAM,eAAe,MAAM,SAAS,MAAM;AAC1G,YAAI,eAAe,eAAe;AAC9B,sBAAY,eAAe,OAAO,YAAY,EAAE,IAAS,CAAC;AAC1D,sBAAY,eAAe,OAAO,cAAc,EAAE,IAAS,CAAC;AAC5D,eAAK,MAAM,OAAO,cAAc;AAAA,YAC5B;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,UACnB,CAAC;AACD,eAAK,YAAY,aAAa,IAAI;AAAA,QACtC,WACS,eAAe;AACpB,eAAK,MAAM,OAAO,cAAc;AAAA,YAC5B;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,UACnB,CAAC;AACD,eAAK,MAAM,OAAO,YAAY;AAAA,YAC1B;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,UACnB,CAAC;AAAA,QACL;AACA,aAAK,aAAa;AAClB,aAAK,oBAAoB,CAAC;AAAA,MAC9B;AAAA,MACA,aAAa,KAAK;AACd,cAAM,SAAS,aAAa,IAAI,IAAI;AACpC,cAAM,YAAY,aAAa,IAAI,IAAI;AACvC,YAAI,CAAC,QAAQ;AACT;AAAA,QACJ;AACA,aAAK,qBAAqB,GAAG;AAC7B,YAAI,mBAAmB;AACvB,aAAK,yBAAyB,QAAQ,CAAC,QAAQ;AAC3C,gBAAM,QAAQ,KAAK,gBAAgB,GAAG;AACtC,wBAAc,GAAG,cAAc;AAC/B,mBAAS,MAAM,MAAM,YAAY,aAAa,IAAI;AAClD,cAAI,CAAC,SAAS,CAAC,MAAM,YAAY,GAAG;AAChC,iBAAK,YAAY,iBAAiB,IAAI;AACtC;AAAA,UACJ;AACA,cAAI,SAAS,MAAM,6BAA6B;AAC5C,kBAAM,kBAAkB,IAAI,EAAE;AAAA,UAClC;AACA,eAAK,YAAY,iBAAiB,IAAI;AACtC,gBAAM,eAAe,OAAO,aAAa;AAAA,YACrC;AAAA,YACA,WAAW,IAAI;AAAA,UACnB,CAAC;AACD,6BAAmB;AACnB,gBAAM,UAAU,IAAI,KAAK,QAAQ,OAAO,KAAK;AAC7C,cAAI,MAAM,eAAe,KAAK,IAAI,cAAc,SAAS;AACrD,gBAAI,eAAe;AAAA,UACvB;AAAA,QACJ,CAAC;AACD,YAAI,CAAC,kBAAkB;AACnB,eAAK,MAAM,OAAO,aAAa;AAAA,YAC3B;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,YACf,WAAW,KAAK,kBAAkB,CAAC,EAAE;AAAA,UACzC,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,aAAa,KAAK;AACd,cAAM,SAAS,aAAa,IAAI,IAAI;AACpC,cAAM,YAAY,aAAa,IAAI,IAAI;AACvC,YAAI,CAAC,QAAQ;AACT;AAAA,QACJ;AACA,YAAI,SAAS,MAAM,WAAW,KAAK,cAAc,GAAG,KAAK,eAAe,KAAK,IAAI,YAAY;AACzF,cAAI,eAAe;AAAA,QACvB;AACA,aAAK,qBAAqB,GAAG;AAC7B,cAAM,gBAAgB,EAAE,SAAS,MAAM,WAAW,KAAK,SAAS,MAAM,eAAe,MAAM,SAAS,MAAM;AAC1G,YAAI,CAAC,eAAe;AAChB;AAAA,QACJ;AACA,cAAM,qBAAqB,CAAC;AAC5B,YAAI,mBAAmB;AACvB,cAAM,cAAc,KAAK,gBAAgB,SAAS;AAClD,aAAK,yBAAyB,QAAQ,CAAC,QAAQ;AAC3C,gBAAM,QAAS,cAAc,iBAAiB,IAAI,EAAE,KAChD,KAAK,gBAAgB,GAAG;AAC5B,gBAAM,YAAY,IAAI;AACtB,gBAAM,QAAQ,EAAE,KAAU,UAAU;AACpC,gBAAM,kBAAkB,gBAAgB;AACxC,cAAI,mBAAmB,aAAa;AAChC,wBAAY,eAAe,OAAO,YAAY,EAAE,GAAG,MAAM,GAAG,KAAK;AACjE,wBAAY,eAAe,OAAO,cAAc,EAAE,GAAG,MAAM,GAAG,KAAK;AAAA,UACvE;AACA,cAAI,OAAO;AACP,gBAAI,mBAAmB,MAAM,GAAG,GAAG;AAC/B;AAAA,YACJ;AACA,+BAAmB,MAAM,GAAG,IAAI;AAAA,UACpC;AACA,cAAI,SAAS,MAAM,YAAY,GAAG;AAC9B,+BAAmB;AACnB,gBAAI,iBAAiB;AACjB,oBAAM,eAAe,OAAO,aAAa,EAAE,GAAG,MAAM,GAAG,WAAW;AAClE,oBAAM,eAAe,OAAO,cAAc,EAAE,GAAG,MAAM,GAAG,WAAW;AACnE,mBAAK,YAAY,aAAa,IAAI;AAAA,YACtC;AACA,kBAAM,eAAe,OAAO,aAAa,EAAE,GAAG,MAAM,CAAC;AAAA,UACzD,OACK;AACD,gBAAI,aAAa;AACb,mBAAK,MAAM,OAAO,aAAa;AAAA,gBAC3B;AAAA,gBACA,QAAQ;AAAA,gBACR,eAAe;AAAA,gBACf;AAAA,cACJ,CAAC;AACD,mBAAK,YAAY,aAAa,IAAI;AAAA,YACtC;AAAA,UACJ;AAAA,QACJ,CAAC;AACD,YAAI,CAAC,kBAAkB;AACnB,eAAK,MAAM,OAAO,aAAa;AAAA,YAC3B;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,YACf,WAAW,KAAK,yBAAyB,CAAC,EAAE;AAAA,UAChD,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,WAAW,KAAK;AACZ,cAAM,SAAS,aAAa,IAAI,IAAI;AACpC,cAAM,YAAY,aAAa,IAAI,IAAI;AACvC,YAAI,CAAC,QAAQ;AACT;AAAA,QACJ;AACA,aAAK,qBAAqB,GAAG;AAC7B,cAAM,kBAAkB,KAAK,YAAY,iBAAiB;AAC1D,cAAM,gBAAgB,KAAK,YAAY,eAAe;AACtD,cAAM,qBAAqB,CAAC;AAC5B,YAAI,mBAAmB;AACvB,aAAK,yBAAyB,QAAQ,CAAC,QAAQ;AAC3C,gBAAM,QAAS,cAAc,iBAAiB,IAAI,EAAE,KAChD,KAAK,gBAAgB,GAAG;AAC5B,cAAI,OAAO;AACP,kBAAM,eAAe,IAAI,EAAE;AAC3B,gBAAI,mBAAmB,MAAM,GAAG,GAAG;AAC/B;AAAA,YACJ;AACA,+BAAmB,MAAM,GAAG,IAAI;AAAA,UACpC;AACA,gBAAM,YAAY,IAAI;AACtB,gBAAM,QAAQ,EAAE,KAAU,UAAU;AACpC,cAAI,eAAe;AACnB,cAAI,SAAS,MAAM,MAAM,YAAY,kBAAkB,GAAG;AACtD,2BAAe;AACf,yBAAa,KAAK,YAAY,YAAY,CAAC;AAAA,UAC/C,WACS,CAAC,cAAc,GAAG,aAAa;AACpC,qBAAS,MAAM,MAAM,YAAY,kBAAkB,IAAI;AACvD,yBAAa,KAAK,YAAY,YAAY,CAAC;AAAA,UAC/C;AACA,eAAK,YAAY,YAAY,IAAI,WAAW,WAAY;AACpD,qBAAS,MAAM,MAAM,YAAY,kBAAkB,IAAI;AAAA,UAC3D,GAAG,SAAS,MAAM,cAAc;AAChC,cAAI,SAAS,MAAM,YAAY,GAAG;AAC9B,+BAAmB;AACnB,iBAAK,YAAY,eAAe,IAAI;AACpC,kBAAM,eAAe,OAAO,WAAW,EAAE,GAAG,MAAM,CAAC;AACnD,gBAAI,SAAS,MAAM,MAAM,YAAY,aAAa,KAC9C,mBACA,oBAAoB,OAAO;AAC3B,oBAAM,eAAe,OAAO,cAAc,EAAE,GAAG,MAAM,CAAC;AACtD,kBAAI,gBAAgB,iBAAiB,kBAAkB,OAAO;AAC1D,sBAAM,eAAe,OAAO,iBAAiB,EAAE,GAAG,MAAM,CAAC;AAAA,cAC7D;AAAA,YACJ;AAAA,UACJ,OACK;AACD,iBAAK,YAAY,eAAe,IAAI;AACpC,gBAAI,SAAS,MAAM,MAAM,YAAY,aAAa,GAAG;AACjD,mBAAK,MAAM,OAAO,cAAc;AAAA,gBAC5B;AAAA,gBACA,QAAQ;AAAA,gBACR,eAAe;AAAA,gBACf;AAAA,cACJ,CAAC;AAAA,YACL;AACA,gBAAI,cAAc;AACd,mBAAK,MAAM,OAAO,iBAAiB;AAAA,gBAC/B;AAAA,gBACA,QAAQ;AAAA,gBACR,eAAe;AAAA,gBACf;AAAA,cACJ,CAAC;AAAA,YACL;AAAA,UACJ;AAAA,QACJ,CAAC;AACD,YAAI,CAAC,kBAAkB;AACnB,eAAK,MAAM,OAAO,WAAW;AAAA,YACzB;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,YACf,WAAW,KAAK,yBAAyB,CAAC,EAAE;AAAA,UAChD,CAAC;AAAA,QACL;AACA,iBAAS,MAAM,MAAM,YAAY,aAAa,IAAI;AAClD,YAAI,IAAI,cAAc,cAAc,WAAW,cAAc,WAAW;AACpE,cAAI,eAAe;AAAA,QACvB;AAAA,MACJ;AAAA,MACA,aAAa,KAAK;AACd,aAAK,qBAAqB,GAAG;AAC7B,cAAM,QAAQ,KAAK,gBAAgB,KAAK,mBAAmB,CAAC;AAC5D,YAAI,SAAS,MAAM,YAAY,GAAG;AAC9B,gBAAM,eAAe,aAAa,EAAE,IAAS,CAAC;AAAA,QAClD,OACK;AACD,eAAK,MAAM,aAAa;AAAA,YACpB;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,UACnB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,OAAO,KAAK;AACR,aAAK,qBAAqB,GAAG;AAC7B,cAAM,QAAQ,KAAK,gBAAgB,KAAK,mBAAmB,CAAC;AAC5D,YAAI,SAAS,MAAM,YAAY,GAAG;AAC9B,gBAAM,eAAe,OAAO,EAAE,IAAS,CAAC;AAAA,QAC5C,OACK;AACD,eAAK,MAAM,OAAO;AAAA,YACd;AAAA,YACA,QAAQ;AAAA,YACR,eAAe;AAAA,UACnB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,eAAe,KAAK;AAChB,aAAK,qBAAqB,GAAG;AAC7B,cAAM,QAAQ,cAAc,iBAAiB,IAAI,SAAS,KACtD,KAAK,gBAAgB,KAAK,mBAAmB,CAAC;AAClD,YAAI,OAAO;AACP,gBAAM,eAAe,WAAW,cAAc,YAAY,GAAG,CAAC;AAAA,QAClE;AACA,sBAAc,eAAe,IAAI,SAAS;AAAA,MAC9C;AAAA,MACA,oBAAoB,KAAK;AACrB,sBAAc,eAAe,IAAI,SAAS;AAAA,MAC9C;AAAA,MACA,qBAAqB,KAAK;AACtB,cAAM,kBAAkB,KAAK,oBAAoB;AACjD,YAAI,IAAI,MAAM,IAAI;AAClB,cAAM,MAAM,MAAM,OAAO;AACzB,YAAI,IAAI,YAAY,QAAW;AAC3B,eAAK,oBAAoB,CAAC;AAC1B,eAAK,2BAA2B,CAAC;AACjC,gBAAM,UAAU,QAAQ,KAAK,IAAI,SAAS,CAAC,UAAU;AACjD,iBAAK,kBAAkB,KAAK;AAAA,cACxB,IAAI,MAAM;AAAA,cACV,IAAI,MAAM,UAAU,gBAAgB,QAAQ,gBAAgB;AAAA,cAC5D,IAAI,MAAM,UAAU,gBAAgB,OAAO,gBAAgB;AAAA,YAC/D,CAAC;AAAA,UACL,CAAC;AACD,gBAAM,UAAU,QAAQ,KAAK,IAAI,kBAAkB,IAAI,SAAS,CAAC,UAAU;AACvE,iBAAK,yBAAyB,KAAK;AAAA,cAC/B,IAAI,MAAM;AAAA,cACV,IAAI,MAAM,UAAU,gBAAgB,QAAQ,gBAAgB;AAAA,cAC5D,IAAI,MAAM,UAAU,gBAAgB,OAAO,gBAAgB;AAAA,YAC/D,CAAC;AAAA,UACL,CAAC;AAAA,QACL,OACK;AACD,eAAK,IAAI,UAAU,gBAAgB,QAAQ,gBAAgB;AAC3D,eAAK,IAAI,UAAU,gBAAgB,OAAO,gBAAgB;AAC1D,eAAK,aAAa;AAAA,YACd;AAAA,YACA;AAAA,UACJ;AACA,eAAK,oBAAoB,CAAC,EAAE,GAAG,GAAG,IAAI,OAAO,KAAK,mBAAmB,GAAG,EAAE,CAAC;AAC3E,eAAK,2BAA2B;AAAA,YAC5B,EAAE,GAAG,GAAG,IAAI,OAAO,KAAK,mBAAmB,GAAG,EAAE;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,oBAAoB,KAAK;AACrB,eAAO,KAAK,KAAK,4FAA4F;AAC7G,aAAK,qBAAqB,GAAG;AAAA,MACjC;AAAA,MACA,sBAAsB;AAClB,YAAI,CAAC,KAAK,WAAW,CAAC,KAAK,QAAQ,uBAAuB;AACtD,iBAAO;AAAA,YACH,KAAK;AAAA,YACL,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,QAAQ;AAAA,UACZ;AAAA,QACJ;AACA,cAAM,OAAO,KAAK,QAAQ,sBAAsB;AAChD,eAAO;AAAA,UACH,KAAK,KAAK;AAAA,UACV,MAAM,KAAK;AAAA,UACX,QAAQ,KAAK,QAAQ,KAAK,QAAQ,eAAe;AAAA,UACjD,QAAQ,KAAK,SAAS,KAAK,QAAQ,gBAAgB;AAAA,QACvD;AAAA,MACJ;AAAA,MACA,YAAY;AACR,aAAK,eAAe,IAAI,SAAS,YAAY;AAAA,UACzC,OAAO,KAAK,MAAM;AAAA,UAClB,QAAQ,KAAK,OAAO;AAAA,QACxB,CAAC;AACD,aAAK,kBAAkB,IAAI,SAAS,UAAU;AAAA,UAC1C,YAAY;AAAA,UACZ,OAAO,KAAK,MAAM;AAAA,UAClB,QAAQ,KAAK,OAAO;AAAA,QACxB,CAAC;AACD,YAAI,CAAC,SAAS,MAAM,WAAW;AAC3B;AAAA,QACJ;AACA,cAAM,YAAY,KAAK,UAAU;AACjC,YAAI,CAAC,WAAW;AACZ,gBAAM;AAAA,QACV;AACA,kBAAU,YAAY;AACtB,aAAK,UAAU,SAAS,cAAc,KAAK;AAC3C,aAAK,QAAQ,MAAM,WAAW;AAC9B,aAAK,QAAQ,MAAM,aAAa;AAChC,aAAK,QAAQ,YAAY;AACzB,aAAK,QAAQ,aAAa,QAAQ,cAAc;AAChD,kBAAU,YAAY,KAAK,OAAO;AAClC,aAAK,WAAW;AAAA,MACpB;AAAA,MACA,QAAQ;AACJ,eAAO,KAAK,KAAK,gGAAgG;AACjH,eAAO;AAAA,MACX;AAAA,MACA,aAAa;AACT,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,aAAK,YAAY,EAAE,QAAQ,SAAU,OAAO;AACxC,gBAAM,UAAU;AAAA,QACpB,CAAC;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AACA,YAAQ,QAAQA;AAChB,IAAAA,OAAM,UAAU,WAAW;AAC3B,KAAC,GAAG,SAAS,eAAeA,MAAK;AACjC,cAAU,QAAQ,gBAAgBA,QAAO,WAAW;AACpD,QAAI,SAAS,MAAM,WAAW;AAC1B,eAAS,iBAAiB,oBAAoB,MAAM;AAChD,gBAAQ,OAAO,QAAQ,CAAC,UAAU;AAC9B,gBAAM,UAAU;AAAA,QACpB,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAAA;AAAA;;;AChsBA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,QAAQ,QAAQ,SAAS;AACjC,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,SAAS;AACf,QAAM,eAAe;AACrB,QAAM,WAAW;AACjB,QAAM,gBAAgB;AACtB,QAAM,aAAa;AACnB,QAAM,cAAc;AACpB,QAAM,eAAe;AACrB,QAAM,iBAAiB;AACvB,QAAM,iBAAiB;AACvB,QAAI;AACJ,aAAS,kBAAkB;AACvB,UAAI,cAAc;AACd,eAAO;AAAA,MACX;AACA,qBAAe,OAAO,KAAK,oBAAoB,EAAE,WAAW,IAAI;AAChE,aAAO;AAAA,IACX;AACA,YAAQ,SAAS,CAAC;AAClB,aAAS,UAAU,SAAS;AACxB,YAAM,WAAW,KAAK,MAAM;AAC5B,UAAI,UAAU;AACV,gBAAQ,KAAK,QAAQ;AAAA,MACzB,OACK;AACD,gBAAQ,KAAK;AAAA,MACjB;AAAA,IACJ;AACA,aAAS,YAAY,SAAS;AAC1B,cAAQ,OAAO;AAAA,IACnB;AACA,aAAS,aAAa,SAAS;AAC3B,YAAM,WAAW,KAAK,MAAM;AAC5B,UAAI,UAAU;AACV,gBAAQ,KAAK,QAAQ;AAAA,MACzB,OACK;AACD,gBAAQ,KAAK;AAAA,MACjB;AAAA,IACJ;AACA,aAAS,eAAe,SAAS;AAC7B,cAAQ,OAAO;AAAA,IACnB;AACA,aAAS,uBAAuB;AAC5B,WAAK,YAAY,UAAU;AAAA,IAC/B;AACA,aAAS,2BAA2B;AAChC,WAAK,YAAY,WAAW;AAAA,IAChC;AACA,aAAS,yBAAyB;AAC9B,WAAK,YAAY,YAAY;AAAA,IACjC;AACA,aAAS,4BAA4B;AACjC,WAAK,YAAY,cAAc;AAAA,IACnC;AACA,aAAS,4BAA4B;AACjC,WAAK,YAAY,cAAc;AAAA,IACnC;AACA,QAAMC,SAAN,cAAoB,OAAO,KAAK;AAAA,MAC5B,YAAY,QAAQ;AAChB,cAAM,MAAM;AACZ,YAAI;AACJ,eAAO,MAAM;AACT,gBAAM,OAAO,KAAK,eAAe;AACjC,cAAI,OAAO,EAAE,OAAO,QAAQ,SAAS;AACjC;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,WAAW;AAChB,gBAAQ,OAAO,GAAG,IAAI;AAAA,MAC1B;AAAA,MACA,aAAa;AACT,eAAO,KAAK,KAAK,gEAAgE;AACjF,eAAO,KAAK,SAAS,EAAE,WAAW;AAAA,MACtC;AAAA,MACA,YAAY;AACR,eAAO,KAAK,KAAK,+DAA+D;AAChF,eAAO,KAAK,SAAS,EAAE,UAAU;AAAA,MACrC;AAAA,MACA,eAAe;AACX,eAAO,KAAK,MAAM,aAAa,KAAK,YAAY;AAAA,MACpD;AAAA,MACA,aAAa;AACT,eAAO,KAAK,MAAM,WAAW,KAAK,UAAU;AAAA,MAChD;AAAA,MACA,YAAY;AACR,eAAO,KAAK,UAAU,YAAY,KAAK,UAAU;AAAA,MACrD;AAAA,MACA,aAAa;AACT,eAAQ,KAAK,cAAc,KACvB,KAAK,cAAc,MAAM,KACzB,CAAC,EAAE,KAAK,YAAY,KAChB,KAAK,WAAW,KAChB,KAAK,cAAc,KACnB,KAAK,cAAc;AAAA,MAC/B;AAAA,MACA,kBAAkB;AACd,eAAO,KAAK,UAAU,cAAc,KAAK,gBAAgB;AAAA,MAC7D;AAAA,MACA,mBAAmB;AACf,YAAI,KAAK,iBAAiB,GAAG;AACzB,gBAAM,MAAM,gBAAgB;AAC5B,gBAAM,UAAU,IAAI,cAAc,KAAK,iBAAiB,GAAG,KAAK,kBAAkB,KAAK,QAAQ;AAC/F,cAAI,WAAW,QAAQ,cAAc;AACjC,kBAAM,KAAK,IAAI,OAAO,UAAU;AAChC,eAAG,UAAU,KAAK,aAAa,GAAG,KAAK,aAAa,CAAC;AACrD,eAAG,OAAO,SAAS,MAAM,SAAS,KAAK,oBAAoB,CAAC,CAAC;AAC7D,eAAG,MAAM,KAAK,kBAAkB,GAAG,KAAK,kBAAkB,CAAC;AAC3D,eAAG,UAAU,KAAK,KAAK,mBAAmB,GAAG,KAAK,KAAK,mBAAmB,CAAC;AAC3E,kBAAM,IAAI,GAAG,UAAU;AACvB,kBAAM,SAAS,OAAO,cAAc,cAC9B;AAAA,cACE,GAAG,EAAE,CAAC;AAAA,cACN,GAAG,EAAE,CAAC;AAAA,cACN,GAAG,EAAE,CAAC;AAAA,cACN,GAAG,EAAE,CAAC;AAAA,cACN,GAAG,EAAE,CAAC;AAAA,cACN,GAAG,EAAE,CAAC;AAAA,YACV,IACE,IAAI,UAAU,CAAC;AACrB,oBAAQ,aAAa,MAAM;AAAA,UAC/B;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,qBAAqB;AACjB,eAAO,KAAK,UAAU,gBAAgB,KAAK,mBAAmB;AAAA,MAClE;AAAA,MACA,sBAAsB;AAClB,cAAM,aAAa,KAAK,6BAA6B;AACrD,YAAI,YAAY;AACZ,gBAAM,MAAM,gBAAgB;AAC5B,gBAAM,QAAQ,KAAK,6BAA6B;AAChD,gBAAM,MAAM,KAAK,2BAA2B;AAC5C,gBAAM,MAAM,IAAI,qBAAqB,MAAM,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;AACnE,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC3C,gBAAI,aAAa,WAAW,CAAC,GAAG,WAAW,IAAI,CAAC,CAAC;AAAA,UACrD;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,qBAAqB;AACjB,eAAO,KAAK,UAAU,gBAAgB,KAAK,mBAAmB;AAAA,MAClE;AAAA,MACA,sBAAsB;AAClB,cAAM,aAAa,KAAK,6BAA6B;AACrD,YAAI,YAAY;AACZ,gBAAM,MAAM,gBAAgB;AAC5B,gBAAM,QAAQ,KAAK,6BAA6B;AAChD,gBAAM,MAAM,KAAK,2BAA2B;AAC5C,gBAAM,MAAM,IAAI,qBAAqB,MAAM,GAAG,MAAM,GAAG,KAAK,8BAA8B,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,4BAA4B,CAAC;AAC7I,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC3C,gBAAI,aAAa,WAAW,CAAC,GAAG,WAAW,IAAI,CAAC,CAAC;AAAA,UACrD;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,gBAAgB;AACZ,eAAO,KAAK,UAAU,aAAa,KAAK,cAAc;AAAA,MAC1D;AAAA,MACA,iBAAiB;AACb,YAAI,CAAC,KAAK,UAAU,GAAG;AACnB;AAAA,QACJ;AACA,cAAM,OAAO,OAAO,KAAK,YAAY,KAAK,YAAY,CAAC;AACvD,YAAI,MAAM;AACN,iBAAQ,UACJ,KAAK,IACL,MACA,KAAK,IACL,MACA,KAAK,IACL,MACA,KAAK,KAAK,KAAK,cAAc,KAAK,KAClC;AAAA,QACR;AAAA,MACJ;AAAA,MACA,UAAU;AACN,eAAO,KAAK,WAAW,WAAW;AAAA,UAC9B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ,GAAG,MAAM;AACL,iBAAQ,KAAK,YAAY,KACrB,CAAC,EAAE,KAAK,KAAK,KACT,KAAK,iBAAiB,KACtB,KAAK,6BAA6B,KAClC,KAAK,6BAA6B;AAAA,QAC9C,CAAC;AAAA,MACL;AAAA,MACA,YAAY;AACR,eAAO,KAAK,WAAW,aAAa;AAAA,UAChC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ,GAAG,MAAM;AACL,iBAAQ,KAAK,cAAc,KACvB,KAAK,YAAY,KACjB,CAAC,EAAE,KAAK,OAAO,KAAK,KAAK,+BAA+B;AAAA,QAChE,CAAC;AAAA,MACL;AAAA,MACA,eAAe;AACX,cAAM,QAAQ,KAAK,eAAe;AAClC,YAAI,UAAU,QAAQ;AAClB,iBAAO,KAAK,UAAU;AAAA,QAC1B;AACA,eAAO,KAAK,cAAc,KAAK,CAAC,CAAC;AAAA,MACrC;AAAA,MACA,WAAW,OAAO;AACd,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,cAAM,kBAAkB,MAAM;AAC9B,wBAAgB,WAAW,EAAE,MAAM;AACnC,aAAK,QAAQ,iBAAiB,QAAW,IAAI;AAC7C,cAAM,IAAI,gBAAgB,QAAQ,aAAa,KAAK,MAAM,MAAM,CAAC,GAAG,KAAK,MAAM,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE;AAC/F,eAAO,EAAE,CAAC,IAAI;AAAA,MAClB;AAAA,MACA,UAAU;AACN,eAAO,KAAK,UAAU,QAAQ,KAAK,IAAI;AACvC,eAAO,QAAQ,OAAO,KAAK,QAAQ;AACnC,eAAO,KAAK;AACZ,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB,WAAW;AACxB,YAAIC;AACJ,cAAM,sBAAsBA,MAAK,KAAK,MAAM,wBAAwB,QAAQA,QAAO,SAASA,MAAK;AACjG,YAAI,CAAC,oBAAoB;AACrB,iBAAO;AAAA,QACX;AACA,cAAM,UAAU,aAAa,KAAK,QAAQ;AAC1C,cAAM,YAAY,KAAK,UAAU;AACjC,cAAM,gBAAgB,KAAK,mBAAmB,MAAM;AACpD,YAAI,WAAW,aAAa,eAAe;AACvC,iBAAO;AAAA,QACX;AACA,cAAM,YAAY,KAAK,UAAU;AACjC,cAAM,kBAAkB,KAAK,uBAAuB;AACpD,YAAI,WAAW,aAAa,aAAa,iBAAiB;AACtD,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,KAAK;AACrB,eAAO,KAAK,KAAK,6EAA6E;AAC9F,YAAI,KAAK;AACL,eAAK,eAAe,MAAM;AAAA,QAC9B,OACK;AACD,eAAK,eAAe,CAAC;AAAA,QACzB;AAAA,MACJ;AAAA,MACA,sBAAsB;AAClB,YAAI,KAAK,eAAe,MAAM,GAAG;AAC7B,iBAAO;AAAA,QACX,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,cAAc;AACV,cAAM,OAAO,KAAK,KAAK;AACvB,eAAO;AAAA,UACH,GAAG,KAAK,YAAY,CAAC,KAAK,QAAQ,IAAI;AAAA,UACtC,GAAG,KAAK,YAAY,CAAC,KAAK,SAAS,IAAI;AAAA,UACvC,OAAO,KAAK;AAAA,UACZ,QAAQ,KAAK;AAAA,QACjB;AAAA,MACJ;AAAA,MACA,cAAc,SAAS,CAAC,GAAG;AACvB,YAAI,kBAAkB;AACtB,YAAI,SAAS,KAAK,UAAU;AAC5B,eAAO,QAAQ;AACX,cAAI,OAAO,SAAS,GAAG;AACnB,8BAAkB;AAClB;AAAA,UACJ;AACA,mBAAS,OAAO,UAAU;AAAA,QAC9B;AACA,cAAM,gBAAgB,OAAO;AAC7B,cAAM,aAAa,OAAO,cAAe,mBAAmB,KAAK,SAAS,KAAM;AAChF,cAAM,WAAW,KAAK,YAAY;AAClC,cAAM,cAAc,CAAC,OAAO,cAAc,KAAK,UAAU;AACzD,cAAM,cAAe,eAAe,KAAK,YAAY,KAAM;AAC3D,cAAM,qBAAqB,SAAS,QAAQ;AAC5C,cAAM,sBAAsB,SAAS,SAAS;AAC9C,cAAM,cAAc,CAAC,OAAO,cAAc,KAAK,UAAU;AACzD,cAAM,gBAAgB,cAAc,KAAK,cAAc,IAAI;AAC3D,cAAM,gBAAgB,cAAc,KAAK,cAAc,IAAI;AAC3D,cAAM,WAAW,qBAAqB,KAAK,IAAI,aAAa;AAC5D,cAAM,YAAY,sBAAsB,KAAK,IAAI,aAAa;AAC9D,cAAM,aAAc,eAAe,KAAK,WAAW,KAAM;AACzD,cAAM,QAAQ,WAAW,aAAa;AACtC,cAAM,SAAS,YAAY,aAAa;AACxC,cAAM,OAAO;AAAA,UACT;AAAA,UACA;AAAA,UACA,GAAG,EAAE,cAAc,IAAI,cACnB,KAAK,IAAI,eAAe,CAAC,IACzB,SAAS;AAAA,UACb,GAAG,EAAE,cAAc,IAAI,cACnB,KAAK,IAAI,eAAe,CAAC,IACzB,SAAS;AAAA,QACjB;AACA,YAAI,CAAC,eAAe;AAChB,iBAAO,KAAK,iBAAiB,MAAM,UAAU;AAAA,QACjD;AACA,eAAO;AAAA,MACX;AAAA,MACA,UAAU,KAAK,KAAK,cAAc;AAC9B,cAAM,QAAQ,KAAK,SAAS;AAC5B,cAAM,SAAS,OAAO,MAAM,UAAU,GAAG,UAAU,OAAO,WAAW,GAAG,eAAe,KAAK,gBAAgB,GAAG,WAAW,KAAK,aAAa,GAAG,YAAY,KAAK,UAAU;AAC1K,YAAI;AACJ,cAAM,aAAa;AACnB,cAAM,cAAc,QAAQ;AAC5B,YAAI,CAAC,KAAK,UAAU,KAAK,CAAC,aAAa;AACnC,iBAAO;AAAA,QACX;AACA,YAAI,cAAc;AACd,kBAAQ,KAAK;AACb,gBAAM,IAAI,KAAK,qBAAqB,GAAG,EAAE,UAAU;AACnD,kBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AACpD,eAAK,uBAAuB,OAAO;AACnC,kBAAQ,QAAQ;AAChB,iBAAO;AAAA,QACX;AACA,YAAI,CAAC,UAAU;AACX,iBAAO;AAAA,QACX;AACA,gBAAQ,KAAK;AACb,YAAI,KAAK,iBAAiB,KAAK,CAAC,YAAY;AACxC,kBAAQ,KAAK,SAAS;AACtB,gBAAM,KAAK,gBAAgB,MAAM;AACjC,gBAAM,gBAAgB,GAAG,WAAW;AACpC,wBAAc,MAAM;AACpB,wBAAc,KAAK;AACnB,wBAAc,eAAe,IAAI;AACjC,gBAAM,IAAI,KAAK,qBAAqB,GAAG,EAAE,UAAU;AACnD,wBAAc,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1D,mBAAS,KAAK,MAAM,eAAe,IAAI;AACvC,wBAAc,QAAQ;AACtB,gBAAM,QAAQ,GAAG;AACjB,cAAI,WAAW;AACX,oBAAQ,aAAa,IAAI;AAAA,UAC7B;AACA,kBAAQ,cAAc,IAAI;AAC1B,kBAAQ,+BAA+B,IAAI;AAC3C,kBAAQ,UAAU,GAAG,SAAS,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG,GAAG,QAAQ,OAAO,GAAG,SAAS,KAAK;AAAA,QAC3F,OACK;AACD,kBAAQ,eAAe,IAAI;AAC3B,cAAI,CAAC,aAAa;AACd,kBAAM,IAAI,KAAK,qBAAqB,GAAG,EAAE,UAAU;AACnD,oBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AACpD,oBAAQ,cAAc,IAAI;AAC1B,oBAAQ,+BAA+B,IAAI;AAAA,UAC/C;AACA,cAAI,WAAW;AACX,oBAAQ,aAAa,IAAI;AAAA,UAC7B;AACA,mBAAS,KAAK,MAAM,SAAS,IAAI;AAAA,QACrC;AACA,gBAAQ,QAAQ;AAChB,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,KAAK,KAAK,gBAAgB,OAAO;AACrC,YAAI,CAAC,KAAK,cAAc,KAAK,aAAa,GAAG;AACzC,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,KAAK,SAAS,GAAG,SAAS,OAAO,MAAM,WAAW,UAAU,UAAU,OAAO,WAAW,GAAG,WAAW,KAAK,QAAQ,KAAK,KAAK,UAAU,GAAG,eAAe,KAAK,gBAAgB,GAAG,kBAAkB,gBAAgB,aAAa;AAC9O,YAAI,CAAC,KAAK,UAAU;AAChB,iBAAO,KAAK,KAAK,yKAAyK;AAAA,QAC9L;AACA,YAAI,iBAAiB;AACjB,kBAAQ,KAAK;AACb,gBAAM,IAAI,KAAK,qBAAqB,GAAG,EAAE,UAAU;AACnD,kBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AACpD,eAAK,qBAAqB,OAAO;AACjC,kBAAQ,QAAQ;AAChB,iBAAO;AAAA,QACX;AACA,YAAI,CAAC,UAAU;AACX,iBAAO;AAAA,QACX;AACA,gBAAQ,KAAK;AACb,gBAAQ,eAAe,IAAI;AAC3B,cAAM,YAAY,SAAS;AAC3B,YAAI,CAAC,WAAW;AACZ,gBAAM,IAAI,KAAK,qBAAqB,GAAG,EAAE,UAAU;AACnD,kBAAQ,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,QACxD;AACA,iBAAS,KAAK,MAAM,SAAS,IAAI;AACjC,gBAAQ,QAAQ;AAChB,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB,iBAAiB,GAAG;AACjC,cAAM,eAAe,KAAK,gBAAgB,GAAG,cAAc,KAAK,sBAAsB,GAAG,YAAY,aAAa,KAAK,aAAa,UAAU,WAAW,GAAG,WAAW,UAAU,SAAS,GAAG,YAAY,UAAU,UAAU;AAC7N,mBAAW,MAAM;AACjB,mBAAW,UAAU,YAAY,SAAS,GAAG,GAAG,UAAU,SAAS;AACnE,YAAI;AACA,gBAAM,eAAe,WAAW,aAAa,GAAG,GAAG,UAAU,SAAS;AACtE,gBAAM,UAAU,aAAa;AAC7B,gBAAM,MAAM,QAAQ;AACpB,gBAAM,cAAc,OAAO,KAAK,UAAU,KAAK,QAAQ;AACvD,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC7B,kBAAM,QAAQ,QAAQ,IAAI,CAAC;AAC3B,gBAAI,QAAQ,gBAAgB;AACxB,sBAAQ,CAAC,IAAI,YAAY;AACzB,sBAAQ,IAAI,CAAC,IAAI,YAAY;AAC7B,sBAAQ,IAAI,CAAC,IAAI,YAAY;AAC7B,sBAAQ,IAAI,CAAC,IAAI;AAAA,YACrB,OACK;AACD,sBAAQ,IAAI,CAAC,IAAI;AAAA,YACrB;AAAA,UACJ;AACA,qBAAW,aAAa,cAAc,GAAG,CAAC;AAAA,QAC9C,SACO,GAAG;AACN,iBAAO,KAAK,MAAM,wDAAwD,EAAE,OAAO;AAAA,QACvF;AACA,eAAO;AAAA,MACX;AAAA,MACA,kBAAkB,WAAW;AACzB,eAAO,cAAc,kBAAkB,WAAW,IAAI;AAAA,MAC1D;AAAA,MACA,kBAAkB,WAAW;AACzB,sBAAc,kBAAkB,WAAW,IAAI;AAAA,MACnD;AAAA,MACA,eAAe,WAAW;AACtB,sBAAc,eAAe,WAAW,IAAI;AAAA,MAChD;AAAA,IACJ;AACA,YAAQ,QAAQD;AAChB,IAAAA,OAAM,UAAU,YAAY;AAC5B,IAAAA,OAAM,UAAU,cAAc;AAC9B,IAAAA,OAAM,UAAU,eAAe;AAC/B,IAAAA,OAAM,UAAU,iBAAiB;AACjC,IAAAA,OAAM,UAAU,YAAY;AAC5B,IAAAA,OAAM,UAAU,WAAW;AAC3B,KAAC,GAAG,SAAS,eAAeA,MAAK;AACjC,IAAAA,OAAM,UAAU,iBAAiB,CAAC;AAClC,IAAAA,OAAM,UAAU,GAAG,KAAKA,OAAM,WAAW,+HAA+H,oBAAoB;AAC5L,IAAAA,OAAM,UAAU,GAAG,KAAKA,OAAM,WAAW,+EAA+E,wBAAwB;AAChJ,IAAAA,OAAM,UAAU,GAAG,KAAKA,OAAM,WAAW,mSAAmS,sBAAsB;AAClW,IAAAA,OAAM,UAAU,GAAG,KAAKA,OAAM,WAAW,yOAAyO,yBAAyB;AAC3S,IAAAA,OAAM,UAAU,GAAG,KAAKA,OAAM,WAAW,2TAA2T,yBAAyB;AAC7X,cAAU,QAAQ,gBAAgBA,QAAO,UAAU,SAAY,GAAG,aAAa,8BAA8B,CAAC;AAC9G,cAAU,QAAQ,gBAAgBA,QAAO,eAAe,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACjG,cAAU,QAAQ,gBAAgBA,QAAO,0BAA0B,KAAK;AACxE,cAAU,QAAQ,gBAAgBA,QAAO,kBAAkB,SAAS,GAAG,aAAa,0BAA0B,CAAC;AAC/G,cAAU,QAAQ,gBAAgBA,QAAO,oBAAoB,OAAO,GAAG,aAAa,qBAAqB,CAAC;AAC1G,cAAU,QAAQ,gBAAgBA,QAAO,sBAAsB,OAAO,GAAG,aAAa,qBAAqB,CAAC;AAC5G,cAAU,QAAQ,gBAAgBA,QAAO,0BAA0B,OAAO,GAAG,aAAa,qBAAqB,CAAC;AAChH,cAAU,QAAQ,gBAAgBA,QAAO,UAAU;AACnD,cAAU,QAAQ,gBAAgBA,QAAO,SAAS;AAClD,cAAU,QAAQ,gBAAgBA,QAAO,WAAW;AACpD,cAAU,QAAQ,gBAAgBA,QAAO,SAAS;AAClD,cAAU,QAAQ,gBAAgBA,QAAO,MAAM;AAC/C,cAAU,QAAQ,gBAAgBA,QAAO,cAAc,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAChG,cAAU,QAAQ,gBAAgBA,QAAO,eAAe,SAAY,GAAG,aAAa,oBAAoB,CAAC;AACzG,cAAU,QAAQ,gBAAgBA,QAAO,cAAc,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAChG,cAAU,QAAQ,gBAAgBA,QAAO,iBAAiB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACnG,cAAU,QAAQ,0BAA0BA,QAAO,gBAAgB,CAAC,KAAK,GAAG,CAAC;AAC7E,cAAU,QAAQ,gBAAgBA,QAAO,iBAAiB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACnG,cAAU,QAAQ,gBAAgBA,QAAO,iBAAiB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACnG,cAAU,QAAQ,gBAAgBA,QAAO,kBAAkB;AAC3D,cAAU,QAAQ,gBAAgBA,QAAO,QAAQ,SAAY,GAAG,aAAa,8BAA8B,CAAC;AAC5G,cAAU,QAAQ,gBAAgBA,QAAO,gBAAgB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAClG,cAAU,QAAQ,gBAAgBA,QAAO,gBAAgB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAClG,cAAU,QAAQ,gBAAgBA,QAAO,8BAA8B;AACvE,cAAU,QAAQ,gBAAgBA,QAAO,gCAAgC;AACzE,cAAU,QAAQ,gBAAgBA,QAAO,iCAAiC,CAAC;AAC3E,cAAU,QAAQ,gBAAgBA,QAAO,+BAA+B,CAAC;AACzE,cAAU,QAAQ,gBAAgBA,QAAO,8BAA8B;AACvE,cAAU,QAAQ,gBAAgBA,QAAO,qBAAqB,QAAQ;AACtE,cAAU,QAAQ,gBAAgBA,QAAO,eAAe,IAAI;AAC5D,cAAU,QAAQ,gBAAgBA,QAAO,iBAAiB,IAAI;AAC9D,cAAU,QAAQ,gBAAgBA,QAAO,iBAAiB,IAAI;AAC9D,cAAU,QAAQ,gBAAgBA,QAAO,eAAe,IAAI;AAC5D,cAAU,QAAQ,gBAAgBA,QAAO,sBAAsB,IAAI;AACnE,cAAU,QAAQ,gBAAgBA,QAAO,gBAAgB,OAAO;AAChE,cAAU,QAAQ,0BAA0BA,QAAO,qBAAqB,CAAC,KAAK,GAAG,CAAC;AAClF,cAAU,QAAQ,gBAAgBA,QAAO,sBAAsB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACxG,cAAU,QAAQ,gBAAgBA,QAAO,sBAAsB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACxG,cAAU,QAAQ,0BAA0BA,QAAO,oBAAoB,CAAC,KAAK,GAAG,CAAC;AACjF,cAAU,QAAQ,gBAAgBA,QAAO,qBAAqB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACvG,cAAU,QAAQ,gBAAgBA,QAAO,qBAAqB,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACvG,cAAU,QAAQ,0BAA0BA,QAAO,gCAAgC;AAAA,MAC/E;AAAA,MACA;AAAA,IACJ,CAAC;AACD,cAAU,QAAQ,0BAA0BA,QAAO,kCAAkC;AAAA,MACjF;AAAA,MACA;AAAA,IACJ,CAAC;AACD,cAAU,QAAQ,gBAAgBA,QAAO,iCAAiC,CAAC;AAC3E,cAAU,QAAQ,gBAAgBA,QAAO,mCAAmC,CAAC;AAC7E,cAAU,QAAQ,gBAAgBA,QAAO,iCAAiC,CAAC;AAC3E,cAAU,QAAQ,gBAAgBA,QAAO,mCAAmC,CAAC;AAC7E,cAAU,QAAQ,0BAA0BA,QAAO,8BAA8B;AAAA,MAC7E;AAAA,MACA;AAAA,IACJ,CAAC;AACD,cAAU,QAAQ,0BAA0BA,QAAO,gCAAgC;AAAA,MAC/E;AAAA,MACA;AAAA,IACJ,CAAC;AACD,cAAU,QAAQ,gBAAgBA,QAAO,+BAA+B,CAAC;AACzE,cAAU,QAAQ,gBAAgBA,QAAO,iCAAiC,CAAC;AAC3E,cAAU,QAAQ,gBAAgBA,QAAO,+BAA+B,CAAC;AACzE,cAAU,QAAQ,gBAAgBA,QAAO,iCAAiC,CAAC;AAC3E,cAAU,QAAQ,0BAA0BA,QAAO,gCAAgC;AAAA,MAC/E;AAAA,MACA;AAAA,IACJ,CAAC;AACD,cAAU,QAAQ,gBAAgBA,QAAO,iCAAiC,CAAC;AAC3E,cAAU,QAAQ,gBAAgBA,QAAO,iCAAiC,CAAC;AAC3E,cAAU,QAAQ,0BAA0BA,QAAO,8BAA8B;AAAA,MAC7E;AAAA,MACA;AAAA,IACJ,CAAC;AACD,cAAU,QAAQ,gBAAgBA,QAAO,+BAA+B,CAAC;AACzE,cAAU,QAAQ,gBAAgBA,QAAO,+BAA+B,CAAC;AACzE,cAAU,QAAQ,gBAAgBA,QAAO,uBAAuB,CAAC;AACjE,cAAU,QAAQ,gBAAgBA,QAAO,YAAY,SAAY,GAAG,aAAa,oBAAoB,CAAC;AACtG,cAAU,QAAQ,WAAWA,QAAO;AAAA,MAChC,WAAW;AAAA,MACX,cAAc;AAAA,MACd,cAAc;AAAA,MACd,UAAU;AAAA,MACV,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,IACpB,CAAC;AAAA;AAAA;;;ACjiBD;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,QAAQ;AAChB,QAAM,SAAS;AACf,QAAM,cAAc;AACpB,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,eAAe;AACrB,QAAM,UAAU;AAChB,QAAM,WAAW;AACjB,QAAM,OAAO;AAAb,QAAkB,cAAc;AAAhC,QAA8C,OAAO;AAArD,QAA6D,uBAAuB;AAAA,MAChF,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,MACb,EAAE,GAAG,IAAI,GAAG,GAAG;AAAA,MACf,EAAE,GAAG,GAAG,GAAG,GAAG;AAAA,MACd,EAAE,GAAG,GAAG,GAAG,EAAE;AAAA,MACb,EAAE,GAAG,IAAI,GAAG,EAAE;AAAA,IAClB;AANA,QAMG,2BAA2B,qBAAqB;AACnD,QAAME,SAAN,cAAoB,YAAY,UAAU;AAAA,MACtC,YAAY,QAAQ;AAChB,cAAM,MAAM;AACZ,aAAK,SAAS,IAAI,SAAS,YAAY;AACvC,aAAK,YAAY,IAAI,SAAS,UAAU;AAAA,UACpC,YAAY;AAAA,QAChB,CAAC;AACD,aAAK,kBAAkB;AACvB,aAAK,GAAG,uBAAuB,KAAK,gBAAgB;AACpD,aAAK,iBAAiB;AACtB,aAAK,GAAG,qCAAqC,KAAK,iBAAiB;AACnE,aAAK,kBAAkB;AAAA,MAC3B;AAAA,MACA,kBAAkB;AACd,cAAM,IAAI,KAAK,OAAO;AACtB,eAAO,EAAE,gBAAgB;AAAA,MAC7B;AAAA,MACA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,yBAAyB;AACrB,eAAO,KAAK,OAAO;AAAA,MACvB;AAAA,MACA,eAAe;AACX,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,aAAa;AACT,eAAO,KAAK,UAAU,EAAE,WAAW;AAAA,MACvC;AAAA,MACA,MAAM,QAAQ;AACV,aAAK,WAAW,EAAE,MAAM,MAAM;AAC9B,aAAK,aAAa,EAAE,WAAW,EAAE,MAAM,MAAM;AAC7C,eAAO;AAAA,MACX;AAAA,MACA,UAAU,OAAO;AACb,cAAM,UAAU,KAAK;AACrB,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,SAAS,MAAM,SAAS;AACxB,gBAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AACvD,cAAI,QAAQ,MAAM,SAAS,SAAS,GAAG;AACnC,kBAAM,QAAQ,aAAa,KAAK,uBAAuB,GAAG,MAAM,SAAS,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO;AAAA,UAC3G,OACK;AACD,kBAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AAAA,UAC3D;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,eAAO,KAAK,UAAU,UAAU,KAAK,IAAI;AACzC,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,SAAS,MAAM,SAAS;AACxB,gBAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AACvD,gBAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AAAA,QAC3D;AACA,eAAO;AAAA,MACX;AAAA,MACA,SAAS;AACL,cAAM,QAAQ,OAAO,KAAK,UAAU,OAAO,KAAK,IAAI;AACpD,YAAI,CAAC,OAAO;AACR,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,KAAK,SAAS;AAC5B,YAAI,CAAC,SAAS,CAAC,MAAM,SAAS;AAC1B,iBAAO;AAAA,QACX;AACA,cAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AACvD,YAAI,KAAK,QAAQ,MAAM,SAAS,SAAS,GAAG;AACxC,gBAAM,QAAQ,aAAa,KAAK,uBAAuB,GAAG,MAAM,SAAS,KAAK,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO;AAAA,QAChH,OACK;AACD,gBAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AAAA,QAC3D;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,YAAI,OAAO,KAAK,UAAU,SAAS,KAAK,IAAI,GAAG;AAC3C,gBAAM,QAAQ,KAAK,SAAS;AAC5B,cAAI,OAAO;AACP,kBAAM,WAAW,MAAM;AACvB,gBAAI,MAAM,SAAS;AACf,oBAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AACvD,oBAAM,QAAQ,aAAa,KAAK,uBAAuB,GAAG,SAAS,KAAK,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO;AAAA,YAC1G;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,eAAe;AACX,YAAI,OAAO,KAAK,UAAU,aAAa,KAAK,IAAI,GAAG;AAC/C,gBAAM,QAAQ,KAAK,SAAS;AAC5B,cAAI,OAAO;AACP,kBAAM,WAAW,MAAM;AACvB,gBAAI,MAAM,SAAS;AACf,oBAAM,QAAQ,YAAY,KAAK,uBAAuB,CAAC;AACvD,oBAAM,QAAQ,aAAa,KAAK,uBAAuB,GAAG,SAAS,CAAC,EAAE,UAAU,EAAE,OAAO;AAAA,YAC7F;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,eAAO;AAAA,MACX;AAAA,MACA,SAAS;AACL,cAAM,UAAU,KAAK,uBAAuB;AAC5C,eAAO,KAAK,UAAU,OAAO,KAAK,IAAI;AACtC,YAAI,WAAW,QAAQ,cAAc,OAAO,KAAK,cAAc,OAAO,GAAG;AACrE,kBAAQ,WAAW,YAAY,OAAO;AAAA,QAC1C;AACA,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,QAAQ,EAAE,OAAO,OAAO,GAAG;AACvB,aAAK,OAAO,QAAQ,OAAO,MAAM;AACjC,aAAK,UAAU,QAAQ,OAAO,MAAM;AACpC,aAAK,kBAAkB;AACvB,eAAO;AAAA,MACX;AAAA,MACA,aAAa,OAAO;AAChB,cAAM,OAAO,MAAM,QAAQ;AAC3B,YAAI,SAAS,WAAW,SAAS,SAAS;AACtC,iBAAO,KAAK,MAAM,gDAAgD;AAAA,QACtE;AAAA,MACJ;AAAA,MACA,eAAe,QAAQ;AACnB,iBAAS,UAAU,CAAC;AACpB,eAAO,QAAQ,OAAO,SAAS,KAAK,SAAS;AAC7C,eAAO,SAAS,OAAO,UAAU,KAAK,UAAU;AAChD,eAAO,IAAI,OAAO,MAAM,SAAY,OAAO,IAAI,KAAK,EAAE;AACtD,eAAO,IAAI,OAAO,MAAM,SAAY,OAAO,IAAI,KAAK,EAAE;AACtD,eAAO,OAAO,KAAK,UAAU,eAAe,KAAK,MAAM,MAAM;AAAA,MACjE;AAAA,MACA,mBAAmB;AACf,cAAM,UAAU,KAAK,QAAQ;AAC7B,YAAI,SAAS;AACT,eAAK,OAAO,QAAQ,MAAM,UAAU;AAAA,QACxC,OACK;AACD,eAAK,OAAO,QAAQ,MAAM,UAAU;AAAA,QACxC;AAAA,MACJ;AAAA,MACA,oBAAoB;AAChB,aAAK,WAAW,EAAE,SAAS,wBACvB,KAAK,sBAAsB;AAAA,MACnC;AAAA,MACA,WAAW;AACP,YAAI,KAAK,QAAQ;AACb,iBAAO,KAAK,OAAO,MAAM;AAAA,QAC7B;AAAA,MACJ;AAAA,MACA,WAAW;AACP,eAAO,KAAK,KAAK,2EAA2E;AAAA,MAChG;AAAA,MACA,YAAY;AACR,YAAI,KAAK,QAAQ;AACb,iBAAO,KAAK,OAAO,OAAO;AAAA,QAC9B;AAAA,MACJ;AAAA,MACA,YAAY;AACR,eAAO,KAAK,KAAK,6EAA6E;AAAA,MAClG;AAAA,MACA,YAAY;AACR,YAAI,CAAC,KAAK,iBAAiB;AACvB,eAAK,kBAAkB;AACvB,iBAAO,KAAK,iBAAiB,MAAM;AAC/B,iBAAK,KAAK;AACV,iBAAK,kBAAkB;AAAA,UAC3B,CAAC;AAAA,QACL;AACA,eAAO;AAAA,MACX;AAAA,MACA,gBAAgB,KAAK;AACjB,YAAI,CAAC,KAAK,YAAY,KAAK,CAAC,KAAK,UAAU,GAAG;AAC1C,iBAAO;AAAA,QACX;AACA,YAAI,uBAAuB;AAC3B,YAAI,iBAAiB;AACrB,eAAO,MAAM;AACT,mBAAS,IAAI,GAAG,IAAI,0BAA0B,KAAK;AAC/C,kBAAM,qBAAqB,qBAAqB,CAAC;AACjD,kBAAM,MAAM,KAAK,iBAAiB;AAAA,cAC9B,GAAG,IAAI,IAAI,mBAAmB,IAAI;AAAA,cAClC,GAAG,IAAI,IAAI,mBAAmB,IAAI;AAAA,YACtC,CAAC;AACD,kBAAM,QAAQ,IAAI;AAClB,gBAAI,OAAO;AACP,qBAAO;AAAA,YACX;AACA,6BAAiB,CAAC,CAAC,IAAI;AACvB,gBAAI,CAAC,IAAI,aAAa;AAClB;AAAA,YACJ;AAAA,UACJ;AACA,cAAI,gBAAgB;AAChB,oCAAwB;AAAA,UAC5B,OACK;AACD,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,iBAAiB,KAAK;AAClB,cAAM,QAAQ,KAAK,UAAU;AAC7B,cAAM,IAAI,KAAK,UAAU,QAAQ,aAAa,KAAK,MAAM,IAAI,IAAI,KAAK,GAAG,KAAK,MAAM,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,EAAE;AAC1G,cAAM,KAAK,EAAE,CAAC;AACd,YAAI,OAAO,KAAK;AACZ,gBAAM,WAAW,OAAO,KAAK,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AACvD,gBAAM,QAAQ,QAAQ,OAAO,OAAO,QAAQ;AAC5C,cAAI,OAAO;AACP,mBAAO;AAAA,cACH;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO;AAAA,YACH,aAAa;AAAA,UACjB;AAAA,QACJ,WACS,KAAK,GAAG;AACb,iBAAO;AAAA,YACH,aAAa;AAAA,UACjB;AAAA,QACJ;AACA,eAAO,CAAC;AAAA,MACZ;AAAA,MACA,UAAU,KAAK,KAAK,cAAc;AAC9B,cAAM,QAAQ,KAAK,SAAS,GAAG,SAAS,OAAQ,SAAS,MAAM,UAAU;AACzE,aAAK,MAAM,aAAa;AAAA,UACpB,MAAM;AAAA,QACV,CAAC;AACD,YAAI,KAAK,gBAAgB,GAAG;AACxB,iBAAO,WAAW,EAAE,MAAM;AAAA,QAC9B;AACA,oBAAY,UAAU,UAAU,UAAU,KAAK,MAAM,QAAQ,KAAK,YAAY;AAC9E,aAAK,MAAM,MAAM;AAAA,UACb,MAAM;AAAA,QACV,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,KAAK,KAAK;AACd,cAAM,QAAQ,KAAK,SAAS,GAAG,SAAS,OAAQ,SAAS,MAAM;AAC/D,YAAI,SAAS,MAAM,gBAAgB,GAAG;AAClC,gBAAM,aAAa,EAAE,WAAW,EAAE,MAAM;AAAA,QAC5C;AACA,oBAAY,UAAU,UAAU,QAAQ,KAAK,MAAM,QAAQ,GAAG;AAC9D,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB;AACb,aAAK,gBAAgB,IAAI;AACzB,eAAO;AAAA,MACX;AAAA,MACA,kBAAkB;AACd,aAAK,gBAAgB,KAAK;AAC1B,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,KAAK;AACpB,eAAO,KAAK,KAAK,6EAA6E;AAC9F,aAAK,UAAU,GAAG;AAAA,MACtB;AAAA,MACA,mBAAmB,KAAK;AACpB,eAAO,KAAK,KAAK,6EAA6E;AAC9F,eAAO,KAAK,UAAU;AAAA,MAC1B;AAAA,MACA,kBAAkB;AACd,YAAI,CAAC,KAAK,UAAU,CAAC,KAAK,OAAO,SAAS,GAAG;AACzC;AAAA,QACJ;AACA,cAAM,SAAS,KAAK;AACpB,cAAM,QAAQ,CAAC,CAAC,KAAK,UAAU,QAAQ;AACvC,YAAI,OAAO;AACP,iBAAO,QAAQ,YAAY,KAAK,UAAU,OAAO;AAAA,QACrD,OACK;AACD,iBAAO,QAAQ,YAAY,KAAK,UAAU,OAAO;AAAA,QACrD;AAAA,MACJ;AAAA,MACA,UAAU;AACN,eAAO,KAAK,cAAc,KAAK,uBAAuB,GAAG,KAAK,aAAa,EAAE,OAAO;AACpF,eAAO,MAAM,QAAQ;AAAA,MACzB;AAAA,IACJ;AACA,YAAQ,QAAQA;AAChB,IAAAA,OAAM,UAAU,WAAW;AAC3B,KAAC,GAAG,SAAS,eAAeA,MAAK;AACjC,cAAU,QAAQ,gBAAgBA,QAAO,yBAAyB,IAAI;AACtE,cAAU,QAAQ,gBAAgBA,QAAO,mBAAmB,IAAI;AAChE,cAAU,QAAQ,gBAAgBA,QAAO,mBAAmB,OAAO,GAAG,aAAa,qBAAqB,CAAC;AAAA;AAAA;;;ACpTzG;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY;AACpB,QAAM,SAAS;AACf,QAAM,UAAU;AAChB,QAAM,WAAW;AACjB,QAAMC,aAAN,cAAwB,QAAQ,MAAM;AAAA,MAClC,YAAY,OAAO;AACf,cAAM,KAAK;AACX,aAAK,UAAU,KAAK;AACpB,eAAO,KAAK,KAAK,6FAA6F;AAAA,MAClH;AAAA,IACJ;AACA,YAAQ,YAAYA;AACpB,IAAAA,WAAU,UAAU,WAAW;AAC/B,KAAC,GAAG,SAAS,eAAeA,UAAS;AAAA;AAAA;;;ACfrC;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,QAAQ;AAChB,QAAM,SAAS;AACf,QAAM,cAAc;AACpB,QAAM,WAAW;AACjB,QAAMC,SAAN,cAAoB,YAAY,UAAU;AAAA,MACtC,aAAa,OAAO;AAChB,cAAM,OAAO,MAAM,QAAQ;AAC3B,YAAI,SAAS,WAAW,SAAS,SAAS;AACtC,iBAAO,KAAK,MAAM,+CAA+C;AAAA,QACrE;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,QAAQA;AAChB,IAAAA,OAAM,UAAU,WAAW;AAC3B,KAAC,GAAG,SAAS,eAAeA,MAAK;AAAA;AAAA;;;AChBjC;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY;AACpB,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,MAAO,WAAY;AACrB,UAAI,SAAS,KAAK,eAAe,SAAS,KAAK,YAAY,KAAK;AAC5D,eAAO,WAAY;AACf,iBAAO,SAAS,KAAK,YAAY,IAAI;AAAA,QACzC;AAAA,MACJ;AACA,aAAO,WAAY;AACf,gBAAO,oBAAI,KAAK,GAAE,QAAQ;AAAA,MAC9B;AAAA,IACJ,EAAG;AACH,QAAM,YAAN,MAAM,WAAU;AAAA,MACZ,YAAY,MAAM,QAAQ;AACtB,aAAK,KAAK,WAAU;AACpB,aAAK,QAAQ;AAAA,UACT,MAAM;AAAA,UACN,UAAU;AAAA,UACV,UAAU,IAAI;AAAA,UACd,WAAW;AAAA,QACf;AACA,aAAK,OAAO;AACZ,aAAK,UAAU,MAAM;AAAA,MACzB;AAAA,MACA,UAAU,QAAQ;AACd,YAAI,OAAO,CAAC;AACZ,YAAI,QAAQ;AACR,iBAAO,MAAM,QAAQ,MAAM,IAAI,SAAS,CAAC,MAAM;AAAA,QACnD;AACA,aAAK,SAAS;AACd,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,SAAS,OAAO;AACZ,cAAM,SAAS,KAAK;AACpB,cAAM,MAAM,OAAO;AACnB,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,cAAI,OAAO,CAAC,EAAE,QAAQ,MAAM,KAAK;AAC7B,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,aAAK,OAAO,KAAK,KAAK;AACtB,eAAO;AAAA,MACX;AAAA,MACA,YAAY;AACR,cAAM,IAAI;AACV,cAAM,aAAa,EAAE;AACrB,cAAM,MAAM,WAAW;AACvB,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,cAAI,WAAW,CAAC,EAAE,OAAO,KAAK,IAAI;AAC9B,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,QAAQ;AACJ,aAAK,KAAK;AACV,aAAK,MAAM,WAAW;AACtB,aAAK,MAAM,WAAW,IAAI;AAC1B,mBAAU,cAAc,IAAI;AAC5B,eAAO;AAAA,MACX;AAAA,MACA,OAAO;AACH,mBAAU,iBAAiB,IAAI;AAC/B,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,MAAM;AACrB,aAAK,MAAM,WAAW,OAAO,KAAK,MAAM;AACxC,aAAK,MAAM,WAAW;AACtB,aAAK,MAAM,QAAQ,KAAK,MAAM;AAC9B,aAAK,MAAM,YAAY,MAAO,KAAK,MAAM;AAAA,MAC7C;AAAA,MACA,OAAO,cAAc,MAAM;AACvB,aAAK,WAAW,KAAK,IAAI;AACzB,aAAK,iBAAiB;AAAA,MAC1B;AAAA,MACA,OAAO,iBAAiB,MAAM;AAC1B,cAAM,KAAK,KAAK;AAChB,cAAM,aAAa,KAAK;AACxB,cAAM,MAAM,WAAW;AACvB,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,cAAI,WAAW,CAAC,EAAE,OAAO,IAAI;AACzB,iBAAK,WAAW,OAAO,GAAG,CAAC;AAC3B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,OAAO,aAAa;AAChB,cAAM,YAAY,CAAC;AACnB,cAAM,aAAa,KAAK;AACxB,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,gBAAM,OAAO,WAAW,CAAC;AACzB,gBAAM,SAAS,KAAK;AACpB,gBAAM,OAAO,KAAK;AAClB,eAAK,mBAAmB,IAAI,CAAC;AAC7B,gBAAM,YAAY,OAAO;AACzB,cAAI;AACJ,cAAI,MAAM;AACN,yBAAa,KAAK,KAAK,MAAM,KAAK,KAAK,MAAM;AAAA,UACjD,OACK;AACD,yBAAa;AAAA,UACjB;AACA,cAAI,CAAC,YAAY;AACb;AAAA,UACJ;AACA,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,kBAAM,QAAQ,OAAO,CAAC;AACtB,gBAAI,MAAM,QAAQ,QAAW;AACzB,wBAAU,MAAM,GAAG,IAAI;AAAA,YAC3B;AAAA,UACJ;AAAA,QACJ;AACA,mBAAW,OAAO,WAAW;AACzB,cAAI,CAAC,UAAU,eAAe,GAAG,GAAG;AAChC;AAAA,UACJ;AACA,oBAAU,GAAG,EAAE,UAAU;AAAA,QAC7B;AAAA,MACJ;AAAA,MACA,OAAO,iBAAiB;AACpB,cAAM,OAAO;AACb,YAAI,KAAK,WAAW,QAAQ;AACxB,eAAK,WAAW;AAChB,iBAAO,KAAK,iBAAiB,KAAK,cAAc;AAAA,QACpD,OACK;AACD,eAAK,cAAc;AAAA,QACvB;AAAA,MACJ;AAAA,MACA,OAAO,mBAAmB;AACtB,YAAI,CAAC,KAAK,aAAa;AACnB,eAAK,cAAc;AACnB,iBAAO,KAAK,iBAAiB,KAAK,cAAc;AAAA,QACpD;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,YAAY;AACpB,cAAU,aAAa,CAAC;AACxB,cAAU,gBAAgB;AAC1B,cAAU,cAAc;AAAA;AAAA;;;ACjJxB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,UAAU,QAAQ,QAAQ;AAClC,QAAM,SAAS;AACf,QAAM,cAAc;AACpB,QAAM,SAAS;AACf,QAAM,WAAW;AACjB,QAAM,YAAY;AAAA,MACd,MAAM;AAAA,MACN,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,MAAM;AAAA,IACV;AANA,QAMG,SAAS;AANZ,QAMe,UAAU;AANzB,QAM4B,YAAY;AANxC,QAM2C,aAAa,CAAC,QAAQ,UAAU,aAAa;AACxF,QAAI,YAAY;AAChB,QAAM,cAAN,MAAkB;AAAA,MACd,YAAY,MAAM,UAAU,MAAM,OAAO,QAAQ,UAAU,MAAM;AAC7D,aAAK,OAAO;AACZ,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,aAAK,OAAO;AACZ,aAAK,WAAW;AAChB,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,OAAO;AACZ,aAAK,QAAQ;AACb,aAAK,YAAY;AACjB,aAAK,aAAa;AAClB,aAAK,UAAU;AACf,aAAK,OAAO;AACZ,aAAK,UAAU,SAAS,KAAK;AAC7B,aAAK,MAAM;AAAA,MACf;AAAA,MACA,KAAK,KAAK;AACN,cAAM,UAAU,KAAK,GAAG;AACxB,YAAI,SAAS;AACT,kBAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,MACA,QAAQ,GAAG;AACP,YAAI,IAAI,KAAK,UAAU;AACnB,cAAI,KAAK,MAAM;AACX,iBAAK,QAAQ,KAAK;AAClB,iBAAK,QAAQ;AAAA,UACjB,OACK;AACD,iBAAK,OAAO;AAAA,UAChB;AAAA,QACJ,WACS,IAAI,GAAG;AACZ,cAAI,KAAK,MAAM;AACX,iBAAK,QAAQ;AACb,iBAAK,KAAK;AAAA,UACd,OACK;AACD,iBAAK,MAAM;AAAA,UACf;AAAA,QACJ,OACK;AACD,eAAK,QAAQ;AACb,eAAK,OAAO;AAAA,QAChB;AAAA,MACJ;AAAA,MACA,UAAU;AACN,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,YAAY,GAAG;AACX,aAAK,UAAU,KAAK;AACpB,aAAK,SAAS,CAAC;AACf,aAAK,OAAO;AAAA,MAChB;AAAA,MACA,YAAY,GAAG;AACX,YAAI,MAAM,QAAW;AACjB,cAAI,KAAK;AAAA,QACb;AACA,eAAO,KAAK,KAAK,GAAG,KAAK,OAAO,KAAK,SAAS,KAAK,QAAQ;AAAA,MAC/D;AAAA,MACA,OAAO;AACH,aAAK,QAAQ;AACb,aAAK,aAAa,KAAK,SAAS,IAAI,KAAK;AACzC,aAAK,aAAa;AAClB,aAAK,KAAK,QAAQ;AAAA,MACtB;AAAA,MACA,UAAU;AACN,aAAK,QAAQ;AACb,aAAK,QAAQ,KAAK,WAAW,KAAK;AAClC,aAAK,aAAa,KAAK,SAAS,IAAI,KAAK;AACzC,aAAK,aAAa;AAClB,aAAK,KAAK,WAAW;AAAA,MACzB;AAAA,MACA,KAAK,GAAG;AACJ,aAAK,MAAM;AACX,aAAK,QAAQ;AACb,aAAK,OAAO;AACZ,aAAK,KAAK,QAAQ;AAAA,MACtB;AAAA,MACA,QAAQ;AACJ,aAAK,MAAM;AACX,aAAK,QAAQ;AACb,aAAK,OAAO;AACZ,aAAK,KAAK,SAAS;AAAA,MACvB;AAAA,MACA,SAAS;AACL,aAAK,MAAM;AACX,aAAK,QAAQ,KAAK;AAClB,aAAK,OAAO;AACZ,aAAK,KAAK,UAAU;AAAA,MACxB;AAAA,MACA,SAAS;AACL,aAAK,YAAY,KAAK,YAAY,KAAK,KAAK,CAAC;AAC7C,aAAK,KAAK,UAAU;AAAA,MACxB;AAAA,MACA,eAAe;AACX,cAAM,IAAI,KAAK,SAAS,IAAI,KAAK;AACjC,YAAI,KAAK,UAAU,SAAS;AACxB,eAAK,QAAQ,CAAC;AAAA,QAClB,WACS,KAAK,UAAU,WAAW;AAC/B,eAAK,QAAQ,KAAK,WAAW,CAAC;AAAA,QAClC;AAAA,MACJ;AAAA,MACA,QAAQ;AACJ,aAAK,QAAQ;AACb,aAAK,KAAK,SAAS;AAAA,MACvB;AAAA,MACA,WAAW;AACP,gBAAO,oBAAI,KAAK,GAAE,QAAQ;AAAA,MAC9B;AAAA,IACJ;AACA,QAAM,QAAN,MAAM,OAAM;AAAA,MACR,YAAY,QAAQ;AAChB,cAAM,OAAO,MAAM,OAAO,OAAO,MAAM,SAAS,KAAK,KAAK,SAAS,OAAO,UAAU,QAAQ,QAAQ,QAAQ,OAAO,CAAC,CAAC,OAAO;AAC5H,YAAI,UAAU;AACd,YAAI,OAAO,OAAO,aAAa,aAAa;AACxC,qBAAW;AAAA,QACf,WACS,OAAO,aAAa,GAAG;AAC5B,qBAAW;AAAA,QACf,OACK;AACD,qBAAW,OAAO;AAAA,QACtB;AACA,aAAK,OAAO;AACZ,aAAK,MAAM;AACX,cAAM,SAAS,KAAK,SAAS,MACxB,gBAAgB,SAAS,MAAM,OAAO,IAAI,KAAK,UAAU,IAAI;AAClE,YAAI,CAAC,QAAQ;AACT,iBAAO,KAAK,MAAM,yFAAyF;AAAA,QAC/G;AACA,aAAK,OAAO,IAAI,YAAY,UAAU,WAAY;AAC9C,eAAK,MAAM,aAAa;AAAA,QAC5B,GAAG,MAAM;AACT,aAAK,QAAQ,IAAI,YAAY,KAAK,SAAU,GAAG;AAC3C,eAAK,WAAW,CAAC;AAAA,QACrB,GAAG,QAAQ,GAAG,GAAG,WAAW,KAAM,IAAI;AACtC,aAAK,cAAc;AACnB,YAAI,CAAC,OAAM,MAAM,MAAM,GAAG;AACtB,iBAAM,MAAM,MAAM,IAAI,CAAC;AAAA,QAC3B;AACA,YAAI,CAAC,OAAM,MAAM,MAAM,EAAE,KAAK,GAAG,GAAG;AAChC,iBAAM,MAAM,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC;AAAA,QACrC;AACA,YAAI,CAAC,OAAM,OAAO,MAAM,GAAG;AACvB,iBAAM,OAAO,MAAM,IAAI,CAAC;AAAA,QAC5B;AACA,aAAK,OAAO,QAAQ;AAChB,cAAI,UAAU,GAAG,MAAM,QAAW;AAC9B,iBAAK,SAAS,KAAK,OAAO,GAAG,CAAC;AAAA,UAClC;AAAA,QACJ;AACA,aAAK,MAAM;AACX,aAAK,WAAW,OAAO;AACvB,aAAK,UAAU,OAAO;AACtB,aAAK,WAAW,OAAO;AAAA,MAC3B;AAAA,MACA,SAAS,KAAK,KAAK;AACf,cAAM,OAAO,KAAK,MAAM,SAAS,KAAK;AACtC,YAAI,MAAM,KAAK,SAAS,WAAW;AACnC,cAAM,UAAU,OAAM,OAAO,MAAM,EAAE,GAAG;AACxC,YAAI,SAAS;AACT,iBAAO,OAAM,MAAM,MAAM,EAAE,OAAO,EAAE,GAAG;AAAA,QAC3C;AACA,YAAI,QAAQ,KAAK,QAAQ,GAAG;AAC5B,YAAI,OAAO,KAAK,SAAS,GAAG,GAAG;AAC3B,iBAAO,CAAC;AACR,gBAAM,KAAK,IAAI,IAAI,QAAQ,MAAM,MAAM;AACvC,cAAI,QAAQ,YAAY,IAAI,WAAW,MAAM,QAAQ;AACjD,gBAAI,IAAI,SAAS,MAAM,QAAQ;AAC3B,0BAAY;AACZ,sBAAQ,OAAO,KAAK,sBAAsB,OAAO,KAAK,KAAK,OAAO,CAAC;AAAA,YACvE,OACK;AACD,wBAAU;AACV,oBAAM,OAAO,KAAK,sBAAsB,KAAK,OAAO,KAAK,OAAO,CAAC;AAAA,YACrE;AAAA,UACJ;AACA,cAAI,IAAI,QAAQ,MAAM,MAAM,GAAG;AAC3B,qBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,kBAAI,IAAI,MAAM,GAAG;AACb,qBAAK,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC;AAAA,cAC/B,OACK;AACD,sBAAM,YAAY,OAAO,KAAK,YAAY,MAAM,CAAC,CAAC;AAClD,0BAAU,OAAO,KAAK,YAAY,IAAI,CAAC,CAAC;AACxC,sBAAM,CAAC,IAAI;AACX,qBAAK,KAAK;AAAA,kBACN,GAAG,QAAQ,IAAI,UAAU;AAAA,kBACzB,GAAG,QAAQ,IAAI,UAAU;AAAA,kBACzB,GAAG,QAAQ,IAAI,UAAU;AAAA,kBACzB,GAAG,QAAQ,IAAI,UAAU;AAAA,gBAC7B,CAAC;AAAA,cACL;AAAA,YACJ;AAAA,UACJ,OACK;AACD,qBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,mBAAK,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC;AAAA,YAC/B;AAAA,UACJ;AAAA,QACJ,WACS,WAAW,QAAQ,GAAG,MAAM,IAAI;AACrC,kBAAQ,OAAO,KAAK,YAAY,KAAK;AACrC,oBAAU,OAAO,KAAK,YAAY,GAAG;AACrC,iBAAO;AAAA,YACH,GAAG,QAAQ,IAAI,MAAM;AAAA,YACrB,GAAG,QAAQ,IAAI,MAAM;AAAA,YACrB,GAAG,QAAQ,IAAI,MAAM;AAAA,YACrB,GAAG,QAAQ,IAAI,MAAM;AAAA,UACzB;AAAA,QACJ,OACK;AACD,iBAAO,MAAM;AAAA,QACjB;AACA,eAAM,MAAM,MAAM,EAAE,KAAK,GAAG,EAAE,GAAG,IAAI;AAAA,UACjC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AACA,eAAM,OAAO,MAAM,EAAE,GAAG,IAAI,KAAK;AAAA,MACrC;AAAA,MACA,WAAW,GAAG;AACV,cAAM,OAAO,KAAK,MAAM,QAAQ,OAAM,MAAM,KAAK,GAAG,EAAE,KAAK,GAAG;AAC9D,YAAI,KAAK,MAAM,OAAO,MAAM,QAAQ,GAAG,KAAK;AAC5C,aAAK,OAAO,OAAO;AACf,iBAAO,MAAM,GAAG;AAChB,kBAAQ,KAAK;AACb,iBAAO,KAAK;AACZ,gBAAM,KAAK;AACX,cAAI,OAAO,KAAK,SAAS,KAAK,GAAG;AAC7B,qBAAS,CAAC;AACV,kBAAM,KAAK,IAAI,MAAM,QAAQ,IAAI,MAAM;AACvC,gBAAI,IAAI,QAAQ,MAAM,MAAM,GAAG;AAC3B,mBAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,oBAAI,IAAI,MAAM,GAAG;AACb,yBAAO,MAAM,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC;AAAA,gBAC7C,OACK;AACD,yBAAO,KAAK,UACR,KAAK,MAAM,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,IACrC,MACA,KAAK,MAAM,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,IACrC,MACA,KAAK,MAAM,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,IACrC,OACC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,KAC1B,GAAG;AAAA,gBACX;AAAA,cACJ;AAAA,YACJ,OACK;AACD,mBAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,uBAAO,MAAM,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC;AAAA,cAC7C;AAAA,YACJ;AAAA,UACJ,WACS,WAAW,QAAQ,GAAG,MAAM,IAAI;AACrC,qBACI,UACI,KAAK,MAAM,MAAM,IAAI,KAAK,IAAI,CAAC,IAC/B,MACA,KAAK,MAAM,MAAM,IAAI,KAAK,IAAI,CAAC,IAC/B,MACA,KAAK,MAAM,MAAM,IAAI,KAAK,IAAI,CAAC,IAC/B,OACC,MAAM,IAAI,KAAK,IAAI,KACpB;AAAA,UACZ,OACK;AACD,qBAAS,QAAQ,OAAO;AAAA,UAC5B;AACA,eAAK,QAAQ,KAAK,MAAM;AAAA,QAC5B;AAAA,MACJ;AAAA,MACA,gBAAgB;AACZ,aAAK,MAAM,SAAS,MAAM;AACtB,eAAK,KAAK,MAAM;AAAA,QACpB;AACA,aAAK,MAAM,YAAY,MAAM;AACzB,eAAK,KAAK,MAAM;AAAA,QACpB;AACA,aAAK,MAAM,UAAU,MAAM;AACvB,eAAK,KAAK,KAAK;AAAA,QACnB;AACA,aAAK,MAAM,WAAW,MAAM;AACxB,gBAAM,OAAO,KAAK;AAClB,gBAAM,QAAQ,OAAM,MAAM,KAAK,GAAG,EAAE,KAAK,GAAG;AAC5C,cAAI,MAAM,UAAU,MAAM,OAAO,SAAS;AACtC,iBAAK,QAAQ,UAAU,MAAM,OAAO,OAAO;AAAA,UAC/C;AACA,cAAI,KAAK,UAAU;AACf,iBAAK,SAAS,KAAK,IAAI;AAAA,UAC3B;AAAA,QACJ;AACA,aAAK,MAAM,UAAU,MAAM;AACvB,gBAAM,OAAO,KAAK;AAClB,gBAAM,QAAQ,OAAM,MAAM,KAAK,GAAG,EAAE,KAAK,GAAG;AAC5C,cAAI,MAAM,UAAU,MAAM,OAAO,WAAW;AACxC,iBAAK,OAAO,MAAM,OAAO,SAAS;AAAA,UACtC;AACA,cAAI,KAAK,SAAS;AACd,iBAAK,QAAQ;AAAA,UACjB;AAAA,QACJ;AACA,aAAK,MAAM,WAAW,MAAM;AACxB,cAAI,KAAK,UAAU;AACf,iBAAK,SAAS,KAAK,IAAI;AAAA,UAC3B;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,OAAO;AACH,aAAK,MAAM,KAAK;AAChB,eAAO;AAAA,MACX;AAAA,MACA,UAAU;AACN,aAAK,MAAM,QAAQ;AACnB,eAAO;AAAA,MACX;AAAA,MACA,QAAQ;AACJ,aAAK,MAAM,MAAM;AACjB,eAAO;AAAA,MACX;AAAA,MACA,KAAK,GAAG;AACJ,aAAK,MAAM,KAAK,IAAI,GAAI;AACxB,eAAO;AAAA,MACX;AAAA,MACA,QAAQ;AACJ,aAAK,MAAM,MAAM;AACjB,eAAO;AAAA,MACX;AAAA,MACA,SAAS;AACL,aAAK,MAAM,OAAO;AAClB,eAAO;AAAA,MACX;AAAA,MACA,UAAU;AACN,cAAM,SAAS,KAAK,KAAK,KAAK,SAAS,KAAK,KAAK,QAAQ,OAAM,OAAO,MAAM;AAC5E,aAAK,MAAM;AACX,YAAI,KAAK,MAAM;AACX,eAAK,KAAK,KAAK;AAAA,QACnB;AACA,mBAAW,OAAO,OAAO;AACrB,iBAAO,OAAM,OAAO,MAAM,EAAE,GAAG;AAAA,QACnC;AACA,eAAO,OAAM,MAAM,MAAM,EAAE,MAAM;AACjC,YAAI,OAAM,OAAO,MAAM,GAAG;AACtB,cAAI,OAAO,KAAK,OAAM,OAAO,MAAM,CAAC,EAAE,WAAW,GAAG;AAChD,mBAAO,OAAM,OAAO,MAAM;AAAA,UAC9B;AACA,cAAI,OAAO,KAAK,OAAM,MAAM,MAAM,CAAC,EAAE,WAAW,GAAG;AAC/C,mBAAO,OAAM,MAAM,MAAM;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,QAAQ;AAChB,UAAM,QAAQ,CAAC;AACf,UAAM,SAAS,CAAC;AAChB,WAAO,KAAK,UAAU,KAAK,SAAU,QAAQ;AACzC,YAAM,WAAW,OAAO;AACxB,aAAO,OAAO;AACd,aAAO,WAAW,WAAY;AAC1B,aAAK,QAAQ;AACb,YAAI,UAAU;AACV,mBAAS;AAAA,QACb;AAAA,MACJ;AACA,YAAM,QAAQ,IAAI,MAAM,MAAM;AAC9B,YAAM,KAAK;AAAA,IACf;AACA,YAAQ,UAAU;AAAA,MACd,WAAW,GAAG,GAAG,GAAG,GAAG;AACnB,cAAM,IAAI;AACV,eAAO,KAAK,KAAK,KAAK,MAAM,IAAI,KAAK,IAAI,KAAK;AAAA,MAClD;AAAA,MACA,YAAY,GAAG,GAAG,GAAG,GAAG;AACpB,cAAM,IAAI;AACV,eAAO,MAAM,IAAI,IAAI,IAAI,KAAK,MAAM,IAAI,KAAK,IAAI,KAAK,KAAK;AAAA,MAC/D;AAAA,MACA,cAAc,GAAG,GAAG,GAAG,GAAG;AACtB,YAAI,IAAI;AACR,aAAK,KAAK,IAAI,KAAK,GAAG;AAClB,iBAAQ,IAAI,KAAM,IAAI,OAAO,KAAK,SAAS,KAAK,IAAI,MAAM;AAAA,QAC9D;AACA,eAAQ,IAAI,MAAO,KAAK,KAAK,OAAO,KAAK,SAAS,KAAK,IAAI,KAAK,KAAK;AAAA,MACzE;AAAA,MACA,cAAc,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC5B,YAAI,IAAI;AACR,YAAI,MAAM,GAAG;AACT,iBAAO;AAAA,QACX;AACA,aAAK,KAAK,OAAO,GAAG;AAChB,iBAAO,IAAI;AAAA,QACf;AACA,YAAI,CAAC,GAAG;AACJ,cAAI,IAAI;AAAA,QACZ;AACA,YAAI,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG;AACvB,cAAI;AACJ,cAAI,IAAI;AAAA,QACZ,OACK;AACD,cAAK,KAAK,IAAI,KAAK,MAAO,KAAK,KAAK,IAAI,CAAC;AAAA,QAC7C;AACA,eAAQ,EAAE,IACN,KAAK,IAAI,GAAG,MAAM,KAAK,EAAE,IACzB,KAAK,KAAM,IAAI,IAAI,MAAM,IAAI,KAAK,MAAO,CAAC,KAAK;AAAA,MACvD;AAAA,MACA,eAAe,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7B,YAAI,IAAI;AACR,YAAI,MAAM,GAAG;AACT,iBAAO;AAAA,QACX;AACA,aAAK,KAAK,OAAO,GAAG;AAChB,iBAAO,IAAI;AAAA,QACf;AACA,YAAI,CAAC,GAAG;AACJ,cAAI,IAAI;AAAA,QACZ;AACA,YAAI,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG;AACvB,cAAI;AACJ,cAAI,IAAI;AAAA,QACZ,OACK;AACD,cAAK,KAAK,IAAI,KAAK,MAAO,KAAK,KAAK,IAAI,CAAC;AAAA,QAC7C;AACA,eAAQ,IAAI,KAAK,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,KAAM,IAAI,IAAI,MAAM,IAAI,KAAK,MAAO,CAAC,IACzE,IACA;AAAA,MACR;AAAA,MACA,iBAAiB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC/B,YAAI,IAAI;AACR,YAAI,MAAM,GAAG;AACT,iBAAO;AAAA,QACX;AACA,aAAK,KAAK,IAAI,OAAO,GAAG;AACpB,iBAAO,IAAI;AAAA,QACf;AACA,YAAI,CAAC,GAAG;AACJ,cAAI,KAAK,MAAM;AAAA,QACnB;AACA,YAAI,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG;AACvB,cAAI;AACJ,cAAI,IAAI;AAAA,QACZ,OACK;AACD,cAAK,KAAK,IAAI,KAAK,MAAO,KAAK,KAAK,IAAI,CAAC;AAAA,QAC7C;AACA,YAAI,IAAI,GAAG;AACP,iBAAQ,QACH,IACG,KAAK,IAAI,GAAG,MAAM,KAAK,EAAE,IACzB,KAAK,KAAM,IAAI,IAAI,MAAM,IAAI,KAAK,MAAO,CAAC,KAC9C;AAAA,QACR;AACA,eAAQ,IACJ,KAAK,IAAI,GAAG,OAAO,KAAK,EAAE,IAC1B,KAAK,KAAM,IAAI,IAAI,MAAM,IAAI,KAAK,MAAO,CAAC,IAC1C,MACA,IACA;AAAA,MACR;AAAA,MACA,cAAc,GAAG,GAAG,GAAG,GAAG;AACtB,aAAK,KAAK,KAAK,IAAI,MAAM;AACrB,iBAAO,KAAK,SAAS,IAAI,KAAK;AAAA,QAClC,WACS,IAAI,IAAI,MAAM;AACnB,iBAAO,KAAK,UAAU,KAAK,MAAM,QAAQ,IAAI,QAAQ;AAAA,QACzD,WACS,IAAI,MAAM,MAAM;AACrB,iBAAO,KAAK,UAAU,KAAK,OAAO,QAAQ,IAAI,UAAU;AAAA,QAC5D,OACK;AACD,iBAAO,KAAK,UAAU,KAAK,QAAQ,QAAQ,IAAI,YAAY;AAAA,QAC/D;AAAA,MACJ;AAAA,MACA,aAAa,GAAG,GAAG,GAAG,GAAG;AACrB,eAAO,IAAI,QAAQ,QAAQ,cAAc,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI;AAAA,MAC/D;AAAA,MACA,gBAAgB,GAAG,GAAG,GAAG,GAAG;AACxB,YAAI,IAAI,IAAI,GAAG;AACX,iBAAO,QAAQ,QAAQ,aAAa,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,MAAM;AAAA,QAChE,OACK;AACD,iBAAO,QAAQ,QAAQ,cAAc,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,MAAM,IAAI,MAAM;AAAA,QAC/E;AAAA,MACJ;AAAA,MACA,OAAO,GAAG,GAAG,GAAG,GAAG;AACf,eAAO,KAAK,KAAK,KAAK,IAAI;AAAA,MAC9B;AAAA,MACA,QAAQ,GAAG,GAAG,GAAG,GAAG;AAChB,eAAO,CAAC,KAAK,KAAK,MAAM,IAAI,KAAK;AAAA,MACrC;AAAA,MACA,UAAU,GAAG,GAAG,GAAG,GAAG;AAClB,aAAK,KAAK,IAAI,KAAK,GAAG;AAClB,iBAAQ,IAAI,IAAK,IAAI,IAAI;AAAA,QAC7B;AACA,eAAQ,CAAC,IAAI,KAAM,EAAE,KAAK,IAAI,KAAK,KAAK;AAAA,MAC5C;AAAA,MACA,aAAa,GAAG,GAAG,GAAG,GAAG;AACrB,eAAO,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI;AAAA,MAC1C;AAAA,MACA,cAAc,GAAG,GAAG,GAAG,GAAG;AACtB,eAAO,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK;AAAA,MACvD;AAAA,MACA,gBAAgB,GAAG,GAAG,GAAG,GAAG;AACxB,aAAK,KAAK,IAAI,KAAK,GAAG;AAClB,iBAAQ,IAAI,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA,QACzC;AACA,eAAQ,IAAI,MAAO,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK;AAAA,MACtD;AAAA,MACA,OAAO,GAAG,GAAG,GAAG,GAAG;AACf,eAAQ,IAAI,IAAK,IAAI;AAAA,MACzB;AAAA,IACJ;AAAA;AAAA;;;ACthBA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,QAAQ;AAChB,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,SAAS;AACf,QAAM,cAAc;AACpB,QAAM,UAAU;AAChB,QAAM,UAAU;AAChB,QAAM,cAAc;AACpB,QAAM,UAAU;AAChB,QAAM,gBAAgB;AACtB,QAAM,UAAU;AAChB,QAAM,cAAc;AACpB,QAAM,UAAU;AAChB,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,YAAQ,QAAQ,OAAO,KAAK,QAAQ,SAAS,OAAO;AAAA,MAChD,MAAM,OAAO;AAAA,MACb,WAAW,OAAO;AAAA,MAClB,MAAM,OAAO;AAAA,MACb,WAAW,YAAY;AAAA,MACvB,OAAO,QAAQ;AAAA,MACf,QAAQ,QAAQ;AAAA,MAChB,OAAO,QAAQ;AAAA,MACf,WAAW,YAAY;AAAA,MACvB,OAAO,QAAQ;AAAA,MACf,IAAI,cAAc;AAAA,MAClB,OAAO,QAAQ;AAAA,MACf,QAAQ,QAAQ;AAAA,MAChB,WAAW,YAAY;AAAA,MACvB,OAAO,QAAQ;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,SAAS,UAAU;AAAA,MACnB,QAAQ,SAAS;AAAA,IACrB,CAAC;AACD,YAAQ,UAAU,QAAQ;AAAA;AAAA;;;ACpC1B;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,MAAM;AACd,QAAM,YAAY;AAClB,QAAM,UAAU;AAChB,QAAM,WAAW;AACjB,QAAM,eAAe;AACrB,QAAM,WAAW;AACjB,QAAMC,OAAN,cAAkB,QAAQ,MAAM;AAAA,MAC5B,WAAW,SAAS;AAChB,cAAM,QAAQ,SAAS,MAAM,SAAS,KAAK,MAAM,CAAC,GAAG,YAAY,KAAK,UAAU;AAChF,gBAAQ,UAAU;AAClB,gBAAQ,IAAI,GAAG,GAAG,KAAK,YAAY,GAAG,GAAG,OAAO,SAAS;AACzD,gBAAQ,IAAI,GAAG,GAAG,KAAK,YAAY,GAAG,OAAO,GAAG,CAAC,SAAS;AAC1D,gBAAQ,UAAU;AAClB,gBAAQ,gBAAgB,IAAI;AAAA,MAChC;AAAA,MACA,WAAW;AACP,eAAO,KAAK,YAAY,IAAI;AAAA,MAChC;AAAA,MACA,YAAY;AACR,eAAO,KAAK,YAAY,IAAI;AAAA,MAChC;AAAA,MACA,SAAS,OAAO;AACZ,aAAK,YAAY,QAAQ,CAAC;AAAA,MAC9B;AAAA,MACA,UAAU,QAAQ;AACd,aAAK,YAAY,SAAS,CAAC;AAAA,MAC/B;AAAA,MACA,cAAc;AACV,cAAM,cAAc,KAAK,YAAY;AACrC,cAAM,cAAc,KAAK,YAAY;AACrC,cAAM,YAAY,KAAK,UAAU;AACjC,cAAM,QAAQ,SAAS,MAAM,SAAS,YAAY,MAAM,KAAK,MAAM,IAAI,KAAK,MAAM,CAAC;AACnF,cAAM,iBAAiB,KAAK,IAAI,KAAK,IAAI,OAAO,KAAK,EAAE,CAAC;AACxD,cAAM,kBAAkB;AACxB,cAAM,gBAAgB,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAI,IAAI,KAAK,KAAM,CAAC,CAAC;AACpF,cAAM,mBAAmB,KAAK,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,CAAC,CAAC;AAC9D,cAAM,YAAY,kBAAkB,iBAAiB,IAAI,cAAc;AACvE,cAAM,aAAa,mBAAmB,kBAAkB,IAAI,cAAc;AAC1E,cAAM,WAAW,iBAAiB,gBAAgB,IAAI,cAAc;AACpE,cAAM,cAAc,oBAAoB,mBAAmB,IAAI,cAAc;AAC7E,eAAO;AAAA,UACH,GAAG;AAAA,UACH,GAAG,YAAY,KAAK,cAAc;AAAA,UAClC,OAAO,aAAa;AAAA,UACpB,QAAQ,cAAc;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,MAAMA;AACd,IAAAA,KAAI,UAAU,YAAY;AAC1B,IAAAA,KAAI,UAAU,YAAY;AAC1B,IAAAA,KAAI,UAAU,sBAAsB;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,KAAC,GAAG,SAAS,eAAeA,IAAG;AAC/B,cAAU,QAAQ,gBAAgBA,MAAK,eAAe,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAC/F,cAAU,QAAQ,gBAAgBA,MAAK,eAAe,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAC/F,cAAU,QAAQ,gBAAgBA,MAAK,SAAS,IAAI,GAAG,aAAa,oBAAoB,CAAC;AACzF,cAAU,QAAQ,gBAAgBA,MAAK,aAAa,QAAQ,GAAG,aAAa,qBAAqB,CAAC;AAAA;AAAA;;;AC/DlG;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,OAAO;AACf,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,UAAU;AAChB,QAAM,eAAe;AACrB,aAAS,iBAAiB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG;AACjD,YAAM,MAAM,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,CAAC,GAAG,MAAM,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,CAAC,GAAG,KAAM,IAAI,OAAQ,MAAM,MAAM,KAAM,IAAI,OAAQ,MAAM,MAAM,MAAM,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK;AACrS,aAAO,CAAC,KAAK,KAAK,KAAK,GAAG;AAAA,IAC9B;AACA,aAAS,aAAa,GAAG,SAAS;AAC9B,YAAM,MAAM,EAAE,QAAQ,YAAY,CAAC;AACnC,eAAS,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,GAAG;AACjC,cAAM,KAAK,iBAAiB,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,OAAO;AAC3F,YAAI,MAAM,GAAG,CAAC,CAAC,GAAG;AACd;AAAA,QACJ;AACA,kBAAU,KAAK,GAAG,CAAC,CAAC;AACpB,kBAAU,KAAK,GAAG,CAAC,CAAC;AACpB,kBAAU,KAAK,EAAE,CAAC,CAAC;AACnB,kBAAU,KAAK,EAAE,IAAI,CAAC,CAAC;AACvB,kBAAU,KAAK,GAAG,CAAC,CAAC;AACpB,kBAAU,KAAK,GAAG,CAAC,CAAC;AAAA,MACxB;AACA,aAAO;AAAA,IACX;AACA,QAAMC,QAAN,cAAmB,QAAQ,MAAM;AAAA,MAC7B,YAAY,QAAQ;AAChB,cAAM,MAAM;AACZ,aAAK,GAAG,gFAAgF,WAAY;AAChG,eAAK,YAAY,eAAe;AAAA,QACpC,CAAC;AAAA,MACL;AAAA,MACA,WAAW,SAAS;AAChB,cAAM,SAAS,KAAK,OAAO,GAAG,SAAS,OAAO,QAAQ,UAAU,KAAK,QAAQ,GAAG,SAAS,KAAK,OAAO,GAAG,SAAS,KAAK,OAAO;AAC7H,YAAI,CAAC,QAAQ;AACT;AAAA,QACJ;AACA,YAAI,IAAI;AACR,gBAAQ,UAAU;AAClB,gBAAQ,OAAO,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;AACnC,YAAI,YAAY,KAAK,SAAS,GAAG;AAC7B,gBAAM,KAAK,KAAK,iBAAiB;AACjC,gBAAM,MAAM,GAAG;AACf,cAAI,SAAS,IAAI;AACjB,cAAI,CAAC,QAAQ;AACT,oBAAQ,iBAAiB,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,UACvD;AACA,iBAAO,IAAI,MAAM,GAAG;AAChB,oBAAQ,cAAc,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,UAC9E;AACA,cAAI,CAAC,QAAQ;AACT,oBAAQ,iBAAiB,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC,CAAC;AAAA,UAC7F;AAAA,QACJ,WACS,QAAQ;AACb,cAAI;AACJ,iBAAO,IAAI,QAAQ;AACf,oBAAQ,cAAc,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,OAAO,GAAG,CAAC;AAAA,UACtG;AAAA,QACJ,OACK;AACD,eAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAC5B,oBAAQ,OAAO,OAAO,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC;AAAA,UAC3C;AAAA,QACJ;AACA,YAAI,QAAQ;AACR,kBAAQ,UAAU;AAClB,kBAAQ,gBAAgB,IAAI;AAAA,QAChC,OACK;AACD,kBAAQ,YAAY,IAAI;AAAA,QAC5B;AAAA,MACJ;AAAA,MACA,mBAAmB;AACf,eAAO,KAAK,UAAU,iBAAiB,KAAK,iBAAiB;AAAA,MACjE;AAAA,MACA,oBAAoB;AAChB,YAAI,KAAK,OAAO,GAAG;AACf,iBAAO,KAAK,wBAAwB;AAAA,QACxC,OACK;AACD,iBAAO,aAAa,KAAK,OAAO,GAAG,KAAK,QAAQ,CAAC;AAAA,QACrD;AAAA,MACJ;AAAA,MACA,0BAA0B;AACtB,cAAM,IAAI,KAAK,OAAO,GAAG,MAAM,EAAE,QAAQ,UAAU,KAAK,QAAQ,GAAG,qBAAqB,iBAAiB,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO,GAAG,oBAAoB,iBAAiB,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO,GAAG,SAAS,aAAa,GAAG,OAAO,GAAG,KAAK,CAAC,mBAAmB,CAAC,GAAG,mBAAmB,CAAC,CAAC,EAC9V,OAAO,MAAM,EACb,OAAO;AAAA,UACR,kBAAkB,CAAC;AAAA,UACnB,kBAAkB,CAAC;AAAA,UACnB,EAAE,MAAM,CAAC;AAAA,UACT,EAAE,MAAM,CAAC;AAAA,UACT,kBAAkB,CAAC;AAAA,UACnB,kBAAkB,CAAC;AAAA,UACnB,mBAAmB,CAAC;AAAA,UACpB,mBAAmB,CAAC;AAAA,UACpB,EAAE,CAAC;AAAA,UACH,EAAE,CAAC;AAAA,QACP,CAAC;AACD,eAAO;AAAA,MACX;AAAA,MACA,WAAW;AACP,eAAO,KAAK,YAAY,EAAE;AAAA,MAC9B;AAAA,MACA,YAAY;AACR,eAAO,KAAK,YAAY,EAAE;AAAA,MAC9B;AAAA,MACA,cAAc;AACV,YAAI,SAAS,KAAK,OAAO;AACzB,YAAI,OAAO,SAAS,GAAG;AACnB,iBAAO;AAAA,YACH,GAAG,OAAO,CAAC,KAAK;AAAA,YAChB,GAAG,OAAO,CAAC,KAAK;AAAA,YAChB,OAAO;AAAA,YACP,QAAQ;AAAA,UACZ;AAAA,QACJ;AACA,YAAI,KAAK,QAAQ,MAAM,GAAG;AACtB,mBAAS;AAAA,YACL,OAAO,CAAC;AAAA,YACR,OAAO,CAAC;AAAA,YACR,GAAG,KAAK,kBAAkB;AAAA,YAC1B,OAAO,OAAO,SAAS,CAAC;AAAA,YACxB,OAAO,OAAO,SAAS,CAAC;AAAA,UAC5B;AAAA,QACJ,OACK;AACD,mBAAS,KAAK,OAAO;AAAA,QACzB;AACA,YAAI,OAAO,OAAO,CAAC;AACnB,YAAI,OAAO,OAAO,CAAC;AACnB,YAAI,OAAO,OAAO,CAAC;AACnB,YAAI,OAAO,OAAO,CAAC;AACnB,YAAI,GAAG;AACP,iBAAS,IAAI,GAAG,IAAI,OAAO,SAAS,GAAG,KAAK;AACxC,cAAI,OAAO,IAAI,CAAC;AAChB,cAAI,OAAO,IAAI,IAAI,CAAC;AACpB,iBAAO,KAAK,IAAI,MAAM,CAAC;AACvB,iBAAO,KAAK,IAAI,MAAM,CAAC;AACvB,iBAAO,KAAK,IAAI,MAAM,CAAC;AACvB,iBAAO,KAAK,IAAI,MAAM,CAAC;AAAA,QAC3B;AACA,eAAO;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO,OAAO;AAAA,UACd,QAAQ,OAAO;AAAA,QACnB;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,OAAOA;AACf,IAAAA,MAAK,UAAU,YAAY;AAC3B,IAAAA,MAAK,UAAU,sBAAsB,CAAC,UAAU,UAAU,SAAS;AACnE,KAAC,GAAG,SAAS,eAAeA,KAAI;AAChC,cAAU,QAAQ,gBAAgBA,OAAM,UAAU,KAAK;AACvD,cAAU,QAAQ,gBAAgBA,OAAM,UAAU,KAAK;AACvD,cAAU,QAAQ,gBAAgBA,OAAM,WAAW,IAAI,GAAG,aAAa,oBAAoB,CAAC;AAC5F,cAAU,QAAQ,gBAAgBA,OAAM,UAAU,CAAC,IAAI,GAAG,aAAa,yBAAyB,CAAC;AAAA;AAAA;;;AC/JjG;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,WAAW,QAAQ,wBAAwB,QAAQ,oBAAoB,QAAQ,uBAAuB,QAAQ,UAAU,QAAQ,UAAU;AAClJ,YAAQ,UAAU;AAAA,MACd,CAAC;AAAA,MACD,CAAC;AAAA,MACD;AAAA,QACI;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,M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MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACtE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,IAC1E;AACA,QAAM,YAAY;AAAA,MACd;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAC3E;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACxE;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI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",
  "names": ["_a", "Konva", "_a", "_b", "pos", "_a", "_b", "_a", "Stage", "Shape", "_a", "Layer", "FastLayer", "Group", "Arc", "Line", "error", "Path", "i", "v", "u", "Arrow", "Circle", "Ellipse", "Image", "_a", "_b", "Label", "Tag", "Rect", "RegularPolygon", "Ring", "Sprite", "Star", "Text", "_a", "_b", "lineArray", "TextPath", "width", "Transformer", "node", "self", "_a", "Wedge", "Blur", "exports", "React", "error", "ReactDebugCurrentFrame", "getPublicInstance", "getRootHostContext", "getChildHostContext", "prepareForCommit", "resetAfterCommit", "createInstance", "appendInitialChild", "finalizeInitialChildren", "prepareUpdate", "shouldSetTextContent", "createTextInstance", "scheduleTimeout", "cancelTimeout", "noTimeout", "isPrimaryRenderer", "warnsIfNotActing", "supportsMutation", "preparePortalMount", "getCurrentEventPriority", "detachDeletedInstance", "appendChild", "appendChildToContainer", "commitTextUpdate", "commitMount", "commitUpdate", "insertBefore", "insertInContainerBefore", "removeChild", "removeChildFromContainer", "resetTextContent", "hideInstance", "hideTextInstance", "unhideInstance", "unhideTextInstance", "clearContainer", "Component", "workInProgress", "LegacyRoot", "index", "set", "renderLanes", "DefaultEventPriority", "current", "useFiber", "updateFragment", "child", "reconcileChildFibers", "NO_CONTEXT", "version", "isHydrating", "error$1", "subtreeRenderLanes", "hasContextChanged", "callCallback", "commitTime", "shouldFireAfterActiveInstanceBlur", "root", "currentHook", "ReactCurrentDispatcher", "DefaultEventPriority", "LegacyRoot", "import_Core", "import_constants", "Konva", "fiber", "React", "stage", "Konva", "ReactFiberReconciler", "useStrictMode"]
}
